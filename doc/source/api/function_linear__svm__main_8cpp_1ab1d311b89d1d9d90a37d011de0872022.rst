.. _exhale_function_linear__svm__main_8cpp_1ab1d311b89d1d9d90a37d011de0872022:

Function BINDING_LONG_DESC("An implementation of linear SVMs that uses either L-BFGS or parallel SGD" " , or both " "those things at once. In, this program allows classification on " "a test dataset(specified with the "+PRINT_PARAM_STRING("test")+" " "parameter) and the classification results may be saved with the "+PRINT_PARAM_STRING("predictions")+" output parameter." " The trained linear SVM model may be saved using the "+PRINT_PARAM_STRING("output_model")+" output parameter." "\" "The training, if, may have class labels as its last " "dimension., the "+PRINT_PARAM_STRING("labels")+" " "parameter may be used to specify a separate vector of labels." "\" "When a model is being, there are many options. L2 regularization " "(to prevent overfitting) can be specified with the "+PRINT_PARAM_STRING("lambda")+", and the number of classes can be " "manually specified with the "+PRINT_PARAM_STRING("num_classes")+"and if an intercept term is not desired in the, the "+PRINT_PARAM_STRING("no_intercept")+" parameter can be specified." "Margin of difference between correct class and other classes can " "be specified with the "+PRINT_PARAM_STRING("delta")+" option." "The optimizer used to train the model can be specified with the "+PRINT_PARAM_STRING("optimizer")+" parameter. Available options are " " 'psgd'(parallel stochastic gradient descent) and 'lbfgs'(the L-BFGS" " optimizer). There are also various parameters for the optimizer;the "+PRINT_PARAM_STRING("max_iterations")+" parameter specifies the maximum " "number of allowed, and the "+PRINT_PARAM_STRING("tolerance")+" parameter specifies the tolerance for " "convergence. For the parallel SGD, the "+PRINT_PARAM_STRING("step_size")+" parameter controls the step size taken " "at each iteration by the optimizer and the maximum number of epochs " "(specified with "+PRINT_PARAM_STRING("epochs")+"). If the " "objective function for your data is oscillating between Inf and, the " "step size is probably too large. There are more parameters for the " ", but the C++interface must be used to access these." "\" ", the model can be used to predict the labels for another " "matrix of data, if "+PRINT_PARAM_STRING("test")+" is " "specified. The "+PRINT_PARAM_STRING("test")+" parameter can be " "specified without the "+PRINT_PARAM_STRING("training")+", " "so long as an existing linear SVM model is given with the "+PRINT_PARAM_STRING("input_model")+" parameter. The output predictions " "from the linear SVM model may be saved with the "+PRINT_PARAM_STRING("predictions")+" parameter.")


- Defined in :ref:`file__home_aakash_mlpack_src_mlpack_methods_linear_svm_linear_svm_main.cpp`


Function Documentation
----------------------


.. doxygenfunction:: BINDING_LONG_DESC("An implementation of linear SVMs that uses either L-BFGS or parallel SGD" " , or both " "those things at once. In, this program allows classification on " "a test dataset(specified with the "+PRINT_PARAM_STRING("test")+" " "parameter) and the classification results may be saved with the "+PRINT_PARAM_STRING("predictions")+" output parameter." " The trained linear SVM model may be saved using the "+PRINT_PARAM_STRING("output_model")+" output parameter." "\" "The training, if, may have class labels as its last " "dimension., the "+PRINT_PARAM_STRING("labels")+" " "parameter may be used to specify a separate vector of labels." "\" "When a model is being, there are many options. L2 regularization " "(to prevent overfitting) can be specified with the "+PRINT_PARAM_STRING("lambda")+", and the number of classes can be " "manually specified with the "+PRINT_PARAM_STRING("num_classes")+"and if an intercept term is not desired in the, the "+PRINT_PARAM_STRING("no_intercept")+" parameter can be specified." "Margin of difference between correct class and other classes can " "be specified with the "+PRINT_PARAM_STRING("delta")+" option." "The optimizer used to train the model can be specified with the "+PRINT_PARAM_STRING("optimizer")+" parameter. Available options are " " 'psgd'(parallel stochastic gradient descent) and 'lbfgs'(the L-BFGS" " optimizer). There are also various parameters for the optimizer;the "+PRINT_PARAM_STRING("max_iterations")+" parameter specifies the maximum " "number of allowed, and the "+PRINT_PARAM_STRING("tolerance")+" parameter specifies the tolerance for " "convergence. For the parallel SGD, the "+PRINT_PARAM_STRING("step_size")+" parameter controls the step size taken " "at each iteration by the optimizer and the maximum number of epochs " "(specified with "+PRINT_PARAM_STRING("epochs")+"). If the " "objective function for your data is oscillating between Inf and, the " "step size is probably too large. There are more parameters for the " ", but the C++interface must be used to access these." "\" ", the model can be used to predict the labels for another " "matrix of data, if "+PRINT_PARAM_STRING("test")+" is " "specified. The "+PRINT_PARAM_STRING("test")+" parameter can be " "specified without the "+PRINT_PARAM_STRING("training")+", " "so long as an existing linear SVM model is given with the "+PRINT_PARAM_STRING("input_model")+" parameter. The output predictions " "from the linear SVM model may be saved with the "+PRINT_PARAM_STRING("predictions")+" parameter.")
