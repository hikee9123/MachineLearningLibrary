.. _exhale_function_lars__main_8cpp_1a253d5904c8888dd434fac37da7f4a64a:

Function BINDING_LONG_DESC("An implementation of LARS: Least Angle Regression (Stagewise/laSso). " "This is a stage-wise homotopy-based algorithm for L1-regularized linear " "regression (LASSO) and L1+L2-regularized linear regression (Elastic Net)." "\"This program is able to train a LARS/LASSO/Elastic Net model or load a " "model from, output regression predictions for a test, and save " "the trained model to a file. The LARS algorithm is described in more " "detail below:" "\" "Let X be a matrix where each row is a point and each column is a " ", and let y be a vector of targets." "\" "The Elastic Net problem is to solve" "\" " min_beta 0.5||X \*beta - y||_2^2+lambda_1||beta||_1+\ " 0.5 lambda_2||beta||_2^2" "\ "If, 0 and, the problem is the LASSO.\" "If, 0 and, 0, the problem is the Elastic Net.\" "If, 0, the problem is ridge regression.\" "If, the problem is unregularized linear " "regression." "\\" "For efficiency, it is not recommended to use this algorithm with" " "+PRINT_PARAM_STRING("lambda1")+", use the " " 'linear_regression', which implements both unregularized linear " "regression and ridge regression." "\\" "To train a LARS/LASSO/Elastic Net, the "+PRINT_PARAM_STRING("input")+" and "+PRINT_PARAM_STRING("responses")+" parameters must be given. The "+PRINT_PARAM_STRING("lambda1")+", "+PRINT_PARAM_STRING("lambda2")+", and "+PRINT_PARAM_STRING("use_cholesky")+" parameters control the training " "options. A trained model can be saved with the "+PRINT_PARAM_STRING("output_model")+". If no training is desired at, " " a model can be passed via the "+PRINT_PARAM_STRING("input_model")+" parameter." "\\" "The program can also provide predictions for test data using either the " "trained model or the given input model. Test points can be specified with" " the "+PRINT_PARAM_STRING("test")+" parameter. Predicted responses " "to the test points can be saved with the "+PRINT_PARAM_STRING("output_predictions")+" output parameter.")


- Defined in :ref:`file__home_aakash_mlpack_src_mlpack_methods_lars_lars_main.cpp`


Function Documentation
----------------------


.. doxygenfunction:: BINDING_LONG_DESC("An implementation of LARS: Least Angle Regression (Stagewise/laSso). " "This is a stage-wise homotopy-based algorithm for L1-regularized linear " "regression (LASSO) and L1+L2-regularized linear regression (Elastic Net)." "\"This program is able to train a LARS/LASSO/Elastic Net model or load a " "model from, output regression predictions for a test, and save " "the trained model to a file. The LARS algorithm is described in more " "detail below:" "\" "Let X be a matrix where each row is a point and each column is a " ", and let y be a vector of targets." "\" "The Elastic Net problem is to solve" "\" " min_beta 0.5||X *beta - y||_2^2+lambda_1||beta||_1+\ " 0.5 lambda_2||beta||_2^2" "\ "If, 0 and, the problem is the LASSO.\" "If, 0 and, 0, the problem is the Elastic Net.\" "If, 0, the problem is ridge regression.\" "If, the problem is unregularized linear " "regression." "\\" "For efficiency, it is not recommended to use this algorithm with" " "+PRINT_PARAM_STRING("lambda1")+", use the " " 'linear_regression', which implements both unregularized linear " "regression and ridge regression." "\\" "To train a LARS/LASSO/Elastic Net, the "+PRINT_PARAM_STRING("input")+" and "+PRINT_PARAM_STRING("responses")+" parameters must be given. The "+PRINT_PARAM_STRING("lambda1")+", "+PRINT_PARAM_STRING("lambda2")+", and "+PRINT_PARAM_STRING("use_cholesky")+" parameters control the training " "options. A trained model can be saved with the "+PRINT_PARAM_STRING("output_model")+". If no training is desired at, " " a model can be passed via the "+PRINT_PARAM_STRING("input_model")+" parameter." "\\" "The program can also provide predictions for test data using either the " "trained model or the given input model. Test points can be specified with" " the "+PRINT_PARAM_STRING("test")+" parameter. Predicted responses " "to the test points can be saved with the "+PRINT_PARAM_STRING("output_predictions")+" output parameter.")
