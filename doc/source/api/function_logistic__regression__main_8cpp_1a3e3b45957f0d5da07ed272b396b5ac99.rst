.. _exhale_function_logistic__regression__main_8cpp_1a3e3b45957f0d5da07ed272b396b5ac99:

Function BINDING_LONG_DESC("An implementation of L2-regularized logistic regression using either the " "L-BFGS optimizer or SGD (stochastic gradient descent). This solves the " "regression problem" "\", or both " "those things at once. In, this program allows classification on " "a test dataset(specified with the "+PRINT_PARAM_STRING("test")+" " "parameter) and the classification results may be saved with the "+PRINT_PARAM_STRING("predictions")+" output parameter." " The trained logistic regression model may be saved using the "+PRINT_PARAM_STRING("output_model")+" output parameter." "\" "The training, if, may have class labels as its last " "dimension., the "+PRINT_PARAM_STRING("labels")+" " "parameter may be used to specify a separate matrix of labels." "\" "When a model is being, there are many options. L2 regularization " "(to prevent overfitting) can be specified with the "+PRINT_PARAM_STRING("lambda")+", and the " "optimizer used to train the model can be specified with the "+PRINT_PARAM_STRING("optimizer")+" parameter. Available options are " " 'sgd'(stochastic gradient descent) and 'lbfgs'(the L-BFGS optimizer). " "There are also various parameters for the optimizer;the "+PRINT_PARAM_STRING("max_iterations")+" parameter specifies the maximum " "number of allowed, and the "+PRINT_PARAM_STRING("tolerance")+" parameter specifies the tolerance for " "convergence. For the SGD, the "+PRINT_PARAM_STRING("step_size")+" parameter controls the step size taken " "at each iteration by the optimizer. The batch size for SGD is controlled " "with the "+PRINT_PARAM_STRING("batch_size")+" parameter. If the " "objective function for your data is oscillating between Inf and, the " "step size is probably too large. There are more parameters for the " ", but the C++interface must be used to access these." "\" "For, an iteration refers to a single point. So to take a single pass " "over the dataset with, "+PRINT_PARAM_STRING("max_iterations")+" should be set to the number of points in the dataset." "\" ", the model can be used to predict the responses for another " "matrix of data, if "+PRINT_PARAM_STRING("test")+" is " "specified. The "+PRINT_PARAM_STRING("test")+" parameter can be " "specified without the "+PRINT_PARAM_STRING("training")+", " "so long as an existing logistic regression model is given with the "+PRINT_PARAM_STRING("input_model")+" parameter. The output predictions " "from the logistic regression model may be saved with the "+PRINT_PARAM_STRING("predictions")+" parameter."+"\" "Note :The following parameters are deprecated and " "will be removed in mlpack 4:"+PRINT_PARAM_STRING("output")+", "+PRINT_PARAM_STRING("output_probabilities")+"\se "+PRINT_PARAM_STRING("predictions")+" instead of "+PRINT_PARAM_STRING("output")+"\se "+PRINT_PARAM_STRING("probabilities")+" instead of "+PRINT_PARAM_STRING("output_probabilities")+"\" "This implementation of logistic regression does not support the general " "multi-class case but instead only the two-class case. Any labels must " "be either 0 or 1. For more, see the softmax_regression " "program.")


- Defined in :ref:`file__home_aakash_mlpack_src_mlpack_methods_logistic_regression_logistic_regression_main.cpp`


Function Documentation
----------------------


.. doxygenfunction:: BINDING_LONG_DESC("An implementation of L2-regularized logistic regression using either the " "L-BFGS optimizer or SGD (stochastic gradient descent). This solves the " "regression problem" "\", or both " "those things at once. In, this program allows classification on " "a test dataset(specified with the "+PRINT_PARAM_STRING("test")+" " "parameter) and the classification results may be saved with the "+PRINT_PARAM_STRING("predictions")+" output parameter." " The trained logistic regression model may be saved using the "+PRINT_PARAM_STRING("output_model")+" output parameter." "\" "The training, if, may have class labels as its last " "dimension., the "+PRINT_PARAM_STRING("labels")+" " "parameter may be used to specify a separate matrix of labels." "\" "When a model is being, there are many options. L2 regularization " "(to prevent overfitting) can be specified with the "+PRINT_PARAM_STRING("lambda")+", and the " "optimizer used to train the model can be specified with the "+PRINT_PARAM_STRING("optimizer")+" parameter. Available options are " " 'sgd'(stochastic gradient descent) and 'lbfgs'(the L-BFGS optimizer). " "There are also various parameters for the optimizer;the "+PRINT_PARAM_STRING("max_iterations")+" parameter specifies the maximum " "number of allowed, and the "+PRINT_PARAM_STRING("tolerance")+" parameter specifies the tolerance for " "convergence. For the SGD, the "+PRINT_PARAM_STRING("step_size")+" parameter controls the step size taken " "at each iteration by the optimizer. The batch size for SGD is controlled " "with the "+PRINT_PARAM_STRING("batch_size")+" parameter. If the " "objective function for your data is oscillating between Inf and, the " "step size is probably too large. There are more parameters for the " ", but the C++interface must be used to access these." "\" "For, an iteration refers to a single point. So to take a single pass " "over the dataset with, "+PRINT_PARAM_STRING("max_iterations")+" should be set to the number of points in the dataset." "\" ", the model can be used to predict the responses for another " "matrix of data, if "+PRINT_PARAM_STRING("test")+" is " "specified. The "+PRINT_PARAM_STRING("test")+" parameter can be " "specified without the "+PRINT_PARAM_STRING("training")+", " "so long as an existing logistic regression model is given with the "+PRINT_PARAM_STRING("input_model")+" parameter. The output predictions " "from the logistic regression model may be saved with the "+PRINT_PARAM_STRING("predictions")+" parameter."+"\" "Note :The following parameters are deprecated and " "will be removed in mlpack 4:"+PRINT_PARAM_STRING("output")+", "+PRINT_PARAM_STRING("output_probabilities")+"\se "+PRINT_PARAM_STRING("predictions")+" instead of "+PRINT_PARAM_STRING("output")+"\se "+PRINT_PARAM_STRING("probabilities")+" instead of "+PRINT_PARAM_STRING("output_probabilities")+"\" "This implementation of logistic regression does not support the general " "multi-class case but instead only the two-class case. Any labels must " "be either 0 or 1. For more, see the softmax_regression " "program.")
