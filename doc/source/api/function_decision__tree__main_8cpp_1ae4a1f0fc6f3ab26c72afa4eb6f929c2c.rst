.. _exhale_function_decision__tree__main_8cpp_1ae4a1f0fc6f3ab26c72afa4eb6f929c2c:

Function BINDING_LONG_DESC("Train and evaluate using a decision tree. Given a dataset containing " "numeric or categorical, and associated labels for each point in " "the, this program can train a decision tree on that data." "\" "The training set and associated labels are specified with the "+PRINT_PARAM_STRING("training")+" and "+PRINT_PARAM_STRING("labels")+", respectively. The labels should be in the range ., if "+PRINT_PARAM_STRING("labels")+" is not, the labels are assumed " "to be the last dimension of the training dataset." "\" "When a model is, the "+PRINT_PARAM_STRING("output_model")+" " "output parameter may be used to save the trained model. A model may be " "loaded for predictions with the "+PRINT_PARAM_STRING("input_model")+" parameter. The "+PRINT_PARAM_STRING("input_model")+" parameter " "may not be specified when the "+PRINT_PARAM_STRING("training")+" " "parameter is specified. The "+PRINT_PARAM_STRING("minimum_leaf_size")+" parameter specifies the minimum number of training points that must fall" " into each leaf for it to be split. The "+PRINT_PARAM_STRING("minimum_gain_split")+" parameter specifies " "the minimum gain that is needed for the node to split. The "+PRINT_PARAM_STRING("maximum_depth")+" parameter specifies " "the maximum depth of the tree. If "+PRINT_PARAM_STRING("print_training_error")+" is, the training " "error will be printed." "\" "Test data may be specified with the "+PRINT_PARAM_STRING("test")+" " ", and if performance numbers are desired for that test, " "labels may be specified with the "+PRINT_PARAM_STRING("test_labels")+" parameter. Predictions for each test point may be saved via the "+PRINT_PARAM_STRING("predictions")+" output parameter. Class " "probabilities for each prediction may be saved with the "+PRINT_PARAM_STRING("probabilities")+" output parameter.")


- Defined in :ref:`file__home_aakash_mlpack_src_mlpack_methods_decision_tree_decision_tree_main.cpp`


Function Documentation
----------------------


.. doxygenfunction:: BINDING_LONG_DESC("Train and evaluate using a decision tree. Given a dataset containing " "numeric or categorical, and associated labels for each point in " "the, this program can train a decision tree on that data." "\" "The training set and associated labels are specified with the "+PRINT_PARAM_STRING("training")+" and "+PRINT_PARAM_STRING("labels")+", respectively. The labels should be in the range ., if "+PRINT_PARAM_STRING("labels")+" is not, the labels are assumed " "to be the last dimension of the training dataset." "\" "When a model is, the "+PRINT_PARAM_STRING("output_model")+" " "output parameter may be used to save the trained model. A model may be " "loaded for predictions with the "+PRINT_PARAM_STRING("input_model")+" parameter. The "+PRINT_PARAM_STRING("input_model")+" parameter " "may not be specified when the "+PRINT_PARAM_STRING("training")+" " "parameter is specified. The "+PRINT_PARAM_STRING("minimum_leaf_size")+" parameter specifies the minimum number of training points that must fall" " into each leaf for it to be split. The "+PRINT_PARAM_STRING("minimum_gain_split")+" parameter specifies " "the minimum gain that is needed for the node to split. The "+PRINT_PARAM_STRING("maximum_depth")+" parameter specifies " "the maximum depth of the tree. If "+PRINT_PARAM_STRING("print_training_error")+" is, the training " "error will be printed." "\" "Test data may be specified with the "+PRINT_PARAM_STRING("test")+" " ", and if performance numbers are desired for that test, " "labels may be specified with the "+PRINT_PARAM_STRING("test_labels")+" parameter. Predictions for each test point may be saved via the "+PRINT_PARAM_STRING("predictions")+" output parameter. Class " "probabilities for each prediction may be saved with the "+PRINT_PARAM_STRING("probabilities")+" output parameter.")
