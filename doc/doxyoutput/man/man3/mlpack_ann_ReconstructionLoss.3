.TH "ReconstructionLoss< InputDataType, OutputDataType, DistType >" 3 "Sun Aug 22 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ReconstructionLoss< InputDataType, OutputDataType, DistType > \- The reconstruction loss performance function measures the network's performance equal to the negative log probability of the target with the input distribution\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBReconstructionLoss\fP ()"
.br
.RI "Create the \fBReconstructionLoss\fP object\&. "
.ti -1c
.RI "template<typename PredictionType , typename TargetType , typename LossType > void \fBBackward\fP (const PredictionType &prediction, const TargetType &target, LossType &loss)"
.br
.RI "Ordinary feed backward pass of a neural network\&. "
.ti -1c
.RI "template<typename PredictionType , typename TargetType > PredictionType::elem_type \fBForward\fP (const PredictionType &prediction, const TargetType &target)"
.br
.RI "Computes the reconstruction loss\&. "
.ti -1c
.RI "OutputDataType & \fBOutputParameter\fP () const"
.br
.RI "Get the output parameter\&. "
.ti -1c
.RI "OutputDataType & \fBOutputParameter\fP ()"
.br
.RI "Modify the output parameter\&. "
.ti -1c
.RI "template<typename Archive > void \fBserialize\fP (Archive &ar, const uint32_t)"
.br
.RI "Serialize the layer\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename InputDataType = arma::mat, typename OutputDataType = arma::mat, typename DistType = BernoulliDistribution<InputDataType>>
.br
class mlpack::ann::ReconstructionLoss< InputDataType, OutputDataType, DistType >"
The reconstruction loss performance function measures the network's performance equal to the negative log probability of the target with the input distribution\&. 


.PP
\fBTemplate Parameters:\fP
.RS 4
\fIInputDataType\fP Type of the input data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.br
\fIOutputDataType\fP Type of the output data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.br
\fIDistType\fP The type of distribution parametrized by the input\&. 
.RE
.PP

.PP
Definition at line 37 of file reconstruction_loss\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBReconstructionLoss\fP ()"

.PP
Create the \fBReconstructionLoss\fP object\&. 
.SH "Member Function Documentation"
.PP 
.SS "void Backward (const PredictionType & prediction, const TargetType & target, LossType & loss)"

.PP
Ordinary feed backward pass of a neural network\&. 
.PP
\fBParameters:\fP
.RS 4
\fIprediction\fP Predictions used for evaluating the specified loss function\&. 
.br
\fItarget\fP The target matrix\&. 
.br
\fIloss\fP The calculated error\&. 
.RE
.PP

.SS "PredictionType::elem_type Forward (const PredictionType & prediction, const TargetType & target)"

.PP
Computes the reconstruction loss\&. 
.PP
\fBParameters:\fP
.RS 4
\fIprediction\fP Predictions used for evaluating the specified loss function\&. 
.br
\fItarget\fP The target matrix\&. 
.RE
.PP

.SS "OutputDataType& OutputParameter () const\fC [inline]\fP"

.PP
Get the output parameter\&. 
.PP
Definition at line 70 of file reconstruction_loss\&.hpp\&.
.SS "OutputDataType& OutputParameter ()\fC [inline]\fP"

.PP
Modify the output parameter\&. 
.PP
Definition at line 72 of file reconstruction_loss\&.hpp\&.
.PP
References ReconstructionLoss< InputDataType, OutputDataType, DistType >::serialize()\&.
.SS "void serialize (Archive & ar, const uint32_t)"

.PP
Serialize the layer\&. 
.PP
Referenced by ReconstructionLoss< InputDataType, OutputDataType, DistType >::OutputParameter()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
