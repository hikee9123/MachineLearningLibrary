.TH "/home/aakash/mlpack/src/mlpack/tests/mock_categorical_data.hpp" 3 "Sun Aug 22 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/aakash/mlpack/src/mlpack/tests/mock_categorical_data.hpp \- Generate categorical dataset for tests\&.  

.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBMockCategoricalData\fP (arma::mat &d, arma::Row< size_t > &l, \fBmlpack::data::DatasetInfo\fP &datasetInfo)"
.br
.RI "Create a mock categorical dataset for testing classification\&. "
.ti -1c
.RI "void \fBMockCategoricalData\fP (arma::mat &d, arma::Row< double > &l, \fBmlpack::data::DatasetInfo\fP &datasetInfo)"
.br
.RI "Create a mock categorical dataset for testing regression\&. "
.in -1c
.SH "Detailed Description"
.PP 
Generate categorical dataset for tests\&. 

mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license\&. You should have received a copy of the 3-clause BSD license along with mlpack\&. If not, see http://www.opensource.org/licenses/BSD-3-Clause for more information\&. 
.PP
Definition in file \fBmock_categorical_data\&.hpp\fP\&.
.SH "Function Documentation"
.PP 
.SS "void MockCategoricalData (arma::mat & d, arma::Row< size_t > & l, \fBmlpack::data::DatasetInfo\fP & datasetInfo)\fC [inline]\fP"

.PP
Create a mock categorical dataset for testing classification\&. 
.PP
Definition at line 20 of file mock_categorical_data\&.hpp\&.
.PP
References mlpack::data::categorical, M_PI, DatasetMapper< PolicyType, InputType >::MapString(), mlpack::math::Random(), DiscreteDistribution::Random(), and DatasetMapper< PolicyType, InputType >::Type()\&.
.SS "void MockCategoricalData (arma::mat & d, arma::Row< double > & l, \fBmlpack::data::DatasetInfo\fP & datasetInfo)\fC [inline]\fP"

.PP
Create a mock categorical dataset for testing regression\&. 
.PP
Definition at line 119 of file mock_categorical_data\&.hpp\&.
.PP
References mlpack::data::categorical, DatasetMapper< PolicyType, InputType >::MapString(), mlpack::math::RandInt(), mlpack::math::Random(), and DatasetMapper< PolicyType, InputType >::Type()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
