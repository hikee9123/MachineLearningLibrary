.TH "LinearSVMFunction< MatType >" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
LinearSVMFunction< MatType > \- The hinge loss function for the linear SVM objective function\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBLinearSVMFunction\fP (const MatType &dataset, const arma::Row< size_t > &labels, const size_t numClasses, const double lambda=0\&.0001, const double delta=1\&.0, const bool fitIntercept=false)"
.br
.RI "Construct the Linear SVM objective function with given parameters\&. "
.ti -1c
.RI "const arma::sp_mat & \fBDataset\fP () const"
.br
.RI "Get the dataset\&. "
.ti -1c
.RI "arma::sp_mat & \fBDataset\fP ()"
.br
.RI "Modify the dataset\&. "
.ti -1c
.RI "double \fBEvaluate\fP (const arma::mat &parameters)"
.br
.RI "Evaluate the hinge loss function for all the datapoints\&. "
.ti -1c
.RI "double \fBEvaluate\fP (const arma::mat &parameters, const size_t firstId, const size_t batchSize=1)"
.br
.RI "Evaluate the hinge loss function on the specified datapoints\&. "
.ti -1c
.RI "template<typename GradType > double \fBEvaluateWithGradient\fP (const arma::mat &parameters, GradType &gradient) const"
.br
.RI "Evaluate the gradient of the hinge loss function, following the LinearFunctionType requirements on the Gradient function followed by evaluation of the hinge loss function on all the datapoints\&. "
.ti -1c
.RI "template<typename GradType > double \fBEvaluateWithGradient\fP (const arma::mat &parameters, const size_t firstId, GradType &gradient, const size_t batchSize=1) const"
.br
.RI "Evaluate the gradient of the hinge loss function, following the LinearFunctionType requirements on the Gradient function followed by evaluation of the hinge loss function on the specified datapoints\&. "
.ti -1c
.RI "bool \fBFitIntercept\fP () const"
.br
.RI "Gets the intercept flag\&. "
.ti -1c
.RI "void \fBGetGroundTruthMatrix\fP (const arma::Row< size_t > &labels, arma::sp_mat &groundTruth)"
.br
.RI "Constructs the ground truth label matrix with the passed labels\&. "
.ti -1c
.RI "template<typename GradType > void \fBGradient\fP (const arma::mat &parameters, GradType &gradient)"
.br
.RI "Evaluate the gradient of the hinge loss function following the LinearFunctionType requirements on the Gradient function\&. "
.ti -1c
.RI "template<typename GradType > void \fBGradient\fP (const arma::mat &parameters, const size_t firstId, GradType &gradient, const size_t batchSize=1)"
.br
.RI "Evaluate the gradient of the hinge loss function, following the LinearFunctionType requirements on the Gradient function\&. "
.ti -1c
.RI "const arma::mat & \fBInitialPoint\fP () const"
.br
.RI "Return the initial point for the optimization\&. "
.ti -1c
.RI "arma::mat & \fBInitialPoint\fP ()"
.br
.RI "Modify the initial point for the optimization\&. "
.ti -1c
.RI "double & \fBLambda\fP ()"
.br
.RI "Sets the regularization parameter\&. "
.ti -1c
.RI "double \fBLambda\fP () const"
.br
.RI "Gets the regularization parameter\&. "
.ti -1c
.RI "size_t \fBNumFunctions\fP () const"
.br
.RI "Return the number of functions\&. "
.ti -1c
.RI "void \fBShuffle\fP ()"
.br
.RI "Shuffle the dataset\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBInitializeWeights\fP (arma::mat &weights, const size_t featureSize, const size_t numClasses, const bool fitIntercept=false)"
.br
.RI "Initialize Linear SVM weights (trainable parameters) with the given parameters\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename MatType = arma::mat>
.br
class mlpack::svm::LinearSVMFunction< MatType >"
The hinge loss function for the linear SVM objective function\&. 

This is used by various ensmallen optimizers to train the linear SVM model\&. 
.PP
Definition at line 28 of file linear_svm_function\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBLinearSVMFunction\fP (const MatType & dataset, const arma::Row< size_t > & labels, const size_t numClasses, const double lambda = \fC0\&.0001\fP, const double delta = \fC1\&.0\fP, const bool fitIntercept = \fCfalse\fP)"

.PP
Construct the Linear SVM objective function with given parameters\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdataset\fP Input training data, each column associate with one sample 
.br
\fIlabels\fP Labels associated with the feature data\&. 
.br
\fInumClasses\fP Number of classes for classification\&. 
.br
\fIlambda\fP L2-regularization constant\&. 
.br
\fIdelta\fP Margin of difference between correct class and other classes\&. 
.br
\fIfitIntercept\fP Intercept term flag\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "const arma::sp_mat& Dataset () const\fC [inline]\fP"

.PP
Get the dataset\&. 
.PP
Definition at line 166 of file linear_svm_function\&.hpp\&.
.SS "arma::sp_mat& Dataset ()\fC [inline]\fP"

.PP
Modify the dataset\&. 
.PP
Definition at line 168 of file linear_svm_function\&.hpp\&.
.SS "double Evaluate (const arma::mat & parameters)"

.PP
Evaluate the hinge loss function for all the datapoints\&. 
.PP
\fBParameters:\fP
.RS 4
\fIparameters\fP The parameters of the SVM\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The value of the loss function for the entire dataset\&. 
.RE
.PP

.SS "double Evaluate (const arma::mat & parameters, const size_t firstId, const size_t batchSize = \fC1\fP)"

.PP
Evaluate the hinge loss function on the specified datapoints\&. 
.PP
\fBParameters:\fP
.RS 4
\fIparameters\fP The parameters of the SVM\&. 
.br
\fIfirstId\fP Index of the datapoints to use for function evaluation\&. 
.br
\fIbatchSize\fP Size of batch to process\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The value of the loss function for the given parameters\&. 
.RE
.PP

.SS "double EvaluateWithGradient (const arma::mat & parameters, GradType & gradient) const"

.PP
Evaluate the gradient of the hinge loss function, following the LinearFunctionType requirements on the Gradient function followed by evaluation of the hinge loss function on all the datapoints\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIGradType\fP Type of the gradient matrix\&. 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIparameters\fP The parameters of the SVM\&. 
.br
\fIgradient\fP Linear matrix to output the gradient into\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The value of the loss function at the given parameters\&. 
.RE
.PP

.SS "double EvaluateWithGradient (const arma::mat & parameters, const size_t firstId, GradType & gradient, const size_t batchSize = \fC1\fP) const"

.PP
Evaluate the gradient of the hinge loss function, following the LinearFunctionType requirements on the Gradient function followed by evaluation of the hinge loss function on the specified datapoints\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIGradType\fP Type of the gradient matrix\&. 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIparameters\fP The parameters of the SVM\&. 
.br
\fIfirstId\fP Index of the datapoint to use for the gradient and function evaluation\&. 
.br
\fIgradient\fP Linear matrix to output the gradient into\&. 
.br
\fIbatchSize\fP Size of the batch to process\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The value of the loss function at the given parameters\&. 
.RE
.PP

.SS "bool FitIntercept () const\fC [inline]\fP"

.PP
Gets the intercept flag\&. 
.PP
Definition at line 176 of file linear_svm_function\&.hpp\&.
.PP
References LinearSVMFunction< MatType >::NumFunctions()\&.
.SS "void GetGroundTruthMatrix (const arma::Row< size_t > & labels, arma::sp_mat & groundTruth)"

.PP
Constructs the ground truth label matrix with the passed labels\&. 
.PP
\fBParameters:\fP
.RS 4
\fIlabels\fP Labels associated with the training data\&. 
.br
\fIgroundTruth\fP Pointer to arma::mat which stores the computed matrix\&. 
.RE
.PP

.SS "void Gradient (const arma::mat & parameters, GradType & gradient)"

.PP
Evaluate the gradient of the hinge loss function following the LinearFunctionType requirements on the Gradient function\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIGradType\fP Type of the gradient matrix\&. 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIparameters\fP The parameters of the SVM\&. 
.br
\fIgradient\fP Linear matrix to output the gradient into\&. 
.RE
.PP

.SS "void Gradient (const arma::mat & parameters, const size_t firstId, GradType & gradient, const size_t batchSize = \fC1\fP)"

.PP
Evaluate the gradient of the hinge loss function, following the LinearFunctionType requirements on the Gradient function\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIGradType\fP Type of the gradient matrix\&. 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIparameters\fP The parameters of the SVM\&. 
.br
\fIfirstId\fP Index of the datapoint to use for the gradient evaluation\&. 
.br
\fIgradient\fP Linear matrix to output the gradient into\&. 
.br
\fIbatchSize\fP Size of the batch to process\&. 
.RE
.PP

.SS "static void InitializeWeights (arma::mat & weights, const size_t featureSize, const size_t numClasses, const bool fitIntercept = \fCfalse\fP)\fC [static]\fP"

.PP
Initialize Linear SVM weights (trainable parameters) with the given parameters\&. 
.PP
\fBParameters:\fP
.RS 4
\fIweights\fP This will be filled with the initialized model weights\&. 
.br
\fIfeatureSize\fP The number of features in the training set\&. 
.br
\fInumClasses\fP Number of classes for classification\&. 
.br
\fIfitIntercept\fP If true, an intercept is fitted\&. 
.RE
.PP

.SS "const arma::mat& InitialPoint () const\fC [inline]\fP"

.PP
Return the initial point for the optimization\&. 
.PP
Definition at line 161 of file linear_svm_function\&.hpp\&.
.SS "arma::mat& InitialPoint ()\fC [inline]\fP"

.PP
Modify the initial point for the optimization\&. 
.PP
Definition at line 163 of file linear_svm_function\&.hpp\&.
.SS "double& Lambda ()\fC [inline]\fP"

.PP
Sets the regularization parameter\&. 
.PP
Definition at line 171 of file linear_svm_function\&.hpp\&.
.SS "double Lambda () const\fC [inline]\fP"

.PP
Gets the regularization parameter\&. 
.PP
Definition at line 173 of file linear_svm_function\&.hpp\&.
.SS "size_t NumFunctions () const"

.PP
Return the number of functions\&. 
.PP
Referenced by LinearSVMFunction< MatType >::FitIntercept()\&.
.SS "void Shuffle ()"

.PP
Shuffle the dataset\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
