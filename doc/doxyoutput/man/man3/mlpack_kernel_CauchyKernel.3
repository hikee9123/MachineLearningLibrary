.TH "CauchyKernel" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CauchyKernel \- The Cauchy kernel\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCauchyKernel\fP (double bandwidth=1\&.0)"
.br
.RI "Construct the Cauchy kernel; by default, the bandwidth is 1\&.0\&. "
.ti -1c
.RI "template<typename VecTypeA , typename VecTypeB > double \fBEvaluate\fP (const VecTypeA &a, const VecTypeB &b)"
.br
.RI "Evaluation of the Cauchy kernel\&. "
.ti -1c
.RI "template<typename Archive > void \fBserialize\fP (Archive &ar, const uint32_t)"
.br
.RI "Serialize the kernel\&. "
.in -1c
.SH "Detailed Description"
.PP 
The Cauchy kernel\&. 

Given two vector $ x $, $ y $, and a bandwidth $ \sigma $ (set in the constructor),
.PP
\[ K(x, y) = \frac{1}{1 + (\frac{|| x - y ||}{\sigma})^2}. \].PP
For more details, see the following published paper:
.PP
.PP
.nf
@inproceedings{Basak2008,
  title={A least square kernel machine with box constraints},
  author={Basak, Jayanta},
  booktitle={Pattern Recognition, 2008\&. ICPR 2008\&. 19th International
      Conference on},
  pages={1--4},
  year={2008},
  organization={IEEE}
}
.fi
.PP
 
.PP
Definition at line 44 of file cauchy_kernel\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBCauchyKernel\fP (double bandwidth = \fC1\&.0\fP)\fC [inline]\fP"

.PP
Construct the Cauchy kernel; by default, the bandwidth is 1\&.0\&. 
.PP
Definition at line 50 of file cauchy_kernel\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "double Evaluate (const VecTypeA & a, const VecTypeB & b)\fC [inline]\fP"

.PP
Evaluation of the Cauchy kernel\&. This could be generalized to use any distance metric, not the Euclidean distance, but for now, the Euclidean distance is used\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIVecTypeA\fP Type of first vector (arma::vec, arma::sp_vec)\&. 
.br
\fIVecTypeB\fP Type of second vector (arma::vec, arma::sp_vec)\&. 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIa\fP First vector\&. 
.br
\fIb\fP Second vector\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
K(a, b)\&. 
.RE
.PP

.PP
Definition at line 65 of file cauchy_kernel\&.hpp\&.
.PP
References LMetric< TPower, TTakeRoot >::Evaluate()\&.
.SS "void serialize (Archive & ar, const uint32_t)\fC [inline]\fP"

.PP
Serialize the kernel\&. 
.PP
Definition at line 75 of file cauchy_kernel\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
