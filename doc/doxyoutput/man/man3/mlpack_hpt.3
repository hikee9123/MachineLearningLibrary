.TH "mlpack::hpt" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::hpt
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBCVFunction\fP"
.br
.RI "This wrapper serves for adapting the interface of the cross-validation classes to the one that can be utilized by the mlpack optimizers\&. "
.ti -1c
.RI "struct \fBDeduceHyperParameterTypes\fP"
.br
.RI "A type function for deducing types of hyper-parameters from types of arguments in the Optimize method in \fBHyperParameterTuner\fP\&. "
.ti -1c
.RI "struct \fBDeduceHyperParameterTypes< PreFixedArg< T >, Args\&.\&.\&. >\fP"
.br
.RI "Defining \fBDeduceHyperParameterTypes\fP for the case when not all argument types have been processed, and the next one is the type of an argument that should be fixed\&. "
.ti -1c
.RI "struct \fBDeduceHyperParameterTypes< T, Args\&.\&.\&. >\fP"
.br
.RI "Defining \fBDeduceHyperParameterTypes\fP for the case when not all argument types have been processed, and the next one (T) is a collection type or an arithmetic type\&. "
.ti -1c
.RI "struct \fBFixedArg\fP"
.br
.RI "A struct for storing information about a fixed argument\&. "
.ti -1c
.RI "class \fBHyperParameterTuner\fP"
.br
.RI "The class \fBHyperParameterTuner\fP for the given MLAlgorithm utilizes the provided Optimizer to find the values of hyper-parameters that optimize the value of the given Metric\&. "
.ti -1c
.RI "class \fBIsPreFixedArg\fP"
.br
.RI "A type function for checking whether the given type is \fBPreFixedArg\fP\&. "
.ti -1c
.RI "struct \fBPreFixedArg\fP"
.br
.RI "A struct for marking arguments as ones that should be fixed (it can be useful for the Optimize method of \fBHyperParameterTuner\fP)\&. "
.ti -1c
.RI "struct \fBPreFixedArg< T & >\fP"
.br
.RI "The specialization of the template for references\&. "
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "template<typename\&.\&.\&. Args> using \fBTupleOfHyperParameters\fP = typename \fBDeduceHyperParameterTypes\fP< Args\&.\&.\&. >::TupleType"
.br
.RI "A short alias for deducing types of hyper-parameters from types of arguments in the Optimize method in \fBHyperParameterTuner\fP\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename T > \fBPreFixedArg\fP< T > \fBFixed\fP (T &&value)"
.br
.RI "Mark the given argument as one that should be fixed\&. "
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "using \fBTupleOfHyperParameters\fP =  typename \fBDeduceHyperParameterTypes\fP<Args\&.\&.\&.>::TupleType"

.PP
A short alias for deducing types of hyper-parameters from types of arguments in the Optimize method in \fBHyperParameterTuner\fP\&. 
.PP
Definition at line 127 of file deduce_hp_types\&.hpp\&.
.SH "Function Documentation"
.PP 
.SS "\fBPreFixedArg\fP<T> mlpack::hpt::Fixed (T && value)"

.PP
Mark the given argument as one that should be fixed\&. It can be applied to arguments that are passed to the Optimize method of \fBHyperParameterTuner\fP\&.
.PP
The implementation avoids data copying\&. If the passed argument is an l-value reference, we store it as a const l-value rerefence inside the returned \fBPreFixedArg\fP object\&. If the passed argument is an r-value reference, light-weight copying (by taking possession of the r-value) will be made during the initialization of the returned \fBPreFixedArg\fP object\&. 
.PP
Definition at line 36 of file fixed\&.hpp\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
