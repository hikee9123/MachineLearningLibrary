.TH "MarginRankingLoss< InputDataType, OutputDataType >" 3 "Sun Aug 22 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MarginRankingLoss< InputDataType, OutputDataType > \- Margin ranking loss measures the loss given inputs and a label vector with values of 1 or -1\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMarginRankingLoss\fP (const double margin=1\&.0)"
.br
.RI "Create the \fBMarginRankingLoss\fP object with Hyperparameter margin\&. "
.ti -1c
.RI "template<typename PredictionType , typename TargetType , typename LossType > void \fBBackward\fP (const PredictionType &prediction, const TargetType &target, LossType &loss)"
.br
.RI "Ordinary feed backward pass of a neural network\&. "
.ti -1c
.RI "template<typename PredictionType , typename TargetType > PredictionType::elem_type \fBForward\fP (const PredictionType &prediction, const TargetType &target)"
.br
.RI "Computes the Margin Ranking Loss function\&. "
.ti -1c
.RI "double \fBMargin\fP () const"
.br
.RI "Get the margin parameter\&. "
.ti -1c
.RI "double & \fBMargin\fP ()"
.br
.RI "Modify the margin parameter\&. "
.ti -1c
.RI "OutputDataType & \fBOutputParameter\fP () const"
.br
.RI "Get the output parameter\&. "
.ti -1c
.RI "OutputDataType & \fBOutputParameter\fP ()"
.br
.RI "Modify the output parameter\&. "
.ti -1c
.RI "template<typename Archive > void \fBserialize\fP (Archive &ar, const uint32_t)"
.br
.RI "Serialize the layer\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename InputDataType = arma::mat, typename OutputDataType = arma::mat>
.br
class mlpack::ann::MarginRankingLoss< InputDataType, OutputDataType >"
Margin ranking loss measures the loss given inputs and a label vector with values of 1 or -1\&. 

If the label is 1 then the first input should be ranked higher than the second input at a distance larger than a margin, and vice- versa if the label is -1\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIInputDataType\fP Type of the input data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.br
\fIOutputDataType\fP Type of the output data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.RE
.PP

.PP
Definition at line 35 of file margin_ranking_loss\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBMarginRankingLoss\fP (const double margin = \fC1\&.0\fP)"

.PP
Create the \fBMarginRankingLoss\fP object with Hyperparameter margin\&. Hyperparameter margin defines a minimum distance between correctly ranked samples\&. 
.SH "Member Function Documentation"
.PP 
.SS "void Backward (const PredictionType & prediction, const TargetType & target, LossType & loss)"

.PP
Ordinary feed backward pass of a neural network\&. 
.PP
\fBParameters:\fP
.RS 4
\fIprediction\fP Predictions used for evaluating the specified loss function\&. 
.br
\fItarget\fP The label vector which contains -1 or 1 values\&. 
.br
\fIloss\fP The calculated error\&. 
.RE
.PP

.SS "PredictionType::elem_type Forward (const PredictionType & prediction, const TargetType & target)"

.PP
Computes the Margin Ranking Loss function\&. 
.PP
\fBParameters:\fP
.RS 4
\fIprediction\fP Predictions used for evaluating the specified loss function\&. 
.br
\fItarget\fP The label vector which contains values of -1 or 1\&. 
.RE
.PP

.SS "double Margin () const\fC [inline]\fP"

.PP
Get the margin parameter\&. 
.PP
Definition at line 79 of file margin_ranking_loss\&.hpp\&.
.SS "double& Margin ()\fC [inline]\fP"

.PP
Modify the margin parameter\&. 
.PP
Definition at line 81 of file margin_ranking_loss\&.hpp\&.
.PP
References MarginRankingLoss< InputDataType, OutputDataType >::serialize()\&.
.SS "OutputDataType& OutputParameter () const\fC [inline]\fP"

.PP
Get the output parameter\&. 
.PP
Definition at line 74 of file margin_ranking_loss\&.hpp\&.
.SS "OutputDataType& OutputParameter ()\fC [inline]\fP"

.PP
Modify the output parameter\&. 
.PP
Definition at line 76 of file margin_ranking_loss\&.hpp\&.
.SS "void serialize (Archive & ar, const uint32_t)"

.PP
Serialize the layer\&. 
.PP
Referenced by MarginRankingLoss< InputDataType, OutputDataType >::Margin()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
