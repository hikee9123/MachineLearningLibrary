.TH "VantagePointSplit< BoundType, MatType, MaxNumSamples >" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
VantagePointSplit< BoundType, MatType, MaxNumSamples > \- The class splits a binary space partitioning tree node according to the median distance to the vantage point\&.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBSplitInfo\fP"
.br
.RI "A struct that contains an information about the split\&. "
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef MatType::elem_type \fBElemType\fP"
.br
.RI "The matrix element type\&. "
.ti -1c
.RI "typedef BoundType::MetricType \fBMetricType\fP"
.br
.RI "The bounding shape type\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "template<typename VecType > static bool \fBAssignToLeftNode\fP (const VecType &point, const \fBSplitInfo\fP &splitInfo)"
.br
.RI "Indicates that a point should be assigned to the left subtree\&. "
.ti -1c
.RI "static size_t \fBPerformSplit\fP (MatType &data, const size_t begin, const size_t count, const \fBSplitInfo\fP &splitInfo)"
.br
.RI "Perform the split process according to the information about the split\&. "
.ti -1c
.RI "static size_t \fBPerformSplit\fP (MatType &data, const size_t begin, const size_t count, const \fBSplitInfo\fP &splitInfo, std::vector< size_t > &oldFromNew)"
.br
.RI "Perform the split process according to the information about the split and return the list of changed indices\&. "
.ti -1c
.RI "static bool \fBSplitNode\fP (const BoundType &bound, MatType &data, const size_t begin, const size_t count, \fBSplitInfo\fP &splitInfo)"
.br
.RI "Split the node according to the distance to a vantage point\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename BoundType, typename MatType = arma::mat, size_t MaxNumSamples = 100>
.br
class mlpack::tree::VantagePointSplit< BoundType, MatType, MaxNumSamples >"
The class splits a binary space partitioning tree node according to the median distance to the vantage point\&. 

Thus points that are closer to the vantage point belong to the left subtree and points that are farther from the vantage point belong to the right subtree\&. 
.PP
Definition at line 32 of file vantage_point_split\&.hpp\&.
.SH "Member Typedef Documentation"
.PP 
.SS "typedef MatType::elem_type \fBElemType\fP"

.PP
The matrix element type\&. 
.PP
Definition at line 36 of file vantage_point_split\&.hpp\&.
.SS "typedef BoundType::MetricType \fBMetricType\fP"

.PP
The bounding shape type\&. 
.PP
Definition at line 38 of file vantage_point_split\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "static bool AssignToLeftNode (const VecType & point, const \fBSplitInfo\fP & splitInfo)\fC [inline]\fP, \fC [static]\fP"

.PP
Indicates that a point should be assigned to the left subtree\&. This method returns true if a point should be assigned to the left subtree, i\&.e\&., if the distance from the point to the vantage point is less then the median value\&. Otherwise it returns false\&.
.PP
\fBParameters:\fP
.RS 4
\fIpoint\fP The point that is being assigned\&. 
.br
\fIsplitInfo\fP An information about the split\&. 
.RE
.PP

.PP
Definition at line 136 of file vantage_point_split\&.hpp\&.
.PP
References VantagePointSplit< BoundType, MatType, MaxNumSamples >::SplitInfo::metric, VantagePointSplit< BoundType, MatType, MaxNumSamples >::SplitInfo::mu, and VantagePointSplit< BoundType, MatType, MaxNumSamples >::SplitInfo::vantagePoint\&.
.SS "static size_t PerformSplit (MatType & data, const size_t begin, const size_t count, const \fBSplitInfo\fP & splitInfo)\fC [inline]\fP, \fC [static]\fP"

.PP
Perform the split process according to the information about the split\&. This will order the dataset such that points that belong to the left subtree are on the left of the split column, and points from the right subtree are on the right side of the split column\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP The dataset used by the binary space tree\&. 
.br
\fIbegin\fP Index of the starting point in the dataset that belongs to this node\&. 
.br
\fIcount\fP Number of points in this node\&. 
.br
\fIsplitInfo\fP The information about the split\&. 
.RE
.PP

.PP
Definition at line 92 of file vantage_point_split\&.hpp\&.
.SS "static size_t PerformSplit (MatType & data, const size_t begin, const size_t count, const \fBSplitInfo\fP & splitInfo, std::vector< size_t > & oldFromNew)\fC [inline]\fP, \fC [static]\fP"

.PP
Perform the split process according to the information about the split and return the list of changed indices\&. This will order the dataset such that points that belong to the left subtree are on the left of the split column, and points from the right subtree are on the right side of the split column\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP The dataset used by the binary space tree\&. 
.br
\fIbegin\fP Index of the starting point in the dataset that belongs to this node\&. 
.br
\fIcount\fP Number of points in this node\&. 
.br
\fIsplitInfo\fP The information about the split\&. 
.br
\fIoldFromNew\fP Vector which will be filled with the old positions for each new point\&. 
.RE
.PP

.PP
Definition at line 116 of file vantage_point_split\&.hpp\&.
.SS "static bool SplitNode (const BoundType & bound, MatType & data, const size_t begin, const size_t count, \fBSplitInfo\fP & splitInfo)\fC [static]\fP"

.PP
Split the node according to the distance to a vantage point\&. 
.PP
\fBParameters:\fP
.RS 4
\fIbound\fP The bound used for this node\&. 
.br
\fIdata\fP The dataset used by the binary space tree\&. 
.br
\fIbegin\fP Index of the starting point in the dataset that belongs to this node\&. 
.br
\fIcount\fP Number of points in this node\&. 
.br
\fIsplitInfo\fP An information about the split\&. This information contains the vantage point and the median distance to the vantage point\&. 
.RE
.PP

.PP
Referenced by VantagePointSplit< BoundType, MatType, MaxNumSamples >::SplitInfo::SplitInfo()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
