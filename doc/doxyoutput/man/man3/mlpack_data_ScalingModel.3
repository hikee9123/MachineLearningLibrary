.TH "ScalingModel" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ScalingModel \- The model to save to disk\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBScalerTypes\fP { \fBSTANDARD_SCALER\fP, \fBMIN_MAX_SCALER\fP, \fBMEAN_NORMALIZATION\fP, \fBMAX_ABS_SCALER\fP, \fBPCA_WHITENING\fP, \fBZCA_WHITENING\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBScalingModel\fP (const int minvalue=0, const int maxvalue=1, double epsilonvalue=0\&.00005)"
.br
.RI "Create an object\&. "
.ti -1c
.RI "\fBScalingModel\fP (const \fBScalingModel\fP &other)"
.br
.RI "Copy constructor\&. "
.ti -1c
.RI "\fBScalingModel\fP (\fBScalingModel\fP &&other)"
.br
.RI "Move constructor\&. "
.ti -1c
.RI "\fB~ScalingModel\fP ()"
.br
.RI "Clean up memory\&. "
.ti -1c
.RI "template<typename MatType > void \fBFit\fP (const MatType &input)"
.br
.ti -1c
.RI "template<typename MatType > void \fBInverseTransform\fP (const MatType &input, MatType &output)"
.br
.ti -1c
.RI "\fBScalingModel\fP & \fBoperator=\fP (const \fBScalingModel\fP &other)"
.br
.RI "Copy assignment operator\&. "
.ti -1c
.RI "\fBScalingModel\fP & \fBoperator=\fP (\fBScalingModel\fP &&other)"
.br
.RI "Move assignment operator\&. "
.ti -1c
.RI "size_t \fBScalerType\fP () const"
.br
.RI "Get the Scaler type\&. "
.ti -1c
.RI "size_t & \fBScalerType\fP ()"
.br
.RI "Modify the Scaler type\&. "
.ti -1c
.RI "template<typename Archive > void \fBserialize\fP (Archive &ar, const uint32_t)"
.br
.RI "Serialize the model\&. "
.ti -1c
.RI "template<typename MatType > void \fBTransform\fP (const MatType &input, MatType &output)"
.br
.RI "Transform to scale features\&. "
.in -1c
.SH "Detailed Description"
.PP 
The model to save to disk\&. 
.PP
Definition at line 29 of file scaling_model\&.hpp\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBScalerTypes\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fISTANDARD_SCALER \fP\fP
.TP
\fB\fIMIN_MAX_SCALER \fP\fP
.TP
\fB\fIMEAN_NORMALIZATION \fP\fP
.TP
\fB\fIMAX_ABS_SCALER \fP\fP
.TP
\fB\fIPCA_WHITENING \fP\fP
.TP
\fB\fIZCA_WHITENING \fP\fP
.PP
Definition at line 32 of file scaling_model\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBScalingModel\fP (const int minvalue = \fC0\fP, const int maxvalue = \fC1\fP, double epsilonvalue = \fC0\&.00005\fP)"

.PP
Create an object\&. 
.SS "\fBScalingModel\fP (const \fBScalingModel\fP & other)"

.PP
Copy constructor\&. 
.SS "\fBScalingModel\fP (\fBScalingModel\fP && other)"

.PP
Move constructor\&. 
.SS "~\fBScalingModel\fP ()"

.PP
Clean up memory\&. 
.SH "Member Function Documentation"
.PP 
.SS "void Fit (const MatType & input)"

.PP
Referenced by ScalingModel::ScalerType()\&.
.SS "void InverseTransform (const MatType & input, MatType & output)"

.PP
Referenced by ScalingModel::ScalerType()\&.
.SS "\fBScalingModel\fP& operator= (const \fBScalingModel\fP & other)"

.PP
Copy assignment operator\&. 
.SS "\fBScalingModel\fP& operator= (\fBScalingModel\fP && other)"

.PP
Move assignment operator\&. 
.SS "size_t ScalerType () const\fC [inline]\fP"

.PP
Get the Scaler type\&. 
.PP
Definition at line 75 of file scaling_model\&.hpp\&.
.SS "size_t& ScalerType ()\fC [inline]\fP"

.PP
Modify the Scaler type\&. 
.PP
Definition at line 77 of file scaling_model\&.hpp\&.
.PP
References ScalingModel::Fit(), ScalingModel::InverseTransform(), and ScalingModel::Transform()\&.
.SS "void serialize (Archive & ar, const uint32_t)\fC [inline]\fP"

.PP
Serialize the model\&. 
.PP
Definition at line 93 of file scaling_model\&.hpp\&.
.PP
References CEREAL_POINTER\&.
.SS "void Transform (const MatType & input, MatType & output)"

.PP
Transform to scale features\&. 
.PP
Referenced by ScalingModel::ScalerType()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
