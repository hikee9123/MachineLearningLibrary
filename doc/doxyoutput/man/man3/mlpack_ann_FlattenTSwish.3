.TH "FlattenTSwish< InputDataType, OutputDataType >" 3 "Sun Aug 22 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
FlattenTSwish< InputDataType, OutputDataType > \- The Flatten T Swish activation function, defined by\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBFlattenTSwish\fP (const double \fBT\fP=\-0\&.20)"
.br
.RI "Create the Flatten T Swish object using the specified parameters\&. "
.ti -1c
.RI "template<typename DataType > void \fBBackward\fP (const DataType &input, const DataType &gy, DataType &g)"
.br
.RI "Ordinary feed backward pass of a neural network, calculating the function f(x) by propagating x backwards through f\&. "
.ti -1c
.RI "OutputDataType const  & \fBDelta\fP () const"
.br
.RI "Get the delta\&. "
.ti -1c
.RI "OutputDataType & \fBDelta\fP ()"
.br
.RI "Modify the delta\&. "
.ti -1c
.RI "template<typename InputType , typename OutputType > void \fBForward\fP (const InputType &input, OutputType &output)"
.br
.RI "Ordinary feed forward pass of a neural network, evaluating the function f(x) by propagating the activity forward through f\&. "
.ti -1c
.RI "OutputDataType const  & \fBOutputParameter\fP () const"
.br
.RI "Get the output parameter\&. "
.ti -1c
.RI "OutputDataType & \fBOutputParameter\fP ()"
.br
.RI "Modify the output parameter\&. "
.ti -1c
.RI "template<typename Archive > void \fBserialize\fP (Archive &ar, const uint32_t)"
.br
.RI "Serialize the layer\&. "
.ti -1c
.RI "double const  & \fBT\fP () const"
.br
.RI "Get the T parameter\&. "
.ti -1c
.RI "double & \fBT\fP ()"
.br
.RI "Modify the T parameter\&. "
.ti -1c
.RI "size_t \fBWeightSize\fP () const"
.br
.RI "Get size of weights\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename InputDataType = arma::mat, typename OutputDataType = arma::mat>
.br
class mlpack::ann::FlattenTSwish< InputDataType, OutputDataType >"
The Flatten T Swish activation function, defined by\&. 

\begin{eqnarray*} f'(x) &=& \left\{ \begin{array}{lr} frac{x}{1+exp(-x)} + T & : x \ge 0 \\ T & : x < 0 \end{array} \right. \\ f'(x) &=& \left\{ \begin{array}{lr} \sigma(x)(1 - f(x)) + f(x) & : x > 0 \\ 0 & : x \le 0 \end{array} \right. \end{eqnarray*}
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIInputDataType\fP Type of the input data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.br
\fIOutputDataType\fP Type of the output data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.RE
.PP

.PP
Definition at line 49 of file flatten_t_swish\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBFlattenTSwish\fP (const double T = \fC\-0\&.20\fP)"

.PP
Create the Flatten T Swish object using the specified parameters\&. The thresholded value T can be adjusted via T paramaters\&. When the x is < 0, T will be used instead of 0\&. The default value of T is -0\&.20 as suggested in the paper\&. 
.PP
\fBParameters:\fP
.RS 4
\fIT\fP 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void Backward (const DataType & input, const DataType & gy, DataType & g)"

.PP
Ordinary feed backward pass of a neural network, calculating the function f(x) by propagating x backwards through f\&. Using the results from the feed forward pass\&.
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP The propagated input activation\&. 
.br
\fIgy\fP The backpropagated error\&. 
.br
\fIg\fP The calculated gradient\&. 
.RE
.PP

.SS "OutputDataType const& Delta () const\fC [inline]\fP"

.PP
Get the delta\&. 
.PP
Definition at line 89 of file flatten_t_swish\&.hpp\&.
.SS "OutputDataType& Delta ()\fC [inline]\fP"

.PP
Modify the delta\&. 
.PP
Definition at line 91 of file flatten_t_swish\&.hpp\&.
.SS "void Forward (const InputType & input, OutputType & output)"

.PP
Ordinary feed forward pass of a neural network, evaluating the function f(x) by propagating the activity forward through f\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP Input data used for evaluating the specified function\&. 
.br
\fIoutput\fP Resulting output activation\&. 
.RE
.PP

.SS "OutputDataType const& OutputParameter () const\fC [inline]\fP"

.PP
Get the output parameter\&. 
.PP
Definition at line 84 of file flatten_t_swish\&.hpp\&.
.SS "OutputDataType& OutputParameter ()\fC [inline]\fP"

.PP
Modify the output parameter\&. 
.PP
Definition at line 86 of file flatten_t_swish\&.hpp\&.
.SS "void serialize (Archive & ar, const uint32_t)"

.PP
Serialize the layer\&. 
.PP
Referenced by FlattenTSwish< InputDataType, OutputDataType >::WeightSize()\&.
.SS "double const& T () const\fC [inline]\fP"

.PP
Get the T parameter\&. 
.PP
Definition at line 94 of file flatten_t_swish\&.hpp\&.
.SS "double& T ()\fC [inline]\fP"

.PP
Modify the T parameter\&. 
.PP
Definition at line 96 of file flatten_t_swish\&.hpp\&.
.SS "size_t WeightSize () const\fC [inline]\fP"

.PP
Get size of weights\&. 
.PP
Definition at line 99 of file flatten_t_swish\&.hpp\&.
.PP
References FlattenTSwish< InputDataType, OutputDataType >::serialize()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
