.TH "HollowBallBound< TMetricType, ElemType >" 3 "Sun Aug 22 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
HollowBallBound< TMetricType, ElemType > \- Hollow ball bound encloses a set of points at a specific distance (radius) from a specific point (center) except points at a specific distance from another point (the center of the hole)\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef TMetricType \fBMetricType\fP"
.br
.RI "A public version of the metric type\&. "
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBHollowBallBound\fP ()"
.br
.RI "Empty Constructor\&. "
.ti -1c
.RI "\fBHollowBallBound\fP (const size_t dimension)"
.br
.RI "Create the ball bound with the specified dimensionality\&. "
.ti -1c
.RI "template<typename VecType > \fBHollowBallBound\fP (const ElemType innerRadius, const ElemType outerRadius, const VecType &center)"
.br
.RI "Create the ball bound with the specified radius and center\&. "
.ti -1c
.RI "\fBHollowBallBound\fP (const \fBHollowBallBound\fP &other)"
.br
.RI "Copy constructor\&. To prevent memory leaks\&. "
.ti -1c
.RI "\fBHollowBallBound\fP (\fBHollowBallBound\fP &&other)"
.br
.RI "Move constructor: take possession of another bound\&. "
.ti -1c
.RI "\fB~HollowBallBound\fP ()"
.br
.RI "Destructor to release allocated memory\&. "
.ti -1c
.RI "const arma::Col< ElemType > & \fBCenter\fP () const"
.br
.RI "Get the center point of the ball\&. "
.ti -1c
.RI "arma::Col< ElemType > & \fBCenter\fP ()"
.br
.RI "Modify the center point of the ball\&. "
.ti -1c
.RI "template<typename VecType > void \fBCenter\fP (VecType &center) const"
.br
.RI "Place the center of \fBBallBound\fP into the given vector\&. "
.ti -1c
.RI "template<typename VecType > bool \fBContains\fP (const VecType &point) const"
.br
.RI "Determines if a point is within this bound\&. "
.ti -1c
.RI "bool \fBContains\fP (const \fBHollowBallBound\fP &other) const"
.br
.RI "Determines if another bound is within this bound\&. "
.ti -1c
.RI "ElemType \fBDiameter\fP () const"
.br
.RI "Returns the diameter of the ballbound\&. "
.ti -1c
.RI "size_t \fBDim\fP () const"
.br
.RI "Get the dimensionality of the ball\&. "
.ti -1c
.RI "const arma::Col< ElemType > & \fBHollowCenter\fP () const"
.br
.RI "Get the center point of the hollow\&. "
.ti -1c
.RI "arma::Col< ElemType > & \fBHollowCenter\fP ()"
.br
.RI "Modify the center point of the hollow\&. "
.ti -1c
.RI "ElemType \fBInnerRadius\fP () const"
.br
.RI "Get the innner radius of the ball\&. "
.ti -1c
.RI "ElemType & \fBInnerRadius\fP ()"
.br
.RI "Modify the inner radius of the ball\&. "
.ti -1c
.RI "template<typename VecType > ElemType \fBMaxDistance\fP (const VecType &point, typename \fBstd::enable_if_t\fP< \fBIsVector\fP< VecType >::value > *=0) const"
.br
.RI "Computes maximum distance\&. "
.ti -1c
.RI "ElemType \fBMaxDistance\fP (const \fBHollowBallBound\fP &other) const"
.br
.RI "Computes maximum distance\&. "
.ti -1c
.RI "const \fBMetricType\fP & \fBMetric\fP () const"
.br
.RI "Returns the distance metric used in this bound\&. "
.ti -1c
.RI "\fBMetricType\fP & \fBMetric\fP ()"
.br
.RI "Modify the distance metric used in this bound\&. "
.ti -1c
.RI "template<typename VecType > ElemType \fBMinDistance\fP (const VecType &point, typename \fBstd::enable_if_t\fP< \fBIsVector\fP< VecType >::value > *=0) const"
.br
.RI "Calculates minimum bound-to-point squared distance\&. "
.ti -1c
.RI "ElemType \fBMinDistance\fP (const \fBHollowBallBound\fP &other) const"
.br
.RI "Calculates minimum bound-to-bound squared distance\&. "
.ti -1c
.RI "ElemType \fBMinWidth\fP () const"
.br
.RI "Get the minimum width of the bound (this is same as the diameter)\&. "
.ti -1c
.RI "\fBHollowBallBound\fP & \fBoperator=\fP (const \fBHollowBallBound\fP &other)"
.br
.RI "For the same reason as the copy constructor: to prevent memory leaks\&. "
.ti -1c
.RI "\fBHollowBallBound\fP & \fBoperator=\fP (\fBHollowBallBound\fP &&other)"
.br
.RI "Move assignment operator\&. "
.ti -1c
.RI "math::RangeType< ElemType > \fBoperator[]\fP (const size_t i) const"
.br
.RI "Get the range in a certain dimension\&. "
.ti -1c
.RI "template<typename MatType > const \fBHollowBallBound\fP & \fBoperator|=\fP (const MatType &data)"
.br
.RI "Expand the bound to include the given point\&. "
.ti -1c
.RI "const \fBHollowBallBound\fP & \fBoperator|=\fP (const \fBHollowBallBound\fP &other)"
.br
.RI "Expand the bound to include the given bound\&. "
.ti -1c
.RI "ElemType \fBOuterRadius\fP () const"
.br
.RI "Get the outer radius of the ball\&. "
.ti -1c
.RI "ElemType & \fBOuterRadius\fP ()"
.br
.RI "Modify the outer radius of the ball\&. "
.ti -1c
.RI "template<typename VecType > math::RangeType< ElemType > \fBRangeDistance\fP (const VecType &other, typename \fBstd::enable_if_t\fP< \fBIsVector\fP< VecType >::value > *=0) const"
.br
.RI "Calculates minimum and maximum bound-to-point distance\&. "
.ti -1c
.RI "math::RangeType< ElemType > \fBRangeDistance\fP (const \fBHollowBallBound\fP &other) const"
.br
.RI "Calculates minimum and maximum bound-to-bound distance\&. "
.ti -1c
.RI "template<typename Archive > void \fBserialize\fP (Archive &ar, const uint32_t version)"
.br
.RI "Serialize the bound\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename TMetricType = metric::LMetric<2, true>, typename ElemType = double>
.br
class mlpack::bound::HollowBallBound< TMetricType, ElemType >"
Hollow ball bound encloses a set of points at a specific distance (radius) from a specific point (center) except points at a specific distance from another point (the center of the hole)\&. 

MetricType is the custom metric type that defaults to the Euclidean (L2) distance\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fITMetricType\fP metric type used in the distance measure\&. 
.br
\fIElemType\fP Type of element (float or double or similar)\&. 
.RE
.PP

.PP
Definition at line 33 of file hollow_ball_bound\&.hpp\&.
.SH "Member Typedef Documentation"
.PP 
.SS "typedef TMetricType \fBMetricType\fP"

.PP
A public version of the metric type\&. 
.PP
Definition at line 37 of file hollow_ball_bound\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBHollowBallBound\fP ()"

.PP
Empty Constructor\&. 
.SS "\fBHollowBallBound\fP (const size_t dimension)"

.PP
Create the ball bound with the specified dimensionality\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdimension\fP Dimensionality of ball bound\&. 
.RE
.PP

.SS "\fBHollowBallBound\fP (const ElemType innerRadius, const ElemType outerRadius, const VecType & center)"

.PP
Create the ball bound with the specified radius and center\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinnerRadius\fP Inner radius of ball bound\&. 
.br
\fIouterRadius\fP Outer radius of ball bound\&. 
.br
\fIcenter\fP Center of ball bound\&. 
.RE
.PP

.SS "\fBHollowBallBound\fP (const \fBHollowBallBound\fP< TMetricType, ElemType > & other)"

.PP
Copy constructor\&. To prevent memory leaks\&. 
.SS "\fBHollowBallBound\fP (\fBHollowBallBound\fP< TMetricType, ElemType > && other)"

.PP
Move constructor: take possession of another bound\&. 
.SS "~\fBHollowBallBound\fP ()"

.PP
Destructor to release allocated memory\&. 
.SH "Member Function Documentation"
.PP 
.SS "const arma::Col<ElemType>& Center () const\fC [inline]\fP"

.PP
Get the center point of the ball\&. 
.PP
Definition at line 106 of file hollow_ball_bound\&.hpp\&.
.SS "arma::Col<ElemType>& Center ()\fC [inline]\fP"

.PP
Modify the center point of the ball\&. 
.PP
Definition at line 108 of file hollow_ball_bound\&.hpp\&.
.SS "void Center (VecType & center) const\fC [inline]\fP"

.PP
Place the center of \fBBallBound\fP into the given vector\&. 
.PP
\fBParameters:\fP
.RS 4
\fIcenter\fP Vector which the centroid will be written to\&. 
.RE
.PP

.PP
Definition at line 148 of file hollow_ball_bound\&.hpp\&.
.PP
References HollowBallBound< TMetricType, ElemType >::MaxDistance(), HollowBallBound< TMetricType, ElemType >::MinDistance(), HollowBallBound< TMetricType, ElemType >::operator|=(), and HollowBallBound< TMetricType, ElemType >::RangeDistance()\&.
.SS "bool Contains (const VecType & point) const"

.PP
Determines if a point is within this bound\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpoint\fP Point to check the condition\&. 
.RE
.PP

.PP
Referenced by HollowBallBound< TMetricType, ElemType >::MinWidth()\&.
.SS "bool Contains (const \fBHollowBallBound\fP< TMetricType, ElemType > & other) const"

.PP
Determines if another bound is within this bound\&. 
.PP
\fBParameters:\fP
.RS 4
\fIother\fP Bound to check the condition\&. 
.RE
.PP

.SS "ElemType Diameter () const\fC [inline]\fP"

.PP
Returns the diameter of the ballbound\&. 
.PP
Definition at line 229 of file hollow_ball_bound\&.hpp\&.
.SS "size_t Dim () const\fC [inline]\fP"

.PP
Get the dimensionality of the ball\&. 
.PP
Definition at line 116 of file hollow_ball_bound\&.hpp\&.
.SS "const arma::Col<ElemType>& HollowCenter () const\fC [inline]\fP"

.PP
Get the center point of the hollow\&. 
.PP
Definition at line 111 of file hollow_ball_bound\&.hpp\&.
.SS "arma::Col<ElemType>& HollowCenter ()\fC [inline]\fP"

.PP
Modify the center point of the hollow\&. 
.PP
Definition at line 113 of file hollow_ball_bound\&.hpp\&.
.SS "ElemType InnerRadius () const\fC [inline]\fP"

.PP
Get the innner radius of the ball\&. 
.PP
Definition at line 101 of file hollow_ball_bound\&.hpp\&.
.SS "ElemType& InnerRadius ()\fC [inline]\fP"

.PP
Modify the inner radius of the ball\&. 
.PP
Definition at line 103 of file hollow_ball_bound\&.hpp\&.
.SS "ElemType MaxDistance (const VecType & point, typename \fBstd::enable_if_t\fP< \fBIsVector\fP< VecType >::value > * = \fC0\fP) const"

.PP
Computes maximum distance\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpoint\fP Point to which the maximum distance is requested\&. 
.RE
.PP

.PP
Referenced by HollowBallBound< TMetricType, ElemType >::Center()\&.
.SS "ElemType MaxDistance (const \fBHollowBallBound\fP< TMetricType, ElemType > & other) const"

.PP
Computes maximum distance\&. 
.PP
\fBParameters:\fP
.RS 4
\fIother\fP Bound to which the maximum distance is requested\&. 
.RE
.PP

.SS "const \fBMetricType\fP& Metric () const\fC [inline]\fP"

.PP
Returns the distance metric used in this bound\&. 
.PP
Definition at line 232 of file hollow_ball_bound\&.hpp\&.
.SS "\fBMetricType\fP& Metric ()\fC [inline]\fP"

.PP
Modify the distance metric used in this bound\&. 
.PP
Definition at line 234 of file hollow_ball_bound\&.hpp\&.
.PP
References HollowBallBound< TMetricType, ElemType >::serialize()\&.
.SS "ElemType MinDistance (const VecType & point, typename \fBstd::enable_if_t\fP< \fBIsVector\fP< VecType >::value > * = \fC0\fP) const"

.PP
Calculates minimum bound-to-point squared distance\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpoint\fP Point to which the minimum distance is requested\&. 
.RE
.PP

.PP
Referenced by HollowBallBound< TMetricType, ElemType >::Center()\&.
.SS "ElemType MinDistance (const \fBHollowBallBound\fP< TMetricType, ElemType > & other) const"

.PP
Calculates minimum bound-to-bound squared distance\&. 
.PP
\fBParameters:\fP
.RS 4
\fIother\fP Bound to which the minimum distance is requested\&. 
.RE
.PP

.SS "ElemType MinWidth () const\fC [inline]\fP"

.PP
Get the minimum width of the bound (this is same as the diameter)\&. For ball bounds, width along all dimensions remain same\&. 
.PP
Definition at line 122 of file hollow_ball_bound\&.hpp\&.
.PP
References HollowBallBound< TMetricType, ElemType >::Contains(), and HollowBallBound< TMetricType, ElemType >::operator[]()\&.
.SS "\fBHollowBallBound\fP& operator= (const \fBHollowBallBound\fP< TMetricType, ElemType > & other)"

.PP
For the same reason as the copy constructor: to prevent memory leaks\&. 
.SS "\fBHollowBallBound\fP& operator= (\fBHollowBallBound\fP< TMetricType, ElemType > && other)"

.PP
Move assignment operator\&. 
.SS "math::RangeType<ElemType> operator[] (const size_t i) const"

.PP
Get the range in a certain dimension\&. 
.PP
Referenced by HollowBallBound< TMetricType, ElemType >::MinWidth()\&.
.SS "const \fBHollowBallBound\fP& operator|= (const MatType & data)"

.PP
Expand the bound to include the given point\&. The centroid will not be moved\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIMatType\fP Type of matrix; could be arma::mat, arma::spmat, or a vector\&. 
.br
\fIdata\fP Data points to add\&. 
.RE
.PP

.PP
Referenced by HollowBallBound< TMetricType, ElemType >::Center()\&.
.SS "const \fBHollowBallBound\fP& operator|= (const \fBHollowBallBound\fP< TMetricType, ElemType > & other)"

.PP
Expand the bound to include the given bound\&. The centroid will not be moved\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIMatType\fP Type of matrix; could be arma::mat, arma::spmat, or a vector\&. 
.br
\fIdata\fP Data points to add\&. 
.RE
.PP

.SS "ElemType OuterRadius () const\fC [inline]\fP"

.PP
Get the outer radius of the ball\&. 
.PP
Definition at line 96 of file hollow_ball_bound\&.hpp\&.
.SS "ElemType& OuterRadius ()\fC [inline]\fP"

.PP
Modify the outer radius of the ball\&. 
.PP
Definition at line 98 of file hollow_ball_bound\&.hpp\&.
.SS "math::RangeType<ElemType> RangeDistance (const VecType & other, typename \fBstd::enable_if_t\fP< \fBIsVector\fP< VecType >::value > * = \fC0\fP) const"

.PP
Calculates minimum and maximum bound-to-point distance\&. 
.PP
\fBParameters:\fP
.RS 4
\fIother\fP Point to which the minimum and maximum distances are requested\&. 
.RE
.PP

.PP
Referenced by HollowBallBound< TMetricType, ElemType >::Center()\&.
.SS "math::RangeType<ElemType> RangeDistance (const \fBHollowBallBound\fP< TMetricType, ElemType > & other) const"

.PP
Calculates minimum and maximum bound-to-bound distance\&. Example: bound1\&.MinDistanceSq(other) for minimum distance\&.
.PP
\fBParameters:\fP
.RS 4
\fIother\fP Bound to which the minimum and maximum distances are requested\&. 
.RE
.PP

.SS "void serialize (Archive & ar, const uint32_t version)"

.PP
Serialize the bound\&. 
.PP
Referenced by HollowBallBound< TMetricType, ElemType >::Metric()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
