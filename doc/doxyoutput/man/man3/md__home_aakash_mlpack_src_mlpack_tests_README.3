.TH "md__home_aakash_mlpack_src_mlpack_tests_README" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md__home_aakash_mlpack_src_mlpack_tests_READMEmlpack Tests 
 \- This directory contains code and data used to test all the algorithms and functions implemented in mlpack\&.
.PP
.SS "Test Directories Structure"
.PP
.IP "\(bu" 2
*_test\&.cpp - methods tests
.IP "\(bu" 2
main_tests/*_test\&.cpp - binding tests
.IP "\(bu" 2
data - data needed to run the tests
.PP
.PP
.SS "Add tests"
.PP
We have a rich test suite, consisting of almost 2000 tests (and still counting)\&. It is suggested to add tests when:
.PP
.IP "\(bu" 2
Adding new functionality\&.
.IP "\(bu" 2
Fixing regressions and bugs\&.
.PP
.PP
.SS "Building Tests"
.PP
To build the test suite you can simply run \fCmake mlpack_test\fP\&.
.PP
.SS "To run Tests"
.PP
We use \fCCatch2\fP to write our tests\&. To run all tests, you can simply run:
.PP
\fC\&./bin/mlpack_test\fP
.PP
To run all tests in a particular file you can run:
.PP
\fC\&./bin/mlpack_test '[testname]'\fP
.PP
where \fCtestname\fP is the name of the test suite\&. For example to run all collaborative filtering tests implemented in \fCcv_test\&.cpp\fP you can run:
.PP
\fC\&./bin/mlpack_test '[CVTest]'\fP
.PP
Now similarly you can run all the binding related tests using:
.PP
\fC\&./bin/mlpack_test '[BindingTests]'\fP
.PP
To run a single test, you can explicitly provide the name of the test, for example, to run \fCBinaryClassificationMetricsTest\fP implemented in \fCcv_test\&.cpp\fP you can run the following:
.PP
\fC\&./bin/mlpack_test BinaryClassificationMetricsTest\fP
.PP
Catch2 provides many other features like filter, checkout the \fCCatch2 reference section\fP - for more details\&. 
