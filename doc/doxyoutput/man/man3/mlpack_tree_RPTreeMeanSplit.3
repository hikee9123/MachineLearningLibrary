.TH "RPTreeMeanSplit< BoundType, MatType >" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RPTreeMeanSplit< BoundType, MatType > \- This class splits a binary space tree\&.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBSplitInfo\fP"
.br
.RI "An information about the partition\&. "
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef MatType::elem_type \fBElemType\fP"
.br
.RI "The element type held by the matrix type\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "template<typename VecType > static bool \fBAssignToLeftNode\fP (const VecType &point, const \fBSplitInfo\fP &splitInfo)"
.br
.RI "Indicates that a point should be assigned to the left subtree\&. "
.ti -1c
.RI "static size_t \fBPerformSplit\fP (MatType &data, const size_t begin, const size_t count, const \fBSplitInfo\fP &splitInfo)"
.br
.RI "Perform the split process according to the information about the split\&. "
.ti -1c
.RI "static size_t \fBPerformSplit\fP (MatType &data, const size_t begin, const size_t count, const \fBSplitInfo\fP &splitInfo, std::vector< size_t > &oldFromNew)"
.br
.RI "Perform the split process according to the information about the split and return the list of changed indices\&. "
.ti -1c
.RI "static bool \fBSplitNode\fP (const BoundType &, MatType &data, const size_t begin, const size_t count, \fBSplitInfo\fP &splitInfo)"
.br
.RI "Split the node according to the mean value in the dimension with maximum width\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename BoundType, typename MatType = arma::mat>
.br
class mlpack::tree::RPTreeMeanSplit< BoundType, MatType >"
This class splits a binary space tree\&. 

This class provides two different kinds of split\&. The mean split (i\&.e\&. all points are split by the median of their distance to the mean point) is performed if the average distance between points multiplied by a constant is greater than the diameter of the node\&. Otherwise, the median split (i\&.e\&. the node is split by a random hyperplane) is performed\&. 
.PP
Definition at line 33 of file rp_tree_mean_split\&.hpp\&.
.SH "Member Typedef Documentation"
.PP 
.SS "typedef MatType::elem_type \fBElemType\fP"

.PP
The element type held by the matrix type\&. 
.PP
Definition at line 37 of file rp_tree_mean_split\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "static bool AssignToLeftNode (const VecType & point, const \fBSplitInfo\fP & splitInfo)\fC [inline]\fP, \fC [static]\fP"

.PP
Indicates that a point should be assigned to the left subtree\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpoint\fP The point that is being assigned\&. 
.br
\fIsplitInfo\fP An information about the split\&. 
.RE
.PP

.PP
Definition at line 123 of file rp_tree_mean_split\&.hpp\&.
.PP
References RPTreeMeanSplit< BoundType, MatType >::SplitInfo::direction, RPTreeMeanSplit< BoundType, MatType >::SplitInfo::mean, RPTreeMeanSplit< BoundType, MatType >::SplitInfo::meanSplit, and RPTreeMeanSplit< BoundType, MatType >::SplitInfo::splitVal\&.
.SS "static size_t PerformSplit (MatType & data, const size_t begin, const size_t count, const \fBSplitInfo\fP & splitInfo)\fC [inline]\fP, \fC [static]\fP"

.PP
Perform the split process according to the information about the split\&. This will order the dataset such that points that belong to the left subtree are on the left of the split column, and points from the right subtree are on the right side of the split column\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP The dataset used by the binary space tree\&. 
.br
\fIbegin\fP Index of the starting point in the dataset that belongs to this node\&. 
.br
\fIcount\fP Number of points in this node\&. 
.br
\fIsplitInfo\fP The information about the split\&. 
.RE
.PP

.PP
Definition at line 82 of file rp_tree_mean_split\&.hpp\&.
.SS "static size_t PerformSplit (MatType & data, const size_t begin, const size_t count, const \fBSplitInfo\fP & splitInfo, std::vector< size_t > & oldFromNew)\fC [inline]\fP, \fC [static]\fP"

.PP
Perform the split process according to the information about the split and return the list of changed indices\&. This will order the dataset such that points that belong to the left subtree are on the left of the split column, and points from the right subtree are on the right side of the split column\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP The dataset used by the binary space tree\&. 
.br
\fIbegin\fP Index of the starting point in the dataset that belongs to this node\&. 
.br
\fIcount\fP Number of points in this node\&. 
.br
\fIsplitInfo\fP The information about the split\&. 
.br
\fIoldFromNew\fP Vector which will be filled with the old positions for each new point\&. 
.RE
.PP

.PP
Definition at line 106 of file rp_tree_mean_split\&.hpp\&.
.SS "static bool SplitNode (const BoundType &, MatType & data, const size_t begin, const size_t count, \fBSplitInfo\fP & splitInfo)\fC [static]\fP"

.PP
Split the node according to the mean value in the dimension with maximum width\&. 
.PP
\fBParameters:\fP
.RS 4
\fI*\fP (bound) The bound used for this node\&. 
.br
\fIdata\fP The dataset used by the binary space tree\&. 
.br
\fIbegin\fP Index of the starting point in the dataset that belongs to this node\&. 
.br
\fIcount\fP Number of points in this node\&. 
.br
\fIsplitInfo\fP An information about the split\&. This information contains the direction and the value\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
