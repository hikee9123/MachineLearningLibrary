.TH "SVDBatchLearning" 3 "Sun Aug 22 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SVDBatchLearning \- This class implements SVD batch learning with momentum\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSVDBatchLearning\fP (double u=0\&.0002, double kw=0, double kh=0, double momentum=0\&.9)"
.br
.RI "SVD Batch learning constructor\&. "
.ti -1c
.RI "template<typename MatType > void \fBHUpdate\fP (const MatType &V, const arma::mat &W, arma::mat &H)"
.br
.RI "The update rule for the encoding matrix H\&. "
.ti -1c
.RI "template<typename MatType > void \fBInitialize\fP (const MatType &dataset, const size_t rank)"
.br
.RI "Initialize parameters before factorization\&. "
.ti -1c
.RI "template<typename Archive > void \fBserialize\fP (Archive &ar, const uint32_t)"
.br
.RI "Serialize the SVDBatch object\&. "
.ti -1c
.RI "template<typename MatType > void \fBWUpdate\fP (const MatType &V, arma::mat &W, const arma::mat &H)"
.br
.RI "The update rule for the basis matrix W\&. "
.in -1c
.SH "Detailed Description"
.PP 
This class implements SVD batch learning with momentum\&. 

This procedure is described in the following paper:
.PP
.PP
.nf
@techreport{ma2008guide,
  title={A Guide to Singular Value Decomposition for Collaborative
      Filtering},
  author={Ma, Chih-Chao},
  year={2008},
  institution={Department of Computer Science, National Taiwan University}
}
.fi
.PP
.PP
This class implements 'Algorithm 4' as given in the paper\&.
.PP
The factorizer decomposes the matrix V into two matrices W and H such that sum of sum of squared error between V and W * H is minimum\&. This optimization is performed with gradient descent\&. To make gradient descent faster, momentum is added\&. 
.PP
Definition at line 41 of file svd_batch_learning\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBSVDBatchLearning\fP (double u = \fC0\&.0002\fP, double kw = \fC0\fP, double kh = \fC0\fP, double momentum = \fC0\&.9\fP)\fC [inline]\fP"

.PP
SVD Batch learning constructor\&. 
.PP
\fBParameters:\fP
.RS 4
\fIu\fP step value used in batch learning 
.br
\fIkw\fP regularization constant for W matrix 
.br
\fIkh\fP regularization constant for H matrix 
.br
\fImomentum\fP momentum applied to batch learning process 
.RE
.PP

.PP
Definition at line 52 of file svd_batch_learning\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "void HUpdate (const MatType & V, const arma::mat & W, arma::mat & H)\fC [inline]\fP"

.PP
The update rule for the encoding matrix H\&. The function takes in all the matrices and only changes the value of the H matrix\&.
.PP
\fBParameters:\fP
.RS 4
\fIV\fP Input matrix to be factorized\&. 
.br
\fIW\fP Basis matrix\&. 
.br
\fIH\fP Encoding matrix to be updated\&. 
.RE
.PP

.PP
Definition at line 133 of file svd_batch_learning\&.hpp\&.
.SS "void Initialize (const MatType & dataset, const size_t rank)\fC [inline]\fP"

.PP
Initialize parameters before factorization\&. This function must be called before a new factorization\&. This resets the internally-held momentum\&.
.PP
\fBParameters:\fP
.RS 4
\fIdataset\fP Input matrix to be factorized\&. 
.br
\fIrank\fP rank of factorization 
.RE
.PP

.PP
Definition at line 69 of file svd_batch_learning\&.hpp\&.
.SS "void serialize (Archive & ar, const uint32_t)\fC [inline]\fP"

.PP
Serialize the SVDBatch object\&. 
.PP
Definition at line 169 of file svd_batch_learning\&.hpp\&.
.SS "void WUpdate (const MatType & V, arma::mat & W, const arma::mat & H)\fC [inline]\fP"

.PP
The update rule for the basis matrix W\&. The function takes in all the matrices and only changes the value of the W matrix\&.
.PP
\fBParameters:\fP
.RS 4
\fIV\fP Input matrix to be factorized\&. 
.br
\fIW\fP Basis matrix to be updated\&. 
.br
\fIH\fP Encoding matrix\&. 
.RE
.PP

.PP
Definition at line 88 of file svd_batch_learning\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
