.TH "TreeTraits< TreeType >" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TreeTraits< TreeType > \- The \fBTreeTraits\fP class provides compile-time information on the characteristics of a given tree type\&.  

.SH SYNOPSIS
.br
.PP
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static const bool \fBBinaryTree\fP = false"
.br
.RI "This is true if the tree always has only two children\&. "
.ti -1c
.RI "static const bool \fBFirstPointIsCentroid\fP = false"
.br
.RI "This is true if the first point of each node is the centroid of its bound\&. "
.ti -1c
.RI "static const bool \fBHasDuplicatedPoints\fP = false"
.br
.RI "This is true if a point can be included in more than one node\&. "
.ti -1c
.RI "static const bool \fBHasOverlappingChildren\fP = true"
.br
.RI "This is true if the subspaces represented by the children of a node can overlap\&. "
.ti -1c
.RI "static const bool \fBHasSelfChildren\fP = false"
.br
.RI "This is true if the points contained in the first child of a node (Child(0)) are also contained in that node\&. "
.ti -1c
.RI "static const bool \fBRearrangesDataset\fP = false"
.br
.RI "This is true if the tree rearranges points in the dataset when it is built\&. "
.ti -1c
.RI "static const bool \fBUniqueNumDescendants\fP = true"
.br
.RI "This is true if the NumDescendants() method doesn't include duplicated points\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename TreeType>
.br
class mlpack::tree::TreeTraits< TreeType >"
The \fBTreeTraits\fP class provides compile-time information on the characteristics of a given tree type\&. 

These include traits such as whether or not a node knows the distance to its parent node, or whether or not the subspaces represented by children can overlap\&.
.PP
These traits can be used for static compile-time optimization:
.PP
.PP
.nf
// This if statement will be optimized out at compile time!
if (TreeTraits<TreeType>::HasOverlappingChildren == false)
{
  // Do a simpler computation because no children overlap\&.
}
else
{
  // Do the full, complex calculation\&.
}
.fi
.PP
.PP
The traits can also be used in conjunction with SFINAE to write specialized versions of functions:
.PP
.PP
.nf
template<typename TreeType>
void Compute(TreeType& node,
             std::enable_if_t<
                 TreeTraits<TreeType>::RearrangesDataset>*)
{
  // Computation where special dataset-rearranging tree constructor is
  // called\&.
}

template<typename TreeType>
void Compute(TreeType& node,
             std::enable_if_t<
                 !TreeTraits<TreeType>::RearrangesDataset>*)
{
  // Computation where normal tree constructor is called\&.
}
.fi
.PP
.PP
In those two examples, the \fBstd::enable_if_t<>\fP class takes a boolean template parameter which allows that function to be called when the boolean is true\&.
.PP
Each trait must be a static const value and not a function; only const values can be used as template parameters (or constexprs can be used too)\&. By default (the unspecialized implementation of \fBTreeTraits\fP), each parameter is set to make as few assumptions about the tree as possible; so, even if \fBTreeTraits\fP is not specialized for a particular tree type, tree-based algorithms should still work\&.
.PP
When you write your own tree, you must specialize the \fBTreeTraits\fP class to your tree type and set the corresponding values appropriately\&. See \fBmlpack/core/tree/binary_space_tree/traits\&.hpp\fP for an example\&. 
.PP
Definition at line 77 of file tree_traits\&.hpp\&.
.SH "Member Data Documentation"
.PP 
.SS "const bool BinaryTree = false\fC [static]\fP"

.PP
This is true if the tree always has only two children\&. 
.PP
Definition at line 110 of file tree_traits\&.hpp\&.
.SS "const bool FirstPointIsCentroid = false\fC [static]\fP"

.PP
This is true if the first point of each node is the centroid of its bound\&. 
.PP
Definition at line 94 of file tree_traits\&.hpp\&.
.SS "const bool HasDuplicatedPoints = false\fC [static]\fP"

.PP
This is true if a point can be included in more than one node\&. 
.PP
Definition at line 89 of file tree_traits\&.hpp\&.
.SS "const bool HasOverlappingChildren = true\fC [static]\fP"

.PP
This is true if the subspaces represented by the children of a node can overlap\&. 
.PP
Definition at line 84 of file tree_traits\&.hpp\&.
.SS "const bool HasSelfChildren = false\fC [static]\fP"

.PP
This is true if the points contained in the first child of a node (Child(0)) are also contained in that node\&. 
.PP
Definition at line 100 of file tree_traits\&.hpp\&.
.SS "const bool RearrangesDataset = false\fC [static]\fP"

.PP
This is true if the tree rearranges points in the dataset when it is built\&. 
.PP
Definition at line 105 of file tree_traits\&.hpp\&.
.SS "const bool UniqueNumDescendants = true\fC [static]\fP"

.PP
This is true if the NumDescendants() method doesn't include duplicated points\&. 
.PP
Definition at line 116 of file tree_traits\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
