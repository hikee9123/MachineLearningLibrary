.TH "SVDWrapper< Factorizer >" 3 "Sun Aug 22 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SVDWrapper< Factorizer > \- This class acts as the wrapper for all SVD factorizers which are incompatible with CF module\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSVDWrapper\fP (const Factorizer &factorizer=Factorizer())"
.br
.ti -1c
.RI "double \fBApply\fP (const arma::mat &V, arma::mat &W, arma::mat &sigma, arma::mat &H) const"
.br
.RI "Factorizer function which takes SVD of the given matrix and returns the frobenius norm of error\&. "
.ti -1c
.RI "double \fBApply\fP (const arma::mat &V, size_t r, arma::mat &W, arma::mat &H) const"
.br
.RI "Factorizer function which computes SVD and returns matrices as required by CF module\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class Factorizer = DummyClass>
.br
class mlpack::cf::SVDWrapper< Factorizer >"
This class acts as the wrapper for all SVD factorizers which are incompatible with CF module\&. 

Normally SVD factrorizers implement Apply method which takes matrix V and factorizes it into P, sigma and Q where V = P * sigma * trans(Q)\&. But CF module requires factrorization to be V = W * H\&. This class multiplies P and sigma and takes the first 'r' eigenvectors out where 'r' is the rank of factorization\&. Q matrix is transposed and trimmed to support the rank of factorization\&. The Factroizer class should implement Apply which takes matrices P, sigma, Q and V as their parameter respectively\&. 
.PP
Definition at line 40 of file svd_wrapper\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBSVDWrapper\fP (const Factorizer & factorizer = \fCFactorizer()\fP)\fC [inline]\fP"

.PP
Definition at line 44 of file svd_wrapper\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "double Apply (const arma::mat & V, arma::mat & W, arma::mat & sigma, arma::mat & H) const"

.PP
Factorizer function which takes SVD of the given matrix and returns the frobenius norm of error\&. 
.PP
\fBParameters:\fP
.RS 4
\fIV\fP input matrix 
.br
\fIW\fP first unitary matrix 
.br
\fIsigma\fP eigenvalue matrix 
.br
\fIH\fP second unitary matrix
.RE
.PP
\fBNote:\fP
.RS 4
V = W * sigma * arma::trans(H) 
.RE
.PP

.SS "double Apply (const arma::mat & V, size_t r, arma::mat & W, arma::mat & H) const"

.PP
Factorizer function which computes SVD and returns matrices as required by CF module\&. 
.PP
\fBParameters:\fP
.RS 4
\fIV\fP input matrix 
.br
\fIr\fP rank 
.br
\fIW\fP first unitary matrix 
.br
\fIH\fP second unitary matrix
.RE
.PP
\fBNote:\fP
.RS 4
V = W * H 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
