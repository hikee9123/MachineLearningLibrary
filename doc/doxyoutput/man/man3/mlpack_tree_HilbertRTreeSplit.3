.TH "HilbertRTreeSplit< splitOrder >" 3 "Sun Aug 22 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
HilbertRTreeSplit< splitOrder > \- The splitting procedure for the Hilbert R tree\&.  

.SH SYNOPSIS
.br
.PP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "template<typename TreeType > static void \fBSplitLeafNode\fP (TreeType *tree, std::vector< bool > &relevels)"
.br
.RI "Split a leaf node using the 'default' algorithm\&. "
.ti -1c
.RI "template<typename TreeType > static bool \fBSplitNonLeafNode\fP (TreeType *tree, std::vector< bool > &relevels)"
.br
.RI "Split a non-leaf node using the 'default' algorithm\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<size_t splitOrder = 2>
.br
class mlpack::tree::HilbertRTreeSplit< splitOrder >"
The splitting procedure for the Hilbert R tree\&. 

The template parameter splitOrder is the order of the splitting policy\&. The Hilbert R tree splits a node on overflow, turning splitOrder nodes into (splitOrder + 1) nodes\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIsplitOrder\fP Number of nodes to split\&. 
.RE
.PP

.PP
Definition at line 29 of file hilbert_r_tree_split\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "static void SplitLeafNode (TreeType * tree, std::vector< bool > & relevels)\fC [static]\fP"

.PP
Split a leaf node using the 'default' algorithm\&. If necessary, this split will propagate upwards through the tree\&.
.PP
\fBParameters:\fP
.RS 4
\fItree\fP The node that is being split\&. 
.br
\fIrelevels\fP Not used\&. 
.RE
.PP

.SS "static bool SplitNonLeafNode (TreeType * tree, std::vector< bool > & relevels)\fC [static]\fP"

.PP
Split a non-leaf node using the 'default' algorithm\&. If this is a root node, the tree increases in depth\&.
.PP
\fBParameters:\fP
.RS 4
\fItree\fP The node that is being split\&. 
.br
\fIrelevels\fP Not used\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
