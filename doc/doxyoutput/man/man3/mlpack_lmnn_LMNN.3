.TH "LMNN< MetricType, OptimizerType >" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
LMNN< MetricType, OptimizerType > \- An implementation of Large Margin nearest neighbor metric learning technique\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBLMNN\fP (const arma::mat &dataset, const arma::Row< size_t > &labels, const size_t k, const MetricType metric=MetricType())"
.br
.RI "Initialize the \fBLMNN\fP object, passing a dataset (distance metric is learned using this dataset) and labels\&. "
.ti -1c
.RI "const arma::mat & \fBDataset\fP () const"
.br
.RI "Get the dataset reference\&. "
.ti -1c
.RI "const size_t & \fBK\fP () const"
.br
.RI "Access the value of k\&. "
.ti -1c
.RI "size_t \fBK\fP ()"
.br
.RI "Modify the value of k\&. "
.ti -1c
.RI "const arma::Row< size_t > & \fBLabels\fP () const"
.br
.RI "Get the labels reference\&. "
.ti -1c
.RI "template<typename\&.\&.\&. CallbackTypes> void \fBLearnDistance\fP (arma::mat &outputMatrix, CallbackTypes &&\&.\&.\&. callbacks)"
.br
.RI "Perform Large Margin Nearest Neighbors metric learning\&. "
.ti -1c
.RI "const OptimizerType & \fBOptimizer\fP () const"
.br
.RI "Get the optimizer\&. "
.ti -1c
.RI "OptimizerType & \fBOptimizer\fP ()"
.br
.ti -1c
.RI "const size_t & \fBRange\fP () const"
.br
.RI "Access the range value\&. "
.ti -1c
.RI "size_t & \fBRange\fP ()"
.br
.RI "Modify the range value\&. "
.ti -1c
.RI "const double & \fBRegularization\fP () const"
.br
.RI "Access the regularization value\&. "
.ti -1c
.RI "double & \fBRegularization\fP ()"
.br
.RI "Modify the regularization value\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename MetricType = metric::SquaredEuclideanDistance, typename OptimizerType = ens::AMSGrad>
.br
class mlpack::lmnn::LMNN< MetricType, OptimizerType >"
An implementation of Large Margin nearest neighbor metric learning technique\&. 

The method seeks to improve clustering & classification algorithms on a dataset by transforming the dataset representation in a more convenient form for them\&. It introduces the concept of target neighbors and impostors, focusing on the idea that the distance between impostors and the perimeters established by target neighbors should be large and that between target neighbors and data point should be small\&. It requires the knowledge of target neighbors beforehand\&. Moreover, target neighbors once initialized remain same\&.
.PP
For more details, see the following published paper:
.PP
.PP
.nf
@ARTICLE{weinberger09distance,
  author = {Weinberger, K\&.Q\&. and Saul, L\&.K\&.},
  title = {{Distance metric learning for large margin nearest neighbor
      classification}},
  journal = {The Journal of Machine Learning Research},
  year = {2009},
  volume = {10},
  pages = {207--244},
  publisher = {MIT Press}
}
.fi
.PP
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIMetricType\fP The type of metric to use for computation\&. 
.br
\fIOptimizerType\fP Optimizer to use for developing distance\&. 
.RE
.PP

.PP
Definition at line 55 of file lmnn\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBLMNN\fP (const arma::mat & dataset, const arma::Row< size_t > & labels, const size_t k, const MetricType metric = \fCMetricType()\fP)"

.PP
Initialize the \fBLMNN\fP object, passing a dataset (distance metric is learned using this dataset) and labels\&. Initialization will copy both dataset and labels matrices to internal copies\&.
.PP
\fBParameters:\fP
.RS 4
\fIdataset\fP Input dataset\&. 
.br
\fIlabels\fP Input dataset labels\&. 
.br
\fIk\fP Number of targets to consider\&. 
.br
\fImetric\fP Type of metric used for computation\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "const arma::mat& Dataset () const\fC [inline]\fP"

.PP
Get the dataset reference\&. 
.PP
Definition at line 90 of file lmnn\&.hpp\&.
.SS "const size_t& K () const\fC [inline]\fP"

.PP
Access the value of k\&. 
.PP
Definition at line 106 of file lmnn\&.hpp\&.
.SS "size_t K ()\fC [inline]\fP"

.PP
Modify the value of k\&. 
.PP
Definition at line 108 of file lmnn\&.hpp\&.
.SS "const arma::Row<size_t>& Labels () const\fC [inline]\fP"

.PP
Get the labels reference\&. 
.PP
Definition at line 93 of file lmnn\&.hpp\&.
.SS "void LearnDistance (arma::mat & outputMatrix, CallbackTypes &&\&.\&.\&. callbacks)"

.PP
Perform Large Margin Nearest Neighbors metric learning\&. The output distance matrix is written into the passed reference\&. If the \fBLearnDistance()\fP is called with an outputMatrix with correct dimensions, then that matrix will be used as the starting point for optimization\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fICallbackTypes\fP Types of Callback functions\&. 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIoutputMatrix\fP Covariance matrix of Mahalanobis distance\&. 
.br
\fIcallbacks\fP Callback function for ensmallen optimizer \fCOptimizerType\fP\&. See https://www.ensmallen.org/docs.html#callback-documentation\&. 
.RE
.PP

.SS "const OptimizerType& Optimizer () const\fC [inline]\fP"

.PP
Get the optimizer\&. 
.PP
Definition at line 111 of file lmnn\&.hpp\&.
.SS "OptimizerType& Optimizer ()\fC [inline]\fP"

.PP
Definition at line 112 of file lmnn\&.hpp\&.
.SS "const size_t& Range () const\fC [inline]\fP"

.PP
Access the range value\&. 
.PP
Definition at line 101 of file lmnn\&.hpp\&.
.SS "size_t& Range ()\fC [inline]\fP"

.PP
Modify the range value\&. 
.PP
Definition at line 103 of file lmnn\&.hpp\&.
.SS "const double& Regularization () const\fC [inline]\fP"

.PP
Access the regularization value\&. 
.PP
Definition at line 96 of file lmnn\&.hpp\&.
.SS "double& Regularization ()\fC [inline]\fP"

.PP
Modify the regularization value\&. 
.PP
Definition at line 98 of file lmnn\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
