.TH "SimpleDQN< OutputLayerType, InitType, NetworkType >" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SimpleDQN< OutputLayerType, InitType, NetworkType >
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSimpleDQN\fP ()"
.br
.RI "Default constructor\&. "
.ti -1c
.RI "\fBSimpleDQN\fP (const int inputDim, const int h1, const int h2, const int outputDim, const bool isNoisy=false, InitType init=InitType(), OutputLayerType outputLayer=OutputLayerType())"
.br
.RI "Construct an instance of \fBSimpleDQN\fP class\&. "
.ti -1c
.RI "\fBSimpleDQN\fP (NetworkType &network, const bool isNoisy=false)"
.br
.RI "Construct an instance of \fBSimpleDQN\fP class from a pre-constructed network\&. "
.ti -1c
.RI "void \fBBackward\fP (const arma::mat state, arma::mat &target, arma::mat &gradient)"
.br
.RI "Perform the backward pass of the state in real batch mode\&. "
.ti -1c
.RI "void \fBForward\fP (const arma::mat state, arma::mat &target)"
.br
.RI "Perform the forward pass of the states in real batch mode\&. "
.ti -1c
.RI "const arma::mat & \fBParameters\fP () const"
.br
.RI "Return the Parameters\&. "
.ti -1c
.RI "arma::mat & \fBParameters\fP ()"
.br
.RI "Modify the Parameters\&. "
.ti -1c
.RI "void \fBPredict\fP (const arma::mat state, arma::mat &actionValue)"
.br
.RI "Predict the responses to a given set of predictors\&. "
.ti -1c
.RI "void \fBResetNoise\fP ()"
.br
.RI "Resets noise of the network, if the network is of type noisy\&. "
.ti -1c
.RI "void \fBResetParameters\fP ()"
.br
.RI "Resets the parameters of the network\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename OutputLayerType = MeanSquaredError<>, typename InitType = GaussianInitialization, typename NetworkType = FFN<OutputLayerType, InitType>>
.br
class mlpack::rl::SimpleDQN< OutputLayerType, InitType, NetworkType >"

.PP
\fBTemplate Parameters:\fP
.RS 4
\fIOutputLayerType\fP The output layer type of the network\&. 
.br
\fIInitType\fP The initialization type used for the network\&. 
.br
\fINetworkType\fP The type of network used for simple dqn\&. 
.RE
.PP

.PP
Definition at line 36 of file simple_dqn\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBSimpleDQN\fP ()\fC [inline]\fP"

.PP
Default constructor\&. 
.PP
Definition at line 42 of file simple_dqn\&.hpp\&.
.SS "\fBSimpleDQN\fP (const int inputDim, const int h1, const int h2, const int outputDim, const bool isNoisy = \fCfalse\fP, InitType init = \fCInitType()\fP, OutputLayerType outputLayer = \fCOutputLayerType()\fP)\fC [inline]\fP"

.PP
Construct an instance of \fBSimpleDQN\fP class\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinputDim\fP Number of inputs\&. 
.br
\fIh1\fP Number of neurons in hiddenlayer-1\&. 
.br
\fIh2\fP Number of neurons in hiddenlayer-2\&. 
.br
\fIoutputDim\fP Number of neurons in output layer\&. 
.br
\fIisNoisy\fP Specifies whether the network needs to be of type noisy\&. 
.br
\fIinit\fP Specifies the initialization rule for the network\&. 
.br
\fIoutputLayer\fP Specifies the output layer type for network\&. 
.RE
.PP

.PP
Definition at line 56 of file simple_dqn\&.hpp\&.
.SS "\fBSimpleDQN\fP (NetworkType & network, const bool isNoisy = \fCfalse\fP)\fC [inline]\fP"

.PP
Construct an instance of \fBSimpleDQN\fP class from a pre-constructed network\&. 
.PP
\fBParameters:\fP
.RS 4
\fInetwork\fP The network to be used by \fBSimpleDQN\fP class\&. 
.br
\fIisNoisy\fP Specifies whether the network needs to be of type noisy\&. 
.RE
.PP

.PP
Definition at line 90 of file simple_dqn\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "void Backward (const arma::mat state, arma::mat & target, arma::mat & gradient)\fC [inline]\fP"

.PP
Perform the backward pass of the state in real batch mode\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstate\fP The input state\&. 
.br
\fItarget\fP The training target\&. 
.br
\fIgradient\fP The gradient\&. 
.RE
.PP

.PP
Definition at line 154 of file simple_dqn\&.hpp\&.
.SS "void Forward (const arma::mat state, arma::mat & target)\fC [inline]\fP"

.PP
Perform the forward pass of the states in real batch mode\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstate\fP The input state\&. 
.br
\fItarget\fP The predicted target\&. 
.RE
.PP

.PP
Definition at line 117 of file simple_dqn\&.hpp\&.
.SS "const arma::mat& Parameters () const\fC [inline]\fP"

.PP
Return the Parameters\&. 
.PP
Definition at line 143 of file simple_dqn\&.hpp\&.
.SS "arma::mat& Parameters ()\fC [inline]\fP"

.PP
Modify the Parameters\&. 
.PP
Definition at line 145 of file simple_dqn\&.hpp\&.
.SS "void Predict (const arma::mat state, arma::mat & actionValue)\fC [inline]\fP"

.PP
Predict the responses to a given set of predictors\&. The responses will reflect the output of the given output layer as returned by the output layer function\&.
.PP
If you want to pass in a parameter and discard the original parameter object, be sure to use std::move to avoid unnecessary copy\&.
.PP
\fBParameters:\fP
.RS 4
\fIstate\fP Input state\&. 
.br
\fIactionValue\fP Matrix to put output action values of states input\&. 
.RE
.PP

.PP
Definition at line 106 of file simple_dqn\&.hpp\&.
.SS "void ResetNoise ()\fC [inline]\fP"

.PP
Resets noise of the network, if the network is of type noisy\&. 
.PP
Definition at line 133 of file simple_dqn\&.hpp\&.
.SS "void ResetParameters ()\fC [inline]\fP"

.PP
Resets the parameters of the network\&. 
.PP
Definition at line 125 of file simple_dqn\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
