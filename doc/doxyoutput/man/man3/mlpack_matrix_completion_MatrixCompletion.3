.TH "MatrixCompletion" 3 "Sun Aug 22 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MatrixCompletion \- This class implements the popular nuclear norm minimization heuristic for matrix completion problems\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMatrixCompletion\fP (const size_t m, const size_t n, const arma::umat &indices, const arma::vec &values, const size_t r)"
.br
.RI "Construct a matrix completion problem, specifying the maximum rank of the solution\&. "
.ti -1c
.RI "\fBMatrixCompletion\fP (const size_t m, const size_t n, const arma::umat &indices, const arma::vec &values, const arma::mat &initialPoint)"
.br
.RI "Construct a matrix completion problem, specifying the initial point of the optimization\&. "
.ti -1c
.RI "\fBMatrixCompletion\fP (const size_t m, const size_t n, const arma::umat &indices, const arma::vec &values)"
.br
.RI "Construct a matrix completion problem\&. "
.ti -1c
.RI "void \fBRecover\fP (arma::mat &recovered)"
.br
.RI "Solve the underlying SDP to fill in the remaining values\&. "
.ti -1c
.RI "const ens::LRSDP< ens::SDP< arma::sp_mat > > & \fBSdp\fP () const"
.br
.RI "Return the underlying SDP\&. "
.ti -1c
.RI "ens::LRSDP< ens::SDP< arma::sp_mat > > & \fBSdp\fP ()"
.br
.RI "Modify the underlying SDP\&. "
.in -1c
.SH "Detailed Description"
.PP 
This class implements the popular nuclear norm minimization heuristic for matrix completion problems\&. 

That is, given known values M_ij's, the following optimization problem (semi-definite program) is solved to fill in the remaining unknown values of X
.PP
min ||X||_* subj to X_ij = M_ij
.PP
where ||X||_* denotes the nuclear norm (sum of singular values of X)\&.
.PP
For a theoretical treatment of the conditions necessary for exact recovery, see the following paper:
.PP
A Simpler Appoarch to Matrix Completion\&. Benjamin Recht\&. JMLR 11\&. http://arxiv.org/pdf/0910.0651v2.pdf
.PP
An example of how to use this class is shown below:
.PP
.PP
.nf
size_t m, n;         // size of unknown matrix
arma::umat indices;  // contains the known indices [2 x n_entries]
arma::vec values;    // contains the known values [n_entries]
arma::mat recovered; // will contain the completed matrix

MatrixCompletion mc(m, n, indices, values);
mc\&.Recover(recovered);
.fi
.PP
.PP
\fBSee also:\fP
.RS 4
LRSDP 
.RE
.PP

.PP
Definition at line 53 of file matrix_completion\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBMatrixCompletion\fP (const size_t m, const size_t n, const arma::umat & indices, const arma::vec & values, const size_t r)"

.PP
Construct a matrix completion problem, specifying the maximum rank of the solution\&. 
.PP
\fBParameters:\fP
.RS 4
\fIm\fP Number of rows of original matrix\&. 
.br
\fIn\fP Number of columns of original matrix\&. 
.br
\fIindices\fP Matrix containing the indices of the known entries (must be [2 x p])\&. 
.br
\fIvalues\fP Vector containing the values of the known entries (must be length p)\&. 
.br
\fIr\fP Maximum rank of solution\&. 
.RE
.PP

.SS "\fBMatrixCompletion\fP (const size_t m, const size_t n, const arma::umat & indices, const arma::vec & values, const arma::mat & initialPoint)"

.PP
Construct a matrix completion problem, specifying the initial point of the optimization\&. 
.PP
\fBParameters:\fP
.RS 4
\fIm\fP Number of rows of original matrix\&. 
.br
\fIn\fP Number of columns of original matrix\&. 
.br
\fIindices\fP Matrix containing the indices of the known entries (must be [2 x p])\&. 
.br
\fIvalues\fP Vector containing the values of the known entries (must be length p)\&. 
.br
\fIinitialPoint\fP Starting point for the SDP optimization\&. 
.RE
.PP

.SS "\fBMatrixCompletion\fP (const size_t m, const size_t n, const arma::umat & indices, const arma::vec & values)"

.PP
Construct a matrix completion problem\&. 
.PP
\fBParameters:\fP
.RS 4
\fIm\fP Number of rows of original matrix\&. 
.br
\fIn\fP Number of columns of original matrix\&. 
.br
\fIindices\fP Matrix containing the indices of the known entries (must be [2 x p])\&. 
.br
\fIvalues\fP Vector containing the values of the known entries (must be length p)\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void Recover (arma::mat & recovered)"

.PP
Solve the underlying SDP to fill in the remaining values\&. 
.PP
\fBParameters:\fP
.RS 4
\fIrecovered\fP Will contain the completed matrix\&. 
.RE
.PP

.SS "const ens::LRSDP<ens::SDP<arma::sp_mat> >& Sdp () const\fC [inline]\fP"

.PP
Return the underlying SDP\&. 
.PP
Definition at line 115 of file matrix_completion\&.hpp\&.
.SS "ens::LRSDP<ens::SDP<arma::sp_mat> >& Sdp ()\fC [inline]\fP"

.PP
Modify the underlying SDP\&. 
.PP
Definition at line 120 of file matrix_completion\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
