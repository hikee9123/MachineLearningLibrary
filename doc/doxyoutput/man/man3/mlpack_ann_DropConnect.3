.TH "DropConnect< InputDataType, OutputDataType >" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DropConnect< InputDataType, OutputDataType > \- The \fBDropConnect\fP layer is a regularizer that randomly with probability ratio sets the connection values to zero and scales the remaining elements by factor 1 /(1 - ratio)\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDropConnect\fP ()"
.br
.RI "Create the \fBDropConnect\fP object\&. "
.ti -1c
.RI "\fBDropConnect\fP (const size_t inSize, const size_t outSize, const double ratio=0\&.5)"
.br
.RI "Creates the \fBDropConnect\fP Layer as a \fBLinear\fP Object that takes input size, output size and ratio as parameter\&. "
.ti -1c
.RI "template<typename eT > void \fBBackward\fP (const arma::Mat< eT > &input, const arma::Mat< eT > &gy, arma::Mat< eT > &g)"
.br
.RI "Ordinary feed backward pass of the \fBDropConnect\fP layer\&. "
.ti -1c
.RI "OutputDataType const  & \fBDelta\fP () const"
.br
.RI "Get the delta\&. "
.ti -1c
.RI "OutputDataType & \fBDelta\fP ()"
.br
.RI "Modify the delta\&. "
.ti -1c
.RI "bool \fBDeterministic\fP () const"
.br
.RI "The value of the deterministic parameter\&. "
.ti -1c
.RI "bool & \fBDeterministic\fP ()"
.br
.RI "Modify the value of the deterministic parameter\&. "
.ti -1c
.RI "template<typename eT > void \fBForward\fP (const arma::Mat< eT > &input, arma::Mat< eT > &output)"
.br
.RI "Ordinary feed forward pass of the \fBDropConnect\fP layer\&. "
.ti -1c
.RI "template<typename eT > void \fBGradient\fP (const arma::Mat< eT > &input, const arma::Mat< eT > &error, arma::Mat< eT > &)"
.br
.RI "Calculate the gradient using the output delta and the input activation\&. "
.ti -1c
.RI "OutputDataType const  & \fBGradient\fP () const"
.br
.RI "Get the gradient\&. "
.ti -1c
.RI "OutputDataType & \fBGradient\fP ()"
.br
.RI "Modify the gradient\&. "
.ti -1c
.RI "std::vector< \fBLayerTypes\fP<> > & \fBModel\fP ()"
.br
.RI "Get the model modules\&. "
.ti -1c
.RI "OutputDataType const  & \fBOutputParameter\fP () const"
.br
.RI "Get the output parameter\&. "
.ti -1c
.RI "OutputDataType & \fBOutputParameter\fP ()"
.br
.RI "Modify the output parameter\&. "
.ti -1c
.RI "OutputDataType const  & \fBParameters\fP () const"
.br
.RI "Get the parameters\&. "
.ti -1c
.RI "OutputDataType & \fBParameters\fP ()"
.br
.RI "Modify the parameters\&. "
.ti -1c
.RI "double \fBRatio\fP () const"
.br
.RI "The probability of setting a value to zero\&. "
.ti -1c
.RI "void \fBRatio\fP (const double r)"
.br
.RI "Modify the probability of setting a value to zero\&. "
.ti -1c
.RI "template<typename Archive > void \fBserialize\fP (Archive &ar, const uint32_t)"
.br
.RI "Serialize the layer\&. "
.ti -1c
.RI "size_t \fBWeightSize\fP () const"
.br
.RI "Return the size of the weight matrix\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename InputDataType = arma::mat, typename OutputDataType = arma::mat>
.br
class mlpack::ann::DropConnect< InputDataType, OutputDataType >"
The \fBDropConnect\fP layer is a regularizer that randomly with probability ratio sets the connection values to zero and scales the remaining elements by factor 1 /(1 - ratio)\&. 

The output is scaled with 1 / (1 - p) when deterministic is false\&. In the deterministic mode(during testing), the layer just computes the output\&. The output is computed according to the input layer\&. If no input layer is given, it will take a linear layer as default\&.
.PP
Note: During training you should set deterministic to false and during testing you should set deterministic to true\&.
.PP
For more information, see the following\&.
.PP
.PP
.nf
@inproceedings{WanICML2013,
  title={Regularization of Neural Networks using DropConnect},
  booktitle = {Proceedings of the 30th International Conference on Machine
               Learning(ICML - 13)},
  author = {Li Wan and Matthew Zeiler and Sixin Zhang and Yann L\&. Cun and
            Rob Fergus},
  year = {2013},
  url  = {http://proceedings\&.mlr\&.press/v28/wan13\&.pdf}
}
.fi
.PP
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIInputDataType\fP Type of the input data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.br
\fIOutputDataType\fP Type of the output data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.RE
.PP

.PP
Definition at line 63 of file dropconnect\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBDropConnect\fP ()"

.PP
Create the \fBDropConnect\fP object\&. 
.SS "\fBDropConnect\fP (const size_t inSize, const size_t outSize, const double ratio = \fC0\&.5\fP)"

.PP
Creates the \fBDropConnect\fP Layer as a \fBLinear\fP Object that takes input size, output size and ratio as parameter\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinSize\fP The number of input units\&. 
.br
\fIoutSize\fP The number of output units\&. 
.br
\fIratio\fP The probability of setting a value to zero\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void Backward (const arma::Mat< eT > & input, const arma::Mat< eT > & gy, arma::Mat< eT > & g)"

.PP
Ordinary feed backward pass of the \fBDropConnect\fP layer\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP The propagated input activation\&. 
.br
\fIgy\fP The backpropagated error\&. 
.br
\fIg\fP The calculated gradient\&. 
.RE
.PP

.SS "OutputDataType const& Delta () const\fC [inline]\fP"

.PP
Get the delta\&. 
.PP
Definition at line 128 of file dropconnect\&.hpp\&.
.SS "OutputDataType& Delta ()\fC [inline]\fP"

.PP
Modify the delta\&. 
.PP
Definition at line 130 of file dropconnect\&.hpp\&.
.SS "bool Deterministic () const\fC [inline]\fP"

.PP
The value of the deterministic parameter\&. 
.PP
Definition at line 138 of file dropconnect\&.hpp\&.
.SS "bool& Deterministic ()\fC [inline]\fP"

.PP
Modify the value of the deterministic parameter\&. 
.PP
Definition at line 141 of file dropconnect\&.hpp\&.
.SS "void Forward (const arma::Mat< eT > & input, arma::Mat< eT > & output)"

.PP
Ordinary feed forward pass of the \fBDropConnect\fP layer\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP Input data used for evaluating the specified function\&. 
.br
\fIoutput\fP Resulting output activation\&. 
.RE
.PP

.SS "void Gradient (const arma::Mat< eT > & input, const arma::Mat< eT > & error, arma::Mat< eT > &)"

.PP
Calculate the gradient using the output delta and the input activation\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP The propagated input\&. 
.br
\fIerror\fP The calculated error\&. 
.br
\fI*\fP (gradient) The calculated gradient\&. 
.RE
.PP

.SS "OutputDataType const& Gradient () const\fC [inline]\fP"

.PP
Get the gradient\&. 
.PP
Definition at line 133 of file dropconnect\&.hpp\&.
.SS "OutputDataType& Gradient ()\fC [inline]\fP"

.PP
Modify the gradient\&. 
.PP
Definition at line 135 of file dropconnect\&.hpp\&.
.SS "std::vector<\fBLayerTypes\fP<> >& Model ()\fC [inline]\fP"

.PP
Get the model modules\&. 
.PP
Definition at line 115 of file dropconnect\&.hpp\&.
.SS "OutputDataType const& OutputParameter () const\fC [inline]\fP"

.PP
Get the output parameter\&. 
.PP
Definition at line 123 of file dropconnect\&.hpp\&.
.SS "OutputDataType& OutputParameter ()\fC [inline]\fP"

.PP
Modify the output parameter\&. 
.PP
Definition at line 125 of file dropconnect\&.hpp\&.
.SS "OutputDataType const& Parameters () const\fC [inline]\fP"

.PP
Get the parameters\&. 
.PP
Definition at line 118 of file dropconnect\&.hpp\&.
.SS "OutputDataType& Parameters ()\fC [inline]\fP"

.PP
Modify the parameters\&. 
.PP
Definition at line 120 of file dropconnect\&.hpp\&.
.SS "double Ratio () const\fC [inline]\fP"

.PP
The probability of setting a value to zero\&. 
.PP
Definition at line 144 of file dropconnect\&.hpp\&.
.SS "void Ratio (const double r)\fC [inline]\fP"

.PP
Modify the probability of setting a value to zero\&. 
.PP
Definition at line 147 of file dropconnect\&.hpp\&.
.SS "void serialize (Archive & ar, const uint32_t)"

.PP
Serialize the layer\&. 
.PP
Referenced by DropConnect< InputDataType, OutputDataType >::WeightSize()\&.
.SS "size_t WeightSize () const\fC [inline]\fP"

.PP
Return the size of the weight matrix\&. 
.PP
Definition at line 154 of file dropconnect\&.hpp\&.
.PP
References DropConnect< InputDataType, OutputDataType >::serialize()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
