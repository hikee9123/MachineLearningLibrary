.TH "TrainingConfig" 3 "Sun Aug 22 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TrainingConfig
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTrainingConfig\fP ()"
.br
.ti -1c
.RI "\fBTrainingConfig\fP (size_t numWorkers, size_t updateInterval, size_t targetNetworkSyncInterval, size_t stepLimit, size_t explorationSteps, double stepSize, double discount, double gradientLimit, bool doubleQLearning, bool noisyQLearning, bool isCategorical, size_t atomSize, double vMin, double vMax, double rho)"
.br
.ti -1c
.RI "size_t \fBAtomSize\fP () const"
.br
.RI "Get the number of atoms\&. "
.ti -1c
.RI "size_t & \fBAtomSize\fP ()"
.br
.RI "Modify the number of atoms\&. "
.ti -1c
.RI "double \fBDiscount\fP () const"
.br
.RI "Get the discount rate for future reward\&. "
.ti -1c
.RI "double & \fBDiscount\fP ()"
.br
.RI "Modify the discount rate for future reward\&. "
.ti -1c
.RI "bool \fBDoubleQLearning\fP () const"
.br
.RI "Get the indicator of double q-learning\&. "
.ti -1c
.RI "bool & \fBDoubleQLearning\fP ()"
.br
.RI "Modify the indicator of double q-learning\&. "
.ti -1c
.RI "size_t \fBExplorationSteps\fP () const"
.br
.RI "Get the exploration steps\&. "
.ti -1c
.RI "size_t & \fBExplorationSteps\fP ()"
.br
.RI "Modify the exploration steps\&. "
.ti -1c
.RI "double \fBGradientLimit\fP () const"
.br
.RI "Get the limit of update gradient\&. "
.ti -1c
.RI "double & \fBGradientLimit\fP ()"
.br
.RI "Modify the limit of update gradient\&. "
.ti -1c
.RI "bool \fBIsCategorical\fP () const"
.br
.RI "Get the indicator of categorical q-learning\&. "
.ti -1c
.RI "bool & \fBIsCategorical\fP ()"
.br
.RI "Modify the indicator of categorical q-learning\&. "
.ti -1c
.RI "bool \fBNoisyQLearning\fP () const"
.br
.RI "Get the indicator of noisy q-learning\&. "
.ti -1c
.RI "bool & \fBNoisyQLearning\fP ()"
.br
.RI "Modify the indicator of double q-learning\&. "
.ti -1c
.RI "size_t \fBNumWorkers\fP () const"
.br
.RI "Get the amount of workers\&. "
.ti -1c
.RI "size_t & \fBNumWorkers\fP ()"
.br
.RI "Modify the amount of workers\&. "
.ti -1c
.RI "double \fBRho\fP () const"
.br
.RI "Get the rho value for sac\&. "
.ti -1c
.RI "double & \fBRho\fP ()"
.br
.RI "Modify the rho value for sac\&. "
.ti -1c
.RI "size_t \fBStepLimit\fP () const"
.br
.RI "Get the maximum steps of each episode\&. "
.ti -1c
.RI "size_t & \fBStepLimit\fP ()"
.br
.RI "Modify the maximum steps of each episode\&. "
.ti -1c
.RI "double \fBStepSize\fP () const"
.br
.RI "Get the step size of the optimizer\&. "
.ti -1c
.RI "double & \fBStepSize\fP ()"
.br
.RI "Modify the step size of the optimizer\&. "
.ti -1c
.RI "size_t \fBTargetNetworkSyncInterval\fP () const"
.br
.RI "Get the interval for syncing target network\&. "
.ti -1c
.RI "size_t & \fBTargetNetworkSyncInterval\fP ()"
.br
.RI "Modify the interval for syncing target network\&. "
.ti -1c
.RI "size_t \fBUpdateInterval\fP () const"
.br
.RI "Get the update interval\&. "
.ti -1c
.RI "size_t & \fBUpdateInterval\fP ()"
.br
.RI "Modify the update interval\&. "
.ti -1c
.RI "double \fBVMax\fP () const"
.br
.RI "Get the maximum value for support\&. "
.ti -1c
.RI "double & \fBVMax\fP ()"
.br
.RI "Modify the maximum value for support\&. "
.ti -1c
.RI "double \fBVMin\fP () const"
.br
.RI "Get the minimum value for support\&. "
.ti -1c
.RI "double & \fBVMin\fP ()"
.br
.RI "Modify the minimum value for support\&. "
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 19 of file training_config\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBTrainingConfig\fP ()\fC [inline]\fP"

.PP
Definition at line 22 of file training_config\&.hpp\&.
.SS "\fBTrainingConfig\fP (size_t numWorkers, size_t updateInterval, size_t targetNetworkSyncInterval, size_t stepLimit, size_t explorationSteps, double stepSize, double discount, double gradientLimit, bool doubleQLearning, bool noisyQLearning, bool isCategorical, size_t atomSize, double vMin, double vMax, double rho)\fC [inline]\fP"

.PP
Definition at line 40 of file training_config\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "size_t AtomSize () const\fC [inline]\fP"

.PP
Get the number of atoms\&. 
.PP
Definition at line 133 of file training_config\&.hpp\&.
.SS "size_t& AtomSize ()\fC [inline]\fP"

.PP
Modify the number of atoms\&. 
.PP
Definition at line 135 of file training_config\&.hpp\&.
.SS "double Discount () const\fC [inline]\fP"

.PP
Get the discount rate for future reward\&. 
.PP
Definition at line 108 of file training_config\&.hpp\&.
.PP
Referenced by NStepQLearningWorker< EnvironmentType, NetworkType, UpdaterType, PolicyType >::Step(), OneStepQLearningWorker< EnvironmentType, NetworkType, UpdaterType, PolicyType >::Step(), and OneStepSarsaWorker< EnvironmentType, NetworkType, UpdaterType, PolicyType >::Step()\&.
.SS "double& Discount ()\fC [inline]\fP"

.PP
Modify the discount rate for future reward\&. 
.PP
Definition at line 110 of file training_config\&.hpp\&.
.SS "bool DoubleQLearning () const\fC [inline]\fP"

.PP
Get the indicator of double q-learning\&. 
.PP
Definition at line 118 of file training_config\&.hpp\&.
.SS "bool& DoubleQLearning ()\fC [inline]\fP"

.PP
Modify the indicator of double q-learning\&. 
.PP
Definition at line 120 of file training_config\&.hpp\&.
.SS "size_t ExplorationSteps () const\fC [inline]\fP"

.PP
Get the exploration steps\&. 
.PP
Definition at line 98 of file training_config\&.hpp\&.
.SS "size_t& ExplorationSteps ()\fC [inline]\fP"

.PP
Modify the exploration steps\&. 
.PP
Definition at line 100 of file training_config\&.hpp\&.
.SS "double GradientLimit () const\fC [inline]\fP"

.PP
Get the limit of update gradient\&. 
.PP
Definition at line 113 of file training_config\&.hpp\&.
.PP
Referenced by NStepQLearningWorker< EnvironmentType, NetworkType, UpdaterType, PolicyType >::Step(), OneStepQLearningWorker< EnvironmentType, NetworkType, UpdaterType, PolicyType >::Step(), and OneStepSarsaWorker< EnvironmentType, NetworkType, UpdaterType, PolicyType >::Step()\&.
.SS "double& GradientLimit ()\fC [inline]\fP"

.PP
Modify the limit of update gradient\&. 
.PP
Definition at line 115 of file training_config\&.hpp\&.
.SS "bool IsCategorical () const\fC [inline]\fP"

.PP
Get the indicator of categorical q-learning\&. 
.PP
Definition at line 128 of file training_config\&.hpp\&.
.SS "bool& IsCategorical ()\fC [inline]\fP"

.PP
Modify the indicator of categorical q-learning\&. 
.PP
Definition at line 130 of file training_config\&.hpp\&.
.SS "bool NoisyQLearning () const\fC [inline]\fP"

.PP
Get the indicator of noisy q-learning\&. 
.PP
Definition at line 123 of file training_config\&.hpp\&.
.SS "bool& NoisyQLearning ()\fC [inline]\fP"

.PP
Modify the indicator of double q-learning\&. 
.PP
Definition at line 125 of file training_config\&.hpp\&.
.SS "size_t NumWorkers () const\fC [inline]\fP"

.PP
Get the amount of workers\&. 
.PP
Definition at line 74 of file training_config\&.hpp\&.
.SS "size_t& NumWorkers ()\fC [inline]\fP"

.PP
Modify the amount of workers\&. 
.PP
Definition at line 76 of file training_config\&.hpp\&.
.SS "double Rho () const\fC [inline]\fP"

.PP
Get the rho value for sac\&. 
.PP
Definition at line 148 of file training_config\&.hpp\&.
.SS "double& Rho ()\fC [inline]\fP"

.PP
Modify the rho value for sac\&. 
.PP
Definition at line 150 of file training_config\&.hpp\&.
.SS "size_t StepLimit () const\fC [inline]\fP"

.PP
Get the maximum steps of each episode\&. 
.PP
Definition at line 90 of file training_config\&.hpp\&.
.PP
Referenced by NStepQLearningWorker< EnvironmentType, NetworkType, UpdaterType, PolicyType >::Step(), OneStepQLearningWorker< EnvironmentType, NetworkType, UpdaterType, PolicyType >::Step(), and OneStepSarsaWorker< EnvironmentType, NetworkType, UpdaterType, PolicyType >::Step()\&.
.SS "size_t& StepLimit ()\fC [inline]\fP"

.PP
Modify the maximum steps of each episode\&. Setting it to 0 means no limit\&. 
.PP
Definition at line 95 of file training_config\&.hpp\&.
.SS "double StepSize () const\fC [inline]\fP"

.PP
Get the step size of the optimizer\&. 
.PP
Definition at line 103 of file training_config\&.hpp\&.
.PP
Referenced by NStepQLearningWorker< EnvironmentType, NetworkType, UpdaterType, PolicyType >::Step(), OneStepQLearningWorker< EnvironmentType, NetworkType, UpdaterType, PolicyType >::Step(), and OneStepSarsaWorker< EnvironmentType, NetworkType, UpdaterType, PolicyType >::Step()\&.
.SS "double& StepSize ()\fC [inline]\fP"

.PP
Modify the step size of the optimizer\&. 
.PP
Definition at line 105 of file training_config\&.hpp\&.
.SS "size_t TargetNetworkSyncInterval () const\fC [inline]\fP"

.PP
Get the interval for syncing target network\&. 
.PP
Definition at line 84 of file training_config\&.hpp\&.
.PP
Referenced by NStepQLearningWorker< EnvironmentType, NetworkType, UpdaterType, PolicyType >::Step(), OneStepQLearningWorker< EnvironmentType, NetworkType, UpdaterType, PolicyType >::Step(), and OneStepSarsaWorker< EnvironmentType, NetworkType, UpdaterType, PolicyType >::Step()\&.
.SS "size_t& TargetNetworkSyncInterval ()\fC [inline]\fP"

.PP
Modify the interval for syncing target network\&. 
.PP
Definition at line 87 of file training_config\&.hpp\&.
.SS "size_t UpdateInterval () const\fC [inline]\fP"

.PP
Get the update interval\&. 
.PP
Definition at line 79 of file training_config\&.hpp\&.
.PP
Referenced by NStepQLearningWorker< EnvironmentType, NetworkType, UpdaterType, PolicyType >::Step(), OneStepQLearningWorker< EnvironmentType, NetworkType, UpdaterType, PolicyType >::Step(), and OneStepSarsaWorker< EnvironmentType, NetworkType, UpdaterType, PolicyType >::Step()\&.
.SS "size_t& UpdateInterval ()\fC [inline]\fP"

.PP
Modify the update interval\&. 
.PP
Definition at line 81 of file training_config\&.hpp\&.
.SS "double VMax () const\fC [inline]\fP"

.PP
Get the maximum value for support\&. 
.PP
Definition at line 143 of file training_config\&.hpp\&.
.SS "double& VMax ()\fC [inline]\fP"

.PP
Modify the maximum value for support\&. 
.PP
Definition at line 145 of file training_config\&.hpp\&.
.SS "double VMin () const\fC [inline]\fP"

.PP
Get the minimum value for support\&. 
.PP
Definition at line 138 of file training_config\&.hpp\&.
.SS "double& VMin ()\fC [inline]\fP"

.PP
Modify the minimum value for support\&. 
.PP
Definition at line 140 of file training_config\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
