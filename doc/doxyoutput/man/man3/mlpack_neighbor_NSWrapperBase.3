.TH "NSWrapperBase" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NSWrapperBase \- \fBNSWrapperBase\fP is a base wrapper class for holding all \fBNeighborSearch\fP types supported by \fBNSModel\fP\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBNSWrapper< SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType >\fP, and \fBNSWrapper< SortPolicy, tree::SPTree, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistDualTreeTraverser, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistSingleTreeTraverser >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBNSWrapperBase\fP ()"
.br
.RI "Create the \fBNSWrapperBase\fP object\&. "
.ti -1c
.RI "virtual \fB~NSWrapperBase\fP ()"
.br
.RI "Destruct the \fBNSWrapperBase\fP (nothing to do)\&. "
.ti -1c
.RI "virtual \fBNSWrapperBase\fP * \fBClone\fP () const =0"
.br
.RI "Create a new \fBNSWrapperBase\fP that is the same as this one\&. "
.ti -1c
.RI "virtual const arma::mat & \fBDataset\fP () const =0"
.br
.RI "Return a reference to the dataset\&. "
.ti -1c
.RI "virtual double \fBEpsilon\fP () const =0"
.br
.RI "Get the approximation parameter epsilon\&. "
.ti -1c
.RI "virtual double & \fBEpsilon\fP ()=0"
.br
.RI "Modify the approximation parameter epsilon\&. "
.ti -1c
.RI "virtual void \fBSearch\fP (arma::mat &&querySet, const size_t k, arma::Mat< size_t > &neighbors, arma::mat &distances, const size_t leafSize, const double rho)=0"
.br
.RI "Perform bichromatic neighbor search (i\&.e\&. "
.ti -1c
.RI "virtual void \fBSearch\fP (const size_t k, arma::Mat< size_t > &neighbors, arma::mat &distances)=0"
.br
.RI "Perform monochromatic neighbor search (i\&.e\&. "
.ti -1c
.RI "virtual \fBNeighborSearchMode\fP \fBSearchMode\fP () const =0"
.br
.RI "Get the search mode\&. "
.ti -1c
.RI "virtual \fBNeighborSearchMode\fP & \fBSearchMode\fP ()=0"
.br
.RI "Modify the search modem\&. "
.ti -1c
.RI "virtual void \fBTrain\fP (arma::mat &&referenceSet, const size_t leafSize, const double tau, const double rho)=0"
.br
.RI "Train the \fBNeighborSearch\fP model with the given parameters\&. "
.in -1c
.SH "Detailed Description"
.PP 
\fBNSWrapperBase\fP is a base wrapper class for holding all \fBNeighborSearch\fP types supported by \fBNSModel\fP\&. 

All \fBNeighborSearch\fP type wrappers inherit from this class, allowing a simple interface via inheritance for all the different types we want to support\&. 
.PP
Definition at line 35 of file ns_model\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBNSWrapperBase\fP ()\fC [inline]\fP"

.PP
Create the \fBNSWrapperBase\fP object\&. The base class does not hold anything, so this constructor does not do anything\&. 
.PP
Definition at line 40 of file ns_model\&.hpp\&.
.PP
References NSWrapperBase::Clone()\&.
.SS "virtual ~\fBNSWrapperBase\fP ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
Destruct the \fBNSWrapperBase\fP (nothing to do)\&. 
.PP
Definition at line 47 of file ns_model\&.hpp\&.
.PP
References NSWrapperBase::Dataset(), NSWrapperBase::Epsilon(), NSWrapperBase::Search(), NSWrapperBase::SearchMode(), and NSWrapperBase::Train()\&.
.SH "Member Function Documentation"
.PP 
.SS "virtual \fBNSWrapperBase\fP* Clone () const\fC [pure virtual]\fP"

.PP
Create a new \fBNSWrapperBase\fP that is the same as this one\&. This function will properly handle polymorphism\&. 
.PP
Implemented in \fBSpillNSWrapper< SortPolicy >\fP, \fBLeafSizeNSWrapper< SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType >\fP, \fBNSWrapper< SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType >\fP, and \fBNSWrapper< SortPolicy, tree::SPTree, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistDualTreeTraverser, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistSingleTreeTraverser >\fP\&.
.PP
Referenced by NSWrapperBase::NSWrapperBase()\&.
.SS "virtual const arma::mat& Dataset () const\fC [pure virtual]\fP"

.PP
Return a reference to the dataset\&. 
.PP
Implemented in \fBNSWrapper< SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType >\fP, and \fBNSWrapper< SortPolicy, tree::SPTree, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistDualTreeTraverser, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistSingleTreeTraverser >\fP\&.
.PP
Referenced by NSWrapperBase::~NSWrapperBase()\&.
.SS "virtual double Epsilon () const\fC [pure virtual]\fP"

.PP
Get the approximation parameter epsilon\&. 
.PP
Implemented in \fBNSWrapper< SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType >\fP, and \fBNSWrapper< SortPolicy, tree::SPTree, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistDualTreeTraverser, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistSingleTreeTraverser >\fP\&.
.PP
Referenced by NSModel< SortPolicy >::Rho(), and NSWrapperBase::~NSWrapperBase()\&.
.SS "virtual double& Epsilon ()\fC [pure virtual]\fP"

.PP
Modify the approximation parameter epsilon\&. 
.PP
Implemented in \fBNSWrapper< SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType >\fP, and \fBNSWrapper< SortPolicy, tree::SPTree, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistDualTreeTraverser, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistSingleTreeTraverser >\fP\&.
.SS "virtual void Search (arma::mat && querySet, const size_t k, arma::Mat< size_t > & neighbors, arma::mat & distances, const size_t leafSize, const double rho)\fC [pure virtual]\fP"

.PP
Perform bichromatic neighbor search (i\&.e\&. search with a separate query set)\&. 
.PP
Implemented in \fBSpillNSWrapper< SortPolicy >\fP, \fBLeafSizeNSWrapper< SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType >\fP, \fBNSWrapper< SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType >\fP, and \fBNSWrapper< SortPolicy, tree::SPTree, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistDualTreeTraverser, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistSingleTreeTraverser >\fP\&.
.PP
Referenced by LeafSizeNSWrapper< SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType >::Clone(), SpillNSWrapper< SortPolicy >::Clone(), NSWrapper< SortPolicy, tree::SPTree, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistDualTreeTraverser, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistSingleTreeTraverser >::Epsilon(), NSModel< SortPolicy >::RandomBasis(), and NSWrapperBase::~NSWrapperBase()\&.
.SS "virtual void Search (const size_t k, arma::Mat< size_t > & neighbors, arma::mat & distances)\fC [pure virtual]\fP"

.PP
Perform monochromatic neighbor search (i\&.e\&. use the reference set as the query set)\&. 
.PP
Implemented in \fBNSWrapper< SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType >\fP, and \fBNSWrapper< SortPolicy, tree::SPTree, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistDualTreeTraverser, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistSingleTreeTraverser >\fP\&.
.SS "virtual \fBNeighborSearchMode\fP SearchMode () const\fC [pure virtual]\fP"

.PP
Get the search mode\&. 
.PP
Implemented in \fBNSWrapper< SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType >\fP, and \fBNSWrapper< SortPolicy, tree::SPTree, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistDualTreeTraverser, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistSingleTreeTraverser >\fP\&.
.PP
Referenced by NSWrapperBase::~NSWrapperBase()\&.
.SS "virtual \fBNeighborSearchMode\fP& SearchMode ()\fC [pure virtual]\fP"

.PP
Modify the search modem\&. 
.PP
Implemented in \fBNSWrapper< SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType >\fP, and \fBNSWrapper< SortPolicy, tree::SPTree, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistDualTreeTraverser, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistSingleTreeTraverser >\fP\&.
.SS "virtual void Train (arma::mat && referenceSet, const size_t leafSize, const double tau, const double rho)\fC [pure virtual]\fP"

.PP
Train the \fBNeighborSearch\fP model with the given parameters\&. 
.PP
Implemented in \fBSpillNSWrapper< SortPolicy >\fP, \fBLeafSizeNSWrapper< SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType >\fP, \fBNSWrapper< SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType >\fP, and \fBNSWrapper< SortPolicy, tree::SPTree, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistDualTreeTraverser, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistSingleTreeTraverser >\fP\&.
.PP
Referenced by LeafSizeNSWrapper< SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType >::Clone(), SpillNSWrapper< SortPolicy >::Clone(), NSWrapper< SortPolicy, tree::SPTree, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistDualTreeTraverser, tree::SPTree< metric::EuclideanDistance, NeighborSearchStat< SortPolicy >, arma::mat >::template DefeatistSingleTreeTraverser >::Epsilon(), and NSWrapperBase::~NSWrapperBase()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
