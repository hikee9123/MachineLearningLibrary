.TH "mlpack::hmm" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlpack::hmm \- Hidden Markov Models\&.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBHMM\fP"
.br
.RI "A class that represents a Hidden Markov Model with an arbitrary type of emission distribution\&. "
.ti -1c
.RI "class \fBHMMModel\fP"
.br
.RI "A serializable \fBHMM\fP model that also stores the type\&. "
.ti -1c
.RI "class \fBHMMRegression\fP"
.br
.RI "A class that represents a Hidden Markov Model Regression (HMMR)\&. "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBHMMType\fP : char { \fBDiscreteHMM\fP = 0, \fBGaussianHMM\fP, \fBGaussianMixtureModelHMM\fP, \fBDiagonalGaussianMixtureModelHMM\fP, \fBDiscreteHMM\fP = 0, \fBGaussianHMM\fP, \fBGaussianMixtureModelHMM\fP, \fBDiagonalGaussianMixtureModelHMM\fP }"
.br
.ti -1c
.RI "enum \fBHMMType\fP : char { \fBDiscreteHMM\fP = 0, \fBGaussianHMM\fP, \fBGaussianMixtureModelHMM\fP, \fBDiagonalGaussianMixtureModelHMM\fP, \fBDiscreteHMM\fP = 0, \fBGaussianHMM\fP, \fBGaussianMixtureModelHMM\fP, \fBDiagonalGaussianMixtureModelHMM\fP }
.RI "HMMType, to be stored on disk\&. ""
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename ActionType , typename ExtraInfoType  = void> void \fBLoadHMMAndPerformAction\fP (const std::string &modelFile, ExtraInfoType *x=NULL)"
.br
.RI "ActionType should implement static void Apply(HMMType&)\&. "
.ti -1c
.RI "template<typename HMMType > void \fBSaveHMM\fP (\fBHMMType\fP &hmm, const std::string &modelFile)"
.br
.RI "Save an \fBHMM\fP to a file\&. "
.in -1c
.SH "Detailed Description"
.PP 
Hidden Markov Models\&. 


.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBHMMType\fP : char"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIDiscreteHMM \fP\fP
.TP
\fB\fIGaussianHMM \fP\fP
.TP
\fB\fIGaussianMixtureModelHMM \fP\fP
.TP
\fB\fIDiagonalGaussianMixtureModelHMM \fP\fP
.TP
\fB\fIDiscreteHMM \fP\fP
.TP
\fB\fIGaussianHMM \fP\fP
.TP
\fB\fIGaussianMixtureModelHMM \fP\fP
.TP
\fB\fIDiagonalGaussianMixtureModelHMM \fP\fP
.PP
Definition at line 22 of file hmm_model\&.hpp\&.
.SS "enum \fBHMMType\fP : char"

.PP
HMMType, to be stored on disk\&. This is of type char, which is one byte\&. (I'm not sure what will happen on systems where one byte is not eight bits\&.) 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIDiscreteHMM \fP\fP
.TP
\fB\fIGaussianHMM \fP\fP
.TP
\fB\fIGaussianMixtureModelHMM \fP\fP
.TP
\fB\fIDiagonalGaussianMixtureModelHMM \fP\fP
.TP
\fB\fIDiscreteHMM \fP\fP
.TP
\fB\fIGaussianHMM \fP\fP
.TP
\fB\fIGaussianMixtureModelHMM \fP\fP
.TP
\fB\fIDiagonalGaussianMixtureModelHMM \fP\fP
.PP
Definition at line 22 of file hmm_util\&.hpp\&.
.SH "Function Documentation"
.PP 
.SS "void mlpack::hmm::LoadHMMAndPerformAction (const std::string & modelFile, ExtraInfoType * x = \fCNULL\fP)"

.PP
ActionType should implement static void Apply(HMMType&)\&. 
.SS "void mlpack::hmm::SaveHMM (\fBHMMType\fP & hmm, const std::string & modelFile)"

.PP
Save an \fBHMM\fP to a file\&. The file must also encode what type of \fBHMM\fP is being stored\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
