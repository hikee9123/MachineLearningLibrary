.TH "/home/aakash/mlpack/src/mlpack/methods/amf/amf.hpp" 3 "Sun Aug 22 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/aakash/mlpack/src/mlpack/methods/amf/amf.hpp
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBAMF< TerminationPolicyType, InitializationRuleType, UpdateRuleType >\fP"
.br
.RI "This class implements \fBAMF\fP (alternating matrix factorization) on the given matrix V\&. "
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBmlpack\fP"
.br
.RI "Linear algebra utility functions, generally performed on matrices or vectors\&. "
.ti -1c
.RI " \fBmlpack::amf\fP"
.br
.RI "Alternating Matrix Factorization\&. "
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef amf::AMF< amf::SimpleResidueTermination, amf::RandomAcolInitialization<>, amf::NMFALSUpdate > \fBNMFALSFactorizer\fP"
.br
.ti -1c
.RI "template<typename MatType  = arma::mat> using \fBSVDBatchFactorizer\fP = amf::AMF< amf::SimpleResidueTermination, amf::RandomAcolInitialization<>, amf::SVDBatchLearning >"
.br
.RI "Convenience typedefs\&. "
.ti -1c
.RI "template<class MatType  = arma::mat> using \fBSVDCompleteIncrementalFactorizer\fP = amf::AMF< amf::SimpleResidueTermination, amf::RandomAcolInitialization<>, amf::SVDCompleteIncrementalLearning< MatType > >"
.br
.RI "SVDCompleteIncrementalFactorizer factorizes given matrix V into two matrices W and H by complete incremental gradient descent\&. "
.ti -1c
.RI "template<class MatType  = arma::mat> using \fBSVDIncompleteIncrementalFactorizer\fP = amf::AMF< amf::SimpleResidueTermination, amf::RandomAcolInitialization<>, amf::SVDIncompleteIncrementalLearning >"
.br
.RI "SVDIncompleteIncrementalFactorizer factorizes given matrix V into two matrices W and H by incomplete incremental gradient descent\&. "
.in -1c
.SH "Detailed Description"
.PP 

.PP
\fBAuthor:\fP
.RS 4
Sumedh Ghaisas 
.PP
Mohan Rajendran 
.PP
Ryan Curtin
.RE
.PP
Alternating Matrix Factorization
.PP
The AMF (alternating matrix factorization) class, from which more commonly known techniques such as incremental SVD, NMF, and batch-learning SVD can be derived\&.
.PP
mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license\&. You should have received a copy of the 3-clause BSD license along with mlpack\&. If not, see http://www.opensource.org/licenses/BSD-3-Clause for more information\&. 
.PP
Definition in file \fBamf\&.hpp\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
