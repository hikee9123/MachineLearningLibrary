.TH "OrthogonalRegularizer" 3 "Sun Aug 22 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
OrthogonalRegularizer \- Implementation of the \fBOrthogonalRegularizer\fP\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBOrthogonalRegularizer\fP (double \fBfactor\fP=1\&.0)"
.br
.RI "Create the regularizer object\&. "
.ti -1c
.RI "template<typename MatType > void \fBEvaluate\fP (const MatType &weight, MatType &gradient)"
.br
.RI "Calculate the gradient for regularization\&. "
.ti -1c
.RI "template<typename Archive > void \fBserialize\fP (Archive &ar, const uint32_t)"
.br
.RI "Serialize the regularizer (nothing to do)\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "double \fBfactor\fP"
.br
.RI "The constant for the regularization\&. "
.in -1c
.SH "Detailed Description"
.PP 
Implementation of the \fBOrthogonalRegularizer\fP\&. 

Orthogonality of weights is a desirable property because multiplication by an orthogonal matrix leaves the norm of the matrix unchanged\&. The orthogonal regularization technique encourages weights to be orthogonal\&.
.PP
For more information, see the following\&.
.PP
.PP
.nf
@inproceedings{WanICML2013,
  title={Neural Photo Editing with Introspective Adversarial Networks},
  booktitle = {5th International Conference on Learning Representations
               (ICLR - 17)},
  author = {Andrew Brock and Theodore Lim and J\&.M\&. Ritchie and Nick Weston},
  year = {2017}
}
.fi
.PP
 
.PP
Definition at line 38 of file orthogonal_regularizer\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBOrthogonalRegularizer\fP (double factor = \fC1\&.0\fP)"

.PP
Create the regularizer object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfactor\fP The factor for regularization\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void Evaluate (const MatType & weight, MatType & gradient)"

.PP
Calculate the gradient for regularization\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIMatType\fP Type of weight matrix\&. 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIweight\fP The weight matrix to be regularized\&. 
.br
\fIgradient\fP The calculated gradient\&. 
.RE
.PP

.SS "void serialize (Archive & ar, const uint32_t)"

.PP
Serialize the regularizer (nothing to do)\&. 
.SH "Member Data Documentation"
.PP 
.SS "double factor"

.PP
The constant for the regularization\&. 
.PP
Definition at line 63 of file orthogonal_regularizer\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
