.TH "ConcatPerformance< OutputLayerType, InputDataType, OutputDataType >" 3 "Sun Aug 22 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ConcatPerformance< OutputLayerType, InputDataType, OutputDataType > \- Implementation of the concat performance class\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBConcatPerformance\fP (const size_t inSize=0, OutputLayerType &&outputLayer=OutputLayerType())"
.br
.RI "Create the \fBConcatPerformance\fP object\&. "
.ti -1c
.RI "template<typename eT > void \fBBackward\fP (const arma::Mat< eT > &input, const arma::Mat< eT > &target, arma::Mat< eT > &output)"
.br
.RI "Ordinary feed backward pass of a neural network\&. "
.ti -1c
.RI "OutputDataType & \fBDelta\fP () const"
.br
.RI "Get the delta\&. "
.ti -1c
.RI "OutputDataType & \fBDelta\fP ()"
.br
.RI "Modify the delta\&. "
.ti -1c
.RI "template<typename eT > double \fBForward\fP (const arma::Mat< eT > &input, arma::Mat< eT > &target)"
.br
.ti -1c
.RI "size_t \fBInSize\fP () const"
.br
.RI "Get the number of inputs\&. "
.ti -1c
.RI "OutputDataType & \fBOutputParameter\fP () const"
.br
.RI "Get the output parameter\&. "
.ti -1c
.RI "OutputDataType & \fBOutputParameter\fP ()"
.br
.RI "Modify the output parameter\&. "
.ti -1c
.RI "template<typename Archive > void \fBserialize\fP (Archive &, const uint32_t)"
.br
.RI "Serialize the layer\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename OutputLayerType = NegativeLogLikelihood<>, typename InputDataType = arma::mat, typename OutputDataType = arma::mat>
.br
class mlpack::ann::ConcatPerformance< OutputLayerType, InputDataType, OutputDataType >"
Implementation of the concat performance class\&. 

The class works as a feed-forward fully connected network container which plugs performance layers together\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIInputDataType\fP Type of the input data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.br
\fIOutputDataType\fP Type of the output data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.RE
.PP

.PP
Definition at line 37 of file concat_performance\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBConcatPerformance\fP (const size_t inSize = \fC0\fP, OutputLayerType && outputLayer = \fCOutputLayerType()\fP)"

.PP
Create the \fBConcatPerformance\fP object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinSize\fP The number of inputs\&. 
.br
\fIoutputLayer\fP Output layer used to evaluate the network\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void Backward (const arma::Mat< eT > & input, const arma::Mat< eT > & target, arma::Mat< eT > & output)"

.PP
Ordinary feed backward pass of a neural network\&. The negative log likelihood layer expectes that the input contains log-probabilities for each class\&. The layer also expects a class index, in the range between 1 and the number of classes, as target when calling the Forward function\&.
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP The propagated input activation\&. 
.br
\fItarget\fP The target vector, that contains the class index in the range between 1 and the number of classes\&. 
.br
\fIoutput\fP The calculated error\&. 
.RE
.PP

.SS "OutputDataType& Delta () const\fC [inline]\fP"

.PP
Get the delta\&. 
.PP
Definition at line 80 of file concat_performance\&.hpp\&.
.SS "OutputDataType& Delta ()\fC [inline]\fP"

.PP
Modify the delta\&. 
.PP
Definition at line 82 of file concat_performance\&.hpp\&.
.SS "double Forward (const arma::Mat< eT > & input, arma::Mat< eT > & target)"

.SS "size_t InSize () const\fC [inline]\fP"

.PP
Get the number of inputs\&. 
.PP
Definition at line 85 of file concat_performance\&.hpp\&.
.PP
References ConcatPerformance< OutputLayerType, InputDataType, OutputDataType >::serialize()\&.
.SS "OutputDataType& OutputParameter () const\fC [inline]\fP"

.PP
Get the output parameter\&. 
.PP
Definition at line 75 of file concat_performance\&.hpp\&.
.SS "OutputDataType& OutputParameter ()\fC [inline]\fP"

.PP
Modify the output parameter\&. 
.PP
Definition at line 77 of file concat_performance\&.hpp\&.
.SS "void serialize (Archive &, const uint32_t)"

.PP
Serialize the layer\&. 
.PP
Referenced by ConcatPerformance< OutputLayerType, InputDataType, OutputDataType >::InSize()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
