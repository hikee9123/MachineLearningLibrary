.TH "CopyTask" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CopyTask \- Generator of instances of the binary sequence copy task\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCopyTask\fP (const size_t maxLength, const size_t nRepeats, const bool addSeparator=false)"
.br
.RI "Creates an instance of the sequence copy task\&. "
.ti -1c
.RI "void \fBGenerate\fP (arma::field< arma::mat > &input, arma::field< arma::mat > &labels, const size_t batchSize, bool fixedLength=false) const"
.br
.RI "Generate dataset of a given size\&. "
.ti -1c
.RI "void \fBGenerate\fP (arma::mat &input, arma::mat &labels, const size_t batchSize) const"
.br
.RI "Generate dataset of a given size and store it in arma::mat object\&. "
.in -1c
.SH "Detailed Description"
.PP 
Generator of instances of the binary sequence copy task\&. 

The parameters are:
.IP "\(bu" 2
maximum sequence length;
.IP "\(bu" 2
number of sequence repetitions\&.
.PP
.PP
Input/output sequences are aligned to have the same length: input sequence is padded with zeros from the right end, output sequence is padded with zeros from the left end\&. The sequences are formed of 2-dimensional vectors of the format [sequence element, input flag], where input flag = 0 iff first vector element is a sequence element\&.
.PP
Generated datasets are compliant with mlpack format - every dataset element is shaped as a vector of length (elem-length) * (input sequence length + target sequence length), where elem-lemgth is 2 for input sequences and 1 for output sequences\&.
.PP
Example of generated dataset (sequence length = 3, repetition count = 2):
.IP "\(bu" 2
Input sequence: [1,0,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,1]
.IP "\(bu" 2
Output sequences: [0,0,0,1,0,1,1,0,1] 
.PP

.PP
Definition at line 48 of file copy\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBCopyTask\fP (const size_t maxLength, const size_t nRepeats, const bool addSeparator = \fCfalse\fP)"

.PP
Creates an instance of the sequence copy task\&. 
.PP
\fBParameters:\fP
.RS 4
\fImaxLength\fP Maximum length of sequence that has to be repeated by model\&. 
.br
\fInRepeats\fP Number of repeates required to solve the task\&. 
.br
\fIaddSeparator\fP Flag indicating whether generator should emit separating symbol after input sequence\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void Generate (arma::field< arma::mat > & input, arma::field< arma::mat > & labels, const size_t batchSize, bool fixedLength = \fCfalse\fP) const"

.PP
Generate dataset of a given size\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP The variable to store input sequences\&. 
.br
\fIlabels\fP The variable to store output sequences\&. 
.br
\fIbatchSize\fP The dataset size\&. 
.br
\fIfixedLength\fP Set to true to denoted fixed length dataset\&. 
.RE
.PP

.SS "void Generate (arma::mat & input, arma::mat & labels, const size_t batchSize) const"

.PP
Generate dataset of a given size and store it in arma::mat object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP The variable to store input sequences\&. 
.br
\fIlabels\fP The variable to store output sequences\&. 
.br
\fIbatchSize\fP The dataset size\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
