.TH "PolynomialKernel" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PolynomialKernel \- The simple polynomial kernel\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPolynomialKernel\fP (const double degree=2\&.0, const double offset=0\&.0)"
.br
.RI "Construct the Polynomial Kernel with the given offset and degree\&. "
.ti -1c
.RI "const double & \fBDegree\fP () const"
.br
.RI "Get the degree of the polynomial\&. "
.ti -1c
.RI "double & \fBDegree\fP ()"
.br
.RI "Modify the degree of the polynomial\&. "
.ti -1c
.RI "template<typename VecTypeA , typename VecTypeB > double \fBEvaluate\fP (const VecTypeA &a, const VecTypeB &b) const"
.br
.RI "Simple evaluation of the dot product\&. "
.ti -1c
.RI "const double & \fBOffset\fP () const"
.br
.RI "Get the offset of the dot product of the arguments\&. "
.ti -1c
.RI "double & \fBOffset\fP ()"
.br
.RI "Modify the offset of the dot product of the arguments\&. "
.ti -1c
.RI "template<typename Archive > void \fBserialize\fP (Archive &ar, const uint32_t)"
.br
.RI "Serialize the kernel\&. "
.in -1c
.SH "Detailed Description"
.PP 
The simple polynomial kernel\&. 

For any two vectors $ x $, $ y $, $ degree $ and $ offset $,
.PP
\[ K(x, y) = (x^T * y + offset) ^ {degree}. \] 
.PP
Definition at line 28 of file polynomial_kernel\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBPolynomialKernel\fP (const double degree = \fC2\&.0\fP, const double offset = \fC0\&.0\fP)\fC [inline]\fP"

.PP
Construct the Polynomial Kernel with the given offset and degree\&. If the arguments are omitted, the default degree is 2 and the default offset is 0\&.
.PP
\fBParameters:\fP
.RS 4
\fIoffset\fP Offset of the dot product of the arguments\&. 
.br
\fIdegree\fP Degree of the polynomial\&. 
.RE
.PP

.PP
Definition at line 38 of file polynomial_kernel\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "const double& Degree () const\fC [inline]\fP"

.PP
Get the degree of the polynomial\&. 
.PP
Definition at line 61 of file polynomial_kernel\&.hpp\&.
.SS "double& Degree ()\fC [inline]\fP"

.PP
Modify the degree of the polynomial\&. 
.PP
Definition at line 63 of file polynomial_kernel\&.hpp\&.
.SS "double Evaluate (const VecTypeA & a, const VecTypeB & b) const\fC [inline]\fP"

.PP
Simple evaluation of the dot product\&. This evaluation uses Armadillo's dot() function\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIVecTypeA\fP Type of first vector (should be arma::vec or arma::sp_vec)\&. 
.br
\fIVecTypeB\fP Type of second vector (arma::vec / arma::sp_vec)\&. 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIa\fP First vector\&. 
.br
\fIb\fP Second vector\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
K(a, b)\&. 
.RE
.PP

.PP
Definition at line 55 of file polynomial_kernel\&.hpp\&.
.SS "const double& Offset () const\fC [inline]\fP"

.PP
Get the offset of the dot product of the arguments\&. 
.PP
Definition at line 66 of file polynomial_kernel\&.hpp\&.
.SS "double& Offset ()\fC [inline]\fP"

.PP
Modify the offset of the dot product of the arguments\&. 
.PP
Definition at line 68 of file polynomial_kernel\&.hpp\&.
.SS "void serialize (Archive & ar, const uint32_t)\fC [inline]\fP"

.PP
Serialize the kernel\&. 
.PP
Definition at line 72 of file polynomial_kernel\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
