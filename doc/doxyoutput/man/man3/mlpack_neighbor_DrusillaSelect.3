.TH "DrusillaSelect< MatType >" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DrusillaSelect< MatType >
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDrusillaSelect\fP (const MatType &referenceSet, const size_t l, const size_t m)"
.br
.RI "Construct the \fBDrusillaSelect\fP object with the given reference set (this is the set that will be searched)\&. "
.ti -1c
.RI "\fBDrusillaSelect\fP (const size_t l, const size_t m)"
.br
.RI "Construct the \fBDrusillaSelect\fP object with no given reference set\&. "
.ti -1c
.RI "const arma::Col< size_t > & \fBCandidateIndices\fP () const"
.br
.RI "Access the indices of points in the candidate set\&. "
.ti -1c
.RI "arma::Col< size_t > & \fBCandidateIndices\fP ()"
.br
.RI "Modify the indices of points in the candidate set\&. Be careful! "
.ti -1c
.RI "const MatType & \fBCandidateSet\fP () const"
.br
.RI "Access the candidate set\&. "
.ti -1c
.RI "MatType & \fBCandidateSet\fP ()"
.br
.RI "Modify the candidate set\&. Be careful! "
.ti -1c
.RI "void \fBSearch\fP (const MatType &querySet, const size_t k, arma::Mat< size_t > &neighbors, arma::mat &distances)"
.br
.RI "Search for the k furthest neighbors of the given query set\&. "
.ti -1c
.RI "template<typename Archive > void \fBserialize\fP (Archive &ar, const uint32_t)"
.br
.RI "Serialize the model\&. "
.ti -1c
.RI "void \fBTrain\fP (const MatType &referenceSet, const size_t l=0, const size_t m=0)"
.br
.RI "Build the set of candidate points on the given reference set\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename MatType = arma::mat>
.br
class mlpack::neighbor::DrusillaSelect< MatType >"

.PP
Definition at line 39 of file drusilla_select\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBDrusillaSelect\fP (const MatType & referenceSet, const size_t l, const size_t m)"

.PP
Construct the \fBDrusillaSelect\fP object with the given reference set (this is the set that will be searched)\&. The resulting set of candidate points that will be searched at query time will have size l*m\&.
.PP
\fBParameters:\fP
.RS 4
\fIreferenceSet\fP Set of reference data\&. 
.br
\fIl\fP Number of projections\&. 
.br
\fIm\fP Number of elements to store for each projection\&. 
.RE
.PP

.SS "\fBDrusillaSelect\fP (const size_t l, const size_t m)"

.PP
Construct the \fBDrusillaSelect\fP object with no given reference set\&. Be sure to call \fBTrain()\fP before calling \fBSearch()\fP!
.PP
\fBParameters:\fP
.RS 4
\fIl\fP Number of projections\&. 
.br
\fIm\fP Number of elements to store for each projection\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "const arma::Col<size_t>& CandidateIndices () const\fC [inline]\fP"

.PP
Access the indices of points in the candidate set\&. 
.PP
Definition at line 108 of file drusilla_select\&.hpp\&.
.SS "arma::Col<size_t>& CandidateIndices ()\fC [inline]\fP"

.PP
Modify the indices of points in the candidate set\&. Be careful! 
.PP
Definition at line 110 of file drusilla_select\&.hpp\&.
.SS "const MatType& CandidateSet () const\fC [inline]\fP"

.PP
Access the candidate set\&. 
.PP
Definition at line 103 of file drusilla_select\&.hpp\&.
.SS "MatType& CandidateSet ()\fC [inline]\fP"

.PP
Modify the candidate set\&. Be careful! 
.PP
Definition at line 105 of file drusilla_select\&.hpp\&.
.SS "void Search (const MatType & querySet, const size_t k, arma::Mat< size_t > & neighbors, arma::mat & distances)"

.PP
Search for the k furthest neighbors of the given query set\&. (The query set can contain just one point: that is okay\&.) The results will be stored in the given neighbors and distances matrices, in the same format as the \fBNeighborSearch\fP and \fBLSHSearch\fP classes\&. That is, each column in the neighbors and distances matrices will refer to a single query point, and the k'th row in that column will refer to the k'th candidate neighbor or distance for that query point\&.
.PP
\fBParameters:\fP
.RS 4
\fIquerySet\fP Set of query points to search\&. 
.br
\fIk\fP Number of furthest neighbors to search for\&. 
.br
\fIneighbors\fP Matrix to store resulting neighbors in\&. 
.br
\fIdistances\fP Matrix to store resulting distances in\&. 
.RE
.PP

.SS "void serialize (Archive & ar, const uint32_t)"

.PP
Serialize the model\&. 
.SS "void Train (const MatType & referenceSet, const size_t l = \fC0\fP, const size_t m = \fC0\fP)"

.PP
Build the set of candidate points on the given reference set\&. If l and m are left unspecified, then the values set in the constructor will be used instead\&.
.PP
\fBParameters:\fP
.RS 4
\fIreferenceSet\fP Set to extract candidate points from\&. 
.br
\fIl\fP Number of projections\&. 
.br
\fIm\fP Number of elements to store for each projection\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
