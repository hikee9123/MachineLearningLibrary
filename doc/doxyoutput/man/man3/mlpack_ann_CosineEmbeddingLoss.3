.TH "CosineEmbeddingLoss< InputDataType, OutputDataType >" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CosineEmbeddingLoss< InputDataType, OutputDataType > \- Cosine Embedding Loss function is used for measuring whether two inputs are similar or dissimilar, using the cosine distance, and is typically used for learning nonlinear embeddings or semi-supervised learning\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCosineEmbeddingLoss\fP (const double margin=0\&.0, const bool similarity=true, const bool takeMean=false)"
.br
.RI "Create the \fBCosineEmbeddingLoss\fP object\&. "
.ti -1c
.RI "template<typename PredictionType , typename TargetType , typename LossType > void \fBBackward\fP (const PredictionType &prediction, const TargetType &target, LossType &loss)"
.br
.RI "Ordinary feed backward pass of a neural network\&. "
.ti -1c
.RI "OutputDataType & \fBDelta\fP () const"
.br
.RI "Get the delta\&. "
.ti -1c
.RI "OutputDataType & \fBDelta\fP ()"
.br
.RI "Modify the delta\&. "
.ti -1c
.RI "template<typename PredictionType , typename TargetType > PredictionType::elem_type \fBForward\fP (const PredictionType &prediction, const TargetType &target)"
.br
.RI "Ordinary feed forward pass of a neural network\&. "
.ti -1c
.RI "InputDataType & \fBInputParameter\fP () const"
.br
.RI "Get the input parameter\&. "
.ti -1c
.RI "InputDataType & \fBInputParameter\fP ()"
.br
.RI "Modify the input parameter\&. "
.ti -1c
.RI "double \fBMargin\fP () const"
.br
.RI "Get the value of margin\&. "
.ti -1c
.RI "double & \fBMargin\fP ()"
.br
.RI "Modify the value of takeMean\&. "
.ti -1c
.RI "OutputDataType & \fBOutputParameter\fP () const"
.br
.RI "Get the output parameter\&. "
.ti -1c
.RI "OutputDataType & \fBOutputParameter\fP ()"
.br
.RI "Modify the output parameter\&. "
.ti -1c
.RI "template<typename Archive > void \fBserialize\fP (Archive &ar, const uint32_t)"
.br
.RI "Serialize the layer\&. "
.ti -1c
.RI "bool \fBSimilarity\fP () const"
.br
.RI "Get the value of similarity hyperparameter\&. "
.ti -1c
.RI "bool & \fBSimilarity\fP ()"
.br
.RI "Modify the value of takeMean\&. "
.ti -1c
.RI "bool \fBTakeMean\fP () const"
.br
.RI "Get the value of takeMean\&. "
.ti -1c
.RI "bool & \fBTakeMean\fP ()"
.br
.RI "Modify the value of takeMean\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename InputDataType = arma::mat, typename OutputDataType = arma::mat>
.br
class mlpack::ann::CosineEmbeddingLoss< InputDataType, OutputDataType >"
Cosine Embedding Loss function is used for measuring whether two inputs are similar or dissimilar, using the cosine distance, and is typically used for learning nonlinear embeddings or semi-supervised learning\&. 

\begin{eqnarray*} f(x) = 1 - cos(x1, x2) , for y = 1 f(x) = max(0, cos(x1, x2) - margin) , for y = -1 \end{eqnarray*}
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIInputDataType\fP Type of the input data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.br
\fIOutputDataType\fP Type of the output data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.RE
.PP

.PP
Definition at line 39 of file cosine_embedding_loss\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBCosineEmbeddingLoss\fP (const double margin = \fC0\&.0\fP, const bool similarity = \fCtrue\fP, const bool takeMean = \fCfalse\fP)"

.PP
Create the \fBCosineEmbeddingLoss\fP object\&. 
.PP
\fBParameters:\fP
.RS 4
\fImargin\fP Increases cosine distance in case of dissimilarity\&. Refer definition of cosine-embedding-loss above\&. 
.br
\fIsimilarity\fP Determines whether to use similarity or dissimilarity for comparision\&. 
.br
\fItakeMean\fP Boolean variable to specify whether to take mean or not\&. Specifies reduction method i\&.e\&. sum or mean corresponding to 0 and 1 respectively\&. Default value = 0\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void Backward (const PredictionType & prediction, const TargetType & target, LossType & loss)"

.PP
Ordinary feed backward pass of a neural network\&. 
.PP
\fBParameters:\fP
.RS 4
\fIprediction\fP Predictions used for evaluating the specified loss function\&. 
.br
\fItarget\fP The target vector\&. 
.br
\fIloss\fP The calculated error\&. 
.RE
.PP

.SS "OutputDataType& Delta () const\fC [inline]\fP"

.PP
Get the delta\&. 
.PP
Definition at line 92 of file cosine_embedding_loss\&.hpp\&.
.SS "OutputDataType& Delta ()\fC [inline]\fP"

.PP
Modify the delta\&. 
.PP
Definition at line 94 of file cosine_embedding_loss\&.hpp\&.
.SS "PredictionType::elem_type Forward (const PredictionType & prediction, const TargetType & target)"

.PP
Ordinary feed forward pass of a neural network\&. 
.PP
\fBParameters:\fP
.RS 4
\fIprediction\fP Predictions used for evaluating the specified loss function\&. 
.br
\fItarget\fP The target vector\&. 
.RE
.PP

.SS "InputDataType& InputParameter () const\fC [inline]\fP"

.PP
Get the input parameter\&. 
.PP
Definition at line 82 of file cosine_embedding_loss\&.hpp\&.
.SS "InputDataType& InputParameter ()\fC [inline]\fP"

.PP
Modify the input parameter\&. 
.PP
Definition at line 84 of file cosine_embedding_loss\&.hpp\&.
.SS "double Margin () const\fC [inline]\fP"

.PP
Get the value of margin\&. 
.PP
Definition at line 102 of file cosine_embedding_loss\&.hpp\&.
.SS "double& Margin ()\fC [inline]\fP"

.PP
Modify the value of takeMean\&. 
.PP
Definition at line 104 of file cosine_embedding_loss\&.hpp\&.
.SS "OutputDataType& OutputParameter () const\fC [inline]\fP"

.PP
Get the output parameter\&. 
.PP
Definition at line 87 of file cosine_embedding_loss\&.hpp\&.
.SS "OutputDataType& OutputParameter ()\fC [inline]\fP"

.PP
Modify the output parameter\&. 
.PP
Definition at line 89 of file cosine_embedding_loss\&.hpp\&.
.SS "void serialize (Archive & ar, const uint32_t)"

.PP
Serialize the layer\&. 
.PP
Referenced by CosineEmbeddingLoss< InputDataType, OutputDataType >::Similarity()\&.
.SS "bool Similarity () const\fC [inline]\fP"

.PP
Get the value of similarity hyperparameter\&. 
.PP
Definition at line 107 of file cosine_embedding_loss\&.hpp\&.
.SS "bool& Similarity ()\fC [inline]\fP"

.PP
Modify the value of takeMean\&. 
.PP
Definition at line 109 of file cosine_embedding_loss\&.hpp\&.
.PP
References CosineEmbeddingLoss< InputDataType, OutputDataType >::serialize()\&.
.SS "bool TakeMean () const\fC [inline]\fP"

.PP
Get the value of takeMean\&. 
.PP
Definition at line 97 of file cosine_embedding_loss\&.hpp\&.
.SS "bool& TakeMean ()\fC [inline]\fP"

.PP
Modify the value of takeMean\&. 
.PP
Definition at line 99 of file cosine_embedding_loss\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
