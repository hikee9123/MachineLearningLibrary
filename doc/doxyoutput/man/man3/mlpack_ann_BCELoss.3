.TH "BCELoss< InputDataType, OutputDataType >" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
BCELoss< InputDataType, OutputDataType > \- The binary-cross-entropy performance function measures the Binary Cross Entropy between the target and the output\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBBCELoss\fP (const double eps=1e\-10, const bool reduction=true)"
.br
.RI "Create the BinaryCrossEntropyLoss object\&. "
.ti -1c
.RI "template<typename PredictionType , typename TargetType , typename LossType > void \fBBackward\fP (const PredictionType &prediction, const TargetType &target, LossType &loss)"
.br
.RI "Ordinary feed backward pass of a neural network\&. "
.ti -1c
.RI "double \fBEps\fP () const"
.br
.RI "Get the epsilon\&. "
.ti -1c
.RI "double & \fBEps\fP ()"
.br
.RI "Modify the epsilon\&. "
.ti -1c
.RI "template<typename PredictionType , typename TargetType > PredictionType::elem_type \fBForward\fP (const PredictionType &prediction, const TargetType &target)"
.br
.RI "Computes the cross-entropy function\&. "
.ti -1c
.RI "OutputDataType & \fBOutputParameter\fP () const"
.br
.RI "Get the output parameter\&. "
.ti -1c
.RI "OutputDataType & \fBOutputParameter\fP ()"
.br
.RI "Modify the output parameter\&. "
.ti -1c
.RI "bool \fBReduction\fP () const"
.br
.RI "Get the reduction\&. "
.ti -1c
.RI "bool & \fBReduction\fP ()"
.br
.RI "Set the reduction\&. "
.ti -1c
.RI "template<typename Archive > void \fBserialize\fP (Archive &ar, const uint32_t)"
.br
.RI "Serialize the layer\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename InputDataType = arma::mat, typename OutputDataType = arma::mat>
.br
class mlpack::ann::BCELoss< InputDataType, OutputDataType >"
The binary-cross-entropy performance function measures the Binary Cross Entropy between the target and the output\&. 


.PP
\fBTemplate Parameters:\fP
.RS 4
\fIInputDataType\fP Type of the input data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.br
\fIOutputDataType\fP Type of the output data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.RE
.PP

.PP
Definition at line 33 of file binary_cross_entropy_loss\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBBCELoss\fP (const double eps = \fC1e\-10\fP, const bool reduction = \fCtrue\fP)"

.PP
Create the BinaryCrossEntropyLoss object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIeps\fP The minimum value used for computing logarithms and denominators in a numerically stable way\&. 
.br
\fIreduction\fP Reduction type\&. If true, it returns the mean of the loss\&. Else, it returns the sum\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void Backward (const PredictionType & prediction, const TargetType & target, LossType & loss)"

.PP
Ordinary feed backward pass of a neural network\&. 
.PP
\fBParameters:\fP
.RS 4
\fIprediction\fP Predictions used for evaluating the specified loss function\&. 
.br
\fItarget\fP The target vector\&. 
.br
\fIloss\fP The calculated error\&. 
.RE
.PP

.SS "double Eps () const\fC [inline]\fP"

.PP
Get the epsilon\&. 
.PP
Definition at line 76 of file binary_cross_entropy_loss\&.hpp\&.
.SS "double& Eps ()\fC [inline]\fP"

.PP
Modify the epsilon\&. 
.PP
Definition at line 78 of file binary_cross_entropy_loss\&.hpp\&.
.SS "PredictionType::elem_type Forward (const PredictionType & prediction, const TargetType & target)"

.PP
Computes the cross-entropy function\&. 
.PP
\fBParameters:\fP
.RS 4
\fIprediction\fP Predictions used for evaluating the specified loss function\&. 
.br
\fItarget\fP The target vector\&. 
.RE
.PP

.SS "OutputDataType& OutputParameter () const\fC [inline]\fP"

.PP
Get the output parameter\&. 
.PP
Definition at line 71 of file binary_cross_entropy_loss\&.hpp\&.
.SS "OutputDataType& OutputParameter ()\fC [inline]\fP"

.PP
Modify the output parameter\&. 
.PP
Definition at line 73 of file binary_cross_entropy_loss\&.hpp\&.
.SS "bool Reduction () const\fC [inline]\fP"

.PP
Get the reduction\&. 
.PP
Definition at line 81 of file binary_cross_entropy_loss\&.hpp\&.
.SS "bool& Reduction ()\fC [inline]\fP"

.PP
Set the reduction\&. 
.PP
Definition at line 83 of file binary_cross_entropy_loss\&.hpp\&.
.PP
References BCELoss< InputDataType, OutputDataType >::serialize()\&.
.SS "void serialize (Archive & ar, const uint32_t)"

.PP
Serialize the layer\&. 
.PP
Referenced by BCELoss< InputDataType, OutputDataType >::Reduction()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
