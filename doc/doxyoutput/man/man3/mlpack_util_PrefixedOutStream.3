.TH "PrefixedOutStream" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PrefixedOutStream \- Allows us to output to an ostream with a prefix at the beginning of each line, in the same way we would output to cout or cerr\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPrefixedOutStream\fP (std::ostream &\fBdestination\fP, const char *prefix, bool \fBignoreInput\fP=false, bool fatal=false, bool \fBbacktrace\fP=true)"
.br
.RI "Set up the \fBPrefixedOutStream\fP\&. "
.ti -1c
.RI "\fBPrefixedOutStream\fP & \fBoperator<<\fP (bool val)"
.br
.RI "Write a bool to the stream\&. "
.ti -1c
.RI "\fBPrefixedOutStream\fP & \fBoperator<<\fP (short val)"
.br
.RI "Write a short to the stream\&. "
.ti -1c
.RI "\fBPrefixedOutStream\fP & \fBoperator<<\fP (unsigned short val)"
.br
.RI "Write an unsigned short to the stream\&. "
.ti -1c
.RI "\fBPrefixedOutStream\fP & \fBoperator<<\fP (int val)"
.br
.RI "Write an int to the stream\&. "
.ti -1c
.RI "\fBPrefixedOutStream\fP & \fBoperator<<\fP (unsigned int val)"
.br
.RI "Write an unsigned int to the stream\&. "
.ti -1c
.RI "\fBPrefixedOutStream\fP & \fBoperator<<\fP (long val)"
.br
.RI "Write a long to the stream\&. "
.ti -1c
.RI "\fBPrefixedOutStream\fP & \fBoperator<<\fP (unsigned long val)"
.br
.RI "Write an unsigned long to the stream\&. "
.ti -1c
.RI "\fBPrefixedOutStream\fP & \fBoperator<<\fP (float val)"
.br
.RI "Write a float to the stream\&. "
.ti -1c
.RI "\fBPrefixedOutStream\fP & \fBoperator<<\fP (double val)"
.br
.RI "Write a double to the stream\&. "
.ti -1c
.RI "\fBPrefixedOutStream\fP & \fBoperator<<\fP (long double val)"
.br
.RI "Write a long double to the stream\&. "
.ti -1c
.RI "\fBPrefixedOutStream\fP & \fBoperator<<\fP (void *val)"
.br
.RI "Write a void pointer to the stream\&. "
.ti -1c
.RI "\fBPrefixedOutStream\fP & \fBoperator<<\fP (const char *str)"
.br
.RI "Write a character array to the stream\&. "
.ti -1c
.RI "\fBPrefixedOutStream\fP & \fBoperator<<\fP (std::string &str)"
.br
.RI "Write a string to the stream\&. "
.ti -1c
.RI "\fBPrefixedOutStream\fP & \fBoperator<<\fP (std::streambuf *sb)"
.br
.RI "Write a streambuf to the stream\&. "
.ti -1c
.RI "\fBPrefixedOutStream\fP & \fBoperator<<\fP (std::ostream &(*pf)(std::ostream &))"
.br
.RI "Write an ostream manipulator function to the stream\&. "
.ti -1c
.RI "\fBPrefixedOutStream\fP & \fBoperator<<\fP (std::ios &(*pf)(std::ios &))"
.br
.RI "Write an ios manipulator function to the stream\&. "
.ti -1c
.RI "\fBPrefixedOutStream\fP & \fBoperator<<\fP (std::ios_base &(*pf)(std::ios_base &))"
.br
.RI "Write an ios_base manipulator function to the stream\&. "
.ti -1c
.RI "template<typename T > \fBPrefixedOutStream\fP & \fBoperator<<\fP (const T &s)"
.br
.RI "Write anything else to the stream\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "bool \fBbacktrace\fP"
.br
.RI "If true, on a fatal error, a backtrace will be printed if HAS_BFD_DL is defined\&. "
.ti -1c
.RI "std::ostream & \fBdestination\fP"
.br
.RI "The output stream that all data is to be sent to; example: MLPACK_COUT_STREAM\&. "
.ti -1c
.RI "bool \fBignoreInput\fP"
.br
.RI "Discards input, prints nothing if true\&. "
.in -1c
.SH "Detailed Description"
.PP 
Allows us to output to an ostream with a prefix at the beginning of each line, in the same way we would output to cout or cerr\&. 

The prefix is specified in the constructor (as well as the destination ostream)\&. A newline must be passed to the stream, and then the prefix will be prepended to the next line\&. For example,
.PP
.PP
.nf
PrefixedOutStream outstr(MLPACK_COUT_STREAM, "[TEST] ");
outstr << "Hello world I like " << 7\&.5;
outstr << "\&.\&.\&.Continue" << std::endl;
outstr << "After the CR\n" << std::endl;
.fi
.PP
.PP
would give, on MLPACK_COUT_STREAM,
.PP
.PP
.nf
[TEST] Hello world I like 7\&.5\&.\&.\&.Continue
[TEST] After the CR
[TEST]
.fi
.PP
.PP
These objects are used for the mlpack::Log levels (DEBUG, INFO, WARN, and FATAL)\&. 
.PP
Definition at line 46 of file prefixedoutstream\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBPrefixedOutStream\fP (std::ostream & destination, const char * prefix, bool ignoreInput = \fCfalse\fP, bool fatal = \fCfalse\fP, bool backtrace = \fCtrue\fP)\fC [inline]\fP"

.PP
Set up the \fBPrefixedOutStream\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdestination\fP ostream which receives output from this object\&. 
.br
\fIprefix\fP The prefix to prepend to each line\&. 
.br
\fIignoreInput\fP If true, the stream will not be printed\&. 
.br
\fIfatal\fP If true, a std::runtime_error exception is thrown after printing a newline\&. 
.br
\fIbacktrace\fP If true, attempt to print a backtrace (will only be done if HAS_BFD_DL is defined)\&. 
.RE
.PP

.PP
Definition at line 60 of file prefixedoutstream\&.hpp\&.
.PP
References PrefixedOutStream::operator<<()\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBPrefixedOutStream\fP& operator<< (bool val)"

.PP
Write a bool to the stream\&. 
.PP
Referenced by PrefixedOutStream::PrefixedOutStream()\&.
.SS "\fBPrefixedOutStream\fP& operator<< (short val)"

.PP
Write a short to the stream\&. 
.SS "\fBPrefixedOutStream\fP& operator<< (unsigned short val)"

.PP
Write an unsigned short to the stream\&. 
.SS "\fBPrefixedOutStream\fP& operator<< (int val)"

.PP
Write an int to the stream\&. 
.SS "\fBPrefixedOutStream\fP& operator<< (unsigned int val)"

.PP
Write an unsigned int to the stream\&. 
.SS "\fBPrefixedOutStream\fP& operator<< (long val)"

.PP
Write a long to the stream\&. 
.SS "\fBPrefixedOutStream\fP& operator<< (unsigned long val)"

.PP
Write an unsigned long to the stream\&. 
.SS "\fBPrefixedOutStream\fP& operator<< (float val)"

.PP
Write a float to the stream\&. 
.SS "\fBPrefixedOutStream\fP& operator<< (double val)"

.PP
Write a double to the stream\&. 
.SS "\fBPrefixedOutStream\fP& operator<< (long double val)"

.PP
Write a long double to the stream\&. 
.SS "\fBPrefixedOutStream\fP& operator<< (void * val)"

.PP
Write a void pointer to the stream\&. 
.SS "\fBPrefixedOutStream\fP& operator<< (const char * str)"

.PP
Write a character array to the stream\&. 
.SS "\fBPrefixedOutStream\fP& operator<< (std::string & str)"

.PP
Write a string to the stream\&. 
.SS "\fBPrefixedOutStream\fP& operator<< (std::streambuf * sb)"

.PP
Write a streambuf to the stream\&. 
.SS "\fBPrefixedOutStream\fP& operator<< (std::ostream &(*)(std::ostream &) pf)"

.PP
Write an ostream manipulator function to the stream\&. 
.SS "\fBPrefixedOutStream\fP& operator<< (std::ios &(*)(std::ios &) pf)"

.PP
Write an ios manipulator function to the stream\&. 
.SS "\fBPrefixedOutStream\fP& operator<< (std::ios_base &(*)(std::ios_base &) pf)"

.PP
Write an ios_base manipulator function to the stream\&. 
.SS "\fBPrefixedOutStream\fP& operator<< (const T & s)"

.PP
Write anything else to the stream\&. 
.SH "Member Data Documentation"
.PP 
.SS "bool backtrace"

.PP
If true, on a fatal error, a backtrace will be printed if HAS_BFD_DL is defined\&. 
.PP
Definition at line 123 of file prefixedoutstream\&.hpp\&.
.SS "std::ostream& destination"

.PP
The output stream that all data is to be sent to; example: MLPACK_COUT_STREAM\&. 
.PP
Definition at line 116 of file prefixedoutstream\&.hpp\&.
.SS "bool ignoreInput"

.PP
Discards input, prints nothing if true\&. 
.PP
Definition at line 119 of file prefixedoutstream\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
