.TH "SphericalKernel" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SphericalKernel \- The spherical kernel, which is 1 when the distance between the two argument points is less than or equal to the bandwidth, or 0 otherwise\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSphericalKernel\fP (const double bandwidth=1\&.0)"
.br
.RI "Construct the \fBSphericalKernel\fP with the given bandwidth\&. "
.ti -1c
.RI "template<typename VecTypeA , typename VecTypeB > double \fBConvolutionIntegral\fP (const VecTypeA &a, const VecTypeB &b) const"
.br
.RI "Obtains the convolution integral [integral K(||x-a||)K(||b-x||)dx] for the two vectors\&. "
.ti -1c
.RI "template<typename VecTypeA , typename VecTypeB > double \fBEvaluate\fP (const VecTypeA &a, const VecTypeB &b) const"
.br
.RI "Evaluate the spherical kernel with the given two vectors\&. "
.ti -1c
.RI "double \fBEvaluate\fP (const double t) const"
.br
.RI "Evaluate the kernel when only a distance is given, not two points\&. "
.ti -1c
.RI "double \fBGradient\fP (double t)"
.br
.ti -1c
.RI "double \fBNormalizer\fP (size_t dimension) const"
.br
.ti -1c
.RI "template<typename Archive > void \fBserialize\fP (Archive &ar, const uint32_t)"
.br
.RI "Serialize the object\&. "
.in -1c
.SH "Detailed Description"
.PP 
The spherical kernel, which is 1 when the distance between the two argument points is less than or equal to the bandwidth, or 0 otherwise\&. 
.PP
Definition at line 23 of file spherical_kernel\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBSphericalKernel\fP (const double bandwidth = \fC1\&.0\fP)\fC [inline]\fP"

.PP
Construct the \fBSphericalKernel\fP with the given bandwidth\&. 
.PP
Definition at line 29 of file spherical_kernel\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "double ConvolutionIntegral (const VecTypeA & a, const VecTypeB & b) const\fC [inline]\fP"

.PP
Obtains the convolution integral [integral K(||x-a||)K(||b-x||)dx] for the two vectors\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIVecTypeA\fP Type of first vector (arma::vec, arma::sp_vec should be expected)\&. 
.br
\fIVecTypeB\fP Type of second vector\&. 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIa\fP First vector\&. 
.br
\fIb\fP Second vector\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The convolution integral value\&. 
.RE
.PP

.PP
Definition at line 62 of file spherical_kernel\&.hpp\&.
.PP
References LMetric< TPower, TTakeRoot >::Evaluate(), and SphericalKernel::Normalizer()\&.
.SS "double Evaluate (const VecTypeA & a, const VecTypeB & b) const\fC [inline]\fP"

.PP
Evaluate the spherical kernel with the given two vectors\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIVecTypeA\fP Type of first vector\&. 
.br
\fIVecTypeB\fP Type of second vector\&. 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIa\fP First vector\&. 
.br
\fIb\fP Second vector\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The kernel evaluation between the two vectors\&. 
.RE
.PP

.PP
Definition at line 44 of file spherical_kernel\&.hpp\&.
.PP
References LMetric< TPower, TTakeRoot >::Evaluate()\&.
.SS "double Evaluate (const double t) const\fC [inline]\fP"

.PP
Evaluate the kernel when only a distance is given, not two points\&. 
.PP
\fBParameters:\fP
.RS 4
\fIt\fP Argument to kernel\&. 
.RE
.PP

.PP
Definition at line 96 of file spherical_kernel\&.hpp\&.
.SS "double Gradient (double t)\fC [inline]\fP"

.PP
Definition at line 100 of file spherical_kernel\&.hpp\&.
.SS "double Normalizer (size_t dimension) const\fC [inline]\fP"

.PP
Definition at line 85 of file spherical_kernel\&.hpp\&.
.PP
References M_PI\&.
.PP
Referenced by SphericalKernel::ConvolutionIntegral()\&.
.SS "void serialize (Archive & ar, const uint32_t)\fC [inline]\fP"

.PP
Serialize the object\&. 
.PP
Definition at line 107 of file spherical_kernel\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
