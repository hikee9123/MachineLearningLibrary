.TH "LinearRegression" 3 "Sun Aug 22 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
LinearRegression \- A simple linear regression algorithm using ordinary least squares\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBLinearRegression\fP (const arma::mat &predictors, const arma::rowvec &responses, const double lambda=0, const bool intercept=true)"
.br
.RI "Creates the model\&. "
.ti -1c
.RI "\fBLinearRegression\fP (const arma::mat &predictors, const arma::rowvec &responses, const arma::rowvec &weights, const double lambda=0, const bool intercept=true)"
.br
.RI "Creates the model with weighted learning\&. "
.ti -1c
.RI "\fBLinearRegression\fP ()"
.br
.RI "Empty constructor\&. "
.ti -1c
.RI "double \fBComputeError\fP (const arma::mat &points, const arma::rowvec &responses) const"
.br
.RI "Calculate the L2 squared error on the given predictors and responses using this linear regression model\&. "
.ti -1c
.RI "bool \fBIntercept\fP () const"
.br
.RI "Return whether or not an intercept term is used in the model\&. "
.ti -1c
.RI "double \fBLambda\fP () const"
.br
.RI "Return the Tikhonov regularization parameter for ridge regression\&. "
.ti -1c
.RI "double & \fBLambda\fP ()"
.br
.RI "Modify the Tikhonov regularization parameter for ridge regression\&. "
.ti -1c
.RI "const arma::vec & \fBParameters\fP () const"
.br
.RI "Return the parameters (the b vector)\&. "
.ti -1c
.RI "arma::vec & \fBParameters\fP ()"
.br
.RI "Modify the parameters (the b vector)\&. "
.ti -1c
.RI "void \fBPredict\fP (const arma::mat &points, arma::rowvec &predictions) const"
.br
.RI "Calculate y_i for each data point in points\&. "
.ti -1c
.RI "template<typename Archive > void \fBserialize\fP (Archive &ar, const uint32_t)"
.br
.RI "Serialize the model\&. "
.ti -1c
.RI "double \fBTrain\fP (const arma::mat &predictors, const arma::rowvec &responses, const bool intercept=true)"
.br
.RI "Train the \fBLinearRegression\fP model on the given data\&. "
.ti -1c
.RI "double \fBTrain\fP (const arma::mat &predictors, const arma::rowvec &responses, const arma::rowvec &weights, const bool intercept=true)"
.br
.RI "Train the \fBLinearRegression\fP model on the given data and weights\&. "
.in -1c
.SH "Detailed Description"
.PP 
A simple linear regression algorithm using ordinary least squares\&. 

Optionally, this class can perform ridge regression, if the lambda parameter is set to a number greater than zero\&. 
.PP
Definition at line 26 of file linear_regression\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBLinearRegression\fP (const arma::mat & predictors, const arma::rowvec & responses, const double lambda = \fC0\fP, const bool intercept = \fCtrue\fP)"

.PP
Creates the model\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpredictors\fP X, matrix of data points\&. 
.br
\fIresponses\fP y, the measured data for each point in X\&. 
.br
\fIlambda\fP Regularization constant for ridge regression\&. 
.br
\fIintercept\fP Whether or not to include an intercept term\&. 
.RE
.PP

.SS "\fBLinearRegression\fP (const arma::mat & predictors, const arma::rowvec & responses, const arma::rowvec & weights, const double lambda = \fC0\fP, const bool intercept = \fCtrue\fP)"

.PP
Creates the model with weighted learning\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpredictors\fP X, matrix of data points\&. 
.br
\fIresponses\fP y, the measured data for each point in X\&. 
.br
\fIweights\fP Observation weights (for boosting)\&. 
.br
\fIlambda\fP Regularization constant for ridge regression\&. 
.br
\fIintercept\fP Whether or not to include an intercept term\&. 
.RE
.PP

.SS "\fBLinearRegression\fP ()\fC [inline]\fP"

.PP
Empty constructor\&. This gives a non-working model, so make sure \fBTrain()\fP is called (or make sure the model parameters are set) before calling \fBPredict()\fP! 
.PP
Definition at line 62 of file linear_regression\&.hpp\&.
.PP
References LinearRegression::ComputeError(), LinearRegression::Predict(), and LinearRegression::Train()\&.
.SH "Member Function Documentation"
.PP 
.SS "double ComputeError (const arma::mat & points, const arma::rowvec & responses) const"

.PP
Calculate the L2 squared error on the given predictors and responses using this linear regression model\&. This calculation returns
.PP
\[ (1 / n) * \| y - X B \|^2_2 \].PP
where $ y $ is the responses vector, $ X $ is the matrix of predictors, and $ B $ is the parameters of the trained linear regression model\&.
.PP
As this number decreases to 0, the linear regression fit is better\&.
.PP
\fBParameters:\fP
.RS 4
\fIpoints\fP Matrix of predictors (X)\&. 
.br
\fIresponses\fP Transposed vector of responses (y^T)\&. 
.RE
.PP

.PP
Referenced by LinearRegression::LinearRegression()\&.
.SS "bool Intercept () const\fC [inline]\fP"

.PP
Return whether or not an intercept term is used in the model\&. 
.PP
Definition at line 137 of file linear_regression\&.hpp\&.
.SS "double Lambda () const\fC [inline]\fP"

.PP
Return the Tikhonov regularization parameter for ridge regression\&. 
.PP
Definition at line 132 of file linear_regression\&.hpp\&.
.SS "double& Lambda ()\fC [inline]\fP"

.PP
Modify the Tikhonov regularization parameter for ridge regression\&. 
.PP
Definition at line 134 of file linear_regression\&.hpp\&.
.SS "const arma::vec& Parameters () const\fC [inline]\fP"

.PP
Return the parameters (the b vector)\&. 
.PP
Definition at line 127 of file linear_regression\&.hpp\&.
.SS "arma::vec& Parameters ()\fC [inline]\fP"

.PP
Modify the parameters (the b vector)\&. 
.PP
Definition at line 129 of file linear_regression\&.hpp\&.
.SS "void Predict (const arma::mat & points, arma::rowvec & predictions) const"

.PP
Calculate y_i for each data point in points\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpoints\fP the data points to calculate with\&. 
.br
\fIpredictions\fP y, will contain calculated values on completion\&. 
.RE
.PP

.PP
Referenced by LinearRegression::LinearRegression()\&.
.SS "void serialize (Archive & ar, const uint32_t)\fC [inline]\fP"

.PP
Serialize the model\&. 
.PP
Definition at line 143 of file linear_regression\&.hpp\&.
.SS "double Train (const arma::mat & predictors, const arma::rowvec & responses, const bool intercept = \fCtrue\fP)"

.PP
Train the \fBLinearRegression\fP model on the given data\&. Careful! This will completely ignore and overwrite the existing model\&. This particular implementation does not have an incremental training algorithm\&. To set the regularization parameter lambda, call \fBLambda()\fP or set a different value in the constructor\&.
.PP
\fBParameters:\fP
.RS 4
\fIpredictors\fP X, the matrix of data points to train the model on\&. 
.br
\fIresponses\fP y, the responses to the data points\&. 
.br
\fIintercept\fP Whether or not to fit an intercept term\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The least squares error after training\&. 
.RE
.PP

.PP
Referenced by LinearRegression::LinearRegression()\&.
.SS "double Train (const arma::mat & predictors, const arma::rowvec & responses, const arma::rowvec & weights, const bool intercept = \fCtrue\fP)"

.PP
Train the \fBLinearRegression\fP model on the given data and weights\&. Careful! This will completely ignore and overwrite the existing model\&. This particular implementation does not have an incremental training algorithm\&. To set the regularization parameter lambda, call \fBLambda()\fP or set a different value in the constructor\&.
.PP
\fBParameters:\fP
.RS 4
\fIpredictors\fP X, the matrix of data points to train the model on\&. 
.br
\fIresponses\fP y, the responses to the data points\&. 
.br
\fIweights\fP Observation weights (for boosting)\&. 
.br
\fIintercept\fP Whether or not to fit an intercept term\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The least squares error after training\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
