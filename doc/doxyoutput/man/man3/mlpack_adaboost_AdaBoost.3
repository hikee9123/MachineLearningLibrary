.TH "AdaBoost< WeakLearnerType, MatType >" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AdaBoost< WeakLearnerType, MatType > \- The \fBAdaBoost\fP class\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAdaBoost\fP (const MatType &data, const arma::Row< size_t > &labels, const size_t numClasses, const WeakLearnerType &other, const size_t iterations=100, const double tolerance=1e\-6)"
.br
.RI "Constructor\&. "
.ti -1c
.RI "\fBAdaBoost\fP (const double tolerance=1e\-6)"
.br
.RI "Create the \fBAdaBoost\fP object without training\&. "
.ti -1c
.RI "double \fBAlpha\fP (const size_t i) const"
.br
.RI "Get the weights for the given weak learner\&. "
.ti -1c
.RI "double & \fBAlpha\fP (const size_t i)"
.br
.RI "Modify the weight for the given weak learner (be careful!)\&. "
.ti -1c
.RI "void \fBClassify\fP (const MatType &test, arma::Row< size_t > &predictedLabels, arma::mat &probabilities)"
.br
.RI "Classify the given test points\&. "
.ti -1c
.RI "void \fBClassify\fP (const MatType &test, arma::Row< size_t > &predictedLabels)"
.br
.RI "Classify the given test points\&. "
.ti -1c
.RI "size_t \fBNumClasses\fP () const"
.br
.RI "Get the number of classes this model is trained on\&. "
.ti -1c
.RI "template<typename Archive > void \fBserialize\fP (Archive &ar, const uint32_t)"
.br
.RI "Serialize the \fBAdaBoost\fP model\&. "
.ti -1c
.RI "double \fBTolerance\fP () const"
.br
.RI "Get the tolerance for stopping the optimization during training\&. "
.ti -1c
.RI "double & \fBTolerance\fP ()"
.br
.RI "Modify the tolerance for stopping the optimization during training\&. "
.ti -1c
.RI "double \fBTrain\fP (const MatType &data, const arma::Row< size_t > &labels, const size_t numClasses, const WeakLearnerType &learner, const size_t iterations=100, const double tolerance=1e\-6)"
.br
.RI "Train \fBAdaBoost\fP on the given dataset\&. "
.ti -1c
.RI "const WeakLearnerType & \fBWeakLearner\fP (const size_t i) const"
.br
.RI "Get the given weak learner\&. "
.ti -1c
.RI "WeakLearnerType & \fBWeakLearner\fP (const size_t i)"
.br
.RI "Modify the given weak learner (be careful!)\&. "
.ti -1c
.RI "size_t \fBWeakLearners\fP () const"
.br
.RI "Get the number of weak learners in the model\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename WeakLearnerType = mlpack::perceptron::Perceptron<>, typename MatType = arma::mat>
.br
class mlpack::adaboost::AdaBoost< WeakLearnerType, MatType >"
The \fBAdaBoost\fP class\&. 

\fBAdaBoost\fP is a boosting algorithm, meaning that it combines an ensemble of weak learners to produce a strong learner\&. For more information on \fBAdaBoost\fP, see the following paper:
.PP
.PP
.nf
@article{schapire1999improved,
  author = {Schapire, Robert E\&. and Singer, Yoram},
  title = {Improved Boosting Algorithms Using Confidence-rated Predictions},
  journal = {Machine Learning},
  volume = {37},
  number = {3},
  month = dec,
  year = {1999},
  issn = {0885-6125},
  pages = {297--336},
}
.fi
.PP
.PP
This class is general, and can be used with any type of weak learner, so long as the learner implements the following functions:
.PP
.PP
.nf
// A boosting constructor, which learns using the training parameters of the
// given other WeakLearner, but uses the given instance weights for training\&.
WeakLearner(WeakLearner& other,
            const MatType& data,
            const arma::Row<size_t>& labels,
            const arma::rowvec& weights);

// Given the test points, classify them and output predictions into
// predictedLabels\&.
void Classify(const MatType& data, arma::Row<size_t>& predictedLabels);
.fi
.PP
.PP
For more information on and examples of weak learners, see perceptron::Perceptron<> and \fBtree::ID3DecisionStump\fP\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIMatType\fP Data matrix type (i\&.e\&. arma::mat or arma::sp_mat)\&. 
.br
\fIWeakLearnerType\fP Type of weak learner to use\&. 
.RE
.PP

.PP
Definition at line 81 of file adaboost\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBAdaBoost\fP (const MatType & data, const arma::Row< size_t > & labels, const size_t numClasses, const WeakLearnerType & other, const size_t iterations = \fC100\fP, const double tolerance = \fC1e\-6\fP)"

.PP
Constructor\&. This runs the AdaBoost\&.MH algorithm to provide a trained boosting model\&. This constructor takes an already-initialized weak learner; all other weak learners will learn with the same parameters as the given weak learner\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP Input data\&. 
.br
\fIlabels\fP Corresponding labels\&. 
.br
\fInumClasses\fP The number of classes\&. 
.br
\fIiterations\fP Number of boosting rounds\&. 
.br
\fItolerance\fP The tolerance for change in values of rt\&. 
.br
\fIother\fP Weak learner that has already been initialized\&. 
.RE
.PP

.SS "\fBAdaBoost\fP (const double tolerance = \fC1e\-6\fP)"

.PP
Create the \fBAdaBoost\fP object without training\&. Be sure to call \fBTrain()\fP before calling \fBClassify()\fP! 
.SH "Member Function Documentation"
.PP 
.SS "double Alpha (const size_t i) const\fC [inline]\fP"

.PP
Get the weights for the given weak learner\&. 
.PP
Definition at line 122 of file adaboost\&.hpp\&.
.SS "double& Alpha (const size_t i)\fC [inline]\fP"

.PP
Modify the weight for the given weak learner (be careful!)\&. 
.PP
Definition at line 124 of file adaboost\&.hpp\&.
.SS "void Classify (const MatType & test, arma::Row< size_t > & predictedLabels, arma::mat & probabilities)"

.PP
Classify the given test points\&. 
.PP
\fBParameters:\fP
.RS 4
\fItest\fP Testing data\&. 
.br
\fIpredictedLabels\fP Vector in which the predicted labels of the test set will be stored\&. 
.br
\fIprobabilities\fP matrix to store the predicted class probabilities for each point in the test set\&. 
.RE
.PP

.PP
Referenced by AdaBoost< mlpack::tree::DecisionTree >::WeakLearner()\&.
.SS "void Classify (const MatType & test, arma::Row< size_t > & predictedLabels)"

.PP
Classify the given test points\&. 
.PP
\fBParameters:\fP
.RS 4
\fItest\fP Testing data\&. 
.br
\fIpredictedLabels\fP Vector in which the predicted labels of the test set will be stored\&. 
.RE
.PP

.SS "size_t NumClasses () const\fC [inline]\fP"

.PP
Get the number of classes this model is trained on\&. 
.PP
Definition at line 116 of file adaboost\&.hpp\&.
.SS "void serialize (Archive & ar, const uint32_t)"

.PP
Serialize the \fBAdaBoost\fP model\&. 
.PP
Referenced by AdaBoost< mlpack::tree::DecisionTree >::WeakLearner()\&.
.SS "double Tolerance () const\fC [inline]\fP"

.PP
Get the tolerance for stopping the optimization during training\&. 
.PP
Definition at line 111 of file adaboost\&.hpp\&.
.SS "double& Tolerance ()\fC [inline]\fP"

.PP
Modify the tolerance for stopping the optimization during training\&. 
.PP
Definition at line 113 of file adaboost\&.hpp\&.
.SS "double Train (const MatType & data, const arma::Row< size_t > & labels, const size_t numClasses, const WeakLearnerType & learner, const size_t iterations = \fC100\fP, const double tolerance = \fC1e\-6\fP)"

.PP
Train \fBAdaBoost\fP on the given dataset\&. This method takes an initialized WeakLearnerType; the parameters for this weak learner will be used to train each of the weak learners during \fBAdaBoost\fP training\&. Note that this will completely overwrite any model that has already been trained with this object\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP Dataset to train on\&. 
.br
\fIlabels\fP Labels for each point in the dataset\&. 
.br
\fInumClasses\fP The number of classes\&. 
.br
\fIlearner\fP Learner to use for training\&. 
.br
\fIiterations\fP Number of boosting rounds\&. 
.br
\fItolerance\fP The tolerance for change in values of rt\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The upper bound for training error\&. 
.RE
.PP

.PP
Referenced by AdaBoost< mlpack::tree::DecisionTree >::WeakLearner()\&.
.SS "const WeakLearnerType& WeakLearner (const size_t i) const\fC [inline]\fP"

.PP
Get the given weak learner\&. 
.PP
Definition at line 127 of file adaboost\&.hpp\&.
.SS "WeakLearnerType& WeakLearner (const size_t i)\fC [inline]\fP"

.PP
Modify the given weak learner (be careful!)\&. 
.PP
Definition at line 129 of file adaboost\&.hpp\&.
.SS "size_t WeakLearners () const\fC [inline]\fP"

.PP
Get the number of weak learners in the model\&. 
.PP
Definition at line 119 of file adaboost\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
