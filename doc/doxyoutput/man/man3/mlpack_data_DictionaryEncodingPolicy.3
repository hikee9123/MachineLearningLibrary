.TH "DictionaryEncodingPolicy" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DictionaryEncodingPolicy \- DicitonaryEnocdingPolicy is used as a helper class for \fBStringEncoding\fP\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "template<typename Archive > void \fBserialize\fP (Archive &, const uint32_t)"
.br
.RI "Serialize the class to the given archive\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "template<typename MatType > static void \fBEncode\fP (MatType &output, const size_t value, const size_t line, const size_t index)"
.br
.RI "The function performs the dictionary encoding algorithm i\&.e\&. "
.ti -1c
.RI "template<typename ElemType > static void \fBEncode\fP (std::vector< ElemType > &output, size_t value)"
.br
.RI "The function performs the dictionary encoding algorithm i\&.e\&. "
.ti -1c
.RI "template<typename MatType > static void \fBInitMatrix\fP (MatType &output, const size_t datasetSize, const size_t maxNumTokens, const size_t)"
.br
.RI "The function initializes the output matrix\&. "
.ti -1c
.RI "static void \fBPreprocessToken\fP (const size_t, const size_t, const size_t)"
.br
.RI "The function is not used by the dictionary encoding policy\&. "
.ti -1c
.RI "static void \fBReset\fP ()"
.br
.RI "Clear the necessary internal variables\&. "
.in -1c
.SH "Detailed Description"
.PP 
DicitonaryEnocdingPolicy is used as a helper class for \fBStringEncoding\fP\&. 

The encoder assigns a positive integer number to each unique token and treats the dataset as categorical\&. The numbers are assigned sequentially starting from one\&. The order in which the tokens are labeled is defined by the dictionary used by the \fBStringEncoding\fP class\&. The encoder writes data either in the column-major order or in the row-major order depending on the output data type\&. 
.PP
Definition at line 32 of file dictionary_encoding_policy\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "static void Encode (MatType & output, const size_t value, const size_t line, const size_t index)\fC [inline]\fP, \fC [static]\fP"

.PP
The function performs the dictionary encoding algorithm i\&.e\&. it writes the encoded token to the output\&. The encoder writes data in the column-major order\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIMatType\fP The output matrix type\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIoutput\fP Output matrix to store the encoded results (sp_mat or mat)\&. 
.br
\fIvalue\fP The encoded token\&. 
.br
\fIline\fP The line number at which the encoding is performed\&. 
.br
\fIindex\fP The token index in the line\&. 
.RE
.PP

.PP
Definition at line 77 of file dictionary_encoding_policy\&.hpp\&.
.SS "static void Encode (std::vector< ElemType > & output, size_t value)\fC [inline]\fP, \fC [static]\fP"

.PP
The function performs the dictionary encoding algorithm i\&.e\&. it writes the encoded token to the output\&. This is an overloaded function which saves the result into the given vector to avoid padding\&. The encoder writes data in the row-major order\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIElemType\fP Type of the output values\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIoutput\fP Output vector to store the encoded line\&. 
.br
\fIvalue\fP The encoded token\&. 
.RE
.PP

.PP
Definition at line 97 of file dictionary_encoding_policy\&.hpp\&.
.SS "static void InitMatrix (MatType & output, const size_t datasetSize, const size_t maxNumTokens, const size_t)\fC [inline]\fP, \fC [static]\fP"

.PP
The function initializes the output matrix\&. The encoder writes data in the column-major order\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIMatType\fP The output matrix type\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIoutput\fP Output matrix to store the encoded results (sp_mat or mat)\&. 
.br
\fIdatasetSize\fP The number of strings in the input dataset\&. 
.br
\fImaxNumTokens\fP The maximum number of tokens in the strings of the input dataset\&. 
.br
\fI*\fP (dictionarySize) The size of the dictionary (not used)\&. 
.RE
.PP

.PP
Definition at line 56 of file dictionary_encoding_policy\&.hpp\&.
.SS "static void PreprocessToken (const size_t, const size_t, const size_t)\fC [inline]\fP, \fC [static]\fP"

.PP
The function is not used by the dictionary encoding policy\&. 
.PP
\fBParameters:\fP
.RS 4
\fI*\fP (line) The line number at which the encoding is performed\&. 
.br
\fI*\fP (index) The token sequence number in the line\&. 
.br
\fI*\fP (value) The encoded token\&. 
.RE
.PP

.PP
Definition at line 109 of file dictionary_encoding_policy\&.hpp\&.
.SS "static void Reset ()\fC [inline]\fP, \fC [static]\fP"

.PP
Clear the necessary internal variables\&. 
.PP
Definition at line 38 of file dictionary_encoding_policy\&.hpp\&.
.SS "void serialize (Archive &, const uint32_t)\fC [inline]\fP"

.PP
Serialize the class to the given archive\&. 
.PP
Definition at line 118 of file dictionary_encoding_policy\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
