.TH "MiniBatchDiscrimination< InputDataType, OutputDataType >" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MiniBatchDiscrimination< InputDataType, OutputDataType > \- Implementation of the \fBMiniBatchDiscrimination\fP layer\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMiniBatchDiscrimination\fP ()"
.br
.RI "Create the \fBMiniBatchDiscrimination\fP object\&. "
.ti -1c
.RI "\fBMiniBatchDiscrimination\fP (const size_t inSize, const size_t outSize, const size_t features)"
.br
.RI "Create the \fBMiniBatchDiscrimination\fP layer object using the specified number of units\&. "
.ti -1c
.RI "template<typename eT > void \fBBackward\fP (const arma::Mat< eT > &, const arma::Mat< eT > &gy, arma::Mat< eT > &g)"
.br
.RI "Ordinary feed-backward pass of a neural network, calculating the function f(x) by propagating x backwards through f\&. "
.ti -1c
.RI "OutputDataType const  & \fBDelta\fP () const"
.br
.RI "Get the delta\&. "
.ti -1c
.RI "OutputDataType & \fBDelta\fP ()"
.br
.RI "Modify the delta\&. "
.ti -1c
.RI "template<typename eT > void \fBForward\fP (const arma::Mat< eT > &input, arma::Mat< eT > &output)"
.br
.RI "Ordinary feed-forward pass of a neural network, evaluating the function f(x) by propagating the activity forward through f\&. "
.ti -1c
.RI "template<typename eT > void \fBGradient\fP (const arma::Mat< eT > &input, const arma::Mat< eT > &, arma::Mat< eT > &gradient)"
.br
.RI "Calculate the gradient using the output delta and the input activation\&. "
.ti -1c
.RI "OutputDataType const  & \fBGradient\fP () const"
.br
.RI "Get the gradient\&. "
.ti -1c
.RI "OutputDataType & \fBGradient\fP ()"
.br
.RI "Modify the gradient\&. "
.ti -1c
.RI "InputDataType const  & \fBInputParameter\fP () const"
.br
.RI "Get the input parameter\&. "
.ti -1c
.RI "InputDataType & \fBInputParameter\fP ()"
.br
.RI "Modify the input parameter\&. "
.ti -1c
.RI "size_t \fBInputShape\fP () const"
.br
.RI "Get the shape of the input\&. "
.ti -1c
.RI "OutputDataType const  & \fBOutputParameter\fP () const"
.br
.RI "Get the output parameter\&. "
.ti -1c
.RI "OutputDataType & \fBOutputParameter\fP ()"
.br
.RI "Modify the output parameter\&. "
.ti -1c
.RI "OutputDataType const  & \fBParameters\fP () const"
.br
.RI "Get the parameters\&. "
.ti -1c
.RI "OutputDataType & \fBParameters\fP ()"
.br
.RI "Modify the parameters\&. "
.ti -1c
.RI "void \fBReset\fP ()"
.br
.RI "Reset the layer parameter\&. "
.ti -1c
.RI "template<typename Archive > void \fBserialize\fP (Archive &ar, const uint32_t)"
.br
.RI "Serialize the layer\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename InputDataType = arma::mat, typename OutputDataType = arma::mat>
.br
class mlpack::ann::MiniBatchDiscrimination< InputDataType, OutputDataType >"
Implementation of the \fBMiniBatchDiscrimination\fP layer\&. 

\fBMiniBatchDiscrimination\fP is a layer of the discriminator that allows the discriminator to look at multiple data examples in combination and perform what is called as mini-batch discrimination\&. This helps prevent the collapse of the generator parameters to a setting where it emits the same point\&. This happens because normally a discriminator will process each example independently and there will be no mechanism to diversify the outputs of the generator\&.
.PP
For more information, see the following\&.
.PP
.PP
.nf
@article{Goodfellow2016,
  author  = {Tim Salimans, Ian Goodfellow, Wojciech Zaremba, Vicki Cheung,
             Alec Radford, Xi Chen},
  title   = {Improved Techniques for Training GANs},
  year    = {2016},
  url     = {https://arxiv\&.org/abs/1606\&.03498},
}
.fi
.PP
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIInputDataType\fP Type of the input data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.br
\fIOutputDataType\fP Type of the output data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.RE
.PP

.PP
Definition at line 118 of file layer_types\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBMiniBatchDiscrimination\fP ()"

.PP
Create the \fBMiniBatchDiscrimination\fP object\&. 
.SS "\fBMiniBatchDiscrimination\fP (const size_t inSize, const size_t outSize, const size_t features)"

.PP
Create the \fBMiniBatchDiscrimination\fP layer object using the specified number of units\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinSize\fP The number of input units\&. 
.br
\fIoutSize\fP The number of output units\&. 
.br
\fIfeatures\fP The number of features to compute for each dimension\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void Backward (const arma::Mat< eT > &, const arma::Mat< eT > & gy, arma::Mat< eT > & g)"

.PP
Ordinary feed-backward pass of a neural network, calculating the function f(x) by propagating x backwards through f\&. Using the results from the feed-forward pass\&.
.PP
\fBParameters:\fP
.RS 4
\fI*\fP (input) The propagated input activation\&. 
.br
\fIgy\fP The backpropagated error\&. 
.br
\fIg\fP The calculated gradient\&. 
.RE
.PP

.SS "OutputDataType const& Delta () const\fC [inline]\fP"

.PP
Get the delta\&. 
.PP
Definition at line 128 of file minibatch_discrimination\&.hpp\&.
.SS "OutputDataType& Delta ()\fC [inline]\fP"

.PP
Modify the delta\&. 
.PP
Definition at line 130 of file minibatch_discrimination\&.hpp\&.
.SS "void Forward (const arma::Mat< eT > & input, arma::Mat< eT > & output)"

.PP
Ordinary feed-forward pass of a neural network, evaluating the function f(x) by propagating the activity forward through f\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP Input data used for evaluating the specified function\&. 
.br
\fIoutput\fP Resulting output activation\&. 
.RE
.PP

.SS "void Gradient (const arma::Mat< eT > & input, const arma::Mat< eT > &, arma::Mat< eT > & gradient)"

.PP
Calculate the gradient using the output delta and the input activation\&. 
.PP
\fBParameters:\fP
.RS 4
\fIinput\fP The input parameter used for calculating the gradient\&. 
.br
\fI*\fP (error) The calculated error\&. 
.br
\fIgradient\fP The calculated gradient\&. 
.RE
.PP

.SS "OutputDataType const& Gradient () const\fC [inline]\fP"

.PP
Get the gradient\&. 
.PP
Definition at line 133 of file minibatch_discrimination\&.hpp\&.
.SS "OutputDataType& Gradient ()\fC [inline]\fP"

.PP
Modify the gradient\&. 
.PP
Definition at line 135 of file minibatch_discrimination\&.hpp\&.
.SS "InputDataType const& InputParameter () const\fC [inline]\fP"

.PP
Get the input parameter\&. 
.PP
Definition at line 118 of file minibatch_discrimination\&.hpp\&.
.SS "InputDataType& InputParameter ()\fC [inline]\fP"

.PP
Modify the input parameter\&. 
.PP
Definition at line 120 of file minibatch_discrimination\&.hpp\&.
.SS "size_t InputShape () const\fC [inline]\fP"

.PP
Get the shape of the input\&. 
.PP
Definition at line 138 of file minibatch_discrimination\&.hpp\&.
.PP
References MiniBatchDiscrimination< InputDataType, OutputDataType >::serialize()\&.
.SS "OutputDataType const& OutputParameter () const\fC [inline]\fP"

.PP
Get the output parameter\&. 
.PP
Definition at line 123 of file minibatch_discrimination\&.hpp\&.
.SS "OutputDataType& OutputParameter ()\fC [inline]\fP"

.PP
Modify the output parameter\&. 
.PP
Definition at line 125 of file minibatch_discrimination\&.hpp\&.
.SS "OutputDataType const& Parameters () const\fC [inline]\fP"

.PP
Get the parameters\&. 
.PP
Definition at line 113 of file minibatch_discrimination\&.hpp\&.
.SS "OutputDataType& Parameters ()\fC [inline]\fP"

.PP
Modify the parameters\&. 
.PP
Definition at line 115 of file minibatch_discrimination\&.hpp\&.
.SS "void Reset ()"

.PP
Reset the layer parameter\&. 
.SS "void serialize (Archive & ar, const uint32_t)"

.PP
Serialize the layer\&. 
.PP
Referenced by MiniBatchDiscrimination< InputDataType, OutputDataType >::InputShape()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
