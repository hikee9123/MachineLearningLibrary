.TH "CVBase< MLAlgorithm, MatType, PredictionsType, WeightsType >" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CVBase< MLAlgorithm, MatType, PredictionsType, WeightsType > \- An auxiliary class for cross-validation\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "using \fBMIE\fP = \fBMetaInfoExtractor\fP< MLAlgorithm, MatType, PredictionsType, WeightsType >"
.br
.RI "A short alias for \fBMetaInfoExtractor\fP\&. "
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCVBase\fP ()"
.br
.RI "Assert that MLAlgorithm doesn't take any additional basic parameters like numClasses\&. "
.ti -1c
.RI "\fBCVBase\fP (const size_t numClasses)"
.br
.RI "Assert that MLAlgorithm takes the numClasses parameter and store it\&. "
.ti -1c
.RI "\fBCVBase\fP (const \fBdata::DatasetInfo\fP &datasetInfo, const size_t numClasses)"
.br
.RI "Assert that MLAlgorithm takes the numClasses parameter and a \fBdata::DatasetInfo\fP parameter and store them\&. "
.ti -1c
.RI "template<typename\&.\&.\&. MLAlgorithmArgs> MLAlgorithm \fBTrain\fP (const MatType &xs, const PredictionsType &ys, const MLAlgorithmArgs &\&.\&.\&. args)"
.br
.RI "Train MLAlgorithm with given data points, predictions, and hyperparameters depending on what \fBCVBase\fP constructor has been called\&. "
.ti -1c
.RI "template<typename\&.\&.\&. MLAlgorithmArgs> MLAlgorithm \fBTrain\fP (const MatType &xs, const PredictionsType &ys, const WeightsType &weights, const MLAlgorithmArgs &\&.\&.\&. args)"
.br
.RI "Train MLAlgorithm with given data points, predictions, weights, and hyperparameters depending on what \fBCVBase\fP constructor has been called\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBAssertDataConsistency\fP (const MatType &xs, const PredictionsType &ys)"
.br
.RI "Assert there is the equal number of data points and predictions\&. "
.ti -1c
.RI "static void \fBAssertWeightsConsistency\fP (const MatType &xs, const WeightsType &weights)"
.br
.RI "Assert weighted learning is supported and there is the equal number of data points and weights\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename MLAlgorithm, typename MatType, typename PredictionsType, typename WeightsType>
.br
class mlpack::cv::CVBase< MLAlgorithm, MatType, PredictionsType, WeightsType >"
An auxiliary class for cross-validation\&. 

It serves to handle basic non-data constructor parameters of a machine learning algorithm (like datasetInfo or numClasses) and to assert that the machine learning algorithm and data satisfy certain conditions\&.
.PP
This class is not meant to be used directly by users\&. To cross-validate rather use end-user classes like \fBSimpleCV\fP or \fBKFoldCV\fP\&.
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIMLAlgorithm\fP A machine learning algorithm\&. 
.br
\fIMatType\fP The type of data\&. 
.br
\fIPredictionsType\fP The type of predictions (labels/responses)\&. 
.br
\fIWeightsType\fP The type of weights\&. It supposed to be void* when weights are not supported\&. 
.RE
.PP

.PP
Definition at line 39 of file cv_base\&.hpp\&.
.SH "Member Typedef Documentation"
.PP 
.SS "using \fBMIE\fP =  \fBMetaInfoExtractor\fP<MLAlgorithm, MatType, PredictionsType, WeightsType>"

.PP
A short alias for \fBMetaInfoExtractor\fP\&. 
.PP
Definition at line 44 of file cv_base\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBCVBase\fP ()"

.PP
Assert that MLAlgorithm doesn't take any additional basic parameters like numClasses\&. 
.SS "\fBCVBase\fP (const size_t numClasses)"

.PP
Assert that MLAlgorithm takes the numClasses parameter and store it\&. 
.PP
\fBParameters:\fP
.RS 4
\fInumClasses\fP Number of classes in the dataset\&. 
.RE
.PP

.SS "\fBCVBase\fP (const \fBdata::DatasetInfo\fP & datasetInfo, const size_t numClasses)"

.PP
Assert that MLAlgorithm takes the numClasses parameter and a \fBdata::DatasetInfo\fP parameter and store them\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdatasetInfo\fP Type information for each dimension of the dataset\&. 
.br
\fInumClasses\fP Number of classes in the dataset\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "static void AssertDataConsistency (const MatType & xs, const PredictionsType & ys)\fC [static]\fP"

.PP
Assert there is the equal number of data points and predictions\&. 
.SS "static void AssertWeightsConsistency (const MatType & xs, const WeightsType & weights)\fC [static]\fP"

.PP
Assert weighted learning is supported and there is the equal number of data points and weights\&. 
.SS "MLAlgorithm Train (const MatType & xs, const PredictionsType & ys, const MLAlgorithmArgs &\&.\&.\&. args)"

.PP
Train MLAlgorithm with given data points, predictions, and hyperparameters depending on what \fBCVBase\fP constructor has been called\&. 
.SS "MLAlgorithm Train (const MatType & xs, const PredictionsType & ys, const WeightsType & weights, const MLAlgorithmArgs &\&.\&.\&. args)"

.PP
Train MLAlgorithm with given data points, predictions, weights, and hyperparameters depending on what \fBCVBase\fP constructor has been called\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
