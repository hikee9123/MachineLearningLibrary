.TH "FastMKSModel" 3 "Sun Aug 22 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
FastMKSModel \- A utility struct to contain all the possible \fBFastMKS\fP models, for use by the mlpack_fastmks program\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBKernelTypes\fP { \fBLINEAR_KERNEL\fP, \fBPOLYNOMIAL_KERNEL\fP, \fBCOSINE_DISTANCE\fP, \fBGAUSSIAN_KERNEL\fP, \fBEPANECHNIKOV_KERNEL\fP, \fBTRIANGULAR_KERNEL\fP, \fBHYPTAN_KERNEL\fP }
.RI "A list of all the kernels we support\&. ""
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBFastMKSModel\fP (const int kernelType=\fBLINEAR_KERNEL\fP)"
.br
.RI "Create the \fBFastMKSModel\fP with the given kernel type\&. "
.ti -1c
.RI "\fBFastMKSModel\fP (const \fBFastMKSModel\fP &other)"
.br
.RI "Copy constructor\&. "
.ti -1c
.RI "\fBFastMKSModel\fP (\fBFastMKSModel\fP &&other)"
.br
.RI "Move constructor\&. "
.ti -1c
.RI "\fB~FastMKSModel\fP ()"
.br
.RI "Clean memory\&. "
.ti -1c
.RI "template<typename TKernelType > void \fBBuildModel\fP (\fButil::Timers\fP &timers, arma::mat &&referenceData, TKernelType &kernel, const bool singleMode, const bool naive, const double base)"
.br
.RI "Build the model on the given reference set\&. "
.ti -1c
.RI "int \fBKernelType\fP () const"
.br
.RI "Get the kernel type\&. "
.ti -1c
.RI "int & \fBKernelType\fP ()"
.br
.RI "Modify the kernel type\&. "
.ti -1c
.RI "bool \fBNaive\fP () const"
.br
.RI "Get whether or not naive search is used\&. "
.ti -1c
.RI "bool & \fBNaive\fP ()"
.br
.RI "Set whether or not naive search is used\&. "
.ti -1c
.RI "\fBFastMKSModel\fP & \fBoperator=\fP (const \fBFastMKSModel\fP &other)"
.br
.RI "Copy assignment operator\&. "
.ti -1c
.RI "\fBFastMKSModel\fP & \fBoperator=\fP (\fBFastMKSModel\fP &&other)"
.br
.RI "Move assignment operator\&. "
.ti -1c
.RI "void \fBSearch\fP (\fButil::Timers\fP &timers, const arma::mat &querySet, const size_t k, arma::Mat< size_t > &indices, arma::mat &kernels, const double base)"
.br
.RI "Search with a different query set\&. "
.ti -1c
.RI "void \fBSearch\fP (\fButil::Timers\fP &timers, const size_t k, arma::Mat< size_t > &indices, arma::mat &kernels)"
.br
.RI "Search with the reference set as the query set\&. "
.ti -1c
.RI "template<typename Archive > void \fBserialize\fP (Archive &ar, const uint32_t)"
.br
.RI "Serialize the model\&. "
.ti -1c
.RI "bool \fBSingleMode\fP () const"
.br
.RI "Get whether or not single-tree search is used\&. "
.ti -1c
.RI "bool & \fBSingleMode\fP ()"
.br
.RI "Set whether or not single-tree search is used\&. "
.in -1c
.SH "Detailed Description"
.PP 
A utility struct to contain all the possible \fBFastMKS\fP models, for use by the mlpack_fastmks program\&. 


.PP
Definition at line 34 of file fastmks_model\&.hpp\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBKernelTypes\fP"

.PP
A list of all the kernels we support\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fILINEAR_KERNEL \fP\fP
.TP
\fB\fIPOLYNOMIAL_KERNEL \fP\fP
.TP
\fB\fICOSINE_DISTANCE \fP\fP
.TP
\fB\fIGAUSSIAN_KERNEL \fP\fP
.TP
\fB\fIEPANECHNIKOV_KERNEL \fP\fP
.TP
\fB\fITRIANGULAR_KERNEL \fP\fP
.TP
\fB\fIHYPTAN_KERNEL \fP\fP
.PP
Definition at line 38 of file fastmks_model\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBFastMKSModel\fP (const int kernelType = \fC\fBLINEAR_KERNEL\fP\fP)"

.PP
Create the \fBFastMKSModel\fP with the given kernel type\&. 
.SS "\fBFastMKSModel\fP (const \fBFastMKSModel\fP & other)"

.PP
Copy constructor\&. 
.SS "\fBFastMKSModel\fP (\fBFastMKSModel\fP && other)"

.PP
Move constructor\&. 
.SS "~\fBFastMKSModel\fP ()"

.PP
Clean memory\&. 
.SH "Member Function Documentation"
.PP 
.SS "void BuildModel (\fButil::Timers\fP & timers, arma::mat && referenceData, TKernelType & kernel, const bool singleMode, const bool naive, const double base)"

.PP
Build the model on the given reference set\&. Make sure kernelType is equal to the correct entry in KernelTypes for the given KernelType class! 
.SS "int KernelType () const\fC [inline]\fP"

.PP
Get the kernel type\&. 
.PP
Definition at line 94 of file fastmks_model\&.hpp\&.
.SS "int& KernelType ()\fC [inline]\fP"

.PP
Modify the kernel type\&. 
.PP
Definition at line 96 of file fastmks_model\&.hpp\&.
.PP
References FastMKSModel::Search(), and FastMKSModel::serialize()\&.
.SS "bool Naive () const"

.PP
Get whether or not naive search is used\&. 
.SS "bool& Naive ()"

.PP
Set whether or not naive search is used\&. 
.SS "\fBFastMKSModel\fP& operator= (const \fBFastMKSModel\fP & other)"

.PP
Copy assignment operator\&. 
.SS "\fBFastMKSModel\fP& operator= (\fBFastMKSModel\fP && other)"

.PP
Move assignment operator\&. 
.SS "void Search (\fButil::Timers\fP & timers, const arma::mat & querySet, const size_t k, arma::Mat< size_t > & indices, arma::mat & kernels, const double base)"

.PP
Search with a different query set\&. 
.PP
\fBParameters:\fP
.RS 4
\fIquerySet\fP Set to search with\&. 
.br
\fIk\fP Number of max-kernel candidates to search for\&. 
.br
\fIindices\fP A matrix in which to store the indices of max-kernel candidates\&. 
.br
\fIkernels\fP A matrix in which to store the max-kernel candidate kernel values\&. 
.br
\fIbase\fP Base to use for cover tree building (if in dual-tree search mode)\&. 
.RE
.PP

.PP
Referenced by FastMKSModel::KernelType()\&.
.SS "void Search (\fButil::Timers\fP & timers, const size_t k, arma::Mat< size_t > & indices, arma::mat & kernels)"

.PP
Search with the reference set as the query set\&. 
.PP
\fBParameters:\fP
.RS 4
\fIk\fP Number of max-kernel candidates to search for\&. 
.br
\fIindices\fP A matrix in which to store the indices of max-kernel candidates\&. 
.br
\fIkernels\fP A matrix in which to store the max-kernel candidate kernel values\&. 
.RE
.PP

.SS "void serialize (Archive & ar, const uint32_t)"

.PP
Serialize the model\&. 
.PP
Referenced by FastMKSModel::KernelType()\&.
.SS "bool SingleMode () const"

.PP
Get whether or not single-tree search is used\&. 
.SS "bool& SingleMode ()"

.PP
Set whether or not single-tree search is used\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
