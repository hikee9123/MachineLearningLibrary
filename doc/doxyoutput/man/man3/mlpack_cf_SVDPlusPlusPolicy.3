.TH "SVDPlusPlusPolicy" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SVDPlusPlusPolicy \- Implementation of the SVDPlusPlus policy to act as a wrapper when accessing SVDPlusPlus from within \fBCFType\fP\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSVDPlusPlusPolicy\fP (const size_t maxIterations=10, const double alpha=0\&.001, const double lambda=0\&.1)"
.br
.RI "Use SVDPlusPlus method to perform collaborative filtering\&. "
.ti -1c
.RI "double \fBAlpha\fP () const"
.br
.RI "Get learning rate\&. "
.ti -1c
.RI "double & \fBAlpha\fP ()"
.br
.RI "Modify learning rate\&. "
.ti -1c
.RI "void \fBApply\fP (const arma::mat &data, const arma::sp_mat &, const size_t rank, const size_t maxIterations, const double, const bool)"
.br
.RI "Apply Collaborative Filtering to the provided data set using the svdplusplus\&. "
.ti -1c
.RI "template<typename NeighborSearchPolicy > void \fBGetNeighborhood\fP (const arma::Col< size_t > &users, const size_t numUsersForSimilarity, arma::Mat< size_t > &neighborhood, arma::mat &similarities) const"
.br
.RI "Get the neighborhood and corresponding similarities for a set of users\&. "
.ti -1c
.RI "double \fBGetRating\fP (const size_t user, const size_t item) const"
.br
.RI "Return predicted rating given user ID and item ID\&. "
.ti -1c
.RI "void \fBGetRatingOfUser\fP (const size_t user, arma::vec &rating) const"
.br
.RI "Get predicted ratings for a user\&. "
.ti -1c
.RI "const arma::mat & \fBH\fP () const"
.br
.RI "Get the User Matrix\&. "
.ti -1c
.RI "const arma::sp_mat & \fBImplicitData\fP () const"
.br
.RI "Get Implicit Feedback Data\&. "
.ti -1c
.RI "double \fBLambda\fP () const"
.br
.RI "Get regularization parameter\&. "
.ti -1c
.RI "double & \fBLambda\fP ()"
.br
.RI "Modify regularization parameter\&. "
.ti -1c
.RI "size_t \fBMaxIterations\fP () const"
.br
.RI "Get the number of iterations\&. "
.ti -1c
.RI "size_t & \fBMaxIterations\fP ()"
.br
.RI "Modify the number of iterations\&. "
.ti -1c
.RI "const arma::vec & \fBP\fP () const"
.br
.RI "Get the Item Bias Vector\&. "
.ti -1c
.RI "const arma::vec & \fBQ\fP () const"
.br
.RI "Get the User Bias Vector\&. "
.ti -1c
.RI "template<typename Archive > void \fBserialize\fP (Archive &ar, const uint32_t)"
.br
.RI "Serialization\&. "
.ti -1c
.RI "const arma::mat & \fBW\fP () const"
.br
.RI "Get the Item Matrix\&. "
.ti -1c
.RI "const arma::mat & \fBY\fP () const"
.br
.RI "Get the Item Implicit Matrix\&. "
.in -1c
.SH "Detailed Description"
.PP 
Implementation of the SVDPlusPlus policy to act as a wrapper when accessing SVDPlusPlus from within \fBCFType\fP\&. 

An example of how to use \fBSVDPlusPlusPolicy\fP in CF is shown below:
.PP
.PP
.nf
extern arma::mat data; // data is a (user, item, rating) table\&.
// Users for whom recommendations are generated\&.
extern arma::Col<size_t> users;
arma::Mat<size_t> recommendations; // Resulting recommendations\&.

CFType<SVDPlusPlusPolicy> cf(data);

// Generate 10 recommendations for all users\&.
cf\&.GetRecommendations(10, recommendations);
.fi
.PP
 
.PP
Definition at line 41 of file svdplusplus_method\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBSVDPlusPlusPolicy\fP (const size_t maxIterations = \fC10\fP, const double alpha = \fC0\&.001\fP, const double lambda = \fC0\&.1\fP)\fC [inline]\fP"

.PP
Use SVDPlusPlus method to perform collaborative filtering\&. 
.PP
\fBParameters:\fP
.RS 4
\fImaxIterations\fP Number of iterations\&. 
.br
\fIalpha\fP Learning rate for optimization\&. 
.br
\fIlambda\fP Regularization parameter for optimization\&. 
.RE
.PP

.PP
Definition at line 51 of file svdplusplus_method\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "double Alpha () const\fC [inline]\fP"

.PP
Get learning rate\&. 
.PP
Definition at line 193 of file svdplusplus_method\&.hpp\&.
.SS "double& Alpha ()\fC [inline]\fP"

.PP
Modify learning rate\&. 
.PP
Definition at line 195 of file svdplusplus_method\&.hpp\&.
.SS "void Apply (const arma::mat & data, const arma::sp_mat &, const size_t rank, const size_t maxIterations, const double, const bool)\fC [inline]\fP"

.PP
Apply Collaborative Filtering to the provided data set using the svdplusplus\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP Data matrix: dense matrix (coordinate lists) or sparse matrix(cleaned)\&. 
.br
\fI*\fP (cleanedData) item user table in form of sparse matrix\&. 
.br
\fIrank\fP Rank parameter for matrix factorization\&. 
.br
\fImaxIterations\fP Maximum number of iterations\&. 
.br
\fI*\fP (minResidue) Residue required to terminate\&. 
.br
\fI*\fP (mit) Whether to terminate only when maxIterations is reached\&. 
.RE
.PP

.PP
Definition at line 73 of file svdplusplus_method\&.hpp\&.
.PP
References SVDPlusPlus< OptimizerType >::Apply(), and SVDPlusPlus< OptimizerType >::CleanData()\&.
.SS "void GetNeighborhood (const arma::Col< size_t > & users, const size_t numUsersForSimilarity, arma::Mat< size_t > & neighborhood, arma::mat & similarities) const\fC [inline]\fP"

.PP
Get the neighborhood and corresponding similarities for a set of users\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fINeighborSearchPolicy\fP The policy to perform neighbor search\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIusers\fP Users whose neighborhood is to be computed\&. 
.br
\fInumUsersForSimilarity\fP The number of neighbors returned for each user\&. 
.br
\fIneighborhood\fP Neighbors represented by user IDs\&. 
.br
\fIsimilarities\fP Similarity between each user and each of its neighbors\&. 
.RE
.PP

.PP
Definition at line 157 of file svdplusplus_method\&.hpp\&.
.SS "double GetRating (const size_t user, const size_t item) const\fC [inline]\fP"

.PP
Return predicted rating given user ID and item ID\&. 
.PP
\fBParameters:\fP
.RS 4
\fIuser\fP User ID\&. 
.br
\fIitem\fP Item ID\&. 
.RE
.PP

.PP
Definition at line 96 of file svdplusplus_method\&.hpp\&.
.SS "void GetRatingOfUser (const size_t user, arma::vec & rating) const\fC [inline]\fP"

.PP
Get predicted ratings for a user\&. 
.PP
\fBParameters:\fP
.RS 4
\fIuser\fP User ID\&. 
.br
\fIrating\fP Resulting rating vector\&. 
.RE
.PP

.PP
Definition at line 124 of file svdplusplus_method\&.hpp\&.
.SS "const arma::mat& H () const\fC [inline]\fP"

.PP
Get the User Matrix\&. 
.PP
Definition at line 177 of file svdplusplus_method\&.hpp\&.
.SS "const arma::sp_mat& ImplicitData () const\fC [inline]\fP"

.PP
Get Implicit Feedback Data\&. 
.PP
Definition at line 185 of file svdplusplus_method\&.hpp\&.
.SS "double Lambda () const\fC [inline]\fP"

.PP
Get regularization parameter\&. 
.PP
Definition at line 198 of file svdplusplus_method\&.hpp\&.
.SS "double& Lambda ()\fC [inline]\fP"

.PP
Modify regularization parameter\&. 
.PP
Definition at line 200 of file svdplusplus_method\&.hpp\&.
.SS "size_t MaxIterations () const\fC [inline]\fP"

.PP
Get the number of iterations\&. 
.PP
Definition at line 188 of file svdplusplus_method\&.hpp\&.
.SS "size_t& MaxIterations ()\fC [inline]\fP"

.PP
Modify the number of iterations\&. 
.PP
Definition at line 190 of file svdplusplus_method\&.hpp\&.
.SS "const arma::vec& P () const\fC [inline]\fP"

.PP
Get the Item Bias Vector\&. 
.PP
Definition at line 181 of file svdplusplus_method\&.hpp\&.
.SS "const arma::vec& Q () const\fC [inline]\fP"

.PP
Get the User Bias Vector\&. 
.PP
Definition at line 179 of file svdplusplus_method\&.hpp\&.
.SS "void serialize (Archive & ar, const uint32_t)\fC [inline]\fP"

.PP
Serialization\&. 
.PP
Definition at line 206 of file svdplusplus_method\&.hpp\&.
.SS "const arma::mat& W () const\fC [inline]\fP"

.PP
Get the Item Matrix\&. 
.PP
Definition at line 175 of file svdplusplus_method\&.hpp\&.
.SS "const arma::mat& Y () const\fC [inline]\fP"

.PP
Get the Item Implicit Matrix\&. 
.PP
Definition at line 183 of file svdplusplus_method\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
