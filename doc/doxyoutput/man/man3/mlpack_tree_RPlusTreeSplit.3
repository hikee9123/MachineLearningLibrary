.TH "RPlusTreeSplit< SplitPolicyType, SweepType >" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RPlusTreeSplit< SplitPolicyType, SweepType > \- The \fBRPlusTreeSplit\fP class performs the split process of a node on overflow\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef SplitPolicyType \fBSplitPolicy\fP"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "template<typename TreeType > static void \fBSplitLeafNode\fP (TreeType *tree, std::vector< bool > &relevels)"
.br
.RI "Split a leaf node using the 'default' algorithm\&. "
.ti -1c
.RI "template<typename TreeType > static bool \fBSplitNonLeafNode\fP (TreeType *tree, std::vector< bool > &relevels)"
.br
.RI "Split a non-leaf node using the 'default' algorithm\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename SplitPolicyType, template< typename > class SweepType>
.br
class mlpack::tree::RPlusTreeSplit< SplitPolicyType, SweepType >"
The \fBRPlusTreeSplit\fP class performs the split process of a node on overflow\&. 


.PP
\fBTemplate Parameters:\fP
.RS 4
\fISplitPolicyType\fP The class that helps to determine the subtree into which we should insert a child node\&. 
.br
\fISweepType\fP The class that finds the partition of a node along a given axis\&. The partition algorithm tries to find a partition along each axis, evaluates each partition and chooses the best one\&. 
.RE
.PP

.PP
Definition at line 32 of file r_plus_tree_split\&.hpp\&.
.SH "Member Typedef Documentation"
.PP 
.SS "typedef SplitPolicyType \fBSplitPolicy\fP"

.PP
Definition at line 35 of file r_plus_tree_split\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "static void SplitLeafNode (TreeType * tree, std::vector< bool > & relevels)\fC [static]\fP"

.PP
Split a leaf node using the 'default' algorithm\&. If necessary, this split will propagate upwards through the tree\&. 
.PP
\fBParameters:\fP
.RS 4
\fItree\fP The node that is being split\&. 
.br
\fIrelevels\fP Not used\&. 
.RE
.PP

.SS "static bool SplitNonLeafNode (TreeType * tree, std::vector< bool > & relevels)\fC [static]\fP"

.PP
Split a non-leaf node using the 'default' algorithm\&. If this is a root node, the tree increases in depth\&. 
.PP
\fBParameters:\fP
.RS 4
\fItree\fP The node that is being split\&. 
.br
\fIrelevels\fP Not used\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
