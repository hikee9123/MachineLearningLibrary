.TH "/home/aakash/mlpack/src/mlpack/core/data/split_data.hpp" 3 "Thu Jun 24 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/aakash/mlpack/src/mlpack/core/data/split_data.hpp
.SH SYNOPSIS
.br
.PP
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBmlpack\fP"
.br
.RI "Linear algebra utility functions, generally performed on matrices or vectors\&. "
.ti -1c
.RI " \fBmlpack::data\fP"
.br
.RI "Functions to load and save matrices and models\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename T , typename LabelsType , typename  = std::enable_if_t<arma::is_arma_type<LabelsType>::value>> void \fBSplit\fP (const arma::Mat< T > &input, const LabelsType &inputLabel, arma::Mat< T > &trainData, arma::Mat< T > &testData, LabelsType &trainLabel, LabelsType &testLabel, const double testRatio, const bool shuffleData=true)"
.br
.RI "Given an input dataset and labels, split into a training set and test set\&. "
.ti -1c
.RI "template<typename T > void \fBSplit\fP (const arma::Mat< T > &input, arma::Mat< T > &trainData, arma::Mat< T > &testData, const double testRatio, const bool shuffleData=true)"
.br
.RI "Given an input dataset, split into a training set and test set\&. "
.ti -1c
.RI "template<typename T , typename LabelsType , typename  = std::enable_if_t<arma::is_arma_type<LabelsType>::value>> std::tuple< arma::Mat< T >, arma::Mat< T >, LabelsType, LabelsType > \fBSplit\fP (const arma::Mat< T > &input, const LabelsType &inputLabel, const double testRatio, const bool shuffleData=true, const bool stratifyData=false)"
.br
.RI "Given an input dataset and labels, split into a training set and test set\&. "
.ti -1c
.RI "template<typename T > std::tuple< arma::Mat< T >, arma::Mat< T > > \fBSplit\fP (const arma::Mat< T > &input, const double testRatio, const bool shuffleData=true)"
.br
.RI "Given an input dataset, split into a training set and test set\&. "
.ti -1c
.RI "template<typename FieldType , typename T , typename  = std::enable_if_t<              arma::is_Col<typename FieldType::object_type>::value ||              arma::is_Mat_only<typename FieldType::object_type>::value>> void \fBSplit\fP (const FieldType &input, const arma::field< T > &inputLabel, FieldType &trainData, arma::field< T > &trainLabel, FieldType &testData, arma::field< T > &testLabel, const double testRatio, const bool shuffleData=true)"
.br
.RI "Given an input dataset and labels, split into a training set and test set\&. "
.ti -1c
.RI "template<class FieldType , class  = std::enable_if_t<              arma::is_Col<typename FieldType::object_type>::value ||              arma::is_Mat_only<typename FieldType::object_type>::value>> void \fBSplit\fP (const FieldType &input, FieldType &trainData, FieldType &testData, const double testRatio, const bool shuffleData=true)"
.br
.RI "Given an input dataset, split into a training set and test set\&. "
.ti -1c
.RI "template<class FieldType , typename T , class  = std::enable_if_t<              arma::is_Col<typename FieldType::object_type>::value ||              arma::is_Mat_only<typename FieldType::object_type>::value>> std::tuple< FieldType, FieldType, arma::field< T >, arma::field< T > > \fBSplit\fP (const FieldType &input, const arma::field< T > &inputLabel, const double testRatio, const bool shuffleData=true)"
.br
.RI "Given an input dataset and labels, split into a training set and test set\&. "
.ti -1c
.RI "template<class FieldType , class  = std::enable_if_t<              arma::is_Col<typename FieldType::object_type>::value ||              arma::is_Mat_only<typename FieldType::object_type>::value>> std::tuple< FieldType, FieldType > \fBSplit\fP (const FieldType &input, const double testRatio, const bool shuffleData=true)"
.br
.RI "Given an input dataset, split into a training set and test set\&. "
.ti -1c
.RI "template<typename InputType > void \fBSplitHelper\fP (const InputType &input, InputType &train, InputType &test, const double testRatio, const arma::uvec &order=arma::uvec())"
.br
.RI "This helper function splits any \fCinput\fP data into training and testing parts\&. "
.ti -1c
.RI "template<typename T , typename LabelsType , typename  = std::enable_if_t<arma::is_arma_type<LabelsType>::value>> void \fBStratifiedSplit\fP (const arma::Mat< T > &input, const LabelsType &inputLabel, arma::Mat< T > &trainData, arma::Mat< T > &testData, LabelsType &trainLabel, LabelsType &testLabel, const double testRatio, const bool shuffleData=true)"
.br
.RI "Given an input dataset and labels, stratify into a training set and test set\&. "
.in -1c
.SH "Detailed Description"
.PP 

.PP
\fBAuthor:\fP
.RS 4
Tham Ngap Wei, Keon Kim
.RE
.PP
Defines \fBSplit()\fP, a utility function to split a dataset into a training set and a test set\&.
.PP
mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license\&. You should have received a copy of the 3-clause BSD license along with mlpack\&. If not, see http://www.opensource.org/licenses/BSD-3-Clause for more information\&. 
.PP
Definition in file \fBsplit_data\&.hpp\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
