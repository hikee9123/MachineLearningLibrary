.TH "Constraints< MetricType >" 3 "Sun Aug 22 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Constraints< MetricType > \- Interface for generating distance based constraints on a given dataset, provided corresponding true labels and a quantity parameter (k) are specified\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef \fBneighbor::NeighborSearch\fP< \fBneighbor::NearestNeighborSort\fP, MetricType > \fBKNN\fP"
.br
.RI "Convenience typedef\&. "
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBConstraints\fP (const arma::mat &dataset, const arma::Row< size_t > &labels, const size_t k)"
.br
.RI "Constructor for creating a \fBConstraints\fP instance\&. "
.ti -1c
.RI "void \fBImpostors\fP (arma::Mat< size_t > &outputMatrix, const arma::mat &dataset, const arma::Row< size_t > &labels, const arma::vec &norms)"
.br
.RI "Calculates k differently labeled nearest neighbors for each datapoint and writes them back to passed matrix\&. "
.ti -1c
.RI "void \fBImpostors\fP (arma::Mat< size_t > &outputNeighbors, arma::mat &outputDistance, const arma::mat &dataset, const arma::Row< size_t > &labels, const arma::vec &norms)"
.br
.RI "Calculates k differently labeled nearest neighbors & distances to impostors for each datapoint and writes them back to passed matrices\&. "
.ti -1c
.RI "void \fBImpostors\fP (arma::Mat< size_t > &outputMatrix, const arma::mat &dataset, const arma::Row< size_t > &labels, const arma::vec &norms, const size_t begin, const size_t batchSize)"
.br
.RI "Calculates k differently labeled nearest neighbors for a batch of dataset and writes them back to passed matrix\&. "
.ti -1c
.RI "void \fBImpostors\fP (arma::Mat< size_t > &outputNeighbors, arma::mat &outputDistance, const arma::mat &dataset, const arma::Row< size_t > &labels, const arma::vec &norms, const size_t begin, const size_t batchSize)"
.br
.RI "Calculates k differently labeled nearest neighbors & distances to impostors for a batch of dataset and writes them back to passed matrices\&. "
.ti -1c
.RI "void \fBImpostors\fP (arma::Mat< size_t > &outputNeighbors, arma::mat &outputDistance, const arma::mat &dataset, const arma::Row< size_t > &labels, const arma::vec &norms, const arma::uvec &points, const size_t numPoints)"
.br
.RI "Calculates k differently labeled nearest neighbors & distances to impostors for some points of dataset and writes them back to passed matrices\&. "
.ti -1c
.RI "const size_t & \fBK\fP () const"
.br
.RI "Get the number of target neighbors (k)\&. "
.ti -1c
.RI "size_t & \fBK\fP ()"
.br
.RI "Modify the number of target neighbors (k)\&. "
.ti -1c
.RI "const bool & \fBPreCalulated\fP () const"
.br
.RI "Access the boolean value of precalculated\&. "
.ti -1c
.RI "bool & \fBPreCalulated\fP ()"
.br
.RI "Modify the value of precalculated\&. "
.ti -1c
.RI "void \fBTargetNeighbors\fP (arma::Mat< size_t > &outputMatrix, const arma::mat &dataset, const arma::Row< size_t > &labels, const arma::vec &norms)"
.br
.RI "Calculates k similar labeled nearest neighbors and stores them into the passed matrix\&. "
.ti -1c
.RI "void \fBTargetNeighbors\fP (arma::Mat< size_t > &outputMatrix, const arma::mat &dataset, const arma::Row< size_t > &labels, const arma::vec &norms, const size_t begin, const size_t batchSize)"
.br
.RI "Calculates k similar labeled nearest neighbors for a batch of dataset and stores them into the passed matrix\&. "
.ti -1c
.RI "void \fBTriplets\fP (arma::Mat< size_t > &outputMatrix, const arma::mat &dataset, const arma::Row< size_t > &labels, const arma::vec &norms)"
.br
.RI "Generate triplets {i, j, l} for each datapoint i and writes back generated triplets to matrix passed\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename MetricType = metric::SquaredEuclideanDistance>
.br
class mlpack::lmnn::Constraints< MetricType >"
Interface for generating distance based constraints on a given dataset, provided corresponding true labels and a quantity parameter (k) are specified\&. 

Class provides \fBTargetNeighbors()\fP (Used for calculating target neighbors of each data point), \fBImpostors()\fP (used for calculating impostors of each data point) and \fBTriplets()\fP (Generates sets of {dataset, target neighbors, impostors} tripltets\&.) 
.PP
Definition at line 31 of file constraints\&.hpp\&.
.SH "Member Typedef Documentation"
.PP 
.SS "typedef \fBneighbor::NeighborSearch\fP<\fBneighbor::NearestNeighborSort\fP, MetricType> \fBKNN\fP"

.PP
Convenience typedef\&. 
.PP
Definition at line 36 of file constraints\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBConstraints\fP (const arma::mat & dataset, const arma::Row< size_t > & labels, const size_t k)"

.PP
Constructor for creating a \fBConstraints\fP instance\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdataset\fP Input dataset\&. 
.br
\fIlabels\fP Input dataset labels\&. 
.br
\fIk\fP Number of target neighbors, impostors & triplets\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void Impostors (arma::Mat< size_t > & outputMatrix, const arma::mat & dataset, const arma::Row< size_t > & labels, const arma::vec & norms)"

.PP
Calculates k differently labeled nearest neighbors for each datapoint and writes them back to passed matrix\&. 
.PP
\fBParameters:\fP
.RS 4
\fIoutputMatrix\fP Coordinates matrix to store impostors\&. 
.br
\fIdataset\fP Input dataset\&. 
.br
\fIlabels\fP Input dataset labels\&. 
.br
\fInorms\fP Input dataset norms\&. 
.RE
.PP

.SS "void Impostors (arma::Mat< size_t > & outputNeighbors, arma::mat & outputDistance, const arma::mat & dataset, const arma::Row< size_t > & labels, const arma::vec & norms)"

.PP
Calculates k differently labeled nearest neighbors & distances to impostors for each datapoint and writes them back to passed matrices\&. 
.PP
\fBParameters:\fP
.RS 4
\fIoutputNeighbors\fP Coordinates matrix to store impostors\&. 
.br
\fIoutputDistance\fP matrix to store distance\&. 
.br
\fIdataset\fP Input dataset\&. 
.br
\fIlabels\fP Input dataset labels\&. 
.br
\fInorms\fP Input dataset norms\&. 
.RE
.PP

.SS "void Impostors (arma::Mat< size_t > & outputMatrix, const arma::mat & dataset, const arma::Row< size_t > & labels, const arma::vec & norms, const size_t begin, const size_t batchSize)"

.PP
Calculates k differently labeled nearest neighbors for a batch of dataset and writes them back to passed matrix\&. 
.PP
\fBParameters:\fP
.RS 4
\fIoutputMatrix\fP Coordinates matrix to store impostors\&. 
.br
\fIdataset\fP Input dataset\&. 
.br
\fIlabels\fP Input dataset labels\&. 
.br
\fInorms\fP Input dataset norms\&. 
.br
\fIbegin\fP Index of the initial point of dataset\&. 
.br
\fIbatchSize\fP Number of data points to use\&. 
.RE
.PP

.SS "void Impostors (arma::Mat< size_t > & outputNeighbors, arma::mat & outputDistance, const arma::mat & dataset, const arma::Row< size_t > & labels, const arma::vec & norms, const size_t begin, const size_t batchSize)"

.PP
Calculates k differently labeled nearest neighbors & distances to impostors for a batch of dataset and writes them back to passed matrices\&. 
.PP
\fBParameters:\fP
.RS 4
\fIoutputNeighbors\fP Coordinates matrix to store impostors\&. 
.br
\fIoutputDistance\fP matrix to store distance\&. 
.br
\fIdataset\fP Input dataset\&. 
.br
\fIlabels\fP Input dataset labels\&. 
.br
\fInorms\fP Input dataset norms\&. 
.br
\fIbegin\fP Index of the initial point of dataset\&. 
.br
\fIbatchSize\fP Number of data points to use\&. 
.RE
.PP

.SS "void Impostors (arma::Mat< size_t > & outputNeighbors, arma::mat & outputDistance, const arma::mat & dataset, const arma::Row< size_t > & labels, const arma::vec & norms, const arma::uvec & points, const size_t numPoints)"

.PP
Calculates k differently labeled nearest neighbors & distances to impostors for some points of dataset and writes them back to passed matrices\&. 
.PP
\fBParameters:\fP
.RS 4
\fIoutputNeighbors\fP Coordinates matrix to store impostors\&. 
.br
\fIoutputDistance\fP matrix to store distance\&. 
.br
\fIdataset\fP Input dataset\&. 
.br
\fIlabels\fP Input dataset labels\&. 
.br
\fInorms\fP Input dataset norms\&. 
.br
\fIpoints\fP Indices of data points to calculate impostors on\&. 
.br
\fInumPoints\fP Number of points to actually calculate impostors on\&. 
.RE
.PP

.SS "const size_t& K () const\fC [inline]\fP"

.PP
Get the number of target neighbors (k)\&. 
.PP
Definition at line 185 of file constraints\&.hpp\&.
.SS "size_t& K ()\fC [inline]\fP"

.PP
Modify the number of target neighbors (k)\&. 
.PP
Definition at line 187 of file constraints\&.hpp\&.
.SS "const bool& PreCalulated () const\fC [inline]\fP"

.PP
Access the boolean value of precalculated\&. 
.PP
Definition at line 190 of file constraints\&.hpp\&.
.SS "bool& PreCalulated ()\fC [inline]\fP"

.PP
Modify the value of precalculated\&. 
.PP
Definition at line 192 of file constraints\&.hpp\&.
.SS "void TargetNeighbors (arma::Mat< size_t > & outputMatrix, const arma::mat & dataset, const arma::Row< size_t > & labels, const arma::vec & norms)"

.PP
Calculates k similar labeled nearest neighbors and stores them into the passed matrix\&. 
.PP
\fBParameters:\fP
.RS 4
\fIoutputMatrix\fP Coordinates matrix to store target neighbors\&. 
.br
\fIdataset\fP Input dataset\&. 
.br
\fIlabels\fP Input dataset labels\&. 
.br
\fInorms\fP Input dataset norms\&. 
.RE
.PP

.SS "void TargetNeighbors (arma::Mat< size_t > & outputMatrix, const arma::mat & dataset, const arma::Row< size_t > & labels, const arma::vec & norms, const size_t begin, const size_t batchSize)"

.PP
Calculates k similar labeled nearest neighbors for a batch of dataset and stores them into the passed matrix\&. 
.PP
\fBParameters:\fP
.RS 4
\fIoutputMatrix\fP Coordinates matrix to store target neighbors\&. 
.br
\fIdataset\fP Input dataset\&. 
.br
\fIlabels\fP Input dataset labels\&. 
.br
\fInorms\fP Input dataset norms\&. 
.br
\fIbegin\fP Index of the initial point of dataset\&. 
.br
\fIbatchSize\fP Number of data points to use\&. 
.RE
.PP

.SS "void Triplets (arma::Mat< size_t > & outputMatrix, const arma::mat & dataset, const arma::Row< size_t > & labels, const arma::vec & norms)"

.PP
Generate triplets {i, j, l} for each datapoint i and writes back generated triplets to matrix passed\&. 
.PP
\fBParameters:\fP
.RS 4
\fIoutputMatrix\fP Coordinates matrix to store triplets\&. 
.br
\fIdataset\fP Input dataset\&. 
.br
\fIlabels\fP Input dataset labels\&. 
.br
\fInorms\fP Input dataset norms\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
