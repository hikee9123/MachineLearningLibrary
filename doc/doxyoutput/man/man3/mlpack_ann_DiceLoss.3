.TH "DiceLoss< InputDataType, OutputDataType >" 3 "Sun Aug 22 2021" "Version 3.4.2" "mlpack" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DiceLoss< InputDataType, OutputDataType > \- The dice loss performance function measures the network's performance according to the dice coefficient between the input and target distributions\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDiceLoss\fP (const double smooth=1)"
.br
.RI "Create the \fBDiceLoss\fP object\&. "
.ti -1c
.RI "template<typename PredictionType , typename TargetType , typename LossType > void \fBBackward\fP (const PredictionType &prediction, const TargetType &target, LossType &loss)"
.br
.RI "Ordinary feed backward pass of a neural network\&. "
.ti -1c
.RI "template<typename PredictionType , typename TargetType > PredictionType::elem_type \fBForward\fP (const PredictionType &prediction, const TargetType &target)"
.br
.RI "Computes the dice loss function\&. "
.ti -1c
.RI "OutputDataType & \fBOutputParameter\fP () const"
.br
.RI "Get the output parameter\&. "
.ti -1c
.RI "OutputDataType & \fBOutputParameter\fP ()"
.br
.RI "Modify the output parameter\&. "
.ti -1c
.RI "template<typename Archive > void \fBserialize\fP (Archive &ar, const uint32_t)"
.br
.RI "Serialize the layer\&. "
.ti -1c
.RI "double \fBSmooth\fP () const"
.br
.RI "Get the smooth\&. "
.ti -1c
.RI "double & \fBSmooth\fP ()"
.br
.RI "Modify the smooth\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename InputDataType = arma::mat, typename OutputDataType = arma::mat>
.br
class mlpack::ann::DiceLoss< InputDataType, OutputDataType >"
The dice loss performance function measures the network's performance according to the dice coefficient between the input and target distributions\&. 

For more information see the following\&.
.PP
.PP
.nf
@article{Milletari2016,
  author    = {Fausto Milletari and Nassir Navab and Seyed{-}Ahmad Ahmadi},
  title     = {V-Net: Fully Convolutional Neural Networks for
               Volumetric Medical Image Segmentation},
  journal   = {CoRR},
  volume    = {abs/1606\&.04797},
  year      = {2016},
  url       = {http://arxiv\&.org/abs/1606\&.04797},
  archivePrefix = {arXiv},
  eprint    = {1606\&.04797},
}
.fi
.PP
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIInputDataType\fP Type of the input data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.br
\fIOutputDataType\fP Type of the output data (arma::colvec, arma::mat, arma::sp_mat or arma::cube)\&. 
.RE
.PP

.PP
Definition at line 50 of file dice_loss\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBDiceLoss\fP (const double smooth = \fC1\fP)"

.PP
Create the \fBDiceLoss\fP object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsmooth\fP The Laplace smoothing parameter\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void Backward (const PredictionType & prediction, const TargetType & target, LossType & loss)"

.PP
Ordinary feed backward pass of a neural network\&. 
.PP
\fBParameters:\fP
.RS 4
\fIprediction\fP Predictions used for evaluating the specified loss function\&. 
.br
\fItarget\fP The target vector\&. 
.br
\fIloss\fP The calculated error\&. 
.RE
.PP

.SS "PredictionType::elem_type Forward (const PredictionType & prediction, const TargetType & target)"

.PP
Computes the dice loss function\&. 
.PP
\fBParameters:\fP
.RS 4
\fIprediction\fP Predictions used for evaluating the specified loss function\&. 
.br
\fItarget\fP The target vector\&. 
.RE
.PP

.SS "OutputDataType& OutputParameter () const\fC [inline]\fP"

.PP
Get the output parameter\&. 
.PP
Definition at line 85 of file dice_loss\&.hpp\&.
.SS "OutputDataType& OutputParameter ()\fC [inline]\fP"

.PP
Modify the output parameter\&. 
.PP
Definition at line 87 of file dice_loss\&.hpp\&.
.SS "void serialize (Archive & ar, const uint32_t)"

.PP
Serialize the layer\&. 
.PP
Referenced by DiceLoss< InputDataType, OutputDataType >::Smooth()\&.
.SS "double Smooth () const\fC [inline]\fP"

.PP
Get the smooth\&. 
.PP
Definition at line 90 of file dice_loss\&.hpp\&.
.SS "double& Smooth ()\fC [inline]\fP"

.PP
Modify the smooth\&. 
.PP
Definition at line 92 of file dice_loss\&.hpp\&.
.PP
References DiceLoss< InputDataType, OutputDataType >::serialize()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlpack from the source code\&.
