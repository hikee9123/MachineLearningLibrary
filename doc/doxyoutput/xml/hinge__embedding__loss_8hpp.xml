<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="hinge__embedding__loss_8hpp" kind="file" language="C++">
    <compoundname>hinge_embedding_loss.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="yes">hinge_embedding_loss_impl.hpp</includes>
    <incdepgraph>
      <node id="40472">
        <label>list</label>
      </node>
      <node id="40469">
        <label>atomic</label>
      </node>
      <node id="40459">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="40435">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="40471">
        <label>iomanip</label>
      </node>
      <node id="40444">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="40445" relation="include">
        </childnode>
        <childnode refid="40447" relation="include">
        </childnode>
      </node>
      <node id="40427">
        <label>cstdint</label>
      </node>
      <node id="40436">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="40443">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="40466">
        <label>arma_config.hpp</label>
      </node>
      <node id="40456">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="40423">
        <label>cmath</label>
      </node>
      <node id="40442">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="40431">
        <label>stdexcept</label>
      </node>
      <node id="40451">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="40436" relation="include">
        </childnode>
        <childnode refid="40438" relation="include">
        </childnode>
        <childnode refid="40439" relation="include">
        </childnode>
        <childnode refid="40437" relation="include">
        </childnode>
      </node>
      <node id="40475">
        <label>string</label>
      </node>
      <node id="40463">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="40464" relation="include">
        </childnode>
        <childnode refid="40430" relation="include">
        </childnode>
      </node>
      <node id="40473">
        <label>map</label>
      </node>
      <node id="40425">
        <label>cfloat</label>
      </node>
      <node id="40455">
        <label>boost/variant.hpp</label>
      </node>
      <node id="40477">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="40439">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="40462">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="40463" relation="include">
        </childnode>
        <childnode refid="40439" relation="include">
        </childnode>
        <childnode refid="40446" relation="include">
        </childnode>
        <childnode refid="40464" relation="include">
        </childnode>
      </node>
      <node id="40452">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="40450">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="40436" relation="include">
        </childnode>
        <childnode refid="40438" relation="include">
        </childnode>
        <childnode refid="40439" relation="include">
        </childnode>
        <childnode refid="40437" relation="include">
        </childnode>
      </node>
      <node id="40453">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="40436" relation="include">
        </childnode>
        <childnode refid="40438" relation="include">
        </childnode>
        <childnode refid="40439" relation="include">
        </childnode>
        <childnode refid="40437" relation="include">
        </childnode>
      </node>
      <node id="40441">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="40461">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="40437" relation="include">
        </childnode>
        <childnode refid="40438" relation="include">
        </childnode>
        <childnode refid="40439" relation="include">
        </childnode>
        <childnode refid="40449" relation="include">
        </childnode>
        <childnode refid="40458" relation="include">
        </childnode>
      </node>
      <node id="40465">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="40466" relation="include">
        </childnode>
      </node>
      <node id="40467">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="40422">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="40423" relation="include">
        </childnode>
        <childnode refid="40424" relation="include">
        </childnode>
        <childnode refid="40425" relation="include">
        </childnode>
        <childnode refid="40426" relation="include">
        </childnode>
        <childnode refid="40427" relation="include">
        </childnode>
        <childnode refid="40428" relation="include">
        </childnode>
        <childnode refid="40429" relation="include">
        </childnode>
        <childnode refid="40430" relation="include">
        </childnode>
        <childnode refid="40431" relation="include">
        </childnode>
        <childnode refid="40432" relation="include">
        </childnode>
        <childnode refid="40433" relation="include">
        </childnode>
        <childnode refid="40434" relation="include">
        </childnode>
        <childnode refid="40435" relation="include">
        </childnode>
        <childnode refid="40436" relation="include">
        </childnode>
        <childnode refid="40437" relation="include">
        </childnode>
        <childnode refid="40438" relation="include">
        </childnode>
        <childnode refid="40439" relation="include">
        </childnode>
        <childnode refid="40440" relation="include">
        </childnode>
        <childnode refid="40441" relation="include">
        </childnode>
        <childnode refid="40442" relation="include">
        </childnode>
        <childnode refid="40443" relation="include">
        </childnode>
        <childnode refid="40444" relation="include">
        </childnode>
        <childnode refid="40448" relation="include">
        </childnode>
        <childnode refid="40449" relation="include">
        </childnode>
        <childnode refid="40450" relation="include">
        </childnode>
        <childnode refid="40451" relation="include">
        </childnode>
        <childnode refid="40452" relation="include">
        </childnode>
        <childnode refid="40453" relation="include">
        </childnode>
        <childnode refid="40454" relation="include">
        </childnode>
        <childnode refid="40460" relation="include">
        </childnode>
        <childnode refid="40461" relation="include">
        </childnode>
        <childnode refid="40458" relation="include">
        </childnode>
        <childnode refid="40462" relation="include">
        </childnode>
        <childnode refid="40465" relation="include">
        </childnode>
        <childnode refid="40467" relation="include">
        </childnode>
        <childnode refid="40468" relation="include">
        </childnode>
        <childnode refid="40477" relation="include">
        </childnode>
        <childnode refid="40478" relation="include">
        </childnode>
      </node>
      <node id="40428">
        <label>cstdio</label>
      </node>
      <node id="40432">
        <label>tuple</label>
      </node>
      <node id="40437">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="40454">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="40437" relation="include">
        </childnode>
        <childnode refid="40438" relation="include">
        </childnode>
        <childnode refid="40439" relation="include">
        </childnode>
        <childnode refid="40441" relation="include">
        </childnode>
        <childnode refid="40455" relation="include">
        </childnode>
        <childnode refid="40456" relation="include">
        </childnode>
        <childnode refid="40457" relation="include">
        </childnode>
        <childnode refid="40458" relation="include">
        </childnode>
      </node>
      <node id="40479">
        <label>hinge_embedding_loss_impl.hpp</label>
      </node>
      <node id="40433">
        <label>utility</label>
      </node>
      <node id="40457">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="40448">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="40445">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="40446" relation="include">
        </childnode>
      </node>
      <node id="40468">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="40469" relation="include">
        </childnode>
        <childnode refid="40470" relation="include">
        </childnode>
        <childnode refid="40471" relation="include">
        </childnode>
        <childnode refid="40472" relation="include">
        </childnode>
        <childnode refid="40473" relation="include">
        </childnode>
        <childnode refid="40474" relation="include">
        </childnode>
        <childnode refid="40475" relation="include">
        </childnode>
        <childnode refid="40476" relation="include">
        </childnode>
      </node>
      <node id="40446">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="40460">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="40458" relation="include">
        </childnode>
        <childnode refid="40454" relation="include">
        </childnode>
        <childnode refid="40461" relation="include">
        </childnode>
      </node>
      <node id="40429">
        <label>cstdlib</label>
      </node>
      <node id="40424">
        <label>cctype</label>
      </node>
      <node id="40447">
        <label>unordered_map</label>
      </node>
      <node id="40426">
        <label>climits</label>
      </node>
      <node id="40474">
        <label>mutex</label>
      </node>
      <node id="40470">
        <label>chrono</label>
      </node>
      <node id="40478">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="40476">
        <label>thread</label>
      </node>
      <node id="40464">
        <label>type_traits</label>
      </node>
      <node id="40440">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="40421">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/hinge_embedding_loss.hpp</label>
        <link refid="hinge__embedding__loss_8hpp"/>
        <childnode refid="40422" relation="include">
        </childnode>
        <childnode refid="40479" relation="include">
        </childnode>
      </node>
      <node id="40434">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="40458">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="40436" relation="include">
        </childnode>
        <childnode refid="40437" relation="include">
        </childnode>
        <childnode refid="40438" relation="include">
        </childnode>
        <childnode refid="40439" relation="include">
        </childnode>
        <childnode refid="40459" relation="include">
        </childnode>
      </node>
      <node id="40430">
        <label>cstring</label>
      </node>
      <node id="40449">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="40438">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1ann_1_1HingeEmbeddingLoss" prot="public">mlpack::ann::HingeEmbeddingLoss</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1ann">mlpack::ann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Lakshya Ojha</para></simplesect>
Definition of the Hinge Embedding Loss Function. The Hinge Embedding loss function is often used to improve performance in semi-supervised learning or to learn nonlinear embeddings.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="15"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_ANN_LOSS_FUNCTION_HINGE_EMBEDDING_LOSS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_ANN_LOSS_FUNCTION_HINGE_EMBEDDING_LOSS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ann<sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputDataType<sp/>=<sp/>arma::mat,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputDataType<sp/>=<sp/>arma::mat</highlight></codeline>
<codeline lineno="35"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="36" refid="classmlpack_1_1ann_1_1HingeEmbeddingLoss" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1ann_1_1HingeEmbeddingLoss" kindref="compound">HingeEmbeddingLoss</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1ann_1_1HingeEmbeddingLoss_1a2289f44104560cff137f0ec305869d77" kindref="member">HingeEmbeddingLoss</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PredictionType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TargetType&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PredictionType::elem_type<sp/><ref refid="classmlpack_1_1ann_1_1HingeEmbeddingLoss_1ab3640059898ea76c13709b8099316fe8" kindref="member">Forward</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PredictionType&amp;<sp/>prediction,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TargetType&amp;<sp/>target);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PredictionType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TargetType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LossType&gt;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1HingeEmbeddingLoss_1add41dbaf358dc099750dc6064cb7e0d7" kindref="member">Backward</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PredictionType&amp;<sp/>prediction,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TargetType&amp;<sp/>target,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LossType&amp;<sp/>loss);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classmlpack_1_1ann_1_1HingeEmbeddingLoss_1a8bae962cc603d1cab8d80ec78f8d505d" refkind="member"><highlight class="normal"><sp/><sp/>OutputDataType&amp;<sp/><ref refid="classmlpack_1_1ann_1_1HingeEmbeddingLoss_1a8bae962cc603d1cab8d80ec78f8d505d" kindref="member">OutputParameter</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputParameter;<sp/>}</highlight></codeline>
<codeline lineno="71" refid="classmlpack_1_1ann_1_1HingeEmbeddingLoss_1a21d5f745f02c709625a4ee0907f004a5" refkind="member"><highlight class="normal"><sp/><sp/>OutputDataType&amp;<sp/><ref refid="classmlpack_1_1ann_1_1HingeEmbeddingLoss_1a21d5f745f02c709625a4ee0907f004a5" kindref="member">OutputParameter</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputParameter;<sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1HingeEmbeddingLoss_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>OutputDataType<sp/>outputParameter;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>HingeEmbeddingLoss</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>include<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hinge_embedding_loss_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/hinge_embedding_loss.hpp"/>
  </compounddef>
</doxygen>
