<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="aggregated__policy_8hpp" kind="file" language="C++">
    <compoundname>aggregated_policy.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="discrete__distribution_8hpp" local="no">mlpack/core/dists/discrete_distribution.hpp</includes>
    <incdepgraph>
      <node id="56058">
        <label>list</label>
      </node>
      <node id="56055">
        <label>atomic</label>
      </node>
      <node id="56045">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="56021">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="56057">
        <label>iomanip</label>
      </node>
      <node id="56030">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="56031" relation="include">
        </childnode>
        <childnode refid="56033" relation="include">
        </childnode>
      </node>
      <node id="56013">
        <label>cstdint</label>
      </node>
      <node id="56022">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="56029">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="56067">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="56052">
        <label>arma_config.hpp</label>
      </node>
      <node id="56007">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/policy/aggregated_policy.hpp</label>
        <link refid="aggregated__policy_8hpp"/>
        <childnode refid="56008" relation="include">
        </childnode>
        <childnode refid="56065" relation="include">
        </childnode>
      </node>
      <node id="56042">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="56009">
        <label>cmath</label>
      </node>
      <node id="56028">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="56017">
        <label>stdexcept</label>
      </node>
      <node id="56037">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="56022" relation="include">
        </childnode>
        <childnode refid="56024" relation="include">
        </childnode>
        <childnode refid="56025" relation="include">
        </childnode>
        <childnode refid="56023" relation="include">
        </childnode>
      </node>
      <node id="56061">
        <label>string</label>
      </node>
      <node id="56049">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="56050" relation="include">
        </childnode>
        <childnode refid="56016" relation="include">
        </childnode>
      </node>
      <node id="56059">
        <label>map</label>
      </node>
      <node id="56011">
        <label>cfloat</label>
      </node>
      <node id="56041">
        <label>boost/variant.hpp</label>
      </node>
      <node id="56063">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="56025">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="56048">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="56049" relation="include">
        </childnode>
        <childnode refid="56025" relation="include">
        </childnode>
        <childnode refid="56032" relation="include">
        </childnode>
        <childnode refid="56050" relation="include">
        </childnode>
      </node>
      <node id="56038">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="56036">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="56022" relation="include">
        </childnode>
        <childnode refid="56024" relation="include">
        </childnode>
        <childnode refid="56025" relation="include">
        </childnode>
        <childnode refid="56023" relation="include">
        </childnode>
      </node>
      <node id="56039">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="56022" relation="include">
        </childnode>
        <childnode refid="56024" relation="include">
        </childnode>
        <childnode refid="56025" relation="include">
        </childnode>
        <childnode refid="56023" relation="include">
        </childnode>
      </node>
      <node id="56027">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="56047">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="56023" relation="include">
        </childnode>
        <childnode refid="56024" relation="include">
        </childnode>
        <childnode refid="56025" relation="include">
        </childnode>
        <childnode refid="56035" relation="include">
        </childnode>
        <childnode refid="56044" relation="include">
        </childnode>
      </node>
      <node id="56051">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="56052" relation="include">
        </childnode>
      </node>
      <node id="56053">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="56008">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="56009" relation="include">
        </childnode>
        <childnode refid="56010" relation="include">
        </childnode>
        <childnode refid="56011" relation="include">
        </childnode>
        <childnode refid="56012" relation="include">
        </childnode>
        <childnode refid="56013" relation="include">
        </childnode>
        <childnode refid="56014" relation="include">
        </childnode>
        <childnode refid="56015" relation="include">
        </childnode>
        <childnode refid="56016" relation="include">
        </childnode>
        <childnode refid="56017" relation="include">
        </childnode>
        <childnode refid="56018" relation="include">
        </childnode>
        <childnode refid="56019" relation="include">
        </childnode>
        <childnode refid="56020" relation="include">
        </childnode>
        <childnode refid="56021" relation="include">
        </childnode>
        <childnode refid="56022" relation="include">
        </childnode>
        <childnode refid="56023" relation="include">
        </childnode>
        <childnode refid="56024" relation="include">
        </childnode>
        <childnode refid="56025" relation="include">
        </childnode>
        <childnode refid="56026" relation="include">
        </childnode>
        <childnode refid="56027" relation="include">
        </childnode>
        <childnode refid="56028" relation="include">
        </childnode>
        <childnode refid="56029" relation="include">
        </childnode>
        <childnode refid="56030" relation="include">
        </childnode>
        <childnode refid="56034" relation="include">
        </childnode>
        <childnode refid="56035" relation="include">
        </childnode>
        <childnode refid="56036" relation="include">
        </childnode>
        <childnode refid="56037" relation="include">
        </childnode>
        <childnode refid="56038" relation="include">
        </childnode>
        <childnode refid="56039" relation="include">
        </childnode>
        <childnode refid="56040" relation="include">
        </childnode>
        <childnode refid="56046" relation="include">
        </childnode>
        <childnode refid="56047" relation="include">
        </childnode>
        <childnode refid="56044" relation="include">
        </childnode>
        <childnode refid="56048" relation="include">
        </childnode>
        <childnode refid="56051" relation="include">
        </childnode>
        <childnode refid="56053" relation="include">
        </childnode>
        <childnode refid="56054" relation="include">
        </childnode>
        <childnode refid="56063" relation="include">
        </childnode>
        <childnode refid="56064" relation="include">
        </childnode>
      </node>
      <node id="56068">
        <label>random</label>
      </node>
      <node id="56014">
        <label>cstdio</label>
      </node>
      <node id="56018">
        <label>tuple</label>
      </node>
      <node id="56023">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="56040">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="56023" relation="include">
        </childnode>
        <childnode refid="56024" relation="include">
        </childnode>
        <childnode refid="56025" relation="include">
        </childnode>
        <childnode refid="56027" relation="include">
        </childnode>
        <childnode refid="56041" relation="include">
        </childnode>
        <childnode refid="56042" relation="include">
        </childnode>
        <childnode refid="56043" relation="include">
        </childnode>
        <childnode refid="56044" relation="include">
        </childnode>
      </node>
      <node id="56066">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="56008" relation="include">
        </childnode>
        <childnode refid="56067" relation="include">
        </childnode>
        <childnode refid="56068" relation="include">
        </childnode>
      </node>
      <node id="56019">
        <label>utility</label>
      </node>
      <node id="56043">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="56034">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="56031">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="56032" relation="include">
        </childnode>
      </node>
      <node id="56054">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="56055" relation="include">
        </childnode>
        <childnode refid="56056" relation="include">
        </childnode>
        <childnode refid="56057" relation="include">
        </childnode>
        <childnode refid="56058" relation="include">
        </childnode>
        <childnode refid="56059" relation="include">
        </childnode>
        <childnode refid="56060" relation="include">
        </childnode>
        <childnode refid="56061" relation="include">
        </childnode>
        <childnode refid="56062" relation="include">
        </childnode>
      </node>
      <node id="56032">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="56046">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="56044" relation="include">
        </childnode>
        <childnode refid="56040" relation="include">
        </childnode>
        <childnode refid="56047" relation="include">
        </childnode>
      </node>
      <node id="56015">
        <label>cstdlib</label>
      </node>
      <node id="56065">
        <label>mlpack/core/dists/discrete_distribution.hpp</label>
        <link refid="discrete__distribution_8hpp"/>
        <childnode refid="56008" relation="include">
        </childnode>
        <childnode refid="56053" relation="include">
        </childnode>
        <childnode refid="56066" relation="include">
        </childnode>
      </node>
      <node id="56010">
        <label>cctype</label>
      </node>
      <node id="56033">
        <label>unordered_map</label>
      </node>
      <node id="56012">
        <label>climits</label>
      </node>
      <node id="56060">
        <label>mutex</label>
      </node>
      <node id="56056">
        <label>chrono</label>
      </node>
      <node id="56064">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="56062">
        <label>thread</label>
      </node>
      <node id="56050">
        <label>type_traits</label>
      </node>
      <node id="56026">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="56020">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="56044">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="56022" relation="include">
        </childnode>
        <childnode refid="56023" relation="include">
        </childnode>
        <childnode refid="56024" relation="include">
        </childnode>
        <childnode refid="56025" relation="include">
        </childnode>
        <childnode refid="56045" relation="include">
        </childnode>
      </node>
      <node id="56016">
        <label>cstring</label>
      </node>
      <node id="56035">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="56024">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1rl_1_1AggregatedPolicy" prot="public">mlpack::rl::AggregatedPolicy</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1rl">mlpack::rl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Shangtong Zhang</para></simplesect>
This file is the implementation of AggregatedPolicy class. An aggregated policy will randomly select a child policy under a given distribution at each time step.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="14"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_RL_POLICY_AGGREGATED_POLICY_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_RL_POLICY_AGGREGATED_POLICY_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="discrete__distribution_8hpp" kindref="compound">mlpack/core/dists/discrete_distribution.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">rl<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PolicyType&gt;</highlight></codeline>
<codeline lineno="27" refid="classmlpack_1_1rl_1_1AggregatedPolicy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1rl_1_1AggregatedPolicy" kindref="compound">AggregatedPolicy</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31" refid="classmlpack_1_1rl_1_1AggregatedPolicy_1afb9320b245a1358ab02e3f57e3b0a597" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1AggregatedPolicy_1afb9320b245a1358ab02e3f57e3b0a597" kindref="member">ActionType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PolicyType::ActionType;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classmlpack_1_1rl_1_1AggregatedPolicy_1aee7c1ebbfd95024c0b1d2a580ceebb14" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1rl_1_1AggregatedPolicy_1aee7c1ebbfd95024c0b1d2a580ceebb14" kindref="member">AggregatedPolicy</ref>(std::vector&lt;PolicyType&gt;<sp/>policies,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::colvec&amp;<sp/>distribution)<sp/>:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>policies(<ref refid="namespacestd" kindref="compound">std</ref>::move(policies)),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sampler({distribution})</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do<sp/>here.<sp/>*/</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classmlpack_1_1rl_1_1AggregatedPolicy_1a631fe506e7d81fba96697ba11c6ace84" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1rl_1_1AggregatedPolicy_1afb9320b245a1358ab02e3f57e3b0a597" kindref="member">ActionType</ref><sp/><ref refid="classmlpack_1_1rl_1_1AggregatedPolicy_1a631fe506e7d81fba96697ba11c6ace84" kindref="member">Sample</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::colvec&amp;<sp/>actionValue,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deterministic<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deterministic)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>policies.front().Sample(actionValue,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>selected<sp/>=<sp/>arma::as_scalar(sampler.<ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a2c6f8d5bb4eacf7de767d2172b320756" kindref="member">Random</ref>());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>policies[selected].Sample(actionValue,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classmlpack_1_1rl_1_1AggregatedPolicy_1a280278726ff7d32f2b7eff5c92a1767a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1AggregatedPolicy_1a280278726ff7d32f2b7eff5c92a1767a" kindref="member">Anneal</ref>()</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(PolicyType&amp;<sp/>policy<sp/>:<sp/>policies)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>policy.Anneal();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>std::vector&lt;PolicyType&gt;<sp/>policies;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution" kindref="compound">distribution::DiscreteDistribution</ref><sp/>sampler;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>rl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/policy/aggregated_policy.hpp"/>
  </compounddef>
</doxygen>
