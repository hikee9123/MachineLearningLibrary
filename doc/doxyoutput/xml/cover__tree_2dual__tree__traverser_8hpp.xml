<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="cover__tree_2dual__tree__traverser_8hpp" kind="file" language="C++">
    <compoundname>dual_tree_traverser.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="no">queue</includes>
    <includes local="yes">dual_tree_traverser_impl.hpp</includes>
    <includedby refid="cover__tree_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/core/tree/cover_tree.hpp</includedby>
    <incdepgraph>
      <node id="14343">
        <label>list</label>
      </node>
      <node id="14340">
        <label>atomic</label>
      </node>
      <node id="14330">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="14306">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="14342">
        <label>iomanip</label>
      </node>
      <node id="14350">
        <label>queue</label>
      </node>
      <node id="14315">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="14316" relation="include">
        </childnode>
        <childnode refid="14318" relation="include">
        </childnode>
      </node>
      <node id="14298">
        <label>cstdint</label>
      </node>
      <node id="14307">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="14314">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="14337">
        <label>arma_config.hpp</label>
      </node>
      <node id="14327">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="14294">
        <label>cmath</label>
      </node>
      <node id="14313">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="14302">
        <label>stdexcept</label>
      </node>
      <node id="14322">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="14307" relation="include">
        </childnode>
        <childnode refid="14309" relation="include">
        </childnode>
        <childnode refid="14310" relation="include">
        </childnode>
        <childnode refid="14308" relation="include">
        </childnode>
      </node>
      <node id="14346">
        <label>string</label>
      </node>
      <node id="14334">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="14335" relation="include">
        </childnode>
        <childnode refid="14301" relation="include">
        </childnode>
      </node>
      <node id="14344">
        <label>map</label>
      </node>
      <node id="14351">
        <label>dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="14296">
        <label>cfloat</label>
      </node>
      <node id="14326">
        <label>boost/variant.hpp</label>
      </node>
      <node id="14348">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="14292">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/dual_tree_traverser.hpp</label>
        <link refid="cover__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="14293" relation="include">
        </childnode>
        <childnode refid="14350" relation="include">
        </childnode>
        <childnode refid="14351" relation="include">
        </childnode>
      </node>
      <node id="14310">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="14333">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="14334" relation="include">
        </childnode>
        <childnode refid="14310" relation="include">
        </childnode>
        <childnode refid="14317" relation="include">
        </childnode>
        <childnode refid="14335" relation="include">
        </childnode>
      </node>
      <node id="14323">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="14321">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="14307" relation="include">
        </childnode>
        <childnode refid="14309" relation="include">
        </childnode>
        <childnode refid="14310" relation="include">
        </childnode>
        <childnode refid="14308" relation="include">
        </childnode>
      </node>
      <node id="14324">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="14307" relation="include">
        </childnode>
        <childnode refid="14309" relation="include">
        </childnode>
        <childnode refid="14310" relation="include">
        </childnode>
        <childnode refid="14308" relation="include">
        </childnode>
      </node>
      <node id="14312">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="14332">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="14308" relation="include">
        </childnode>
        <childnode refid="14309" relation="include">
        </childnode>
        <childnode refid="14310" relation="include">
        </childnode>
        <childnode refid="14320" relation="include">
        </childnode>
        <childnode refid="14329" relation="include">
        </childnode>
      </node>
      <node id="14336">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="14337" relation="include">
        </childnode>
      </node>
      <node id="14338">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="14293">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="14294" relation="include">
        </childnode>
        <childnode refid="14295" relation="include">
        </childnode>
        <childnode refid="14296" relation="include">
        </childnode>
        <childnode refid="14297" relation="include">
        </childnode>
        <childnode refid="14298" relation="include">
        </childnode>
        <childnode refid="14299" relation="include">
        </childnode>
        <childnode refid="14300" relation="include">
        </childnode>
        <childnode refid="14301" relation="include">
        </childnode>
        <childnode refid="14302" relation="include">
        </childnode>
        <childnode refid="14303" relation="include">
        </childnode>
        <childnode refid="14304" relation="include">
        </childnode>
        <childnode refid="14305" relation="include">
        </childnode>
        <childnode refid="14306" relation="include">
        </childnode>
        <childnode refid="14307" relation="include">
        </childnode>
        <childnode refid="14308" relation="include">
        </childnode>
        <childnode refid="14309" relation="include">
        </childnode>
        <childnode refid="14310" relation="include">
        </childnode>
        <childnode refid="14311" relation="include">
        </childnode>
        <childnode refid="14312" relation="include">
        </childnode>
        <childnode refid="14313" relation="include">
        </childnode>
        <childnode refid="14314" relation="include">
        </childnode>
        <childnode refid="14315" relation="include">
        </childnode>
        <childnode refid="14319" relation="include">
        </childnode>
        <childnode refid="14320" relation="include">
        </childnode>
        <childnode refid="14321" relation="include">
        </childnode>
        <childnode refid="14322" relation="include">
        </childnode>
        <childnode refid="14323" relation="include">
        </childnode>
        <childnode refid="14324" relation="include">
        </childnode>
        <childnode refid="14325" relation="include">
        </childnode>
        <childnode refid="14331" relation="include">
        </childnode>
        <childnode refid="14332" relation="include">
        </childnode>
        <childnode refid="14329" relation="include">
        </childnode>
        <childnode refid="14333" relation="include">
        </childnode>
        <childnode refid="14336" relation="include">
        </childnode>
        <childnode refid="14338" relation="include">
        </childnode>
        <childnode refid="14339" relation="include">
        </childnode>
        <childnode refid="14348" relation="include">
        </childnode>
        <childnode refid="14349" relation="include">
        </childnode>
      </node>
      <node id="14299">
        <label>cstdio</label>
      </node>
      <node id="14303">
        <label>tuple</label>
      </node>
      <node id="14308">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="14325">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="14308" relation="include">
        </childnode>
        <childnode refid="14309" relation="include">
        </childnode>
        <childnode refid="14310" relation="include">
        </childnode>
        <childnode refid="14312" relation="include">
        </childnode>
        <childnode refid="14326" relation="include">
        </childnode>
        <childnode refid="14327" relation="include">
        </childnode>
        <childnode refid="14328" relation="include">
        </childnode>
        <childnode refid="14329" relation="include">
        </childnode>
      </node>
      <node id="14304">
        <label>utility</label>
      </node>
      <node id="14328">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="14319">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="14316">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="14317" relation="include">
        </childnode>
      </node>
      <node id="14339">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="14340" relation="include">
        </childnode>
        <childnode refid="14341" relation="include">
        </childnode>
        <childnode refid="14342" relation="include">
        </childnode>
        <childnode refid="14343" relation="include">
        </childnode>
        <childnode refid="14344" relation="include">
        </childnode>
        <childnode refid="14345" relation="include">
        </childnode>
        <childnode refid="14346" relation="include">
        </childnode>
        <childnode refid="14347" relation="include">
        </childnode>
      </node>
      <node id="14317">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="14331">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="14329" relation="include">
        </childnode>
        <childnode refid="14325" relation="include">
        </childnode>
        <childnode refid="14332" relation="include">
        </childnode>
      </node>
      <node id="14300">
        <label>cstdlib</label>
      </node>
      <node id="14295">
        <label>cctype</label>
      </node>
      <node id="14318">
        <label>unordered_map</label>
      </node>
      <node id="14297">
        <label>climits</label>
      </node>
      <node id="14345">
        <label>mutex</label>
      </node>
      <node id="14341">
        <label>chrono</label>
      </node>
      <node id="14349">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="14347">
        <label>thread</label>
      </node>
      <node id="14335">
        <label>type_traits</label>
      </node>
      <node id="14311">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="14305">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="14329">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="14307" relation="include">
        </childnode>
        <childnode refid="14308" relation="include">
        </childnode>
        <childnode refid="14309" relation="include">
        </childnode>
        <childnode refid="14310" relation="include">
        </childnode>
        <childnode refid="14330" relation="include">
        </childnode>
      </node>
      <node id="14301">
        <label>cstring</label>
      </node>
      <node id="14320">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="14309">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="14359">
        <label>/home/aakash/mlpack/src/mlpack/methods/fastmks/fastmks_model.hpp</label>
        <link refid="fastmks__model_8hpp"/>
      </node>
      <node id="14356">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/typedef.hpp</label>
        <link refid="core_2tree_2cover__tree_2typedef_8hpp"/>
        <childnode refid="14353" relation="include">
        </childnode>
      </node>
      <node id="14358">
        <label>/home/aakash/mlpack/src/mlpack/methods/fastmks/fastmks.hpp</label>
        <link refid="fastmks_8hpp"/>
        <childnode refid="14359" relation="include">
        </childnode>
      </node>
      <node id="14364">
        <label>/home/aakash/mlpack/src/mlpack/tests/main_tests/range_search_utils.hpp</label>
        <link refid="range__search__utils_8hpp"/>
      </node>
      <node id="14352">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/dual_tree_traverser.hpp</label>
        <link refid="cover__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="14353" relation="include">
        </childnode>
      </node>
      <node id="14361">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/dual_tree_kmeans.hpp</label>
        <link refid="dual__tree__kmeans_8hpp"/>
      </node>
      <node id="14354">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp</label>
        <link refid="cover__tree_2cover__tree_8hpp"/>
        <childnode refid="14353" relation="include">
        </childnode>
        <childnode refid="14355" relation="include">
        </childnode>
        <childnode refid="14356" relation="include">
        </childnode>
        <childnode refid="14357" relation="include">
        </childnode>
      </node>
      <node id="14362">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp</label>
        <link refid="ns__model_8hpp"/>
      </node>
      <node id="14353">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/cover_tree.hpp</label>
        <link refid="cover__tree_8hpp"/>
        <childnode refid="14354" relation="include">
        </childnode>
        <childnode refid="14358" relation="include">
        </childnode>
        <childnode refid="14360" relation="include">
        </childnode>
        <childnode refid="14361" relation="include">
        </childnode>
        <childnode refid="14362" relation="include">
        </childnode>
        <childnode refid="14363" relation="include">
        </childnode>
        <childnode refid="14365" relation="include">
        </childnode>
      </node>
      <node id="14357">
        <label>/home/aakash/mlpack/src/mlpack/methods/fastmks/fastmks_rules.hpp</label>
        <link refid="fastmks__rules_8hpp"/>
      </node>
      <node id="14365">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp</label>
        <link refid="ra__model_8hpp"/>
      </node>
      <node id="14360">
        <label>/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp</label>
        <link refid="kde__model_8hpp"/>
      </node>
      <node id="14355">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/single_tree_traverser.hpp</label>
        <link refid="cover__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="14353" relation="include">
        </childnode>
      </node>
      <node id="14363">
        <label>/home/aakash/mlpack/src/mlpack/methods/range_search/rs_model.hpp</label>
        <link refid="rs__model_8hpp"/>
        <childnode refid="14364" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1tree_1_1CoverTree_1_1DualTreeTraverser" prot="public">mlpack::tree::CoverTree::DualTreeTraverser</innerclass>
    <innerclass refid="structmlpack_1_1tree_1_1CoverTree_1_1DualTreeTraverser_1_1DualCoverTreeMapEntry" prot="private">mlpack::tree::CoverTree::DualTreeTraverser::DualCoverTreeMapEntry</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1tree">mlpack::tree</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ryan Curtin</para></simplesect>
A dual-tree traverser for the cover tree.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_TREE_COVER_TREE_DUAL_TREE_TRAVERSER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_TREE_COVER_TREE_DUAL_TREE_TRAVERSER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tree<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MetricType,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>StatisticType,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RootPointPolicy</highlight></codeline>
<codeline lineno="26"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RuleType&gt;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CoverTree&lt;MetricType,<sp/>StatisticType,<sp/>MatType,<sp/>RootPointPolicy&gt;::</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>DualTreeTraverser</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>DualTreeTraverser(RuleType&amp;<sp/>rule);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Traverse(<ref refid="classmlpack_1_1tree_1_1CoverTree_1a6691991a6b8cd438a03368dc3c5f4b95" kindref="member">CoverTree</ref>&amp;<sp/>queryNode,<sp/><ref refid="classmlpack_1_1tree_1_1CoverTree_1a6691991a6b8cd438a03368dc3c5f4b95" kindref="member">CoverTree</ref>&amp;<sp/>referenceNode);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classmlpack_1_1tree_1_1CoverTree_1_1DualTreeTraverser_1ac2f6072011ee31a0a32f62e2a105a347" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1CoverTree_1_1DualTreeTraverser_1ac2f6072011ee31a0a32f62e2a105a347" kindref="member">NumPrunes</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numPrunes;<sp/>}</highlight></codeline>
<codeline lineno="48" refid="classmlpack_1_1tree_1_1CoverTree_1_1DualTreeTraverser_1adf887190e9d9024ff244503e4aaf0732" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1tree_1_1CoverTree_1_1DualTreeTraverser_1adf887190e9d9024ff244503e4aaf0732" kindref="member">NumPrunes</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numPrunes;<sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classmlpack_1_1tree_1_1CoverTree_1_1DualTreeTraverser_1a6a5a81524ab8e6506495bdfb2f42fb2f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1CoverTree_1_1DualTreeTraverser_1a6a5a81524ab8e6506495bdfb2f42fb2f" kindref="member">NumVisited</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="53" refid="classmlpack_1_1tree_1_1CoverTree_1_1DualTreeTraverser_1a9adf9744b1b9b4d74e0da6570010e63e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1CoverTree_1_1DualTreeTraverser_1a9adf9744b1b9b4d74e0da6570010e63e" kindref="member">NumScores</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="54" refid="classmlpack_1_1tree_1_1CoverTree_1_1DualTreeTraverser_1afc2a1471e0354570c99c25473d32433e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1CoverTree_1_1DualTreeTraverser_1afc2a1471e0354570c99c25473d32433e" kindref="member">NumBaseCases</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>RuleType&amp;<sp/>rule;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numPrunes;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DualCoverTreeMapEntry</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree&lt;MetricType, StatisticType, MatType, RootPointPolicy&gt;</ref>*</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>referenceNode;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>baseCase;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RuleType::TraversalInfoType<sp/>traversalInfo;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DualCoverTreeMapEntry&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="78"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score<sp/>==<sp/>other.score)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(baseCase<sp/>&lt;<sp/>other.baseCase);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(score<sp/>&lt;<sp/>other.score);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Traverse(</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref>&amp;<sp/>queryNode,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>std::vector&lt;DualCoverTreeMapEntry&gt;,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::greater&lt;int&gt;&gt;&amp;<sp/>referenceMap);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PruneMap(</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref>&amp;<sp/>queryNode,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>std::vector&lt;DualCoverTreeMapEntry&gt;,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::greater&lt;int&gt;&gt;&amp;<sp/>referenceMap,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>std::vector&lt;DualCoverTreeMapEntry&gt;,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::greater&lt;int&gt;&gt;&amp;<sp/>childMap);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ReferenceRecursion(</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref>&amp;<sp/>queryNode,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>std::vector&lt;DualCoverTreeMapEntry&gt;,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::greater&lt;int&gt;&gt;&amp;<sp/>referenceMap);</highlight></codeline>
<codeline lineno="106"><highlight class="normal">};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dual_tree_traverser_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/dual_tree_traverser.hpp"/>
  </compounddef>
</doxygen>
