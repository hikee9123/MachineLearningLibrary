<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="fft__convolution_8hpp" kind="file" language="C++">
    <compoundname>fft_convolution.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="border__modes_8hpp" local="yes">border_modes.hpp</includes>
    <includedby refid="svd__convolution_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/ann/convolution_rules/svd_convolution.hpp</includedby>
    <includedby refid="layer__types_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/ann/layer/layer_types.hpp</includedby>
    <includedby refid="atrous__convolution_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/ann/layer/atrous_convolution.hpp</includedby>
    <includedby refid="convolution_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/ann/layer/convolution.hpp</includedby>
    <includedby refid="transposed__convolution_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/ann/layer/transposed_convolution.hpp</includedby>
    <incdepgraph>
      <node id="27341">
        <label>list</label>
      </node>
      <node id="27338">
        <label>atomic</label>
      </node>
      <node id="27328">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="27304">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="27340">
        <label>iomanip</label>
      </node>
      <node id="27313">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="27314" relation="include">
        </childnode>
        <childnode refid="27316" relation="include">
        </childnode>
      </node>
      <node id="27296">
        <label>cstdint</label>
      </node>
      <node id="27305">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="27312">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="27335">
        <label>arma_config.hpp</label>
      </node>
      <node id="27325">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="27292">
        <label>cmath</label>
      </node>
      <node id="27311">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="27300">
        <label>stdexcept</label>
      </node>
      <node id="27320">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="27305" relation="include">
        </childnode>
        <childnode refid="27307" relation="include">
        </childnode>
        <childnode refid="27308" relation="include">
        </childnode>
        <childnode refid="27306" relation="include">
        </childnode>
      </node>
      <node id="27344">
        <label>string</label>
      </node>
      <node id="27332">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="27333" relation="include">
        </childnode>
        <childnode refid="27299" relation="include">
        </childnode>
      </node>
      <node id="27342">
        <label>map</label>
      </node>
      <node id="27294">
        <label>cfloat</label>
      </node>
      <node id="27324">
        <label>boost/variant.hpp</label>
      </node>
      <node id="27346">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="27308">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="27331">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="27332" relation="include">
        </childnode>
        <childnode refid="27308" relation="include">
        </childnode>
        <childnode refid="27315" relation="include">
        </childnode>
        <childnode refid="27333" relation="include">
        </childnode>
      </node>
      <node id="27321">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="27319">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="27305" relation="include">
        </childnode>
        <childnode refid="27307" relation="include">
        </childnode>
        <childnode refid="27308" relation="include">
        </childnode>
        <childnode refid="27306" relation="include">
        </childnode>
      </node>
      <node id="27322">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="27305" relation="include">
        </childnode>
        <childnode refid="27307" relation="include">
        </childnode>
        <childnode refid="27308" relation="include">
        </childnode>
        <childnode refid="27306" relation="include">
        </childnode>
      </node>
      <node id="27310">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="27290">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/convolution_rules/fft_convolution.hpp</label>
        <link refid="fft__convolution_8hpp"/>
        <childnode refid="27291" relation="include">
        </childnode>
        <childnode refid="27348" relation="include">
        </childnode>
      </node>
      <node id="27330">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="27306" relation="include">
        </childnode>
        <childnode refid="27307" relation="include">
        </childnode>
        <childnode refid="27308" relation="include">
        </childnode>
        <childnode refid="27318" relation="include">
        </childnode>
        <childnode refid="27327" relation="include">
        </childnode>
      </node>
      <node id="27334">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="27335" relation="include">
        </childnode>
      </node>
      <node id="27336">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="27291">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="27292" relation="include">
        </childnode>
        <childnode refid="27293" relation="include">
        </childnode>
        <childnode refid="27294" relation="include">
        </childnode>
        <childnode refid="27295" relation="include">
        </childnode>
        <childnode refid="27296" relation="include">
        </childnode>
        <childnode refid="27297" relation="include">
        </childnode>
        <childnode refid="27298" relation="include">
        </childnode>
        <childnode refid="27299" relation="include">
        </childnode>
        <childnode refid="27300" relation="include">
        </childnode>
        <childnode refid="27301" relation="include">
        </childnode>
        <childnode refid="27302" relation="include">
        </childnode>
        <childnode refid="27303" relation="include">
        </childnode>
        <childnode refid="27304" relation="include">
        </childnode>
        <childnode refid="27305" relation="include">
        </childnode>
        <childnode refid="27306" relation="include">
        </childnode>
        <childnode refid="27307" relation="include">
        </childnode>
        <childnode refid="27308" relation="include">
        </childnode>
        <childnode refid="27309" relation="include">
        </childnode>
        <childnode refid="27310" relation="include">
        </childnode>
        <childnode refid="27311" relation="include">
        </childnode>
        <childnode refid="27312" relation="include">
        </childnode>
        <childnode refid="27313" relation="include">
        </childnode>
        <childnode refid="27317" relation="include">
        </childnode>
        <childnode refid="27318" relation="include">
        </childnode>
        <childnode refid="27319" relation="include">
        </childnode>
        <childnode refid="27320" relation="include">
        </childnode>
        <childnode refid="27321" relation="include">
        </childnode>
        <childnode refid="27322" relation="include">
        </childnode>
        <childnode refid="27323" relation="include">
        </childnode>
        <childnode refid="27329" relation="include">
        </childnode>
        <childnode refid="27330" relation="include">
        </childnode>
        <childnode refid="27327" relation="include">
        </childnode>
        <childnode refid="27331" relation="include">
        </childnode>
        <childnode refid="27334" relation="include">
        </childnode>
        <childnode refid="27336" relation="include">
        </childnode>
        <childnode refid="27337" relation="include">
        </childnode>
        <childnode refid="27346" relation="include">
        </childnode>
        <childnode refid="27347" relation="include">
        </childnode>
      </node>
      <node id="27297">
        <label>cstdio</label>
      </node>
      <node id="27301">
        <label>tuple</label>
      </node>
      <node id="27306">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="27323">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="27306" relation="include">
        </childnode>
        <childnode refid="27307" relation="include">
        </childnode>
        <childnode refid="27308" relation="include">
        </childnode>
        <childnode refid="27310" relation="include">
        </childnode>
        <childnode refid="27324" relation="include">
        </childnode>
        <childnode refid="27325" relation="include">
        </childnode>
        <childnode refid="27326" relation="include">
        </childnode>
        <childnode refid="27327" relation="include">
        </childnode>
      </node>
      <node id="27302">
        <label>utility</label>
      </node>
      <node id="27326">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="27317">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="27314">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="27315" relation="include">
        </childnode>
      </node>
      <node id="27337">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="27338" relation="include">
        </childnode>
        <childnode refid="27339" relation="include">
        </childnode>
        <childnode refid="27340" relation="include">
        </childnode>
        <childnode refid="27341" relation="include">
        </childnode>
        <childnode refid="27342" relation="include">
        </childnode>
        <childnode refid="27343" relation="include">
        </childnode>
        <childnode refid="27344" relation="include">
        </childnode>
        <childnode refid="27345" relation="include">
        </childnode>
      </node>
      <node id="27315">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="27329">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="27327" relation="include">
        </childnode>
        <childnode refid="27323" relation="include">
        </childnode>
        <childnode refid="27330" relation="include">
        </childnode>
      </node>
      <node id="27298">
        <label>cstdlib</label>
      </node>
      <node id="27293">
        <label>cctype</label>
      </node>
      <node id="27316">
        <label>unordered_map</label>
      </node>
      <node id="27295">
        <label>climits</label>
      </node>
      <node id="27343">
        <label>mutex</label>
      </node>
      <node id="27339">
        <label>chrono</label>
      </node>
      <node id="27347">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="27345">
        <label>thread</label>
      </node>
      <node id="27333">
        <label>type_traits</label>
      </node>
      <node id="27309">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="27303">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="27327">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="27305" relation="include">
        </childnode>
        <childnode refid="27306" relation="include">
        </childnode>
        <childnode refid="27307" relation="include">
        </childnode>
        <childnode refid="27308" relation="include">
        </childnode>
        <childnode refid="27328" relation="include">
        </childnode>
      </node>
      <node id="27348">
        <label>border_modes.hpp</label>
        <link refid="border__modes_8hpp"/>
      </node>
      <node id="27299">
        <label>cstring</label>
      </node>
      <node id="27318">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="27307">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="27392">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/radial_basis_function.hpp</label>
        <link refid="radial__basis__function_8hpp"/>
        <childnode refid="27364" relation="include">
        </childnode>
      </node>
      <node id="27399">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/parameters_visitor.hpp</label>
        <link refid="parameters__visitor_8hpp"/>
        <childnode refid="27400" relation="include">
        </childnode>
      </node>
      <node id="27374">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_merge.hpp</label>
        <link refid="multiply__merge_8hpp"/>
        <childnode refid="27352" relation="include">
        </childnode>
      </node>
      <node id="27369">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/gru.hpp</label>
        <link refid="gru_8hpp"/>
        <childnode refid="27352" relation="include">
        </childnode>
      </node>
      <node id="27368">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/sequential.hpp</label>
        <link refid="sequential_8hpp"/>
        <childnode refid="27367" relation="include">
        </childnode>
        <childnode refid="27369" relation="include">
        </childnode>
        <childnode refid="27370" relation="include">
        </childnode>
        <childnode refid="27371" relation="include">
        </childnode>
        <childnode refid="27352" relation="include">
        </childnode>
      </node>
      <node id="27397">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/gradient_zero_visitor.hpp</label>
        <link refid="gradient__zero__visitor_8hpp"/>
      </node>
      <node id="27386">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/glimpse.hpp</label>
        <link refid="glimpse_8hpp"/>
        <childnode refid="27352" relation="include">
        </childnode>
      </node>
      <node id="27362">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/convolution.hpp</label>
        <link refid="convolution_8hpp"/>
        <childnode refid="27352" relation="include">
        </childnode>
      </node>
      <node id="27352">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="27353" relation="include">
        </childnode>
        <childnode refid="27354" relation="include">
        </childnode>
        <childnode refid="27359" relation="include">
        </childnode>
        <childnode refid="27360" relation="include">
        </childnode>
        <childnode refid="27356" relation="include">
        </childnode>
        <childnode refid="27357" relation="include">
        </childnode>
        <childnode refid="27358" relation="include">
        </childnode>
        <childnode refid="27361" relation="include">
        </childnode>
      </node>
      <node id="27371">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/recurrent.hpp</label>
        <link refid="recurrent_8hpp"/>
        <childnode refid="27352" relation="include">
        </childnode>
      </node>
      <node id="27378">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/output_parameter_visitor.hpp</label>
        <link refid="output__parameter__visitor_8hpp"/>
        <childnode refid="27353" relation="include">
        </childnode>
        <childnode refid="27354" relation="include">
        </childnode>
        <childnode refid="27355" relation="include">
        </childnode>
        <childnode refid="27366" relation="include">
        </childnode>
        <childnode refid="27373" relation="include">
        </childnode>
        <childnode refid="27368" relation="include">
        </childnode>
        <childnode refid="27369" relation="include">
        </childnode>
        <childnode refid="27372" relation="include">
        </childnode>
        <childnode refid="27374" relation="include">
        </childnode>
        <childnode refid="27370" relation="include">
        </childnode>
        <childnode refid="27371" relation="include">
        </childnode>
        <childnode refid="27375" relation="include">
        </childnode>
        <childnode refid="27360" relation="include">
        </childnode>
      </node>
      <node id="27401">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/reset_cell_visitor.hpp</label>
        <link refid="reset__cell__visitor_8hpp"/>
      </node>
      <node id="27395">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/forward_visitor.hpp</label>
        <link refid="forward__visitor_8hpp"/>
      </node>
      <node id="27388">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/linear3d.hpp</label>
        <link refid="linear3d_8hpp"/>
        <childnode refid="27364" relation="include">
        </childnode>
        <childnode refid="27352" relation="include">
        </childnode>
      </node>
      <node id="27360">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/rnn.hpp</label>
        <link refid="rnn_8hpp"/>
      </node>
      <node id="27356">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/categorical_dqn.hpp</label>
        <link refid="categorical__dqn_8hpp"/>
      </node>
      <node id="27381">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/adaptive_mean_pooling.hpp</label>
        <link refid="adaptive__mean__pooling_8hpp"/>
        <childnode refid="27364" relation="include">
        </childnode>
        <childnode refid="27352" relation="include">
        </childnode>
      </node>
      <node id="27391">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/vr_class_reward.hpp</label>
        <link refid="vr__class__reward_8hpp"/>
        <childnode refid="27352" relation="include">
        </childnode>
      </node>
      <node id="27393">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/add_visitor.hpp</label>
        <link refid="add__visitor_8hpp"/>
      </node>
      <node id="27396">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/gradient_visitor.hpp</label>
        <link refid="gradient__visitor_8hpp"/>
      </node>
      <node id="27365">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/delete_visitor.hpp</label>
        <link refid="delete__visitor_8hpp"/>
        <childnode refid="27353" relation="include">
        </childnode>
        <childnode refid="27354" relation="include">
        </childnode>
        <childnode refid="27366" relation="include">
        </childnode>
        <childnode refid="27373" relation="include">
        </childnode>
        <childnode refid="27368" relation="include">
        </childnode>
        <childnode refid="27372" relation="include">
        </childnode>
        <childnode refid="27374" relation="include">
        </childnode>
        <childnode refid="27371" relation="include">
        </childnode>
        <childnode refid="27375" relation="include">
        </childnode>
        <childnode refid="27360" relation="include">
        </childnode>
      </node>
      <node id="27375">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/weight_norm.hpp</label>
        <link refid="weight__norm_8hpp"/>
        <childnode refid="27352" relation="include">
        </childnode>
      </node>
      <node id="27390">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/reparametrization.hpp</label>
        <link refid="reparametrization_8hpp"/>
        <childnode refid="27364" relation="include">
        </childnode>
        <childnode refid="27352" relation="include">
        </childnode>
      </node>
      <node id="27349">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/convolution_rules/fft_convolution.hpp</label>
        <link refid="fft__convolution_8hpp"/>
        <childnode refid="27350" relation="include">
        </childnode>
        <childnode refid="27364" relation="include">
        </childnode>
        <childnode refid="27351" relation="include">
        </childnode>
        <childnode refid="27362" relation="include">
        </childnode>
        <childnode refid="27363" relation="include">
        </childnode>
      </node>
      <node id="27385">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/util/check_input_shape.hpp</label>
        <link refid="check__input__shape_8hpp"/>
      </node>
      <node id="27363">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/transposed_convolution.hpp</label>
        <link refid="transposed__convolution_8hpp"/>
        <childnode refid="27352" relation="include">
        </childnode>
      </node>
      <node id="27364">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/layer_types.hpp</label>
        <link refid="layer__types_8hpp"/>
        <childnode refid="27365" relation="include">
        </childnode>
        <childnode refid="27376" relation="include">
        </childnode>
        <childnode refid="27377" relation="include">
        </childnode>
        <childnode refid="27378" relation="include">
        </childnode>
        <childnode refid="27379" relation="include">
        </childnode>
        <childnode refid="27353" relation="include">
        </childnode>
        <childnode refid="27354" relation="include">
        </childnode>
        <childnode refid="27380" relation="include">
        </childnode>
        <childnode refid="27381" relation="include">
        </childnode>
        <childnode refid="27366" relation="include">
        </childnode>
        <childnode refid="27351" relation="include">
        </childnode>
        <childnode refid="27373" relation="include">
        </childnode>
        <childnode refid="27382" relation="include">
        </childnode>
        <childnode refid="27362" relation="include">
        </childnode>
        <childnode refid="27367" relation="include">
        </childnode>
        <childnode refid="27383" relation="include">
        </childnode>
        <childnode refid="27384" relation="include">
        </childnode>
        <childnode refid="27368" relation="include">
        </childnode>
        <childnode refid="27386" relation="include">
        </childnode>
        <childnode refid="27369" relation="include">
        </childnode>
        <childnode refid="27372" relation="include">
        </childnode>
        <childnode refid="27352" relation="include">
        </childnode>
        <childnode refid="27387" relation="include">
        </childnode>
        <childnode refid="27388" relation="include">
        </childnode>
        <childnode refid="27389" relation="include">
        </childnode>
        <childnode refid="27374" relation="include">
        </childnode>
        <childnode refid="27370" relation="include">
        </childnode>
        <childnode refid="27371" relation="include">
        </childnode>
        <childnode refid="27390" relation="include">
        </childnode>
        <childnode refid="27363" relation="include">
        </childnode>
        <childnode refid="27391" relation="include">
        </childnode>
        <childnode refid="27375" relation="include">
        </childnode>
        <childnode refid="27392" relation="include">
        </childnode>
        <childnode refid="27359" relation="include">
        </childnode>
        <childnode refid="27360" relation="include">
        </childnode>
        <childnode refid="27393" relation="include">
        </childnode>
        <childnode refid="27394" relation="include">
        </childnode>
        <childnode refid="27395" relation="include">
        </childnode>
        <childnode refid="27396" relation="include">
        </childnode>
        <childnode refid="27397" relation="include">
        </childnode>
        <childnode refid="27398" relation="include">
        </childnode>
        <childnode refid="27399" relation="include">
        </childnode>
        <childnode refid="27401" relation="include">
        </childnode>
      </node>
      <node id="27379">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/init_rules/network_init.hpp</label>
        <link refid="network__init_8hpp"/>
        <childnode refid="27353" relation="include">
        </childnode>
        <childnode refid="27354" relation="include">
        </childnode>
        <childnode refid="27360" relation="include">
        </childnode>
      </node>
      <node id="27366">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/add_merge.hpp</label>
        <link refid="add__merge_8hpp"/>
        <childnode refid="27367" relation="include">
        </childnode>
        <childnode refid="27368" relation="include">
        </childnode>
        <childnode refid="27369" relation="include">
        </childnode>
        <childnode refid="27372" relation="include">
        </childnode>
        <childnode refid="27352" relation="include">
        </childnode>
        <childnode refid="27370" relation="include">
        </childnode>
        <childnode refid="27371" relation="include">
        </childnode>
      </node>
      <node id="27387">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/linear_no_bias.hpp</label>
        <link refid="linear__no__bias_8hpp"/>
        <childnode refid="27364" relation="include">
        </childnode>
        <childnode refid="27352" relation="include">
        </childnode>
      </node>
      <node id="27353">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/brnn.hpp</label>
        <link refid="brnn_8hpp"/>
      </node>
      <node id="27359">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer_names.hpp</label>
        <link refid="layer__names_8hpp"/>
      </node>
      <node id="27400">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/sac.hpp</label>
        <link refid="sac_8hpp"/>
      </node>
      <node id="27361">
        <label>/home/aakash/mlpack/src/mlpack/tests/custom_layer.hpp</label>
        <link refid="custom__layer_8hpp"/>
      </node>
      <node id="27384">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/input_shape_visitor.hpp</label>
        <link refid="input__shape__visitor_8hpp"/>
        <childnode refid="27368" relation="include">
        </childnode>
        <childnode refid="27371" relation="include">
        </childnode>
        <childnode refid="27385" relation="include">
        </childnode>
      </node>
      <node id="27370">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/recurrent_attention.hpp</label>
        <link refid="recurrent__attention_8hpp"/>
        <childnode refid="27352" relation="include">
        </childnode>
      </node>
      <node id="27383">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/linear.hpp</label>
        <link refid="linear_8hpp"/>
        <childnode refid="27367" relation="include">
        </childnode>
        <childnode refid="27352" relation="include">
        </childnode>
      </node>
      <node id="27373">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/concat.hpp</label>
        <link refid="concat_8hpp"/>
        <childnode refid="27352" relation="include">
        </childnode>
      </node>
      <node id="27389">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/minibatch_discrimination.hpp</label>
        <link refid="minibatch__discrimination_8hpp"/>
        <childnode refid="27352" relation="include">
        </childnode>
      </node>
      <node id="27350">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/convolution_rules/svd_convolution.hpp</label>
        <link refid="svd__convolution_8hpp"/>
        <childnode refid="27351" relation="include">
        </childnode>
        <childnode refid="27362" relation="include">
        </childnode>
        <childnode refid="27363" relation="include">
        </childnode>
      </node>
      <node id="27354">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp</label>
        <link refid="ffn_8hpp"/>
        <childnode refid="27355" relation="include">
        </childnode>
        <childnode refid="27356" relation="include">
        </childnode>
        <childnode refid="27357" relation="include">
        </childnode>
        <childnode refid="27358" relation="include">
        </childnode>
      </node>
      <node id="27357">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp</label>
        <link refid="dueling__dqn_8hpp"/>
      </node>
      <node id="27382">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/concat_performance.hpp</label>
        <link refid="concat__performance_8hpp"/>
        <childnode refid="27352" relation="include">
        </childnode>
      </node>
      <node id="27367">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/dropconnect.hpp</label>
        <link refid="dropconnect_8hpp"/>
        <childnode refid="27352" relation="include">
        </childnode>
      </node>
      <node id="27377">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/copy_visitor.hpp</label>
        <link refid="copy__visitor_8hpp"/>
        <childnode refid="27353" relation="include">
        </childnode>
        <childnode refid="27354" relation="include">
        </childnode>
        <childnode refid="27368" relation="include">
        </childnode>
        <childnode refid="27371" relation="include">
        </childnode>
      </node>
      <node id="27376">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/delta_visitor.hpp</label>
        <link refid="delta__visitor_8hpp"/>
        <childnode refid="27353" relation="include">
        </childnode>
        <childnode refid="27354" relation="include">
        </childnode>
        <childnode refid="27366" relation="include">
        </childnode>
        <childnode refid="27373" relation="include">
        </childnode>
        <childnode refid="27368" relation="include">
        </childnode>
        <childnode refid="27369" relation="include">
        </childnode>
        <childnode refid="27372" relation="include">
        </childnode>
        <childnode refid="27374" relation="include">
        </childnode>
        <childnode refid="27370" relation="include">
        </childnode>
        <childnode refid="27371" relation="include">
        </childnode>
        <childnode refid="27375" relation="include">
        </childnode>
        <childnode refid="27360" relation="include">
        </childnode>
      </node>
      <node id="27355">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp</label>
        <link refid="gan_8hpp"/>
      </node>
      <node id="27351">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/atrous_convolution.hpp</label>
        <link refid="atrous__convolution_8hpp"/>
        <childnode refid="27352" relation="include">
        </childnode>
      </node>
      <node id="27394">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/backward_visitor.hpp</label>
        <link refid="backward__visitor_8hpp"/>
      </node>
      <node id="27358">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/simple_dqn.hpp</label>
        <link refid="simple__dqn_8hpp"/>
      </node>
      <node id="27398">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/parameters_set_visitor.hpp</label>
        <link refid="parameters__set__visitor_8hpp"/>
      </node>
      <node id="27380">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/adaptive_max_pooling.hpp</label>
        <link refid="adaptive__max__pooling_8hpp"/>
        <childnode refid="27364" relation="include">
        </childnode>
        <childnode refid="27352" relation="include">
        </childnode>
      </node>
      <node id="27372">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/highway.hpp</label>
        <link refid="highway_8hpp"/>
        <childnode refid="27352" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1ann_1_1FFTConvolution" prot="public">mlpack::ann::FFTConvolution</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1ann">mlpack::ann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Shangtong Zhang </para></simplesect>
<simplesect kind="author"><para>Marcus Edel</para></simplesect>
Implementation of the convolution through fft.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_ANN_CONVOLUTION_RULES_FFT_CONVOLUTION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_ANN_CONVOLUTION_RULES_FFT_CONVOLUTION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="border__modes_8hpp" kindref="compound">border_modes.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ann<sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BorderMode<sp/>=<sp/>FullConvolution,<sp/>const<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>padLastDim<sp/>=<sp/>false&gt;</highlight></codeline>
<codeline lineno="37" refid="classmlpack_1_1ann_1_1FFTConvolution" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1ann_1_1FFTConvolution" kindref="compound">FFTConvolution</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Perform<sp/>a<sp/>convolution<sp/>through<sp/>fft<sp/>(valid<sp/>mode).<sp/>This<sp/>method<sp/>only<sp/>supports</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/>*<sp/>input<sp/>which<sp/>is<sp/>even<sp/>on<sp/>the<sp/>last<sp/>dimension.<sp/>In<sp/>case<sp/>of<sp/>an<sp/>odd<sp/>input<sp/>width,<sp/>a</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/>*<sp/>user<sp/>can<sp/>manually<sp/>pad<sp/>the<sp/>input<sp/>or<sp/>specify<sp/>the<sp/>padLastDim<sp/>parameter<sp/>which</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/>*<sp/>takes<sp/>care<sp/>of<sp/>the<sp/>padding.<sp/>The<sp/>filter<sp/>instead<sp/>can<sp/>have<sp/>any<sp/>size.<sp/>When<sp/>using</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/>*<sp/>the<sp/>valid<sp/>mode<sp/>the<sp/>filter<sp/>has<sp/>to<sp/>be<sp/>smaller<sp/>than<sp/>the<sp/>input.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>input<sp/>Input<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>filter<sp/>Filter<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>output<sp/>Output<sp/>data<sp/>that<sp/>contains<sp/>the<sp/>results<sp/>of<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Border<sp/>=<sp/>BorderMode&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;Border,<sp/>ValidConvolution&gt;::value,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;::type</highlight></codeline>
<codeline lineno="54" refid="classmlpack_1_1ann_1_1FFTConvolution_1a2982c8389e46e6ba1a839e8cd23eb5f9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1ann_1_1FFTConvolution_1a2982c8389e46e6ba1a839e8cd23eb5f9" kindref="member">Convolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>filter,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>output)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;<sp/>inputPadded<sp/>=<sp/>input;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;<sp/>filterPadded<sp/>=<sp/>filter;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(padLastDim)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inputPadded.resize(inputPadded.n_rows,<sp/>inputPadded.n_cols<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pad<sp/>filter<sp/>and<sp/>input<sp/>to<sp/>the<sp/>output<sp/>shape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>filterPadded.resize(inputPadded.n_rows,<sp/>inputPadded.n_cols);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;<sp/>temp<sp/>=<sp/>arma::real(ifft2(arma::fft2(inputPadded)<sp/>%<sp/>arma::fft2(</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filterPadded)));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>the<sp/>region<sp/>of<sp/>interest.<sp/>We<sp/>don&apos;t<sp/>need<sp/>to<sp/>handle<sp/>the<sp/>padLastDim<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>special<sp/>way<sp/>we<sp/>just<sp/>cut<sp/>it<sp/>out<sp/>from<sp/>the<sp/>output<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>temp.submat(filter.n_rows<sp/>-<sp/>1,<sp/>filter.n_cols<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.n_rows<sp/>-<sp/>1,<sp/>input.n_cols<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Perform<sp/>a<sp/>convolution<sp/>through<sp/>fft<sp/>(full<sp/>mode).<sp/>This<sp/>method<sp/>only<sp/>supports</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/>*<sp/>input<sp/>which<sp/>is<sp/>even<sp/>on<sp/>the<sp/>last<sp/>dimension.<sp/>In<sp/>case<sp/>of<sp/>an<sp/>odd<sp/>input<sp/>width,<sp/>a</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/>*<sp/>user<sp/>can<sp/>manually<sp/>pad<sp/>the<sp/>input<sp/>or<sp/>specify<sp/>the<sp/>padLastDim<sp/>parameter<sp/>which</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/>*<sp/>takes<sp/>care<sp/>of<sp/>the<sp/>padding.<sp/>The<sp/>filter<sp/>instead<sp/>can<sp/>have<sp/>any<sp/>size.</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>input<sp/>Input<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>filter<sp/>Filter<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>output<sp/>Output<sp/>data<sp/>that<sp/>contains<sp/>the<sp/>results<sp/>of<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Border<sp/>=<sp/>BorderMode&gt;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;Border,<sp/>FullConvolution&gt;::value,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;::type</highlight></codeline>
<codeline lineno="89" refid="classmlpack_1_1ann_1_1FFTConvolution_1a428d120c7c27537f279f5a185d6e1f37" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1ann_1_1FFTConvolution_1a428d120c7c27537f279f5a185d6e1f37" kindref="member">Convolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>filter,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>output)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>of<sp/>the<sp/>full<sp/>convolution<sp/>outputRows<sp/>and<sp/>outputCols<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>represent<sp/>the<sp/>true<sp/>output<sp/>size<sp/>when<sp/>the<sp/>padLastDim<sp/>parameter<sp/>is<sp/>set,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>instead<sp/>it&apos;s<sp/>the<sp/>working<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>outputRows<sp/>=<sp/>input.n_rows<sp/>+<sp/>2<sp/>*<sp/>(filter.n_rows<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>outputCols<sp/>=<sp/>input.n_cols<sp/>+<sp/>2<sp/>*<sp/>(filter.n_cols<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(padLastDim)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputCols++;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pad<sp/>filter<sp/>and<sp/>input<sp/>to<sp/>the<sp/>working<sp/>output<sp/>shape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;<sp/>inputPadded<sp/>=<sp/>arma::zeros&lt;arma::Mat&lt;eT&gt;<sp/>&gt;(outputRows,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputCols);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>inputPadded.submat(filter.n_rows<sp/>-<sp/>1,<sp/>filter.n_cols<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter.n_rows<sp/>-<sp/>1<sp/>+<sp/>input.n_rows<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter.n_cols<sp/>-<sp/>1<sp/>+<sp/>input.n_cols<sp/>-<sp/>1)<sp/>=<sp/>input;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;<sp/>filterPadded<sp/>=<sp/>filter;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>filterPadded.resize(outputRows,<sp/>outputCols);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>FFT<sp/>and<sp/>IFFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;<sp/>temp<sp/>=<sp/>arma::real(ifft2(arma::fft2(inputPadded)<sp/>%<sp/>arma::fft2(</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filterPadded)));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>the<sp/>region<sp/>of<sp/>interest.<sp/>We<sp/>don&apos;t<sp/>need<sp/>to<sp/>handle<sp/>the<sp/>padLastDim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parameter<sp/>in<sp/>a<sp/>special<sp/>way<sp/>we<sp/>just<sp/>cut<sp/>it<sp/>out<sp/>from<sp/>the<sp/>output<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>temp.submat(filter.n_rows<sp/>-<sp/>1,<sp/>filter.n_cols<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>*<sp/>(filter.n_rows<sp/>-<sp/>1)<sp/>+<sp/>input.n_rows<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>*<sp/>(filter.n_cols<sp/>-<sp/>1)<sp/>+<sp/>input.n_cols<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Perform<sp/>a<sp/>convolution<sp/>through<sp/>fft<sp/>using<sp/>3rd<sp/>order<sp/>tensors.<sp/>This<sp/>method<sp/>only</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/>*<sp/>supports<sp/>input<sp/>which<sp/>is<sp/>even<sp/>on<sp/>the<sp/>last<sp/>dimension.<sp/>In<sp/>case<sp/>of<sp/>an<sp/>odd<sp/>input</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/>*<sp/>width,<sp/>a<sp/>user<sp/>can<sp/>manually<sp/>pad<sp/>the<sp/>input<sp/>or<sp/>specify<sp/>the<sp/>padLastDim</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/>*<sp/>parameter<sp/>which<sp/>takes<sp/>care<sp/>of<sp/>the<sp/>padding.<sp/>The<sp/>filter<sp/>instead<sp/>can<sp/>have<sp/>any</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/>*<sp/>size.</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>input<sp/>Input<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>filter<sp/>Filter<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>output<sp/>Output<sp/>data<sp/>that<sp/>contains<sp/>the<sp/>results<sp/>of<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="135" refid="classmlpack_1_1ann_1_1FFTConvolution_1aa37ddacedb28e6dce994110781a184f6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1FFTConvolution_1aa37ddacedb28e6dce994110781a184f6" kindref="member">Convolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Cube&lt;eT&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Cube&lt;eT&gt;&amp;<sp/>filter,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Cube&lt;eT&gt;&amp;<sp/>output)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;<sp/>convOutput;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1FFTConvolution_1a2982c8389e46e6ba1a839e8cd23eb5f9" kindref="member">FFTConvolution&lt;BorderMode&gt;::Convolution</ref>(input.slice(0),<sp/>filter.slice(0),</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convOutput);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>arma::Cube&lt;eT&gt;(convOutput.n_rows,<sp/>convOutput.n_cols,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.n_slices);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>output.slice(0)<sp/>=<sp/>convOutput;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>input.n_slices;<sp/>++i)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1FFTConvolution_1a2982c8389e46e6ba1a839e8cd23eb5f9" kindref="member">FFTConvolution&lt;BorderMode&gt;::Convolution</ref>(input.slice(i),<sp/>filter.slice(i),</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.slice(i));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Perform<sp/>a<sp/>convolution<sp/>through<sp/>fft<sp/>using<sp/>dense<sp/>matrix<sp/>as<sp/>input<sp/>and<sp/>a<sp/>3rd</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/>*<sp/>order<sp/>tensors<sp/>as<sp/>filter<sp/>and<sp/>output.<sp/>This<sp/>method<sp/>only<sp/>supports<sp/>input<sp/>which</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/>*<sp/>is<sp/>even<sp/>on<sp/>the<sp/>last<sp/>dimension.<sp/>In<sp/>case<sp/>of<sp/>an<sp/>odd<sp/>input<sp/>width,<sp/>a<sp/>user<sp/>can</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/>*<sp/>manually<sp/>pad<sp/>the<sp/>input<sp/>or<sp/>specify<sp/>the<sp/>padLastDim<sp/>parameter<sp/>which<sp/>takes<sp/>care</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/>*<sp/>of<sp/>the<sp/>padding.<sp/>The<sp/>filter<sp/>instead<sp/>can<sp/>have<sp/>any<sp/>size.</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>input<sp/>Input<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>filter<sp/>Filter<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>output<sp/>Output<sp/>data<sp/>that<sp/>contains<sp/>the<sp/>results<sp/>of<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="166" refid="classmlpack_1_1ann_1_1FFTConvolution_1ae95a7b7e102c7b7b92666bd6e7e04c22" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1FFTConvolution_1ae95a7b7e102c7b7b92666bd6e7e04c22" kindref="member">Convolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Cube&lt;eT&gt;&amp;<sp/>filter,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Cube&lt;eT&gt;&amp;<sp/>output)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;<sp/>convOutput;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1FFTConvolution_1a2982c8389e46e6ba1a839e8cd23eb5f9" kindref="member">FFTConvolution&lt;BorderMode&gt;::Convolution</ref>(input,<sp/>filter.slice(0),</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convOutput);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>arma::Cube&lt;eT&gt;(convOutput.n_rows,<sp/>convOutput.n_cols,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter.n_slices);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>output.slice(0)<sp/>=<sp/>convOutput;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>filter.n_slices;<sp/>++i)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1FFTConvolution_1a2982c8389e46e6ba1a839e8cd23eb5f9" kindref="member">FFTConvolution&lt;BorderMode&gt;::Convolution</ref>(input,<sp/>filter.slice(i),</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.slice(i));</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Perform<sp/>a<sp/>convolution<sp/>using<sp/>a<sp/>3rd<sp/>order<sp/>tensors<sp/>as<sp/>input<sp/>and<sp/>output<sp/>and<sp/>a</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/>*<sp/>dense<sp/>matrix<sp/>as<sp/>filter.</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>input<sp/>Input<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>filter<sp/>Filter<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>output<sp/>Output<sp/>data<sp/>that<sp/>contains<sp/>the<sp/>results<sp/>of<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="194" refid="classmlpack_1_1ann_1_1FFTConvolution_1ae14e839c68e6e5d32d8083c3d364ef64" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1FFTConvolution_1ae14e839c68e6e5d32d8083c3d364ef64" kindref="member">Convolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Cube&lt;eT&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>filter,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Cube&lt;eT&gt;&amp;<sp/>output)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;<sp/>convOutput;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1FFTConvolution_1a2982c8389e46e6ba1a839e8cd23eb5f9" kindref="member">FFTConvolution&lt;BorderMode&gt;::Convolution</ref>(input.slice(0),<sp/>filter,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convOutput);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>arma::Cube&lt;eT&gt;(convOutput.n_rows,<sp/>convOutput.n_cols,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.n_slices);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>output.slice(0)<sp/>=<sp/>convOutput;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>input.n_slices;<sp/>++i)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1FFTConvolution_1a2982c8389e46e6ba1a839e8cd23eb5f9" kindref="member">FFTConvolution&lt;BorderMode&gt;::Convolution</ref>(input.slice(i),<sp/>filter,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.slice(i));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal">};<sp/><sp/></highlight><highlight class="comment">//<sp/>class<sp/>FFTConvolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/convolution_rules/fft_convolution.hpp"/>
  </compounddef>
</doxygen>
