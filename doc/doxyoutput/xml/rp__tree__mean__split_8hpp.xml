<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="rp__tree__mean__split_8hpp" kind="file" language="C++">
    <compoundname>rp_tree_mean_split.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="rp__tree__max__split_8hpp" local="yes">rp_tree_max_split.hpp</includes>
    <includes refid="perform__split_8hpp" local="no">mlpack/core/tree/perform_split.hpp</includes>
    <includes refid="lin__alg_8hpp" local="no">mlpack/core/math/lin_alg.hpp</includes>
    <includes local="yes">rp_tree_mean_split_impl.hpp</includes>
    <includedby refid="binary__space__tree_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree.hpp</includedby>
    <incdepgraph>
      <node id="14684">
        <label>list</label>
      </node>
      <node id="14681">
        <label>atomic</label>
      </node>
      <node id="14671">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="14647">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="14683">
        <label>iomanip</label>
      </node>
      <node id="14656">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="14657" relation="include">
        </childnode>
        <childnode refid="14659" relation="include">
        </childnode>
      </node>
      <node id="14639">
        <label>cstdint</label>
      </node>
      <node id="14648">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="14655">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="14678">
        <label>arma_config.hpp</label>
      </node>
      <node id="14695">
        <label>lin_alg_impl.hpp</label>
      </node>
      <node id="14668">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="14635">
        <label>cmath</label>
      </node>
      <node id="14654">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="14643">
        <label>stdexcept</label>
      </node>
      <node id="14663">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="14648" relation="include">
        </childnode>
        <childnode refid="14650" relation="include">
        </childnode>
        <childnode refid="14651" relation="include">
        </childnode>
        <childnode refid="14649" relation="include">
        </childnode>
      </node>
      <node id="14687">
        <label>string</label>
      </node>
      <node id="14691">
        <label>rp_tree_max_split.hpp</label>
        <link refid="rp__tree__max__split_8hpp"/>
        <childnode refid="14634" relation="include">
        </childnode>
        <childnode refid="14692" relation="include">
        </childnode>
        <childnode refid="14693" relation="include">
        </childnode>
      </node>
      <node id="14675">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="14676" relation="include">
        </childnode>
        <childnode refid="14642" relation="include">
        </childnode>
      </node>
      <node id="14685">
        <label>map</label>
      </node>
      <node id="14694">
        <label>mlpack/core/math/lin_alg.hpp</label>
        <link refid="lin__alg_8hpp"/>
        <childnode refid="14634" relation="include">
        </childnode>
        <childnode refid="14695" relation="include">
        </childnode>
      </node>
      <node id="14637">
        <label>cfloat</label>
      </node>
      <node id="14667">
        <label>boost/variant.hpp</label>
      </node>
      <node id="14689">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="14651">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="14674">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="14675" relation="include">
        </childnode>
        <childnode refid="14651" relation="include">
        </childnode>
        <childnode refid="14658" relation="include">
        </childnode>
        <childnode refid="14676" relation="include">
        </childnode>
      </node>
      <node id="14664">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="14662">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="14648" relation="include">
        </childnode>
        <childnode refid="14650" relation="include">
        </childnode>
        <childnode refid="14651" relation="include">
        </childnode>
        <childnode refid="14649" relation="include">
        </childnode>
      </node>
      <node id="14665">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="14648" relation="include">
        </childnode>
        <childnode refid="14650" relation="include">
        </childnode>
        <childnode refid="14651" relation="include">
        </childnode>
        <childnode refid="14649" relation="include">
        </childnode>
      </node>
      <node id="14653">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="14673">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="14649" relation="include">
        </childnode>
        <childnode refid="14650" relation="include">
        </childnode>
        <childnode refid="14651" relation="include">
        </childnode>
        <childnode refid="14661" relation="include">
        </childnode>
        <childnode refid="14670" relation="include">
        </childnode>
      </node>
      <node id="14677">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="14678" relation="include">
        </childnode>
      </node>
      <node id="14679">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="14634">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="14635" relation="include">
        </childnode>
        <childnode refid="14636" relation="include">
        </childnode>
        <childnode refid="14637" relation="include">
        </childnode>
        <childnode refid="14638" relation="include">
        </childnode>
        <childnode refid="14639" relation="include">
        </childnode>
        <childnode refid="14640" relation="include">
        </childnode>
        <childnode refid="14641" relation="include">
        </childnode>
        <childnode refid="14642" relation="include">
        </childnode>
        <childnode refid="14643" relation="include">
        </childnode>
        <childnode refid="14644" relation="include">
        </childnode>
        <childnode refid="14645" relation="include">
        </childnode>
        <childnode refid="14646" relation="include">
        </childnode>
        <childnode refid="14647" relation="include">
        </childnode>
        <childnode refid="14648" relation="include">
        </childnode>
        <childnode refid="14649" relation="include">
        </childnode>
        <childnode refid="14650" relation="include">
        </childnode>
        <childnode refid="14651" relation="include">
        </childnode>
        <childnode refid="14652" relation="include">
        </childnode>
        <childnode refid="14653" relation="include">
        </childnode>
        <childnode refid="14654" relation="include">
        </childnode>
        <childnode refid="14655" relation="include">
        </childnode>
        <childnode refid="14656" relation="include">
        </childnode>
        <childnode refid="14660" relation="include">
        </childnode>
        <childnode refid="14661" relation="include">
        </childnode>
        <childnode refid="14662" relation="include">
        </childnode>
        <childnode refid="14663" relation="include">
        </childnode>
        <childnode refid="14664" relation="include">
        </childnode>
        <childnode refid="14665" relation="include">
        </childnode>
        <childnode refid="14666" relation="include">
        </childnode>
        <childnode refid="14672" relation="include">
        </childnode>
        <childnode refid="14673" relation="include">
        </childnode>
        <childnode refid="14670" relation="include">
        </childnode>
        <childnode refid="14674" relation="include">
        </childnode>
        <childnode refid="14677" relation="include">
        </childnode>
        <childnode refid="14679" relation="include">
        </childnode>
        <childnode refid="14680" relation="include">
        </childnode>
        <childnode refid="14689" relation="include">
        </childnode>
        <childnode refid="14690" relation="include">
        </childnode>
      </node>
      <node id="14640">
        <label>cstdio</label>
      </node>
      <node id="14644">
        <label>tuple</label>
      </node>
      <node id="14649">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="14666">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="14649" relation="include">
        </childnode>
        <childnode refid="14650" relation="include">
        </childnode>
        <childnode refid="14651" relation="include">
        </childnode>
        <childnode refid="14653" relation="include">
        </childnode>
        <childnode refid="14667" relation="include">
        </childnode>
        <childnode refid="14668" relation="include">
        </childnode>
        <childnode refid="14669" relation="include">
        </childnode>
        <childnode refid="14670" relation="include">
        </childnode>
      </node>
      <node id="14696">
        <label>rp_tree_mean_split_impl.hpp</label>
      </node>
      <node id="14645">
        <label>utility</label>
      </node>
      <node id="14669">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="14660">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="14657">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="14658" relation="include">
        </childnode>
      </node>
      <node id="14680">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="14681" relation="include">
        </childnode>
        <childnode refid="14682" relation="include">
        </childnode>
        <childnode refid="14683" relation="include">
        </childnode>
        <childnode refid="14684" relation="include">
        </childnode>
        <childnode refid="14685" relation="include">
        </childnode>
        <childnode refid="14686" relation="include">
        </childnode>
        <childnode refid="14687" relation="include">
        </childnode>
        <childnode refid="14688" relation="include">
        </childnode>
      </node>
      <node id="14658">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="14672">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="14670" relation="include">
        </childnode>
        <childnode refid="14666" relation="include">
        </childnode>
        <childnode refid="14673" relation="include">
        </childnode>
      </node>
      <node id="14641">
        <label>cstdlib</label>
      </node>
      <node id="14636">
        <label>cctype</label>
      </node>
      <node id="14659">
        <label>unordered_map</label>
      </node>
      <node id="14638">
        <label>climits</label>
      </node>
      <node id="14686">
        <label>mutex</label>
      </node>
      <node id="14682">
        <label>chrono</label>
      </node>
      <node id="14690">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="14633">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_mean_split.hpp</label>
        <link refid="rp__tree__mean__split_8hpp"/>
        <childnode refid="14634" relation="include">
        </childnode>
        <childnode refid="14691" relation="include">
        </childnode>
        <childnode refid="14692" relation="include">
        </childnode>
        <childnode refid="14694" relation="include">
        </childnode>
        <childnode refid="14696" relation="include">
        </childnode>
      </node>
      <node id="14688">
        <label>thread</label>
      </node>
      <node id="14693">
        <label>rp_tree_max_split_impl.hpp</label>
      </node>
      <node id="14692">
        <label>mlpack/core/tree/perform_split.hpp</label>
        <link refid="perform__split_8hpp"/>
      </node>
      <node id="14676">
        <label>type_traits</label>
      </node>
      <node id="14652">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="14646">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="14670">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="14648" relation="include">
        </childnode>
        <childnode refid="14649" relation="include">
        </childnode>
        <childnode refid="14650" relation="include">
        </childnode>
        <childnode refid="14651" relation="include">
        </childnode>
        <childnode refid="14671" relation="include">
        </childnode>
      </node>
      <node id="14642">
        <label>cstring</label>
      </node>
      <node id="14661">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="14650">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="14700">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="14698" relation="include">
        </childnode>
      </node>
      <node id="14733">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/pelleg_moore_kmeans.hpp</label>
        <link refid="pelleg__moore__kmeans_8hpp"/>
      </node>
      <node id="14716">
        <label>/home/aakash/mlpack/src/mlpack/methods/lmnn/lmnn_function.hpp</label>
        <link refid="lmnn__function_8hpp"/>
        <childnode refid="14717" relation="include">
        </childnode>
      </node>
      <node id="14734">
        <label>/home/aakash/mlpack/src/mlpack/methods/range_search/range_search.hpp</label>
        <link refid="range__search_8hpp"/>
        <childnode refid="14735" relation="include">
        </childnode>
        <childnode refid="14736" relation="include">
        </childnode>
      </node>
      <node id="14718">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/typedef.hpp</label>
        <link refid="methods_2neighbor__search_2typedef_8hpp"/>
        <childnode refid="14702" relation="include">
        </childnode>
      </node>
      <node id="14706">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp</label>
        <link refid="cf__model_8hpp"/>
      </node>
      <node id="14708">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp</label>
        <link refid="regularized__svd__method_8hpp"/>
      </node>
      <node id="14701">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="14698" relation="include">
        </childnode>
      </node>
      <node id="14705">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/bias_svd_method.hpp</label>
        <link refid="bias__svd__method_8hpp"/>
      </node>
      <node id="14703">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf.hpp</label>
        <link refid="cf_8hpp"/>
        <childnode refid="14704" relation="include">
        </childnode>
        <childnode refid="14706" relation="include">
        </childnode>
        <childnode refid="14707" relation="include">
        </childnode>
        <childnode refid="14709" relation="include">
        </childnode>
      </node>
      <node id="14711">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/cosine_search.hpp</label>
        <link refid="cosine__search_8hpp"/>
      </node>
      <node id="14740">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_typedef.hpp</label>
        <link refid="ra__typedef_8hpp"/>
        <childnode refid="14739" relation="include">
        </childnode>
      </node>
      <node id="14735">
        <label>/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp</label>
        <link refid="dbscan_8hpp"/>
      </node>
      <node id="14729">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/gmm.hpp</label>
        <link refid="gmm_8hpp"/>
        <childnode refid="14728" relation="include">
        </childnode>
      </node>
      <node id="14737">
        <label>/home/aakash/mlpack/src/mlpack/tests/main_tests/range_search_utils.hpp</label>
        <link refid="range__search__utils_8hpp"/>
      </node>
      <node id="14714">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/dual_tree_kmeans.hpp</label>
        <link refid="dual__tree__kmeans_8hpp"/>
      </node>
      <node id="14709">
        <label>/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp</label>
        <link refid="svdplusplus_8hpp"/>
        <childnode refid="14710" relation="include">
        </childnode>
      </node>
      <node id="14727">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp</label>
        <link refid="diagonal__gmm_8hpp"/>
        <childnode refid="14728" relation="include">
        </childnode>
      </node>
      <node id="14719">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp</label>
        <link refid="ns__model_8hpp"/>
      </node>
      <node id="14739">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_search.hpp</label>
        <link refid="ra__search_8hpp"/>
        <childnode refid="14738" relation="include">
        </childnode>
        <childnode refid="14740" relation="include">
        </childnode>
      </node>
      <node id="14732">
        <label>/home/aakash/mlpack/src/mlpack/methods/nystroem_method/nystroem_method.hpp</label>
        <link refid="nystroem__method_2nystroem__method_8hpp"/>
        <childnode refid="14731" relation="include">
        </childnode>
      </node>
      <node id="14715">
        <label>/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp</label>
        <link refid="constraints_8hpp"/>
        <childnode refid="14716" relation="include">
        </childnode>
      </node>
      <node id="14712">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/lmetric_search.hpp</label>
        <link refid="lmetric__search_8hpp"/>
        <childnode refid="14703" relation="include">
        </childnode>
      </node>
      <node id="14717">
        <label>/home/aakash/mlpack/src/mlpack/methods/lmnn/lmnn.hpp</label>
        <link refid="lmnn_8hpp"/>
      </node>
      <node id="14704">
        <label>/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp</label>
        <link refid="bias__svd_8hpp"/>
        <childnode refid="14705" relation="include">
        </childnode>
      </node>
      <node id="14699">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="14698" relation="include">
        </childnode>
        <childnode refid="14700" relation="include">
        </childnode>
        <childnode refid="14701" relation="include">
        </childnode>
        <childnode refid="14702" relation="include">
        </childnode>
      </node>
      <node id="14738">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp</label>
        <link refid="ra__model_8hpp"/>
      </node>
      <node id="14726">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/em_fit.hpp</label>
        <link refid="em__fit_8hpp"/>
        <childnode refid="14727" relation="include">
        </childnode>
        <childnode refid="14729" relation="include">
        </childnode>
      </node>
      <node id="14724">
        <label>/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp</label>
        <link refid="kde__model_8hpp"/>
      </node>
      <node id="14698">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="14699" relation="include">
        </childnode>
        <childnode refid="14720" relation="include">
        </childnode>
        <childnode refid="14721" relation="include">
        </childnode>
        <childnode refid="14722" relation="include">
        </childnode>
        <childnode refid="14723" relation="include">
        </childnode>
        <childnode refid="14724" relation="include">
        </childnode>
        <childnode refid="14714" relation="include">
        </childnode>
        <childnode refid="14725" relation="include">
        </childnode>
        <childnode refid="14733" relation="include">
        </childnode>
        <childnode refid="14702" relation="include">
        </childnode>
        <childnode refid="14719" relation="include">
        </childnode>
        <childnode refid="14734" relation="include">
        </childnode>
        <childnode refid="14736" relation="include">
        </childnode>
        <childnode refid="14738" relation="include">
        </childnode>
        <childnode refid="14739" relation="include">
        </childnode>
        <childnode refid="14741" relation="include">
        </childnode>
      </node>
      <node id="14710">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svdplusplus_method.hpp</label>
        <link refid="svdplusplus__method_8hpp"/>
      </node>
      <node id="14707">
        <label>/home/aakash/mlpack/src/mlpack/methods/regularized_svd/regularized_svd.hpp</label>
        <link refid="regularized__svd_8hpp"/>
        <childnode refid="14708" relation="include">
        </childnode>
      </node>
      <node id="14741">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_query_stat.hpp</label>
        <link refid="ra__query__stat_8hpp"/>
        <childnode refid="14739" relation="include">
        </childnode>
      </node>
      <node id="14702">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search.hpp</label>
        <link refid="neighbor__search_8hpp"/>
        <childnode refid="14703" relation="include">
        </childnode>
        <childnode refid="14711" relation="include">
        </childnode>
        <childnode refid="14712" relation="include">
        </childnode>
        <childnode refid="14713" relation="include">
        </childnode>
        <childnode refid="14714" relation="include">
        </childnode>
        <childnode refid="14715" relation="include">
        </childnode>
        <childnode refid="14718" relation="include">
        </childnode>
        <childnode refid="14719" relation="include">
        </childnode>
      </node>
      <node id="14736">
        <label>/home/aakash/mlpack/src/mlpack/methods/range_search/rs_model.hpp</label>
        <link refid="rs__model_8hpp"/>
        <childnode refid="14737" relation="include">
        </childnode>
      </node>
      <node id="14723">
        <label>/home/aakash/mlpack/src/mlpack/methods/kde/kde.hpp</label>
        <link refid="kde_8hpp"/>
        <childnode refid="14724" relation="include">
        </childnode>
      </node>
      <node id="14713">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/pearson_search.hpp</label>
        <link refid="pearson__search_8hpp"/>
      </node>
      <node id="14725">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/kmeans.hpp</label>
        <link refid="kmeans_8hpp"/>
        <childnode refid="14726" relation="include">
        </childnode>
        <childnode refid="14730" relation="include">
        </childnode>
      </node>
      <node id="14722">
        <label>/home/aakash/mlpack/src/mlpack/methods/emst/dtb.hpp</label>
        <link refid="dtb_8hpp"/>
      </node>
      <node id="14730">
        <label>/home/aakash/mlpack/src/mlpack/methods/nystroem_method/kmeans_selection.hpp</label>
        <link refid="kmeans__selection_8hpp"/>
        <childnode refid="14731" relation="include">
        </childnode>
        <childnode refid="14732" relation="include">
        </childnode>
      </node>
      <node id="14728">
        <label>/home/aakash/mlpack/src/mlpack/methods/hmm/hmm_model.hpp</label>
        <link refid="hmm__model_8hpp"/>
      </node>
      <node id="14697">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_mean_split.hpp</label>
        <link refid="rp__tree__mean__split_8hpp"/>
        <childnode refid="14698" relation="include">
        </childnode>
      </node>
      <node id="14731">
        <label>/home/aakash/mlpack/src/mlpack/methods/kernel_pca/kernel_rules/nystroem_method.hpp</label>
        <link refid="kernel__pca_2kernel__rules_2nystroem__method_8hpp"/>
      </node>
      <node id="14720">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="14698" relation="include">
        </childnode>
      </node>
      <node id="14721">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="14698" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1tree_1_1RPTreeMeanSplit" prot="public">mlpack::tree::RPTreeMeanSplit</innerclass>
    <innerclass refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo" prot="public">mlpack::tree::RPTreeMeanSplit::SplitInfo</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1tree">mlpack::tree</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Mikhail Lozhnikov</para></simplesect>
Definition of class (RPTreeMaxSplit) to split a binary space partition tree.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_TREE_BINARY_SPACE_TREE_RP_TREE_MEAN_SPLIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_TREE_BINARY_SPACE_TREE_RP_TREE_MEAN_SPLIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rp__tree__max__split_8hpp" kindref="compound">rp_tree_max_split.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="perform__split_8hpp" kindref="compound">mlpack/core/tree/perform_split.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="lin__alg_8hpp" kindref="compound">mlpack/core/math/lin_alg.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tree<sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BoundType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType<sp/>=<sp/>arma::mat&gt;</highlight></codeline>
<codeline lineno="33" refid="classmlpack_1_1tree_1_1RPTreeMeanSplit" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1tree_1_1RPTreeMeanSplit" kindref="compound">RPTreeMeanSplit</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37" refid="classmlpack_1_1tree_1_1RPTreeMeanSplit_1a227d0c7e23e98fcd6c81ecab357a791f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType::elem_type<sp/><ref refid="classmlpack_1_1tree_1_1RPTreeMeanSplit_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref>;</highlight></codeline>
<codeline lineno="39" refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="42" refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo_1a620f4f39e225b65a841f34c53b94515f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Col&lt;ElemType&gt;<sp/><ref refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo_1a620f4f39e225b65a841f34c53b94515f" kindref="member">direction</ref>;</highlight></codeline>
<codeline lineno="44" refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo_1a12759ca9cb67acd78d9f84691d3dbca2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Col&lt;ElemType&gt;<sp/><ref refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo_1a12759ca9cb67acd78d9f84691d3dbca2" kindref="member">mean</ref>;</highlight></codeline>
<codeline lineno="46" refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo_1a0940adf91ff7f1747d68384a012683d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ElemType<sp/><ref refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo_1a0940adf91ff7f1747d68384a012683d3" kindref="member">splitVal</ref>;</highlight></codeline>
<codeline lineno="49" refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo_1a66c386fb84a207f57aace1b0b527780d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo_1a66c386fb84a207f57aace1b0b527780d" kindref="member">meanSplit</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1RPTreeMeanSplit_1a563632ed24c69523f20a12d9a28eaeaa" kindref="member">SplitNode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoundType&amp;<sp/></highlight><highlight class="comment">/*<sp/>bound<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>begin,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref>&amp;<sp/>splitInfo);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classmlpack_1_1tree_1_1RPTreeMeanSplit_1aace8240352cb3ea61c975987b91a80a6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1RPTreeMeanSplit_1aace8240352cb3ea61c975987b91a80a6" kindref="member">PerformSplit</ref>(MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>begin,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref>&amp;<sp/>splitInfo)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>split::PerformSplit&lt;MatType,<sp/>RPTreeMeanSplit&gt;(data,<sp/>begin,<sp/>count,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitInfo);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classmlpack_1_1tree_1_1RPTreeMeanSplit_1af99e13e8418a8bb6b602435fbd7e4e64" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1RPTreeMeanSplit_1af99e13e8418a8bb6b602435fbd7e4e64" kindref="member">PerformSplit</ref>(MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>begin,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref>&amp;<sp/>splitInfo,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;size_t&gt;&amp;<sp/>oldFromNew)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>split::PerformSplit&lt;MatType,<sp/>RPTreeMeanSplit&gt;(data,<sp/>begin,<sp/>count,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitInfo,<sp/>oldFromNew);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType&gt;</highlight></codeline>
<codeline lineno="123" refid="classmlpack_1_1tree_1_1RPTreeMeanSplit_1af0fc61f469596cb8796d1966564ecbcb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1RPTreeMeanSplit_1af0fc61f469596cb8796d1966564ecbcb" kindref="member">AssignToLeftNode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>point,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref>&amp;<sp/>splitInfo)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(splitInfo.<ref refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo_1a66c386fb84a207f57aace1b0b527780d" kindref="member">meanSplit</ref>)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arma::dot(point<sp/>-<sp/>splitInfo.<ref refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo_1a12759ca9cb67acd78d9f84691d3dbca2" kindref="member">mean</ref>,<sp/>point<sp/>-<sp/>splitInfo.<ref refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo_1a12759ca9cb67acd78d9f84691d3dbca2" kindref="member">mean</ref>)<sp/>&lt;=</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitInfo.<ref refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo_1a0940adf91ff7f1747d68384a012683d3" kindref="member">splitVal</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(arma::dot(point,<sp/>splitInfo.<ref refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo_1a620f4f39e225b65a841f34c53b94515f" kindref="member">direction</ref>)<sp/>&lt;=<sp/>splitInfo.<ref refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo_1a0940adf91ff7f1747d68384a012683d3" kindref="member">splitVal</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ElemType<sp/>GetAveragePointDistance(MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::uvec&amp;<sp/>samples);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetDotMedian(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::uvec&amp;<sp/>samples,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Col&lt;ElemType&gt;&amp;<sp/><ref refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo_1a620f4f39e225b65a841f34c53b94515f" kindref="member">direction</ref>,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ElemType&amp;<sp/><ref refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo_1a0940adf91ff7f1747d68384a012683d3" kindref="member">splitVal</ref>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetMeanMedian(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::uvec&amp;<sp/>samples,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Col&lt;ElemType&gt;&amp;<sp/><ref refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo_1a12759ca9cb67acd78d9f84691d3dbca2" kindref="member">mean</ref>,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ElemType&amp;<sp/>splitVal);</highlight></codeline>
<codeline lineno="169"><highlight class="normal">};</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rp_tree_mean_split_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>MLPACK_CORE_TREE_BINARY_SPACE_TREE_RP_TREE_MEAN_SPLIT_HPP</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_mean_split.hpp"/>
  </compounddef>
</doxygen>
