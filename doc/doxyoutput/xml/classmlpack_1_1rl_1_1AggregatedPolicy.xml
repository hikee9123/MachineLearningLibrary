<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1rl_1_1AggregatedPolicy" kind="class" language="C++" prot="public">
    <compoundname>mlpack::rl::AggregatedPolicy</compoundname>
    <includes refid="aggregated__policy_8hpp" local="no">aggregated_policy.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename PolicyType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmlpack_1_1rl_1_1AggregatedPolicy_1afb9320b245a1358ab02e3f57e3b0a597" prot="public" static="no">
        <type>typename PolicyType::ActionType</type>
        <definition>using ActionType =  typename PolicyType::ActionType</definition>
        <argsstring></argsstring>
        <name>ActionType</name>
        <briefdescription>
<para>Convenient typedef for action. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/policy/aggregated_policy.hpp" line="31" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/policy/aggregated_policy.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1rl_1_1AggregatedPolicy_1aa07d3db0329675a9490d1c1fb104723c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; PolicyType &gt;</type>
        <definition>std::vector&lt;PolicyType&gt; policies</definition>
        <argsstring></argsstring>
        <name>policies</name>
        <briefdescription>
<para>Locally-stored child policies. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/policy/aggregated_policy.hpp" line="71" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/policy/aggregated_policy.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1rl_1_1AggregatedPolicy_1a81222a8ba8b0bdc05eaf5b8c98c880e1" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution" kindref="compound">distribution::DiscreteDistribution</ref></type>
        <definition>distribution::DiscreteDistribution sampler</definition>
        <argsstring></argsstring>
        <name>sampler</name>
        <briefdescription>
<para>Locally-stored sampler under the given distribution. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/policy/aggregated_policy.hpp" line="74" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/policy/aggregated_policy.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1rl_1_1AggregatedPolicy_1aee7c1ebbfd95024c0b1d2a580ceebb14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>AggregatedPolicy</definition>
        <argsstring>(std::vector&lt; PolicyType &gt; policies, const arma::colvec &amp;distribution)</argsstring>
        <name>AggregatedPolicy</name>
        <param>
          <type>std::vector&lt; PolicyType &gt;</type>
          <declname>policies</declname>
        </param>
        <param>
          <type>const arma::colvec &amp;</type>
          <declname>distribution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>policies</parametername>
</parameternamelist>
<parameterdescription>
<para>Child policies. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>distribution</parametername>
</parameternamelist>
<parameterdescription>
<para>Probability distribution for each child policy. User should make sure its size is same as the number of policies and the sum of its element is equal to 1. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/policy/aggregated_policy.hpp" line="39" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/policy/aggregated_policy.hpp" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1rl_1_1AggregatedPolicy_1a280278726ff7d32f2b7eff5c92a1767a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Anneal</definition>
        <argsstring>()</argsstring>
        <name>Anneal</name>
        <briefdescription>
<para>Exploration probability will anneal at each step. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/policy/aggregated_policy.hpp" line="63" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/policy/aggregated_policy.hpp" bodystart="63" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1rl_1_1AggregatedPolicy_1a631fe506e7d81fba96697ba11c6ace84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1rl_1_1AggregatedPolicy_1afb9320b245a1358ab02e3f57e3b0a597" kindref="member">ActionType</ref></type>
        <definition>ActionType Sample</definition>
        <argsstring>(const arma::colvec &amp;actionValue, bool deterministic=false)</argsstring>
        <name>Sample</name>
        <param>
          <type>const arma::colvec &amp;</type>
          <declname>actionValue</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>deterministic</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Sample an action based on given action values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>actionValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Values for each action. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deterministic</parametername>
</parameternamelist>
<parameterdescription>
<para>Always select the action greedily. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Sampled action. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/policy/aggregated_policy.hpp" line="52" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/policy/aggregated_policy.hpp" bodystart="52" bodyend="58"/>
        <references refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a2c6f8d5bb4eacf7de767d2172b320756">DiscreteDistribution::Random</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>PolicyType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the child policy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/policy/aggregated_policy.hpp" line="28" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/policy/aggregated_policy.hpp" bodystart="27" bodyend="75"/>
    <listofallmembers>
      <member refid="classmlpack_1_1rl_1_1AggregatedPolicy_1afb9320b245a1358ab02e3f57e3b0a597" prot="public" virt="non-virtual"><scope>mlpack::rl::AggregatedPolicy</scope><name>ActionType</name></member>
      <member refid="classmlpack_1_1rl_1_1AggregatedPolicy_1aee7c1ebbfd95024c0b1d2a580ceebb14" prot="public" virt="non-virtual"><scope>mlpack::rl::AggregatedPolicy</scope><name>AggregatedPolicy</name></member>
      <member refid="classmlpack_1_1rl_1_1AggregatedPolicy_1a280278726ff7d32f2b7eff5c92a1767a" prot="public" virt="non-virtual"><scope>mlpack::rl::AggregatedPolicy</scope><name>Anneal</name></member>
      <member refid="classmlpack_1_1rl_1_1AggregatedPolicy_1aa07d3db0329675a9490d1c1fb104723c" prot="private" virt="non-virtual"><scope>mlpack::rl::AggregatedPolicy</scope><name>policies</name></member>
      <member refid="classmlpack_1_1rl_1_1AggregatedPolicy_1a631fe506e7d81fba96697ba11c6ace84" prot="public" virt="non-virtual"><scope>mlpack::rl::AggregatedPolicy</scope><name>Sample</name></member>
      <member refid="classmlpack_1_1rl_1_1AggregatedPolicy_1a81222a8ba8b0bdc05eaf5b8c98c880e1" prot="private" virt="non-virtual"><scope>mlpack::rl::AggregatedPolicy</scope><name>sampler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
