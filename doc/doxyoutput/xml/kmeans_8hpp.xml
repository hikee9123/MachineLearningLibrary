<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="kmeans_8hpp" kind="file" language="C++">
    <compoundname>kmeans.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="lmetric_8hpp" local="no">mlpack/core/metrics/lmetric.hpp</includes>
    <includes refid="sample__initialization_8hpp" local="yes">sample_initialization.hpp</includes>
    <includes refid="max__variance__new__cluster_8hpp" local="yes">max_variance_new_cluster.hpp</includes>
    <includes refid="naive__kmeans_8hpp" local="yes">naive_kmeans.hpp</includes>
    <includes refid="binary__space__tree_8hpp" local="no">mlpack/core/tree/binary_space_tree.hpp</includes>
    <includes local="yes">kmeans_impl.hpp</includes>
    <includedby refid="em__fit_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/gmm/em_fit.hpp</includedby>
    <includedby refid="kmeans__selection_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/nystroem_method/kmeans_selection.hpp</includedby>
    <incdepgraph>
      <node id="50684">
        <label>list</label>
      </node>
      <node id="50740">
        <label>breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="50732">
        <label>binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="50634" relation="include">
        </childnode>
        <childnode refid="50729" relation="include">
        </childnode>
        <childnode refid="50733" relation="include">
        </childnode>
      </node>
      <node id="50742">
        <label>binary_space_tree/traits.hpp</label>
        <link refid="binary__space__tree_2traits_8hpp"/>
        <childnode refid="50743" relation="include">
        </childnode>
        <childnode refid="50707" relation="include">
        </childnode>
      </node>
      <node id="50681">
        <label>atomic</label>
      </node>
      <node id="50671">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="50647">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="50683">
        <label>iomanip</label>
      </node>
      <node id="50739">
        <label>queue</label>
      </node>
      <node id="50704">
        <label>bound_traits.hpp</label>
        <link refid="bound__traits_8hpp"/>
      </node>
      <node id="50717">
        <label>binary_space_tree/mean_split.hpp</label>
        <link refid="mean__split_8hpp"/>
        <childnode refid="50634" relation="include">
        </childnode>
        <childnode refid="50715" relation="include">
        </childnode>
        <childnode refid="50718" relation="include">
        </childnode>
      </node>
      <node id="50692">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="50656">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="50657" relation="include">
        </childnode>
        <childnode refid="50659" relation="include">
        </childnode>
      </node>
      <node id="50639">
        <label>cstdint</label>
      </node>
      <node id="50648">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="50655">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="50741">
        <label>binary_space_tree/breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="50695">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="50718">
        <label>mean_split_impl.hpp</label>
      </node>
      <node id="50678">
        <label>arma_config.hpp</label>
      </node>
      <node id="50709">
        <label>hollow_ball_bound.hpp</label>
        <link refid="hollow__ball__bound_8hpp"/>
        <childnode refid="50634" relation="include">
        </childnode>
        <childnode refid="50691" relation="include">
        </childnode>
        <childnode refid="50704" relation="include">
        </childnode>
        <childnode refid="50710" relation="include">
        </childnode>
      </node>
      <node id="50730">
        <label>../statistic.hpp</label>
        <link refid="statistic_8hpp"/>
      </node>
      <node id="50725">
        <label>lin_alg_impl.hpp</label>
      </node>
      <node id="50668">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="50635">
        <label>cmath</label>
      </node>
      <node id="50702">
        <label>bounds.hpp</label>
        <link refid="bounds_8hpp"/>
        <childnode refid="50703" relation="include">
        </childnode>
        <childnode refid="50691" relation="include">
        </childnode>
        <childnode refid="50704" relation="include">
        </childnode>
        <childnode refid="50705" relation="include">
        </childnode>
        <childnode refid="50707" relation="include">
        </childnode>
        <childnode refid="50709" relation="include">
        </childnode>
        <childnode refid="50711" relation="include">
        </childnode>
      </node>
      <node id="50654">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="50643">
        <label>stdexcept</label>
      </node>
      <node id="50735">
        <label>binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="50634" relation="include">
        </childnode>
        <childnode refid="50729" relation="include">
        </childnode>
        <childnode refid="50736" relation="include">
        </childnode>
      </node>
      <node id="50663">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="50648" relation="include">
        </childnode>
        <childnode refid="50650" relation="include">
        </childnode>
        <childnode refid="50651" relation="include">
        </childnode>
        <childnode refid="50649" relation="include">
        </childnode>
      </node>
      <node id="50700">
        <label>naive_kmeans_impl.hpp</label>
      </node>
      <node id="50703">
        <label>mlpack/core/math/range.hpp</label>
      </node>
      <node id="50687">
        <label>string</label>
      </node>
      <node id="50721">
        <label>binary_space_tree/rp_tree_max_split.hpp</label>
        <link refid="rp__tree__max__split_8hpp"/>
        <childnode refid="50634" relation="include">
        </childnode>
        <childnode refid="50715" relation="include">
        </childnode>
        <childnode refid="50722" relation="include">
        </childnode>
      </node>
      <node id="50716">
        <label>midpoint_split_impl.hpp</label>
      </node>
      <node id="50675">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="50676" relation="include">
        </childnode>
        <childnode refid="50642" relation="include">
        </childnode>
      </node>
      <node id="50685">
        <label>map</label>
      </node>
      <node id="50736">
        <label>dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="50724">
        <label>mlpack/core/math/lin_alg.hpp</label>
        <link refid="lin__alg_8hpp"/>
        <childnode refid="50634" relation="include">
        </childnode>
        <childnode refid="50725" relation="include">
        </childnode>
      </node>
      <node id="50698">
        <label>max_variance_new_cluster_impl.hpp</label>
      </node>
      <node id="50637">
        <label>cfloat</label>
      </node>
      <node id="50667">
        <label>boost/variant.hpp</label>
      </node>
      <node id="50689">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="50651">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="50674">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="50675" relation="include">
        </childnode>
        <childnode refid="50651" relation="include">
        </childnode>
        <childnode refid="50658" relation="include">
        </childnode>
        <childnode refid="50676" relation="include">
        </childnode>
      </node>
      <node id="50664">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="50662">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="50648" relation="include">
        </childnode>
        <childnode refid="50650" relation="include">
        </childnode>
        <childnode refid="50651" relation="include">
        </childnode>
        <childnode refid="50649" relation="include">
        </childnode>
      </node>
      <node id="50665">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="50648" relation="include">
        </childnode>
        <childnode refid="50650" relation="include">
        </childnode>
        <childnode refid="50651" relation="include">
        </childnode>
        <childnode refid="50649" relation="include">
        </childnode>
      </node>
      <node id="50731">
        <label>binary_space_tree_impl.hpp</label>
      </node>
      <node id="50653">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="50673">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="50649" relation="include">
        </childnode>
        <childnode refid="50650" relation="include">
        </childnode>
        <childnode refid="50651" relation="include">
        </childnode>
        <childnode refid="50661" relation="include">
        </childnode>
        <childnode refid="50670" relation="include">
        </childnode>
      </node>
      <node id="50677">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="50678" relation="include">
        </childnode>
      </node>
      <node id="50737">
        <label>binary_space_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="50679">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="50634">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="50635" relation="include">
        </childnode>
        <childnode refid="50636" relation="include">
        </childnode>
        <childnode refid="50637" relation="include">
        </childnode>
        <childnode refid="50638" relation="include">
        </childnode>
        <childnode refid="50639" relation="include">
        </childnode>
        <childnode refid="50640" relation="include">
        </childnode>
        <childnode refid="50641" relation="include">
        </childnode>
        <childnode refid="50642" relation="include">
        </childnode>
        <childnode refid="50643" relation="include">
        </childnode>
        <childnode refid="50644" relation="include">
        </childnode>
        <childnode refid="50645" relation="include">
        </childnode>
        <childnode refid="50646" relation="include">
        </childnode>
        <childnode refid="50647" relation="include">
        </childnode>
        <childnode refid="50648" relation="include">
        </childnode>
        <childnode refid="50649" relation="include">
        </childnode>
        <childnode refid="50650" relation="include">
        </childnode>
        <childnode refid="50651" relation="include">
        </childnode>
        <childnode refid="50652" relation="include">
        </childnode>
        <childnode refid="50653" relation="include">
        </childnode>
        <childnode refid="50654" relation="include">
        </childnode>
        <childnode refid="50655" relation="include">
        </childnode>
        <childnode refid="50656" relation="include">
        </childnode>
        <childnode refid="50660" relation="include">
        </childnode>
        <childnode refid="50661" relation="include">
        </childnode>
        <childnode refid="50662" relation="include">
        </childnode>
        <childnode refid="50663" relation="include">
        </childnode>
        <childnode refid="50664" relation="include">
        </childnode>
        <childnode refid="50665" relation="include">
        </childnode>
        <childnode refid="50666" relation="include">
        </childnode>
        <childnode refid="50672" relation="include">
        </childnode>
        <childnode refid="50673" relation="include">
        </childnode>
        <childnode refid="50670" relation="include">
        </childnode>
        <childnode refid="50674" relation="include">
        </childnode>
        <childnode refid="50677" relation="include">
        </childnode>
        <childnode refid="50679" relation="include">
        </childnode>
        <childnode refid="50680" relation="include">
        </childnode>
        <childnode refid="50689" relation="include">
        </childnode>
        <childnode refid="50690" relation="include">
        </childnode>
      </node>
      <node id="50733">
        <label>single_tree_traverser_impl.hpp</label>
      </node>
      <node id="50714">
        <label>binary_space_tree/midpoint_split.hpp</label>
        <link refid="midpoint__split_8hpp"/>
        <childnode refid="50634" relation="include">
        </childnode>
        <childnode refid="50715" relation="include">
        </childnode>
        <childnode refid="50716" relation="include">
        </childnode>
      </node>
      <node id="50696">
        <label>random</label>
      </node>
      <node id="50708">
        <label>ballbound_impl.hpp</label>
      </node>
      <node id="50734">
        <label>binary_space_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="50640">
        <label>cstdio</label>
      </node>
      <node id="50712">
        <label>address.hpp</label>
        <link refid="address_8hpp"/>
      </node>
      <node id="50743">
        <label>mlpack/core/tree/tree_traits.hpp</label>
        <link refid="tree__traits_8hpp"/>
      </node>
      <node id="50644">
        <label>tuple</label>
      </node>
      <node id="50649">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="50727">
        <label>binary_space_tree/ub_tree_split.hpp</label>
        <link refid="ub__tree__split_8hpp"/>
        <childnode refid="50634" relation="include">
        </childnode>
        <childnode refid="50712" relation="include">
        </childnode>
        <childnode refid="50728" relation="include">
        </childnode>
      </node>
      <node id="50666">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="50649" relation="include">
        </childnode>
        <childnode refid="50650" relation="include">
        </childnode>
        <childnode refid="50651" relation="include">
        </childnode>
        <childnode refid="50653" relation="include">
        </childnode>
        <childnode refid="50667" relation="include">
        </childnode>
        <childnode refid="50668" relation="include">
        </childnode>
        <childnode refid="50669" relation="include">
        </childnode>
        <childnode refid="50670" relation="include">
        </childnode>
      </node>
      <node id="50729">
        <label>binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="50634" relation="include">
        </childnode>
        <childnode refid="50730" relation="include">
        </childnode>
        <childnode refid="50714" relation="include">
        </childnode>
        <childnode refid="50731" relation="include">
        </childnode>
        <childnode refid="50701" relation="include">
        </childnode>
      </node>
      <node id="50705">
        <label>hrectbound.hpp</label>
        <link refid="hrectbound_8hpp"/>
        <childnode refid="50634" relation="include">
        </childnode>
        <childnode refid="50703" relation="include">
        </childnode>
        <childnode refid="50691" relation="include">
        </childnode>
        <childnode refid="50704" relation="include">
        </childnode>
        <childnode refid="50706" relation="include">
        </childnode>
      </node>
      <node id="50726">
        <label>rp_tree_mean_split_impl.hpp</label>
      </node>
      <node id="50697">
        <label>max_variance_new_cluster.hpp</label>
        <link refid="max__variance__new__cluster_8hpp"/>
        <childnode refid="50634" relation="include">
        </childnode>
        <childnode refid="50698" relation="include">
        </childnode>
      </node>
      <node id="50745">
        <label>kmeans_impl.hpp</label>
      </node>
      <node id="50694">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="50634" relation="include">
        </childnode>
        <childnode refid="50695" relation="include">
        </childnode>
        <childnode refid="50696" relation="include">
        </childnode>
      </node>
      <node id="50645">
        <label>utility</label>
      </node>
      <node id="50669">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="50660">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="50701">
        <label>mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="50634" relation="include">
        </childnode>
        <childnode refid="50702" relation="include">
        </childnode>
        <childnode refid="50714" relation="include">
        </childnode>
        <childnode refid="50717" relation="include">
        </childnode>
        <childnode refid="50719" relation="include">
        </childnode>
        <childnode refid="50721" relation="include">
        </childnode>
        <childnode refid="50723" relation="include">
        </childnode>
        <childnode refid="50727" relation="include">
        </childnode>
        <childnode refid="50729" relation="include">
        </childnode>
        <childnode refid="50732" relation="include">
        </childnode>
        <childnode refid="50734" relation="include">
        </childnode>
        <childnode refid="50735" relation="include">
        </childnode>
        <childnode refid="50737" relation="include">
        </childnode>
        <childnode refid="50738" relation="include">
        </childnode>
        <childnode refid="50741" relation="include">
        </childnode>
        <childnode refid="50742" relation="include">
        </childnode>
        <childnode refid="50744" relation="include">
        </childnode>
      </node>
      <node id="50657">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="50658" relation="include">
        </childnode>
      </node>
      <node id="50680">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="50681" relation="include">
        </childnode>
        <childnode refid="50682" relation="include">
        </childnode>
        <childnode refid="50683" relation="include">
        </childnode>
        <childnode refid="50684" relation="include">
        </childnode>
        <childnode refid="50685" relation="include">
        </childnode>
        <childnode refid="50686" relation="include">
        </childnode>
        <childnode refid="50687" relation="include">
        </childnode>
        <childnode refid="50688" relation="include">
        </childnode>
      </node>
      <node id="50658">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="50672">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="50670" relation="include">
        </childnode>
        <childnode refid="50666" relation="include">
        </childnode>
        <childnode refid="50673" relation="include">
        </childnode>
      </node>
      <node id="50641">
        <label>cstdlib</label>
      </node>
      <node id="50636">
        <label>cctype</label>
      </node>
      <node id="50659">
        <label>unordered_map</label>
      </node>
      <node id="50633">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/kmeans.hpp</label>
        <link refid="kmeans_8hpp"/>
        <childnode refid="50634" relation="include">
        </childnode>
        <childnode refid="50691" relation="include">
        </childnode>
        <childnode refid="50693" relation="include">
        </childnode>
        <childnode refid="50697" relation="include">
        </childnode>
        <childnode refid="50699" relation="include">
        </childnode>
        <childnode refid="50701" relation="include">
        </childnode>
        <childnode refid="50745" relation="include">
        </childnode>
      </node>
      <node id="50693">
        <label>sample_initialization.hpp</label>
        <link refid="sample__initialization_8hpp"/>
        <childnode refid="50634" relation="include">
        </childnode>
        <childnode refid="50694" relation="include">
        </childnode>
      </node>
      <node id="50638">
        <label>climits</label>
      </node>
      <node id="50686">
        <label>mutex</label>
      </node>
      <node id="50682">
        <label>chrono</label>
      </node>
      <node id="50706">
        <label>hrectbound_impl.hpp</label>
      </node>
      <node id="50690">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="50723">
        <label>binary_space_tree/rp_tree_mean_split.hpp</label>
        <link refid="rp__tree__mean__split_8hpp"/>
        <childnode refid="50634" relation="include">
        </childnode>
        <childnode refid="50721" relation="include">
        </childnode>
        <childnode refid="50715" relation="include">
        </childnode>
        <childnode refid="50724" relation="include">
        </childnode>
        <childnode refid="50726" relation="include">
        </childnode>
      </node>
      <node id="50720">
        <label>vantage_point_split_impl.hpp</label>
      </node>
      <node id="50688">
        <label>thread</label>
      </node>
      <node id="50707">
        <label>ballbound.hpp</label>
        <link refid="ballbound_8hpp"/>
        <childnode refid="50634" relation="include">
        </childnode>
        <childnode refid="50691" relation="include">
        </childnode>
        <childnode refid="50704" relation="include">
        </childnode>
        <childnode refid="50708" relation="include">
        </childnode>
      </node>
      <node id="50722">
        <label>rp_tree_max_split_impl.hpp</label>
      </node>
      <node id="50715">
        <label>mlpack/core/tree/perform_split.hpp</label>
        <link refid="perform__split_8hpp"/>
      </node>
      <node id="50699">
        <label>naive_kmeans.hpp</label>
        <link refid="naive__kmeans_8hpp"/>
        <childnode refid="50634" relation="include">
        </childnode>
        <childnode refid="50700" relation="include">
        </childnode>
      </node>
      <node id="50676">
        <label>type_traits</label>
      </node>
      <node id="50738">
        <label>binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="50634" relation="include">
        </childnode>
        <childnode refid="50739" relation="include">
        </childnode>
        <childnode refid="50701" relation="include">
        </childnode>
        <childnode refid="50740" relation="include">
        </childnode>
      </node>
      <node id="50652">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="50744">
        <label>binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="50701" relation="include">
        </childnode>
      </node>
      <node id="50646">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="50670">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="50648" relation="include">
        </childnode>
        <childnode refid="50649" relation="include">
        </childnode>
        <childnode refid="50650" relation="include">
        </childnode>
        <childnode refid="50651" relation="include">
        </childnode>
        <childnode refid="50671" relation="include">
        </childnode>
      </node>
      <node id="50710">
        <label>hollow_ball_bound_impl.hpp</label>
      </node>
      <node id="50642">
        <label>cstring</label>
      </node>
      <node id="50661">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="50713">
        <label>cellbound_impl.hpp</label>
      </node>
      <node id="50728">
        <label>ub_tree_split_impl.hpp</label>
      </node>
      <node id="50711">
        <label>cellbound.hpp</label>
        <link refid="cellbound_8hpp"/>
        <childnode refid="50634" relation="include">
        </childnode>
        <childnode refid="50703" relation="include">
        </childnode>
        <childnode refid="50691" relation="include">
        </childnode>
        <childnode refid="50704" relation="include">
        </childnode>
        <childnode refid="50712" relation="include">
        </childnode>
        <childnode refid="50713" relation="include">
        </childnode>
      </node>
      <node id="50650">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="50691">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="50634" relation="include">
        </childnode>
        <childnode refid="50692" relation="include">
        </childnode>
      </node>
      <node id="50719">
        <label>binary_space_tree/vantage_point_split.hpp</label>
        <link refid="vantage__point__split_8hpp"/>
        <childnode refid="50634" relation="include">
        </childnode>
        <childnode refid="50715" relation="include">
        </childnode>
        <childnode refid="50694" relation="include">
        </childnode>
        <childnode refid="50720" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="50750">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/gmm.hpp</label>
        <link refid="gmm_8hpp"/>
        <childnode refid="50749" relation="include">
        </childnode>
      </node>
      <node id="50748">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp</label>
        <link refid="diagonal__gmm_8hpp"/>
        <childnode refid="50749" relation="include">
        </childnode>
      </node>
      <node id="50753">
        <label>/home/aakash/mlpack/src/mlpack/methods/nystroem_method/nystroem_method.hpp</label>
        <link refid="nystroem__method_2nystroem__method_8hpp"/>
        <childnode refid="50752" relation="include">
        </childnode>
      </node>
      <node id="50747">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/em_fit.hpp</label>
        <link refid="em__fit_8hpp"/>
        <childnode refid="50748" relation="include">
        </childnode>
        <childnode refid="50750" relation="include">
        </childnode>
      </node>
      <node id="50746">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/kmeans.hpp</label>
        <link refid="kmeans_8hpp"/>
        <childnode refid="50747" relation="include">
        </childnode>
        <childnode refid="50751" relation="include">
        </childnode>
      </node>
      <node id="50751">
        <label>/home/aakash/mlpack/src/mlpack/methods/nystroem_method/kmeans_selection.hpp</label>
        <link refid="kmeans__selection_8hpp"/>
        <childnode refid="50752" relation="include">
        </childnode>
        <childnode refid="50753" relation="include">
        </childnode>
      </node>
      <node id="50749">
        <label>/home/aakash/mlpack/src/mlpack/methods/hmm/hmm_model.hpp</label>
        <link refid="hmm__model_8hpp"/>
      </node>
      <node id="50752">
        <label>/home/aakash/mlpack/src/mlpack/methods/kernel_pca/kernel_rules/nystroem_method.hpp</label>
        <link refid="kernel__pca_2kernel__rules_2nystroem__method_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1kmeans_1_1KMeans" prot="public">mlpack::kmeans::KMeans</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1kmeans">mlpack::kmeans</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Parikshit Ram (<ulink url="mailto:pram@cc.gatech.edu">pram@cc.gatech.edu</ulink>)</para></simplesect>
K-Means clustering.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_KMEANS_KMEANS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_KMEANS_KMEANS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="lmetric_8hpp" kindref="compound">mlpack/core/metrics/lmetric.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sample__initialization_8hpp" kindref="compound">sample_initialization.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="max__variance__new__cluster_8hpp" kindref="compound">max_variance_new_cluster.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="naive__kmeans_8hpp" kindref="compound">naive_kmeans.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="binary__space__tree_8hpp" kindref="compound">mlpack/core/tree/binary_space_tree.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">kmeans<sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MetricType<sp/>=<sp/><ref refid="namespacemlpack_1_1metric_1a0306f114fdf32dcdfa8f015408cfc37d" kindref="member">metric::EuclideanDistance</ref>,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InitialPartitionPolicy<sp/>=<sp/>SampleInitialization,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>EmptyClusterPolicy<sp/>=<sp/>MaxVarianceNewCluster,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LloydStepType<sp/>=<sp/>NaiveKMeans,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType<sp/>=<sp/>arma::mat&gt;</highlight></codeline>
<codeline lineno="73" refid="classmlpack_1_1kmeans_1_1KMeans" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1kmeans_1_1KMeans" kindref="compound">KMeans</ref></highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1kmeans_1_1KMeans_1a2c02f26404b56010005348a1a9c78811" kindref="member">KMeans</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations<sp/>=<sp/>1000,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MetricType<sp/>metric<sp/>=<sp/>MetricType(),</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InitialPartitionPolicy<sp/>partitioner<sp/>=<sp/>InitialPartitionPolicy(),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EmptyClusterPolicy<sp/>emptyClusterAction<sp/>=<sp/>EmptyClusterPolicy());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kmeans_1_1KMeans_1a6826456ef16a5d9129bdcb14d4e7b601" kindref="member">Cluster</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>clusters,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Row&lt;size_t&gt;&amp;<sp/>assignments,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialGuess<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kmeans_1_1KMeans_1a6826456ef16a5d9129bdcb14d4e7b601" kindref="member">Cluster</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>clusters,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>centroids,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialGuess<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kmeans_1_1KMeans_1a6826456ef16a5d9129bdcb14d4e7b601" kindref="member">Cluster</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>clusters,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Row&lt;size_t&gt;&amp;<sp/>assignments,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>centroids,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialAssignmentGuess<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>initialCentroidGuess<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="classmlpack_1_1kmeans_1_1KMeans_1a420770944a5b0c7a852c4ec372c4a2d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kmeans_1_1KMeans_1a420770944a5b0c7a852c4ec372c4a2d1" kindref="member">MaxIterations</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxIterations;<sp/>}</highlight></codeline>
<codeline lineno="161" refid="classmlpack_1_1kmeans_1_1KMeans_1acda675ab4ab86b95c92bc33bc391a61b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1kmeans_1_1KMeans_1acda675ab4ab86b95c92bc33bc391a61b" kindref="member">MaxIterations</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxIterations;<sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classmlpack_1_1kmeans_1_1KMeans_1aac4d643c62af7d9cc2a072aea10d2b32" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MetricType&amp;<sp/><ref refid="classmlpack_1_1kmeans_1_1KMeans_1aac4d643c62af7d9cc2a072aea10d2b32" kindref="member">Metric</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>metric;<sp/>}</highlight></codeline>
<codeline lineno="166" refid="classmlpack_1_1kmeans_1_1KMeans_1acc71d930ed90e73b2bc0c360835c5371" refkind="member"><highlight class="normal"><sp/><sp/>MetricType&amp;<sp/><ref refid="classmlpack_1_1kmeans_1_1KMeans_1acc71d930ed90e73b2bc0c360835c5371" kindref="member">Metric</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>metric;<sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="classmlpack_1_1kmeans_1_1KMeans_1a7e66bff389c56384db8677109a05eb8b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InitialPartitionPolicy&amp;<sp/><ref refid="classmlpack_1_1kmeans_1_1KMeans_1a7e66bff389c56384db8677109a05eb8b" kindref="member">Partitioner</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>partitioner;<sp/>}</highlight></codeline>
<codeline lineno="171" refid="classmlpack_1_1kmeans_1_1KMeans_1a4312395900bd208fb8f63c8d0a6f7c6c" refkind="member"><highlight class="normal"><sp/><sp/>InitialPartitionPolicy&amp;<sp/><ref refid="classmlpack_1_1kmeans_1_1KMeans_1a4312395900bd208fb8f63c8d0a6f7c6c" kindref="member">Partitioner</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>partitioner;<sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="classmlpack_1_1kmeans_1_1KMeans_1aa48f5728e3adee070ea825c121ebe25e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EmptyClusterPolicy&amp;<sp/><ref refid="classmlpack_1_1kmeans_1_1KMeans_1aa48f5728e3adee070ea825c121ebe25e" kindref="member">EmptyClusterAction</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="175"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>emptyClusterAction;<sp/>}</highlight></codeline>
<codeline lineno="177" refid="classmlpack_1_1kmeans_1_1KMeans_1a6fad56c8618d74d504739243a5acd350" refkind="member"><highlight class="normal"><sp/><sp/>EmptyClusterPolicy&amp;<sp/><ref refid="classmlpack_1_1kmeans_1_1KMeans_1a6fad56c8618d74d504739243a5acd350" kindref="member">EmptyClusterAction</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>emptyClusterAction;<sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kmeans_1_1KMeans_1a72d63b74c8166dff8e1a9006905ad9ca" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>version);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>MetricType<sp/>metric;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>InitialPartitionPolicy<sp/>partitioner;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>EmptyClusterPolicy<sp/>emptyClusterAction;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">};</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>kmeans</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;kmeans_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>MLPACK_METHODS_KMEANS_KMEANS_HPP</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/kmeans/kmeans.hpp"/>
  </compounddef>
</doxygen>
