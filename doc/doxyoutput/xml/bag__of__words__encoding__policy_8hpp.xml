<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="bag__of__words__encoding__policy_8hpp" kind="file" language="C++">
    <compoundname>bag_of_words_encoding_policy.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="policy__traits_8hpp" local="no">mlpack/core/data/string_encoding_policies/policy_traits.hpp</includes>
    <includes refid="string__encoding_8hpp" local="no">mlpack/core/data/string_encoding.hpp</includes>
    <incdepgraph>
      <node id="9301">
        <label>list</label>
      </node>
      <node id="9298">
        <label>atomic</label>
      </node>
      <node id="9288">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="9264">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="9300">
        <label>iomanip</label>
      </node>
      <node id="9310">
        <label>mlpack/core/boost_backport/boost_backport_string_view.hpp</label>
      </node>
      <node id="9308">
        <label>mlpack/core/data/string_encoding_policies/policy_traits.hpp</label>
        <link refid="policy__traits_8hpp"/>
        <childnode refid="9251" relation="include">
        </childnode>
      </node>
      <node id="9273">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="9274" relation="include">
        </childnode>
        <childnode refid="9276" relation="include">
        </childnode>
      </node>
      <node id="9256">
        <label>cstdint</label>
      </node>
      <node id="9265">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="9272">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="9295">
        <label>arma_config.hpp</label>
      </node>
      <node id="9285">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="9252">
        <label>cmath</label>
      </node>
      <node id="9271">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="9260">
        <label>stdexcept</label>
      </node>
      <node id="9280">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="9265" relation="include">
        </childnode>
        <childnode refid="9267" relation="include">
        </childnode>
        <childnode refid="9268" relation="include">
        </childnode>
        <childnode refid="9266" relation="include">
        </childnode>
      </node>
      <node id="9304">
        <label>string</label>
      </node>
      <node id="9292">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="9293" relation="include">
        </childnode>
        <childnode refid="9259" relation="include">
        </childnode>
      </node>
      <node id="9302">
        <label>map</label>
      </node>
      <node id="9254">
        <label>cfloat</label>
      </node>
      <node id="9284">
        <label>boost/variant.hpp</label>
      </node>
      <node id="9306">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="9268">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="9291">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="9292" relation="include">
        </childnode>
        <childnode refid="9268" relation="include">
        </childnode>
        <childnode refid="9275" relation="include">
        </childnode>
        <childnode refid="9293" relation="include">
        </childnode>
      </node>
      <node id="9281">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="9279">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="9265" relation="include">
        </childnode>
        <childnode refid="9267" relation="include">
        </childnode>
        <childnode refid="9268" relation="include">
        </childnode>
        <childnode refid="9266" relation="include">
        </childnode>
      </node>
      <node id="9282">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="9265" relation="include">
        </childnode>
        <childnode refid="9267" relation="include">
        </childnode>
        <childnode refid="9268" relation="include">
        </childnode>
        <childnode refid="9266" relation="include">
        </childnode>
      </node>
      <node id="9270">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="9290">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="9266" relation="include">
        </childnode>
        <childnode refid="9267" relation="include">
        </childnode>
        <childnode refid="9268" relation="include">
        </childnode>
        <childnode refid="9278" relation="include">
        </childnode>
        <childnode refid="9287" relation="include">
        </childnode>
      </node>
      <node id="9294">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="9295" relation="include">
        </childnode>
      </node>
      <node id="9296">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="9251">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="9252" relation="include">
        </childnode>
        <childnode refid="9253" relation="include">
        </childnode>
        <childnode refid="9254" relation="include">
        </childnode>
        <childnode refid="9255" relation="include">
        </childnode>
        <childnode refid="9256" relation="include">
        </childnode>
        <childnode refid="9257" relation="include">
        </childnode>
        <childnode refid="9258" relation="include">
        </childnode>
        <childnode refid="9259" relation="include">
        </childnode>
        <childnode refid="9260" relation="include">
        </childnode>
        <childnode refid="9261" relation="include">
        </childnode>
        <childnode refid="9262" relation="include">
        </childnode>
        <childnode refid="9263" relation="include">
        </childnode>
        <childnode refid="9264" relation="include">
        </childnode>
        <childnode refid="9265" relation="include">
        </childnode>
        <childnode refid="9266" relation="include">
        </childnode>
        <childnode refid="9267" relation="include">
        </childnode>
        <childnode refid="9268" relation="include">
        </childnode>
        <childnode refid="9269" relation="include">
        </childnode>
        <childnode refid="9270" relation="include">
        </childnode>
        <childnode refid="9271" relation="include">
        </childnode>
        <childnode refid="9272" relation="include">
        </childnode>
        <childnode refid="9273" relation="include">
        </childnode>
        <childnode refid="9277" relation="include">
        </childnode>
        <childnode refid="9278" relation="include">
        </childnode>
        <childnode refid="9279" relation="include">
        </childnode>
        <childnode refid="9280" relation="include">
        </childnode>
        <childnode refid="9281" relation="include">
        </childnode>
        <childnode refid="9282" relation="include">
        </childnode>
        <childnode refid="9283" relation="include">
        </childnode>
        <childnode refid="9289" relation="include">
        </childnode>
        <childnode refid="9290" relation="include">
        </childnode>
        <childnode refid="9287" relation="include">
        </childnode>
        <childnode refid="9291" relation="include">
        </childnode>
        <childnode refid="9294" relation="include">
        </childnode>
        <childnode refid="9296" relation="include">
        </childnode>
        <childnode refid="9297" relation="include">
        </childnode>
        <childnode refid="9306" relation="include">
        </childnode>
        <childnode refid="9307" relation="include">
        </childnode>
      </node>
      <node id="9257">
        <label>cstdio</label>
      </node>
      <node id="9261">
        <label>tuple</label>
      </node>
      <node id="9266">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="9309">
        <label>mlpack/core/data/string_encoding.hpp</label>
        <link refid="string__encoding_8hpp"/>
        <childnode refid="9251" relation="include">
        </childnode>
        <childnode refid="9310" relation="include">
        </childnode>
        <childnode refid="9311" relation="include">
        </childnode>
        <childnode refid="9308" relation="include">
        </childnode>
        <childnode refid="9314" relation="include">
        </childnode>
        <childnode refid="9315" relation="include">
        </childnode>
      </node>
      <node id="9283">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="9266" relation="include">
        </childnode>
        <childnode refid="9267" relation="include">
        </childnode>
        <childnode refid="9268" relation="include">
        </childnode>
        <childnode refid="9270" relation="include">
        </childnode>
        <childnode refid="9284" relation="include">
        </childnode>
        <childnode refid="9285" relation="include">
        </childnode>
        <childnode refid="9286" relation="include">
        </childnode>
        <childnode refid="9287" relation="include">
        </childnode>
      </node>
      <node id="9315">
        <label>string_encoding_impl.hpp</label>
      </node>
      <node id="9314">
        <label>vector</label>
      </node>
      <node id="9262">
        <label>utility</label>
      </node>
      <node id="9313">
        <label>array</label>
      </node>
      <node id="9286">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="9277">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="9274">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="9275" relation="include">
        </childnode>
      </node>
      <node id="9297">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="9298" relation="include">
        </childnode>
        <childnode refid="9299" relation="include">
        </childnode>
        <childnode refid="9300" relation="include">
        </childnode>
        <childnode refid="9301" relation="include">
        </childnode>
        <childnode refid="9302" relation="include">
        </childnode>
        <childnode refid="9303" relation="include">
        </childnode>
        <childnode refid="9304" relation="include">
        </childnode>
        <childnode refid="9305" relation="include">
        </childnode>
      </node>
      <node id="9275">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="9289">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="9287" relation="include">
        </childnode>
        <childnode refid="9283" relation="include">
        </childnode>
        <childnode refid="9290" relation="include">
        </childnode>
      </node>
      <node id="9258">
        <label>cstdlib</label>
      </node>
      <node id="9253">
        <label>cctype</label>
      </node>
      <node id="9312">
        <label>deque</label>
      </node>
      <node id="9276">
        <label>unordered_map</label>
      </node>
      <node id="9255">
        <label>climits</label>
      </node>
      <node id="9303">
        <label>mutex</label>
      </node>
      <node id="9299">
        <label>chrono</label>
      </node>
      <node id="9307">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="9305">
        <label>thread</label>
      </node>
      <node id="9311">
        <label>mlpack/core/data/string_encoding_dictionary.hpp</label>
        <link refid="string__encoding__dictionary_8hpp"/>
        <childnode refid="9251" relation="include">
        </childnode>
        <childnode refid="9310" relation="include">
        </childnode>
        <childnode refid="9276" relation="include">
        </childnode>
        <childnode refid="9312" relation="include">
        </childnode>
        <childnode refid="9313" relation="include">
        </childnode>
      </node>
      <node id="9293">
        <label>type_traits</label>
      </node>
      <node id="9269">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="9263">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="9287">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="9265" relation="include">
        </childnode>
        <childnode refid="9266" relation="include">
        </childnode>
        <childnode refid="9267" relation="include">
        </childnode>
        <childnode refid="9268" relation="include">
        </childnode>
        <childnode refid="9288" relation="include">
        </childnode>
      </node>
      <node id="9259">
        <label>cstring</label>
      </node>
      <node id="9278">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="9250">
        <label>/home/aakash/mlpack/src/mlpack/core/data/string_encoding_policies/bag_of_words_encoding_policy.hpp</label>
        <link refid="bag__of__words__encoding__policy_8hpp"/>
        <childnode refid="9251" relation="include">
        </childnode>
        <childnode refid="9308" relation="include">
        </childnode>
        <childnode refid="9309" relation="include">
        </childnode>
      </node>
      <node id="9267">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1data_1_1BagOfWordsEncodingPolicy" prot="public">mlpack::data::BagOfWordsEncodingPolicy</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1data">mlpack::data</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Jeffin Sam </para></simplesect>
<simplesect kind="author"><para>Mikhail Lozhnikov</para></simplesect>
Definition of the BagOfWordsEncodingPolicy class.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_DATA_STR_ENCODING_POLICIES_BAG_OF_WORDS_ENCODING_POLICY_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_DATA_STR_ENCODING_POLICIES_BAG_OF_WORDS_ENCODING_POLICY_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="policy__traits_8hpp" kindref="compound">mlpack/core/data/string_encoding_policies/policy_traits.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="string__encoding_8hpp" kindref="compound">mlpack/core/data/string_encoding.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">data<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classmlpack_1_1data_1_1BagOfWordsEncodingPolicy" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1data_1_1BagOfWordsEncodingPolicy" kindref="compound">BagOfWordsEncodingPolicy</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41" refid="classmlpack_1_1data_1_1BagOfWordsEncodingPolicy_1a77ad624cc83a2a71aa4d5ad991d811d7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1BagOfWordsEncodingPolicy_1a77ad624cc83a2a71aa4d5ad991d811d7" kindref="member">Reset</ref>()</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="59" refid="classmlpack_1_1data_1_1BagOfWordsEncodingPolicy_1a4e2c846435f9d535401110a83555d2ca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1BagOfWordsEncodingPolicy_1a4e2c846435f9d535401110a83555d2ca" kindref="member">InitMatrix</ref>(MatType&amp;<sp/>output,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>datasetSize,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>maxNumTokens<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dictionarySize)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>output.zeros(dictionarySize,<sp/>datasetSize);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ElemType&gt;</highlight></codeline>
<codeline lineno="82" refid="classmlpack_1_1data_1_1BagOfWordsEncodingPolicy_1a44833b2c5967e5805ddfd5e0abbbd981" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1BagOfWordsEncodingPolicy_1a44833b2c5967e5805ddfd5e0abbbd981" kindref="member">InitMatrix</ref>(std::vector&lt;std::vector&lt;ElemType&gt;&gt;&amp;<sp/>output,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>datasetSize,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>maxNumTokens<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dictionarySize)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>output.resize(datasetSize,<sp/>std::vector&lt;ElemType&gt;(dictionarySize));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="103" refid="classmlpack_1_1data_1_1BagOfWordsEncodingPolicy_1a0b7fe826d0b8cdb0e6a358ac5b811d6b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1BagOfWordsEncodingPolicy_1a0b7fe826d0b8cdb0e6a358ac5b811d6b" kindref="member">Encode</ref>(MatType&amp;<sp/>output,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>value,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>line,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>index<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>labels<sp/>are<sp/>assigned<sp/>sequentially<sp/>starting<sp/>from<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>output(value<sp/>-<sp/>1,<sp/>line)<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ElemType&gt;</highlight></codeline>
<codeline lineno="128" refid="classmlpack_1_1data_1_1BagOfWordsEncodingPolicy_1a22d9c3ce9453668cfe0e91db4fadfc30" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1BagOfWordsEncodingPolicy_1a22d9c3ce9453668cfe0e91db4fadfc30" kindref="member">Encode</ref>(std::vector&lt;std::vector&lt;ElemType&gt;&gt;&amp;<sp/>output,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>value,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>line,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>index<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>labels<sp/>are<sp/>assigned<sp/>sequentially<sp/>starting<sp/>from<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>output[line][value<sp/>-<sp/>1]<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classmlpack_1_1data_1_1BagOfWordsEncodingPolicy_1ae334c6e435725ce69cc696d5c18380cc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1BagOfWordsEncodingPolicy_1ae334c6e435725ce69cc696d5c18380cc" kindref="member">PreprocessToken</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>line<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>index<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>value<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="153" refid="classmlpack_1_1data_1_1BagOfWordsEncodingPolicy_1aa2ccb5a0533a6ba0abe6dfc1f98fbafb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1BagOfWordsEncodingPolicy_1aa2ccb5a0533a6ba0abe6dfc1f98fbafb" kindref="member">serialize</ref>(Archive&amp;<sp/></highlight><highlight class="comment">/*<sp/>ar<sp/>*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>to<sp/>serialize.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal">};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TokenType&gt;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1StringEncoding" kindref="compound">BagOfWordsEncoding</ref><sp/>=<sp/><ref refid="classmlpack_1_1data_1_1StringEncoding" kindref="compound">StringEncoding</ref>&lt;<ref refid="classmlpack_1_1data_1_1BagOfWordsEncodingPolicy" kindref="compound">BagOfWordsEncodingPolicy</ref>,</highlight></codeline>
<codeline lineno="167" refid="namespacemlpack_1_1data_1a728f5dac92331960e1e5822919dd2a41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1data_1_1StringEncodingDictionary" kindref="compound">StringEncodingDictionary&lt;TokenType&gt;</ref>&gt;;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/data/string_encoding_policies/bag_of_words_encoding_policy.hpp"/>
  </compounddef>
</doxygen>
