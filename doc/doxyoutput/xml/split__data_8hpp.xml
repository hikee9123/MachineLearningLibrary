<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="split__data_8hpp" kind="file" language="C++">
    <compoundname>split_data.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includedby refid="test__function__tools_8hpp" local="no">/home/aakash/mlpack/src/mlpack/tests/test_function_tools.hpp</includedby>
    <incdepgraph>
      <node id="9257">
        <label>list</label>
      </node>
      <node id="9254">
        <label>atomic</label>
      </node>
      <node id="9244">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="9220">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="9256">
        <label>iomanip</label>
      </node>
      <node id="9229">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="9230" relation="include">
        </childnode>
        <childnode refid="9232" relation="include">
        </childnode>
      </node>
      <node id="9212">
        <label>cstdint</label>
      </node>
      <node id="9206">
        <label>/home/aakash/mlpack/src/mlpack/core/data/split_data.hpp</label>
        <link refid="split__data_8hpp"/>
        <childnode refid="9207" relation="include">
        </childnode>
      </node>
      <node id="9221">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="9228">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="9251">
        <label>arma_config.hpp</label>
      </node>
      <node id="9241">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="9208">
        <label>cmath</label>
      </node>
      <node id="9227">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="9216">
        <label>stdexcept</label>
      </node>
      <node id="9236">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="9221" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9224" relation="include">
        </childnode>
        <childnode refid="9222" relation="include">
        </childnode>
      </node>
      <node id="9260">
        <label>string</label>
      </node>
      <node id="9248">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="9249" relation="include">
        </childnode>
        <childnode refid="9215" relation="include">
        </childnode>
      </node>
      <node id="9258">
        <label>map</label>
      </node>
      <node id="9210">
        <label>cfloat</label>
      </node>
      <node id="9240">
        <label>boost/variant.hpp</label>
      </node>
      <node id="9262">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="9224">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="9247">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="9248" relation="include">
        </childnode>
        <childnode refid="9224" relation="include">
        </childnode>
        <childnode refid="9231" relation="include">
        </childnode>
        <childnode refid="9249" relation="include">
        </childnode>
      </node>
      <node id="9237">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="9235">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="9221" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9224" relation="include">
        </childnode>
        <childnode refid="9222" relation="include">
        </childnode>
      </node>
      <node id="9238">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="9221" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9224" relation="include">
        </childnode>
        <childnode refid="9222" relation="include">
        </childnode>
      </node>
      <node id="9226">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="9246">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="9222" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9224" relation="include">
        </childnode>
        <childnode refid="9234" relation="include">
        </childnode>
        <childnode refid="9243" relation="include">
        </childnode>
      </node>
      <node id="9250">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="9251" relation="include">
        </childnode>
      </node>
      <node id="9252">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="9207">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="9208" relation="include">
        </childnode>
        <childnode refid="9209" relation="include">
        </childnode>
        <childnode refid="9210" relation="include">
        </childnode>
        <childnode refid="9211" relation="include">
        </childnode>
        <childnode refid="9212" relation="include">
        </childnode>
        <childnode refid="9213" relation="include">
        </childnode>
        <childnode refid="9214" relation="include">
        </childnode>
        <childnode refid="9215" relation="include">
        </childnode>
        <childnode refid="9216" relation="include">
        </childnode>
        <childnode refid="9217" relation="include">
        </childnode>
        <childnode refid="9218" relation="include">
        </childnode>
        <childnode refid="9219" relation="include">
        </childnode>
        <childnode refid="9220" relation="include">
        </childnode>
        <childnode refid="9221" relation="include">
        </childnode>
        <childnode refid="9222" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9224" relation="include">
        </childnode>
        <childnode refid="9225" relation="include">
        </childnode>
        <childnode refid="9226" relation="include">
        </childnode>
        <childnode refid="9227" relation="include">
        </childnode>
        <childnode refid="9228" relation="include">
        </childnode>
        <childnode refid="9229" relation="include">
        </childnode>
        <childnode refid="9233" relation="include">
        </childnode>
        <childnode refid="9234" relation="include">
        </childnode>
        <childnode refid="9235" relation="include">
        </childnode>
        <childnode refid="9236" relation="include">
        </childnode>
        <childnode refid="9237" relation="include">
        </childnode>
        <childnode refid="9238" relation="include">
        </childnode>
        <childnode refid="9239" relation="include">
        </childnode>
        <childnode refid="9245" relation="include">
        </childnode>
        <childnode refid="9246" relation="include">
        </childnode>
        <childnode refid="9243" relation="include">
        </childnode>
        <childnode refid="9247" relation="include">
        </childnode>
        <childnode refid="9250" relation="include">
        </childnode>
        <childnode refid="9252" relation="include">
        </childnode>
        <childnode refid="9253" relation="include">
        </childnode>
        <childnode refid="9262" relation="include">
        </childnode>
        <childnode refid="9263" relation="include">
        </childnode>
      </node>
      <node id="9213">
        <label>cstdio</label>
      </node>
      <node id="9217">
        <label>tuple</label>
      </node>
      <node id="9222">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="9239">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="9222" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9224" relation="include">
        </childnode>
        <childnode refid="9226" relation="include">
        </childnode>
        <childnode refid="9240" relation="include">
        </childnode>
        <childnode refid="9241" relation="include">
        </childnode>
        <childnode refid="9242" relation="include">
        </childnode>
        <childnode refid="9243" relation="include">
        </childnode>
      </node>
      <node id="9218">
        <label>utility</label>
      </node>
      <node id="9242">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="9233">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="9230">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="9231" relation="include">
        </childnode>
      </node>
      <node id="9253">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="9254" relation="include">
        </childnode>
        <childnode refid="9255" relation="include">
        </childnode>
        <childnode refid="9256" relation="include">
        </childnode>
        <childnode refid="9257" relation="include">
        </childnode>
        <childnode refid="9258" relation="include">
        </childnode>
        <childnode refid="9259" relation="include">
        </childnode>
        <childnode refid="9260" relation="include">
        </childnode>
        <childnode refid="9261" relation="include">
        </childnode>
      </node>
      <node id="9231">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="9245">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="9243" relation="include">
        </childnode>
        <childnode refid="9239" relation="include">
        </childnode>
        <childnode refid="9246" relation="include">
        </childnode>
      </node>
      <node id="9214">
        <label>cstdlib</label>
      </node>
      <node id="9209">
        <label>cctype</label>
      </node>
      <node id="9232">
        <label>unordered_map</label>
      </node>
      <node id="9211">
        <label>climits</label>
      </node>
      <node id="9259">
        <label>mutex</label>
      </node>
      <node id="9255">
        <label>chrono</label>
      </node>
      <node id="9263">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="9261">
        <label>thread</label>
      </node>
      <node id="9249">
        <label>type_traits</label>
      </node>
      <node id="9225">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="9219">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="9243">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="9221" relation="include">
        </childnode>
        <childnode refid="9222" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9224" relation="include">
        </childnode>
        <childnode refid="9244" relation="include">
        </childnode>
      </node>
      <node id="9215">
        <label>cstring</label>
      </node>
      <node id="9234">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="9223">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="9264">
        <label>/home/aakash/mlpack/src/mlpack/core/data/split_data.hpp</label>
        <link refid="split__data_8hpp"/>
        <childnode refid="9265" relation="include">
        </childnode>
      </node>
      <node id="9265">
        <label>/home/aakash/mlpack/src/mlpack/tests/test_function_tools.hpp</label>
        <link refid="test__function__tools_8hpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1data">mlpack::data</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Tham Ngap Wei, Keon Kim</para></simplesect>
Defines <ref refid="namespacemlpack_1_1data_1af9b163f42a48fdc8993c2165f9089494" kindref="member">Split()</ref>, a utility function to split a dataset into a training set and a test set.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_DATA_SPLIT_DATA_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_DATA_SPLIT_DATA_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">data<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputType&gt;</highlight></codeline>
<codeline lineno="27" refid="namespacemlpack_1_1data_1aa8ba4ec838f0ac7dd92c69b6c60dfb22" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1data_1aa8ba4ec838f0ac7dd92c69b6c60dfb22" kindref="member">SplitHelper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputType&amp;<sp/>input,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InputType&amp;<sp/>train,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InputType&amp;<sp/>test,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>testRatio,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::uvec&amp;<sp/>order<sp/>=<sp/>arma::uvec())</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>testSize<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(input.n_cols<sp/>*<sp/>testRatio);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>trainSize<sp/>=<sp/>input.n_cols<sp/>-<sp/>testSize;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialising<sp/>the<sp/>sizes<sp/>of<sp/>outputs<sp/>if<sp/>not<sp/>already<sp/>initialized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>train.set_size(input.n_rows,<sp/>trainSize);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>test.set_size(input.n_rows,<sp/>testSize);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Shuffling<sp/>and<sp/>spliting<sp/>simultaneously.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!order.is_empty())</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trainSize<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>trainSize;<sp/>++i)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>train.col(i)<sp/>=<sp/>input.col(order(i));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trainSize<sp/>&lt;<sp/>input.n_cols)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>trainSize;<sp/>i<sp/>&lt;<sp/>input.n_cols;<sp/>++i)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test.col(i<sp/>-<sp/>trainSize)<sp/>=<sp/>input.col(order(i));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Spliting<sp/>only.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trainSize<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>train<sp/>=<sp/>input.cols(0,<sp/>trainSize<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trainSize<sp/>&lt;<sp/>input.n_cols)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>test<sp/>=<sp/>input.cols(trainSize,<sp/>input.n_cols<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LabelsType,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/><ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t&lt;arma::is_arma_type&lt;LabelsType&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="103" refid="namespacemlpack_1_1data_1ae5943effbe5980ae3af45b5e62240fc8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1data_1ae5943effbe5980ae3af45b5e62240fc8" kindref="member">StratifiedSplit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;T&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LabelsType&amp;<sp/>inputLabel,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;T&gt;&amp;<sp/>trainData,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;T&gt;&amp;<sp/>testData,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LabelsType&amp;<sp/>trainLabel,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LabelsType&amp;<sp/>testLabel,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>testRatio,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shuffleData<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>typeCheck<sp/>=<sp/>(arma::is_Row&lt;LabelsType&gt;::value)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(arma::is_Col&lt;LabelsType&gt;::value);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!typeCheck)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;data::Split():<sp/>when<sp/>stratified<sp/>sampling<sp/>is<sp/>done,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;labels<sp/>must<sp/>have<sp/>type<sp/>`arma::Row&lt;&gt;`!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>trainIdx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>testIdx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>trainSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>testSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>arma::uvec<sp/>labelCounts;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>arma::uvec<sp/>testLabelCounts;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LabelsType::elem_type<sp/>maxLabel<sp/>=<sp/>inputLabel.max();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>labelCounts.zeros(maxLabel+1);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>testLabelCounts.zeros(maxLabel+1);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LabelsType::elem_type<sp/>label<sp/>:<sp/>inputLabel)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>++labelCounts[label];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(arma::uword<sp/>labelCount<sp/>:<sp/>labelCounts)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>testSize<sp/>+=<sp/>floor(labelCount<sp/>*<sp/>testRatio);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>trainSize<sp/>+=<sp/>labelCount<sp/>-<sp/>floor(labelCount<sp/>*<sp/>testRatio);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>trainData.set_size(input.n_rows,<sp/>trainSize);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>testData.set_size(input.n_rows,<sp/>testSize);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>trainLabel.set_size(inputLabel.n_rows,<sp/>trainSize);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>testLabel.set_size(inputLabel.n_rows,<sp/>testSize);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shuffleData)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::uvec<sp/>order<sp/>=<sp/>arma::shuffle(</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::linspace&lt;arma::uvec&gt;(0,<sp/>input.n_cols<sp/>-<sp/>1,<sp/>input.n_cols));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(arma::uword<sp/>i<sp/>:<sp/>order)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LabelsType::elem_type<sp/>label<sp/>=<sp/>inputLabel[i];</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(testLabelCounts[label]<sp/>&lt;<sp/>floor(labelCounts[label]<sp/>*<sp/>testRatio))</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testLabelCounts[label]<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testData.col(testIdx)<sp/>=<sp/>input.col(i);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testLabel[testIdx]<sp/>=<sp/>inputLabel[i];</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testIdx<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trainData.col(trainIdx)<sp/>=<sp/>input.col(i);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trainLabel[trainIdx]<sp/>=<sp/>inputLabel[i];</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trainIdx<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(arma::uword<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>input.n_cols;<sp/>i++)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LabelsType::elem_type<sp/>label<sp/>=<sp/>inputLabel[i];</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(testLabelCounts[label]<sp/>&lt;<sp/>floor(labelCounts[label]<sp/>*<sp/>testRatio))</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testLabelCounts[label]<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testData.col(testIdx)<sp/>=<sp/>input.col(i);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testLabel[testIdx]<sp/>=<sp/>inputLabel[i];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testIdx<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trainData.col(trainIdx)<sp/>=<sp/>input.col(i);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trainLabel[trainIdx]<sp/>=<sp/>inputLabel[i];</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trainIdx<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LabelsType,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/><ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t&lt;arma::is_arma_type&lt;LabelsType&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="255" refid="namespacemlpack_1_1data_1a32f749a2ac526fd90ab112400fad6ef2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1data_1a32f749a2ac526fd90ab112400fad6ef2" kindref="member">Split</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;T&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LabelsType&amp;<sp/>inputLabel,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;T&gt;&amp;<sp/>trainData,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;T&gt;&amp;<sp/>testData,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LabelsType&amp;<sp/>trainLabel,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LabelsType&amp;<sp/>testLabel,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>testRatio,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shuffleData<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shuffleData)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::uvec<sp/>order<sp/>=<sp/>arma::shuffle(arma::linspace&lt;arma::uvec&gt;(0,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.n_cols<sp/>-<sp/>1,<sp/>input.n_cols));</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemlpack_1_1data_1aa8ba4ec838f0ac7dd92c69b6c60dfb22" kindref="member">SplitHelper</ref>(input,<sp/>trainData,<sp/>testData,<sp/>testRatio,<sp/>order);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemlpack_1_1data_1aa8ba4ec838f0ac7dd92c69b6c60dfb22" kindref="member">SplitHelper</ref>(inputLabel,<sp/>trainLabel,<sp/>testLabel,<sp/>testRatio,<sp/>order);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemlpack_1_1data_1aa8ba4ec838f0ac7dd92c69b6c60dfb22" kindref="member">SplitHelper</ref>(input,<sp/>trainData,<sp/>testData,<sp/>testRatio);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemlpack_1_1data_1aa8ba4ec838f0ac7dd92c69b6c60dfb22" kindref="member">SplitHelper</ref>(inputLabel,<sp/>trainLabel,<sp/>testLabel,<sp/>testRatio);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="302" refid="namespacemlpack_1_1data_1a0ac4c8b737e134361d49d5c1c3f9f6ba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1data_1a32f749a2ac526fd90ab112400fad6ef2" kindref="member">Split</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;T&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;T&gt;&amp;<sp/>trainData,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;T&gt;&amp;<sp/>testData,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>testRatio,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shuffleData<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shuffleData)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::uvec<sp/>order<sp/>=<sp/>arma::shuffle(arma::linspace&lt;arma::uvec&gt;(0,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.n_cols<sp/>-<sp/>1,<sp/>input.n_cols));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemlpack_1_1data_1aa8ba4ec838f0ac7dd92c69b6c60dfb22" kindref="member">SplitHelper</ref>(input,<sp/>trainData,<sp/>testData,<sp/>testRatio,<sp/>order);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemlpack_1_1data_1aa8ba4ec838f0ac7dd92c69b6c60dfb22" kindref="member">SplitHelper</ref>(input,<sp/>trainData,<sp/>testData,<sp/>testRatio);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LabelsType,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/><ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t&lt;arma::is_arma_type&lt;LabelsType&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">std::tuple&lt;arma::Mat&lt;T&gt;,<sp/>arma::Mat&lt;T&gt;,<sp/>LabelsType,<sp/>LabelsType&gt;</highlight></codeline>
<codeline lineno="351" refid="namespacemlpack_1_1data_1a38ad55a3d28296d823078fe7d0ced9b2" refkind="member"><highlight class="normal"><ref refid="namespacemlpack_1_1data_1a32f749a2ac526fd90ab112400fad6ef2" kindref="member">Split</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;T&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LabelsType&amp;<sp/>inputLabel,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>testRatio,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shuffleData<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stratifyData<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="356"><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>arma::Mat&lt;T&gt;<sp/>trainData;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>arma::Mat&lt;T&gt;<sp/>testData;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>LabelsType<sp/>trainLabel;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>LabelsType<sp/>testLabel;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stratifyData)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemlpack_1_1data_1ae5943effbe5980ae3af45b5e62240fc8" kindref="member">StratifiedSplit</ref>(input,<sp/>inputLabel,<sp/>trainData,<sp/>testData,<sp/>trainLabel,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testLabel,<sp/>testRatio,<sp/>shuffleData);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemlpack_1_1data_1a32f749a2ac526fd90ab112400fad6ef2" kindref="member">Split</ref>(input,<sp/>inputLabel,<sp/>trainData,<sp/>testData,<sp/>trainLabel,<sp/>testLabel,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testRatio,<sp/>shuffleData);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_tuple(std::move(trainData),</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(testData),</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(trainLabel),</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(testLabel));</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="398"><highlight class="normal">std::tuple&lt;arma::Mat&lt;T&gt;,<sp/>arma::Mat&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="399" refid="namespacemlpack_1_1data_1a91a5ecc1018b88a9cbe745e67d1e8672" refkind="member"><highlight class="normal"><ref refid="namespacemlpack_1_1data_1a32f749a2ac526fd90ab112400fad6ef2" kindref="member">Split</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;T&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>testRatio,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shuffleData<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>arma::Mat&lt;T&gt;<sp/>trainData;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>arma::Mat&lt;T&gt;<sp/>testData;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><ref refid="namespacemlpack_1_1data_1a32f749a2ac526fd90ab112400fad6ef2" kindref="member">Split</ref>(input,<sp/>trainData,<sp/>testData,<sp/>testRatio,<sp/>shuffleData);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_tuple(std::move(trainData),</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(testData));</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FieldType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/><ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::is_Col&lt;typename<sp/>FieldType::object_type&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::is_Mat_only&lt;typename<sp/>FieldType::object_type&gt;::value&gt;&gt;</highlight></codeline>
<codeline lineno="449" refid="namespacemlpack_1_1data_1a7bca254ee313ff590e7d1bcada13d72a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1data_1a32f749a2ac526fd90ab112400fad6ef2" kindref="member">Split</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FieldType&amp;<sp/>input,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::field&lt;T&gt;&amp;<sp/>inputLabel,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FieldType&amp;<sp/>trainData,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::field&lt;T&gt;&amp;<sp/>trainLabel,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FieldType&amp;<sp/>testData,</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::field&lt;T&gt;&amp;<sp/>testLabel,</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>testRatio,</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shuffleData<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="457"><highlight class="normal">{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shuffleData)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::uvec<sp/>order<sp/>=<sp/>arma::shuffle(arma::linspace&lt;arma::uvec&gt;(0,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.n_cols<sp/>-<sp/>1,<sp/>input.n_cols));</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemlpack_1_1data_1aa8ba4ec838f0ac7dd92c69b6c60dfb22" kindref="member">SplitHelper</ref>(input,<sp/>trainData,<sp/>testData,<sp/>testRatio,<sp/>order);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemlpack_1_1data_1aa8ba4ec838f0ac7dd92c69b6c60dfb22" kindref="member">SplitHelper</ref>(inputLabel,<sp/>trainLabel,<sp/>testLabel,<sp/>testRatio,<sp/>order);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemlpack_1_1data_1aa8ba4ec838f0ac7dd92c69b6c60dfb22" kindref="member">SplitHelper</ref>(input,<sp/>trainData,<sp/>testData,<sp/>testRatio);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemlpack_1_1data_1aa8ba4ec838f0ac7dd92c69b6c60dfb22" kindref="member">SplitHelper</ref>(inputLabel,<sp/>trainLabel,<sp/>testLabel,<sp/>testRatio);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FieldType,</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">=<sp/><ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::is_Col&lt;typename<sp/>FieldType::object_type&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::is_Mat_only&lt;typename<sp/>FieldType::object_type&gt;::value&gt;&gt;</highlight></codeline>
<codeline lineno="504" refid="namespacemlpack_1_1data_1a0baaf8bcdf473761f7c59c9e1577d1f1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1data_1a32f749a2ac526fd90ab112400fad6ef2" kindref="member">Split</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FieldType&amp;<sp/>input,</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FieldType&amp;<sp/>trainData,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FieldType&amp;<sp/>testData,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>testRatio,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shuffleData<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="509"><highlight class="normal">{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shuffleData)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::uvec<sp/>order<sp/>=<sp/>arma::shuffle(arma::linspace&lt;arma::uvec&gt;(0,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.n_cols<sp/>-<sp/>1,<sp/>input.n_cols));</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemlpack_1_1data_1aa8ba4ec838f0ac7dd92c69b6c60dfb22" kindref="member">SplitHelper</ref>(input,<sp/>trainData,<sp/>testData,<sp/>testRatio,<sp/>order);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemlpack_1_1data_1aa8ba4ec838f0ac7dd92c69b6c60dfb22" kindref="member">SplitHelper</ref>(input,<sp/>trainData,<sp/>testData,<sp/>testRatio);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FieldType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">=<sp/><ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::is_Col&lt;typename<sp/>FieldType::object_type&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::is_Mat_only&lt;typename<sp/>FieldType::object_type&gt;::value&gt;&gt;</highlight></codeline>
<codeline lineno="553"><highlight class="normal">std::tuple&lt;FieldType,<sp/>FieldType,<sp/>arma::field&lt;T&gt;,<sp/>arma::field&lt;T&gt;&gt;</highlight></codeline>
<codeline lineno="554" refid="namespacemlpack_1_1data_1a744850e5ad47df5e0af6f5845009a4d2" refkind="member"><highlight class="normal"><ref refid="namespacemlpack_1_1data_1a32f749a2ac526fd90ab112400fad6ef2" kindref="member">Split</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FieldType&amp;<sp/>input,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::field&lt;T&gt;&amp;<sp/>inputLabel,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>testRatio,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shuffleData<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>FieldType<sp/>trainData;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>FieldType<sp/>testData;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>arma::field&lt;T&gt;<sp/>trainLabel;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>arma::field&lt;T&gt;<sp/>testLabel;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><ref refid="namespacemlpack_1_1data_1a32f749a2ac526fd90ab112400fad6ef2" kindref="member">Split</ref>(input,<sp/>inputLabel,<sp/>trainData,<sp/>trainLabel,<sp/>testData,<sp/>testLabel,</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>testRatio,<sp/>shuffleData);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_tuple(std::move(trainData),</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(testData),</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(trainLabel),</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(testLabel));</highlight></codeline>
<codeline lineno="571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FieldType,</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">=<sp/><ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::is_Col&lt;typename<sp/>FieldType::object_type&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::is_Mat_only&lt;typename<sp/>FieldType::object_type&gt;::value&gt;&gt;</highlight></codeline>
<codeline lineno="600"><highlight class="normal">std::tuple&lt;FieldType,<sp/>FieldType&gt;</highlight></codeline>
<codeline lineno="601" refid="namespacemlpack_1_1data_1af9b163f42a48fdc8993c2165f9089494" refkind="member"><highlight class="normal"><ref refid="namespacemlpack_1_1data_1a32f749a2ac526fd90ab112400fad6ef2" kindref="member">Split</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FieldType&amp;<sp/>input,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>testRatio,</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shuffleData<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>FieldType<sp/>trainData;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/>FieldType<sp/>testData;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><ref refid="namespacemlpack_1_1data_1a32f749a2ac526fd90ab112400fad6ef2" kindref="member">Split</ref>(input,<sp/>trainData,<sp/>testData,<sp/>testRatio,<sp/>shuffleData);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_tuple(std::move(trainData),</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(testData));</highlight></codeline>
<codeline lineno="611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/data/split_data.hpp"/>
  </compounddef>
</doxygen>
