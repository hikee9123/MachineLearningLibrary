<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1ann_1_1GAN" kind="class" language="C++" prot="public">
    <compoundname>mlpack::ann::GAN</compoundname>
    <includes refid="gan_8hpp" local="no">gan.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Model</type>
      </param>
      <param>
        <type>typename InitializationRuleType</type>
      </param>
      <param>
        <type>typename Noise</type>
      </param>
      <param>
        <type>typename PolicyType</type>
        <defval><ref refid="classmlpack_1_1ann_1_1StandardGAN" kindref="compound">StandardGAN</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1acc8b6b6879b002e34f544046de374ce8" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t batchSize</definition>
        <argsstring></argsstring>
        <name>batchSize</name>
        <briefdescription>
<para>Locally stored batch size parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="357" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1a5908905d37e9e24c34d5d8d807f7fbc3" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double clippingParameter</definition>
        <argsstring></argsstring>
        <name>clippingParameter</name>
        <briefdescription>
<para>Locally stored weight clipping parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="367" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1af7398ebfcee0a12ed57ae0c97fca4f95" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t currentBatch</definition>
        <argsstring></argsstring>
        <name>currentBatch</name>
        <briefdescription>
<para>Locally stored batch number which is being processed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="359" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1ac671caf65d9003bc5ea42fe64dbdfaa0" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat currentInput</definition>
        <argsstring></argsstring>
        <name>currentInput</name>
        <briefdescription>
<para>Locally stored current input. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="377" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1aaadc796acc95f94f0b63f0b1eeb29797" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat currentTarget</definition>
        <argsstring></argsstring>
        <name>currentTarget</name>
        <briefdescription>
<para>Locally stored current target. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="379" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1a48fa7f67b4a442fe10b64e7b505d3db9" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1ann_1_1DeltaVisitor" kindref="compound">DeltaVisitor</ref></type>
        <definition>DeltaVisitor deltaVisitor</definition>
        <argsstring></argsstring>
        <name>deltaVisitor</name>
        <briefdescription>
<para>Locally stored delta visitor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="373" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1a02bda2c80b22d0c2507c7a74febb93bf" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool deterministic</definition>
        <argsstring></argsstring>
        <name>deterministic</name>
        <briefdescription>
<para>The current evaluation mode (training or testing). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="399" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1ad91afe0277791f05d4798bc64cd7ab1d" prot="private" static="no" mutable="no">
        <type>Model</type>
        <definition>Model discriminator</definition>
        <argsstring></argsstring>
        <name>discriminator</name>
        <briefdescription>
<para>Locally stored Discriminator network. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="347" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1a17c9247d59342d910d8c3f5fd67cc3b0" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t discWeights</definition>
        <argsstring></argsstring>
        <name>discWeights</name>
        <briefdescription>
<para>To keep track of number of discriminator weights in total weights. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="403" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1a217d5c3ff9ce3305f4bb6af43bf9863f" prot="private" static="no" mutable="no">
        <type>Model</type>
        <definition>Model generator</definition>
        <argsstring></argsstring>
        <name>generator</name>
        <briefdescription>
<para>Locally stored Generator network. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="345" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1aa8c5bf2b44cc54f0780ae97bf797a029" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t generatorUpdateStep</definition>
        <argsstring></argsstring>
        <name>generatorUpdateStep</name>
        <briefdescription>
<para>Locally stored number of training step before Generator is trained. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="361" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1a16025e2a21e37cabc9afa39edf1090da" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t genWeights</definition>
        <argsstring></argsstring>
        <name>genWeights</name>
        <briefdescription>
<para>To keep track of number of generator weights in total weights. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="401" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1ab0363181a4587dea6da67d3d13f75479" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat gradient</definition>
        <argsstring></argsstring>
        <name>gradient</name>
        <briefdescription>
<para>Locally stored gradient parameters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="387" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1aa0b6f4efc6a73ae20e648cf079b70043" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat gradientDiscriminator</definition>
        <argsstring></argsstring>
        <name>gradientDiscriminator</name>
        <briefdescription>
<para>Locally stored gradient for Discriminator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="389" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1ac314969f571b10aa4c47e7c20bc0c378" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat gradientGenerator</definition>
        <argsstring></argsstring>
        <name>gradientGenerator</name>
        <briefdescription>
<para>Locally stored gradient for Generator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="397" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1afe2a6ce1565af9e715f04dc42338e439" prot="private" static="no" mutable="no">
        <type>InitializationRuleType</type>
        <definition>InitializationRuleType initializeRule</definition>
        <argsstring></argsstring>
        <name>initializeRule</name>
        <briefdescription>
<para>Locally stored Initializer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="349" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1a3db359547eed8cfd48ca821d95f577af" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double lambda</definition>
        <argsstring></argsstring>
        <name>lambda</name>
        <briefdescription>
<para>Locally stored lambda parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="369" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1aaf220f69923619c408dc9b249a240fa5" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double multiplier</definition>
        <argsstring></argsstring>
        <name>multiplier</name>
        <briefdescription>
<para>Locally stored learning rate ratio for Generator network. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="365" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1a257d001931e40d410632a81eae737e48" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat noise</definition>
        <argsstring></argsstring>
        <name>noise</name>
        <briefdescription>
<para>Locally stored noise using the noise function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="395" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1a5f0144f72f5db7537d3d790279adf001" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t noiseDim</definition>
        <argsstring></argsstring>
        <name>noiseDim</name>
        <briefdescription>
<para>Locally stored input dimension of the Generator network. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="353" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1acc9bf78120c02bd0737d2863bb0e047b" prot="private" static="no" mutable="no">
        <type>Noise</type>
        <definition>Noise noiseFunction</definition>
        <argsstring></argsstring>
        <name>noiseFunction</name>
        <briefdescription>
<para>Locally stored Noise function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="351" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1ada4d5e67daa85fc97bf9002a55aa452c" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat noiseGradientDiscriminator</definition>
        <argsstring></argsstring>
        <name>noiseGradientDiscriminator</name>
        <briefdescription>
<para>Locally stored gradient for noise data in the predictors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="391" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1a2d43b6fc700cf7d36eaf6bed6a4f6172" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat normGradientDiscriminator</definition>
        <argsstring></argsstring>
        <name>normGradientDiscriminator</name>
        <briefdescription>
<para>Locally stored norm of the gradient of Discriminator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="393" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1aaab494c30f729e32dc742dc5f65ecddb" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t numFunctions</definition>
        <argsstring></argsstring>
        <name>numFunctions</name>
        <briefdescription>
<para>Locally stored number of data points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="355" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1a7f09046b5ba5aad2923f8a3e6cd8445f" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1ann_1_1OutputParameterVisitor" kindref="compound">OutputParameterVisitor</ref></type>
        <definition>OutputParameterVisitor outputParameterVisitor</definition>
        <argsstring></argsstring>
        <name>outputParameterVisitor</name>
        <briefdescription>
<para>Locally-stored output parameter visitor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="381" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1a2924723bf8a366fda069c12cf9d56162" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat parameter</definition>
        <argsstring></argsstring>
        <name>parameter</name>
        <briefdescription>
<para>Locally stored parameters of the network. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="343" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1a9a0a22d09c6d4e6f5f266dddb3d343ff" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat predictors</definition>
        <argsstring></argsstring>
        <name>predictors</name>
        <briefdescription>
<para>Locally stored parameter for training data + noise data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="341" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1af1ab44ddcf90d4895bc4bd1f3a5a6344" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t preTrainSize</definition>
        <argsstring></argsstring>
        <name>preTrainSize</name>
        <briefdescription>
<para>Locally stored number of pre-train step for Discriminator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="363" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1a8409a0d351d4fba2eeef26a7dcc585a8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool reset</definition>
        <argsstring></argsstring>
        <name>reset</name>
        <briefdescription>
<para>Locally stored reset parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="371" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1af66d8a7f7a2a8b54158e3702f429ae9f" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1ann_1_1ResetVisitor" kindref="compound">ResetVisitor</ref></type>
        <definition>ResetVisitor resetVisitor</definition>
        <argsstring></argsstring>
        <name>resetVisitor</name>
        <briefdescription>
<para>Locally-stored reset visitor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="385" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1aacca3d02f3223febf3063ec704cc63f7" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat responses</definition>
        <argsstring></argsstring>
        <name>responses</name>
        <briefdescription>
<para>Locally stored responses. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="375" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1GAN_1a625937d2a4a808227ad16ea09908d8cd" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1ann_1_1WeightSizeVisitor" kindref="compound">WeightSizeVisitor</ref></type>
        <definition>WeightSizeVisitor weightSizeVisitor</definition>
        <argsstring></argsstring>
        <name>weightSizeVisitor</name>
        <briefdescription>
<para>Locally-stored weight size visitor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="383" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="383" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1afd4728e4b8193b03b9ee774b833d3508" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GAN</definition>
        <argsstring>(Model generator, Model discriminator, InitializationRuleType &amp;initializeRule, Noise &amp;noiseFunction, const size_t noiseDim, const size_t batchSize, const size_t generatorUpdateStep, const size_t preTrainSize, const double multiplier, const double clippingParameter=0.01, const double lambda=10.0)</argsstring>
        <name>GAN</name>
        <param>
          <type>Model</type>
          <declname>generator</declname>
        </param>
        <param>
          <type>Model</type>
          <declname>discriminator</declname>
        </param>
        <param>
          <type>InitializationRuleType &amp;</type>
          <declname>initializeRule</declname>
        </param>
        <param>
          <type>Noise &amp;</type>
          <declname>noiseFunction</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>noiseDim</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>batchSize</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>generatorUpdateStep</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>preTrainSize</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>multiplier</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>clippingParameter</declname>
          <defval>0.01</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>lambda</declname>
          <defval>10.0</defval>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="classmlpack_1_1ann_1_1GAN" kindref="compound">GAN</ref> class. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>generator</parametername>
</parameternamelist>
<parameterdescription>
<para>Generator network. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>discriminator</parametername>
</parameternamelist>
<parameterdescription>
<para>Discriminator network. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initializeRule</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialization rule to use for initializing parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>noiseFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to be used for generating noise. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>noiseDim</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimension of noise vector to be created. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>batchSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Batch size to be used for training. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>generatorUpdateStep</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of steps to train Discriminator before updating Generator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>preTrainSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of pre-training steps of Discriminator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>multiplier</parametername>
</parameternamelist>
<parameterdescription>
<para>Ratio of learning rate of Discriminator to the Generator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clippingParameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Weight range for enforcing Lipschitz constraint. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambda</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter for setting the gradient penalty. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a0c66c15a1fd7ab0ce0f579e20c838abb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GAN</definition>
        <argsstring>(const GAN &amp;)</argsstring>
        <name>GAN</name>
        <param>
          <type>const <ref refid="classmlpack_1_1ann_1_1GAN" kindref="compound">GAN</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a0601671158b961d0b3f532beb0c070d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GAN</definition>
        <argsstring>(GAN &amp;&amp;)</argsstring>
        <name>GAN</name>
        <param>
          <type><ref refid="classmlpack_1_1ann_1_1GAN" kindref="compound">GAN</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Move constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a81daab6e936bba0d45878d26df58aa9f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Model &amp;</type>
        <definition>const Model&amp; Discriminator</definition>
        <argsstring>() const</argsstring>
        <name>Discriminator</name>
        <briefdescription>
<para>Return the discriminator of the <ref refid="classmlpack_1_1ann_1_1GAN" kindref="compound">GAN</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="312" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="312" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a52ce6e63f168b2f2a702b17f2225389a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Model &amp;</type>
        <definition>Model&amp; Discriminator</definition>
        <argsstring>()</argsstring>
        <name>Discriminator</name>
        <briefdescription>
<para>Modify the discriminator of the <ref refid="classmlpack_1_1ann_1_1GAN" kindref="compound">GAN</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="314" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="314" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a1960af22a953da7d4280f8717f80102b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Policy</type>
            <defval>PolicyType</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_same&lt; Policy, <ref refid="classmlpack_1_1ann_1_1StandardGAN" kindref="compound">StandardGAN</ref> &gt;::value||std::is_same&lt; Policy, <ref refid="classmlpack_1_1ann_1_1DCGAN" kindref="compound">DCGAN</ref> &gt;::value, double &gt;::type</type>
        <definition>std::enable_if&lt;std::is_same&lt;Policy, StandardGAN&gt;::value || std::is_same&lt;Policy, DCGAN&gt;::value, double&gt;::type Evaluate</definition>
        <argsstring>(const arma::mat &amp;parameters, const size_t i, const size_t batchSize)</argsstring>
        <name>Evaluate</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>batchSize</declname>
        </param>
        <briefdescription>
<para>Evaluate function for the Standard <ref refid="classmlpack_1_1ann_1_1GAN" kindref="compound">GAN</ref> and <ref refid="classmlpack_1_1ann_1_1DCGAN" kindref="compound">DCGAN</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>This function gives the performance of the Standard <ref refid="classmlpack_1_1ann_1_1GAN" kindref="compound">GAN</ref> or <ref refid="classmlpack_1_1ann_1_1DCGAN" kindref="compound">DCGAN</ref> on the current input.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameters of the network. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the current input. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>batchSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable to store the present number of inputs. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a6e686598c5a781cc1b0903a0f24e54f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Policy</type>
            <defval>PolicyType</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_same&lt; Policy, <ref refid="classmlpack_1_1ann_1_1WGAN" kindref="compound">WGAN</ref> &gt;::value, double &gt;::type</type>
        <definition>std::enable_if&lt;std::is_same&lt;Policy, WGAN&gt;::value, double&gt;::type Evaluate</definition>
        <argsstring>(const arma::mat &amp;parameters, const size_t i, const size_t batchSize)</argsstring>
        <name>Evaluate</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>batchSize</declname>
        </param>
        <briefdescription>
<para>Evaluate function for the <ref refid="classmlpack_1_1ann_1_1WGAN" kindref="compound">WGAN</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>This function gives the performance of the <ref refid="classmlpack_1_1ann_1_1WGAN" kindref="compound">WGAN</ref> on the current input.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameters of the network. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the current input. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>batchSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable to store the present number of inputs. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1ab15c3bf890c114b50dab1dce9c0a0ae5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Policy</type>
            <defval>PolicyType</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_same&lt; Policy, <ref refid="classmlpack_1_1ann_1_1WGANGP" kindref="compound">WGANGP</ref> &gt;::value, double &gt;::type</type>
        <definition>std::enable_if&lt;std::is_same&lt;Policy, WGANGP&gt;::value, double&gt;::type Evaluate</definition>
        <argsstring>(const arma::mat &amp;parameters, const size_t i, const size_t batchSize)</argsstring>
        <name>Evaluate</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>batchSize</declname>
        </param>
        <briefdescription>
<para>Evaluate function for the WGAN-GP. </para>        </briefdescription>
        <detaileddescription>
<para>This function gives the performance of the WGAN-GP on the current input.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameters of the network. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the current input. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>batchSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable to store the present number of inputs. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="170" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a8852fa0ac9f2147801776c5aff61f22c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GradType</type>
          </param>
          <param>
            <type>typename Policy</type>
            <defval>PolicyType</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_same&lt; Policy, <ref refid="classmlpack_1_1ann_1_1StandardGAN" kindref="compound">StandardGAN</ref> &gt;::value||std::is_same&lt; Policy, <ref refid="classmlpack_1_1ann_1_1DCGAN" kindref="compound">DCGAN</ref> &gt;::value, double &gt;::type</type>
        <definition>std::enable_if&lt;std::is_same&lt;Policy, StandardGAN&gt;::value || std::is_same&lt;Policy, DCGAN&gt;::value, double&gt;::type EvaluateWithGradient</definition>
        <argsstring>(const arma::mat &amp;parameters, const size_t i, GradType &amp;gradient, const size_t batchSize)</argsstring>
        <name>EvaluateWithGradient</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>GradType &amp;</type>
          <declname>gradient</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>batchSize</declname>
        </param>
        <briefdescription>
<para>EvaluateWithGradient function for the Standard <ref refid="classmlpack_1_1ann_1_1GAN" kindref="compound">GAN</ref> and <ref refid="classmlpack_1_1ann_1_1DCGAN" kindref="compound">DCGAN</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>This function gives the performance of the Standard <ref refid="classmlpack_1_1ann_1_1GAN" kindref="compound">GAN</ref> or <ref refid="classmlpack_1_1ann_1_1DCGAN" kindref="compound">DCGAN</ref> on the current input, while updating Gradients.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameters of the network. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the current input. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gradient</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable to store the present gradient. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>batchSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable to store the present number of inputs. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a5726150df7dbbde1aecf3d46cb155005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GradType</type>
          </param>
          <param>
            <type>typename Policy</type>
            <defval>PolicyType</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_same&lt; Policy, <ref refid="classmlpack_1_1ann_1_1WGAN" kindref="compound">WGAN</ref> &gt;::value, double &gt;::type</type>
        <definition>std::enable_if&lt;std::is_same&lt;Policy, WGAN&gt;::value, double&gt;::type EvaluateWithGradient</definition>
        <argsstring>(const arma::mat &amp;parameters, const size_t i, GradType &amp;gradient, const size_t batchSize)</argsstring>
        <name>EvaluateWithGradient</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>GradType &amp;</type>
          <declname>gradient</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>batchSize</declname>
        </param>
        <briefdescription>
<para>EvaluateWithGradient function for the <ref refid="classmlpack_1_1ann_1_1WGAN" kindref="compound">WGAN</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>This function gives the performance of the <ref refid="classmlpack_1_1ann_1_1WGAN" kindref="compound">WGAN</ref> on the current input, while updating Gradients.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameters of the network. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the current input. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gradient</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable to store the present gradient. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>batchSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable to store the present number of inputs. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a41c7fcfc409e29d086df197d78c9b92d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GradType</type>
          </param>
          <param>
            <type>typename Policy</type>
            <defval>PolicyType</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_same&lt; Policy, <ref refid="classmlpack_1_1ann_1_1WGANGP" kindref="compound">WGANGP</ref> &gt;::value, double &gt;::type</type>
        <definition>std::enable_if&lt;std::is_same&lt;Policy, WGANGP&gt;::value, double&gt;::type EvaluateWithGradient</definition>
        <argsstring>(const arma::mat &amp;parameters, const size_t i, GradType &amp;gradient, const size_t batchSize)</argsstring>
        <name>EvaluateWithGradient</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>GradType &amp;</type>
          <declname>gradient</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>batchSize</declname>
        </param>
        <briefdescription>
<para>EvaluateWithGradient function for the WGAN-GP. </para>        </briefdescription>
        <detaileddescription>
<para>This function gives the performance of the WGAN-GP on the current input, while updating Gradients.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>The parameters of the network. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the current input. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gradient</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable to store the present gradient. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>batchSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable to store the present number of inputs. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a0f1a354ec201efe4ce96126802cf9a2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Forward</definition>
        <argsstring>(const arma::mat &amp;input)</argsstring>
        <name>Forward</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>This function does a forward pass through the <ref refid="classmlpack_1_1ann_1_1GAN" kindref="compound">GAN</ref> network. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>Sampled noise. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="292" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a1b687745cb12ef7ef76449187dc50bb5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Model &amp;</type>
        <definition>const Model&amp; Generator</definition>
        <argsstring>() const</argsstring>
        <name>Generator</name>
        <briefdescription>
<para>Return the generator of the <ref refid="classmlpack_1_1ann_1_1GAN" kindref="compound">GAN</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="308" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="308" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a8bf07503608839011670b808cdd17001" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Model &amp;</type>
        <definition>Model&amp; Generator</definition>
        <argsstring>()</argsstring>
        <name>Generator</name>
        <briefdescription>
<para>Modify the generator of the <ref refid="classmlpack_1_1ann_1_1GAN" kindref="compound">GAN</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="310" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="310" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a2e967aa7bd78aa8e5024899a44a303c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Policy</type>
            <defval>PolicyType</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_same&lt; Policy, <ref refid="classmlpack_1_1ann_1_1StandardGAN" kindref="compound">StandardGAN</ref> &gt;::value||std::is_same&lt; Policy, <ref refid="classmlpack_1_1ann_1_1DCGAN" kindref="compound">DCGAN</ref> &gt;::value, void &gt;::type</type>
        <definition>std::enable_if&lt;std::is_same&lt;Policy, StandardGAN&gt;::value || std::is_same&lt;Policy, DCGAN&gt;::value, void&gt;::type Gradient</definition>
        <argsstring>(const arma::mat &amp;parameters, const size_t i, arma::mat &amp;gradient, const size_t batchSize)</argsstring>
        <name>Gradient</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>gradient</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>batchSize</declname>
        </param>
        <briefdescription>
<para>Gradient function for Standard <ref refid="classmlpack_1_1ann_1_1GAN" kindref="compound">GAN</ref> and <ref refid="classmlpack_1_1ann_1_1DCGAN" kindref="compound">DCGAN</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>This function passes the gradient based on which network is being trained, i.e., Generator or Discriminator.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>present parameters of the network. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the predictors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gradient</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable to store the present gradient. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>batchSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable to store the present number of inputs. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="241" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a3053059f0001ebb407739820357d050d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Policy</type>
            <defval>PolicyType</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_same&lt; Policy, <ref refid="classmlpack_1_1ann_1_1WGAN" kindref="compound">WGAN</ref> &gt;::value, void &gt;::type</type>
        <definition>std::enable_if&lt;std::is_same&lt;Policy, WGAN&gt;::value, void&gt;::type Gradient</definition>
        <argsstring>(const arma::mat &amp;parameters, const size_t i, arma::mat &amp;gradient, const size_t batchSize)</argsstring>
        <name>Gradient</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>gradient</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>batchSize</declname>
        </param>
        <briefdescription>
<para>Gradient function for <ref refid="classmlpack_1_1ann_1_1WGAN" kindref="compound">WGAN</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>This function passes the gradient based on which network is being trained, i.e., Generator or Discriminator.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>present parameters of the network. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the predictors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gradient</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable to store the present gradient. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>batchSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable to store the present number of inputs. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="258" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a488f9e118fd4fd3c25f29b81b839cf7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Policy</type>
            <defval>PolicyType</defval>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; std::is_same&lt; Policy, <ref refid="classmlpack_1_1ann_1_1WGANGP" kindref="compound">WGANGP</ref> &gt;::value, void &gt;::type</type>
        <definition>std::enable_if&lt;std::is_same&lt;Policy, WGANGP&gt;::value, void&gt;::type Gradient</definition>
        <argsstring>(const arma::mat &amp;parameters, const size_t i, arma::mat &amp;gradient, const size_t batchSize)</argsstring>
        <name>Gradient</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>gradient</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>batchSize</declname>
        </param>
        <briefdescription>
<para>Gradient function for WGAN-GP. </para>        </briefdescription>
        <detaileddescription>
<para>This function passes the gradient based on which network is being trained, i.e., Generator or Discriminator.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>present parameters of the network. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the predictors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gradient</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable to store the present gradient. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>batchSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable to store the present number of inputs. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a1fa76af34a6e3ea927b307f0c318ee4b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t NumFunctions</definition>
        <argsstring>() const</argsstring>
        <name>NumFunctions</name>
        <briefdescription>
<para>Return the number of separable functions (the number of predictor points). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="317" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="317" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1aa68d74dc1e86e4352e00a3cab83a0e4a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::mat &amp;</type>
        <definition>const arma::mat&amp; Parameters</definition>
        <argsstring>() const</argsstring>
        <name>Parameters</name>
        <briefdescription>
<para>Return the parameters of the network. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="303" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="303" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a043f0ccd62e6711a18e0d81047be9a0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>arma::mat &amp;</type>
        <definition>arma::mat&amp; Parameters</definition>
        <argsstring>()</argsstring>
        <name>Parameters</name>
        <briefdescription>
<para>Modify the parameters of the network. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="305" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="305" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a1c9a003262a7e893e46cf780ed5f359d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Predict</definition>
        <argsstring>(arma::mat input, arma::mat &amp;output)</argsstring>
        <name>Predict</name>
        <param>
          <type>arma::mat</type>
          <declname>input</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>This function predicts the output of the network on the given input. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The input of the Generator network. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Result of the Discriminator network. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="300" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1af63d9ce84ba796336c0abce63ff9be1c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::mat &amp;</type>
        <definition>const arma::mat&amp; Predictors</definition>
        <argsstring>() const</argsstring>
        <name>Predictors</name>
        <briefdescription>
<para>Get the matrix of data points (predictors). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="325" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="325" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a5b2b9103f156a387b74164f143e63ce7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>arma::mat &amp;</type>
        <definition>arma::mat&amp; Predictors</definition>
        <argsstring>()</argsstring>
        <name>Predictors</name>
        <briefdescription>
<para>Modify the matrix of data points (predictors). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="327" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="327" bodyend="327"/>
        <references refid="classmlpack_1_1ann_1_1GAN_1a65cba07328997659bec80b9879b15a51">GAN&lt; Model, InitializationRuleType, Noise, PolicyType &gt;::serialize</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a372de693ad40b3f42839c8ec6ac845f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Reset</definition>
        <argsstring>()</argsstring>
        <name>Reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a935be322c1c9425a5ae7a0fe80421e83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ResetData</definition>
        <argsstring>(arma::mat trainData)</argsstring>
        <name>ResetData</name>
        <param>
          <type>arma::mat</type>
          <declname>trainData</declname>
        </param>
        <briefdescription>
<para>Initialize the generator, discriminator and weights of the model for training. </para>        </briefdescription>
        <detaileddescription>
<para>This function won&apos;t actually trigger training process.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trainData</parametername>
</parameternamelist>
<parameterdescription>
<para>The data points of real distribution. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a5702d7dbe418472e341da9c8d8ff0e01" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::mat &amp;</type>
        <definition>const arma::mat&amp; Responses</definition>
        <argsstring>() const</argsstring>
        <name>Responses</name>
        <briefdescription>
<para>Get the matrix of responses to the input data points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="320" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="320" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a94a56f6f545988833a4ae9906f8aa197" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>arma::mat &amp;</type>
        <definition>arma::mat&amp; Responses</definition>
        <argsstring>()</argsstring>
        <name>Responses</name>
        <briefdescription>
<para>Modify the matrix of responses to the input data points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="322" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="322" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="331" column="1"/>
        <referencedby refid="classmlpack_1_1ann_1_1GAN_1a5b2b9103f156a387b74164f143e63ce7" compoundref="gan_8hpp" startline="327" endline="327">GAN&lt; Model, InitializationRuleType, Noise, PolicyType &gt;::Predictors</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a2697cc8b37d7bca7c055228382a9b208" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Shuffle</definition>
        <argsstring>()</argsstring>
        <name>Shuffle</name>
        <briefdescription>
<para>Shuffle the order of function visitation. </para>        </briefdescription>
        <detaileddescription>
<para>This may be called by the optimizer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="285" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1a4f7b5c4f299346d1fe308881a26696f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OptimizerType</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>CallbackTypes</declname>
            <defname>CallbackTypes</defname>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double Train</definition>
        <argsstring>(arma::mat trainData, OptimizerType &amp;Optimizer, CallbackTypes &amp;&amp;... callbacks)</argsstring>
        <name>Train</name>
        <param>
          <type>arma::mat</type>
          <declname>trainData</declname>
        </param>
        <param>
          <type>OptimizerType &amp;</type>
          <declname>Optimizer</declname>
        </param>
        <param>
          <type>CallbackTypes &amp;&amp;...</type>
          <declname>callbacks</declname>
        </param>
        <briefdescription>
<para>Train function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OptimizerType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of optimizer to use to train the model. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CallbackTypes</parametername>
</parameternamelist>
<parameterdescription>
<para>Types of Callback functions. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trainData</parametername>
</parameternamelist>
<parameterdescription>
<para>The data points of real distribution. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Optimizer</parametername>
</parameternamelist>
<parameterdescription>
<para>Instantiated optimizer used to train the model. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callbacks</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function for ensmallen optimizer <computeroutput>OptimizerType</computeroutput>. See <ulink url="https://www.ensmallen.org/docs.html#callback-documentation">https://www.ensmallen.org/docs.html#callback-documentation</ulink>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The final objective of the trained model (NaN or Inf on error). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="124" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmlpack_1_1ann_1_1GAN_1aba60409c4645df448f0b15702f39e363" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ResetDeterministic</definition>
        <argsstring>()</argsstring>
        <name>ResetDeterministic</name>
        <briefdescription>
<para>Reset the module status by setting the current deterministic parameter for the discriminator and generator networks and their respective layers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="338" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The implementation of the standard <ref refid="classmlpack_1_1ann_1_1GAN" kindref="compound">GAN</ref> module. </para>    </briefdescription>
    <detaileddescription>
<para>Generative Adversarial Networks (GANs) are a class of artificial intelligence algorithms used in unsupervised machine learning, implemented by a system of two neural networks contesting with each other in a zero-sum game framework. This technique can generate photographs that look at least superficially authentic to human observers, having many realistic characteristics. GANs have been used in Text-to-Image Synthesis, Medical Drug Discovery, High Resolution Imagery Generation, Neural Machine Translation and so on.</para><para>For more information, see the following paper:</para><para><programlisting><codeline><highlight class="normal">@article{Goodfellow14,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>author<sp/><sp/><sp/><sp/>=<sp/>{Ian<sp/>J.<sp/>Goodfellow,<sp/>Jean<sp/>Pouget-Abadi,<sp/>Mehdi<sp/>Mirza,<sp/>Bing<sp/>Xu,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>David<sp/>Warde-Farley,<sp/>Sherjil<sp/>Ozair,<sp/>Aaron<sp/>Courville<sp/>and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Yoshua<sp/>Bengio},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>title<sp/><sp/><sp/><sp/><sp/>=<sp/>{Generative<sp/>Adversarial<sp/>Nets},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>year<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{2014},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>url<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{http://arxiv.org/abs/1406.2661},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>eprint<sp/><sp/><sp/><sp/>=<sp/>{1406.2661},</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Model</parametername>
</parameternamelist>
<parameterdescription>
<para>The class type of Generator and Discriminator. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InitializationRuleType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of Initializer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Noise</parametername>
</parameternamelist>
<parameterdescription>
<para>The noise function to use. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PolicyType</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classmlpack_1_1ann_1_1GAN" kindref="compound">GAN</ref> variant to be used (<ref refid="classmlpack_1_1ann_1_1GAN" kindref="compound">GAN</ref>, <ref refid="classmlpack_1_1ann_1_1DCGAN" kindref="compound">DCGAN</ref>, <ref refid="classmlpack_1_1ann_1_1WGAN" kindref="compound">WGAN</ref> or <ref refid="classmlpack_1_1ann_1_1WGANGP" kindref="compound">WGANGP</ref>). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" line="64" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp" bodystart="63" bodyend="404"/>
    <listofallmembers>
      <member refid="classmlpack_1_1ann_1_1GAN_1acc8b6b6879b002e34f544046de374ce8" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>batchSize</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a5908905d37e9e24c34d5d8d807f7fbc3" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>clippingParameter</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1af7398ebfcee0a12ed57ae0c97fca4f95" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>currentBatch</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1ac671caf65d9003bc5ea42fe64dbdfaa0" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>currentInput</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1aaadc796acc95f94f0b63f0b1eeb29797" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>currentTarget</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a48fa7f67b4a442fe10b64e7b505d3db9" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>deltaVisitor</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a02bda2c80b22d0c2507c7a74febb93bf" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>deterministic</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1ad91afe0277791f05d4798bc64cd7ab1d" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>discriminator</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a81daab6e936bba0d45878d26df58aa9f" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>Discriminator</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a52ce6e63f168b2f2a702b17f2225389a" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>Discriminator</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a17c9247d59342d910d8c3f5fd67cc3b0" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>discWeights</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a1960af22a953da7d4280f8717f80102b" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>Evaluate</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a6e686598c5a781cc1b0903a0f24e54f3" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>Evaluate</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1ab15c3bf890c114b50dab1dce9c0a0ae5" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>Evaluate</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a8852fa0ac9f2147801776c5aff61f22c" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>EvaluateWithGradient</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a5726150df7dbbde1aecf3d46cb155005" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>EvaluateWithGradient</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a41c7fcfc409e29d086df197d78c9b92d" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>EvaluateWithGradient</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a0f1a354ec201efe4ce96126802cf9a2f" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>Forward</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1afd4728e4b8193b03b9ee774b833d3508" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>GAN</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a0c66c15a1fd7ab0ce0f579e20c838abb" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>GAN</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a0601671158b961d0b3f532beb0c070d7" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>GAN</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a217d5c3ff9ce3305f4bb6af43bf9863f" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>generator</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a1b687745cb12ef7ef76449187dc50bb5" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>Generator</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a8bf07503608839011670b808cdd17001" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>Generator</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1aa8c5bf2b44cc54f0780ae97bf797a029" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>generatorUpdateStep</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a16025e2a21e37cabc9afa39edf1090da" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>genWeights</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a2e967aa7bd78aa8e5024899a44a303c9" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>Gradient</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a3053059f0001ebb407739820357d050d" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>Gradient</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a488f9e118fd4fd3c25f29b81b839cf7a" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>Gradient</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1ab0363181a4587dea6da67d3d13f75479" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>gradient</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1aa0b6f4efc6a73ae20e648cf079b70043" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>gradientDiscriminator</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1ac314969f571b10aa4c47e7c20bc0c378" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>gradientGenerator</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1afe2a6ce1565af9e715f04dc42338e439" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>initializeRule</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a3db359547eed8cfd48ca821d95f577af" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>lambda</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1aaf220f69923619c408dc9b249a240fa5" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>multiplier</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a257d001931e40d410632a81eae737e48" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>noise</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a5f0144f72f5db7537d3d790279adf001" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>noiseDim</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1acc9bf78120c02bd0737d2863bb0e047b" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>noiseFunction</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1ada4d5e67daa85fc97bf9002a55aa452c" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>noiseGradientDiscriminator</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a2d43b6fc700cf7d36eaf6bed6a4f6172" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>normGradientDiscriminator</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1aaab494c30f729e32dc742dc5f65ecddb" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>numFunctions</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a1fa76af34a6e3ea927b307f0c318ee4b" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>NumFunctions</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a7f09046b5ba5aad2923f8a3e6cd8445f" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>outputParameterVisitor</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a2924723bf8a366fda069c12cf9d56162" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>parameter</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1aa68d74dc1e86e4352e00a3cab83a0e4a" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>Parameters</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a043f0ccd62e6711a18e0d81047be9a0a" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>Parameters</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a1c9a003262a7e893e46cf780ed5f359d" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>Predict</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a9a0a22d09c6d4e6f5f266dddb3d343ff" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>predictors</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1af63d9ce84ba796336c0abce63ff9be1c" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>Predictors</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a5b2b9103f156a387b74164f143e63ce7" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>Predictors</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1af1ab44ddcf90d4895bc4bd1f3a5a6344" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>preTrainSize</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a8409a0d351d4fba2eeef26a7dcc585a8" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>reset</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a372de693ad40b3f42839c8ec6ac845f4" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>Reset</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a935be322c1c9425a5ae7a0fe80421e83" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>ResetData</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1aba60409c4645df448f0b15702f39e363" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>ResetDeterministic</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1af66d8a7f7a2a8b54158e3702f429ae9f" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>resetVisitor</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a5702d7dbe418472e341da9c8d8ff0e01" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>Responses</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a94a56f6f545988833a4ae9906f8aa197" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>Responses</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1aacca3d02f3223febf3063ec704cc63f7" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>responses</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a2697cc8b37d7bca7c055228382a9b208" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>Shuffle</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a4f7b5c4f299346d1fe308881a26696f0" prot="public" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>Train</name></member>
      <member refid="classmlpack_1_1ann_1_1GAN_1a625937d2a4a808227ad16ea09908d8cd" prot="private" virt="non-virtual"><scope>mlpack::ann::GAN</scope><name>weightSizeVisitor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
