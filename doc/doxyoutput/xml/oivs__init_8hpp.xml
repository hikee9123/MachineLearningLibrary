<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="oivs__init_8hpp" kind="file" language="C++">
    <compoundname>oivs_init.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="logistic__function_8hpp" local="no">mlpack/methods/ann/activation_functions/logistic_function.hpp</includes>
    <includes refid="ann_2init__rules_2random__init_8hpp" local="yes">random_init.hpp</includes>
    <incdepgraph>
      <node id="28870">
        <label>list</label>
      </node>
      <node id="28867">
        <label>atomic</label>
      </node>
      <node id="28857">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="28833">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="28869">
        <label>iomanip</label>
      </node>
      <node id="28842">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="28843" relation="include">
        </childnode>
        <childnode refid="28845" relation="include">
        </childnode>
      </node>
      <node id="28825">
        <label>cstdint</label>
      </node>
      <node id="28834">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="28841">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="28864">
        <label>arma_config.hpp</label>
      </node>
      <node id="28854">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="28821">
        <label>cmath</label>
      </node>
      <node id="28840">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="28829">
        <label>stdexcept</label>
      </node>
      <node id="28849">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="28834" relation="include">
        </childnode>
        <childnode refid="28836" relation="include">
        </childnode>
        <childnode refid="28837" relation="include">
        </childnode>
        <childnode refid="28835" relation="include">
        </childnode>
      </node>
      <node id="28873">
        <label>string</label>
      </node>
      <node id="28861">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="28862" relation="include">
        </childnode>
        <childnode refid="28828" relation="include">
        </childnode>
      </node>
      <node id="28871">
        <label>map</label>
      </node>
      <node id="28823">
        <label>cfloat</label>
      </node>
      <node id="28853">
        <label>boost/variant.hpp</label>
      </node>
      <node id="28875">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="28837">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="28860">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="28861" relation="include">
        </childnode>
        <childnode refid="28837" relation="include">
        </childnode>
        <childnode refid="28844" relation="include">
        </childnode>
        <childnode refid="28862" relation="include">
        </childnode>
      </node>
      <node id="28878">
        <label>random_init.hpp</label>
        <link refid="ann_2init__rules_2random__init_8hpp"/>
        <childnode refid="28820" relation="include">
        </childnode>
      </node>
      <node id="28850">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="28848">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="28834" relation="include">
        </childnode>
        <childnode refid="28836" relation="include">
        </childnode>
        <childnode refid="28837" relation="include">
        </childnode>
        <childnode refid="28835" relation="include">
        </childnode>
      </node>
      <node id="28851">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="28834" relation="include">
        </childnode>
        <childnode refid="28836" relation="include">
        </childnode>
        <childnode refid="28837" relation="include">
        </childnode>
        <childnode refid="28835" relation="include">
        </childnode>
      </node>
      <node id="28839">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="28859">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="28835" relation="include">
        </childnode>
        <childnode refid="28836" relation="include">
        </childnode>
        <childnode refid="28837" relation="include">
        </childnode>
        <childnode refid="28847" relation="include">
        </childnode>
        <childnode refid="28856" relation="include">
        </childnode>
      </node>
      <node id="28863">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="28864" relation="include">
        </childnode>
      </node>
      <node id="28865">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="28820">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="28821" relation="include">
        </childnode>
        <childnode refid="28822" relation="include">
        </childnode>
        <childnode refid="28823" relation="include">
        </childnode>
        <childnode refid="28824" relation="include">
        </childnode>
        <childnode refid="28825" relation="include">
        </childnode>
        <childnode refid="28826" relation="include">
        </childnode>
        <childnode refid="28827" relation="include">
        </childnode>
        <childnode refid="28828" relation="include">
        </childnode>
        <childnode refid="28829" relation="include">
        </childnode>
        <childnode refid="28830" relation="include">
        </childnode>
        <childnode refid="28831" relation="include">
        </childnode>
        <childnode refid="28832" relation="include">
        </childnode>
        <childnode refid="28833" relation="include">
        </childnode>
        <childnode refid="28834" relation="include">
        </childnode>
        <childnode refid="28835" relation="include">
        </childnode>
        <childnode refid="28836" relation="include">
        </childnode>
        <childnode refid="28837" relation="include">
        </childnode>
        <childnode refid="28838" relation="include">
        </childnode>
        <childnode refid="28839" relation="include">
        </childnode>
        <childnode refid="28840" relation="include">
        </childnode>
        <childnode refid="28841" relation="include">
        </childnode>
        <childnode refid="28842" relation="include">
        </childnode>
        <childnode refid="28846" relation="include">
        </childnode>
        <childnode refid="28847" relation="include">
        </childnode>
        <childnode refid="28848" relation="include">
        </childnode>
        <childnode refid="28849" relation="include">
        </childnode>
        <childnode refid="28850" relation="include">
        </childnode>
        <childnode refid="28851" relation="include">
        </childnode>
        <childnode refid="28852" relation="include">
        </childnode>
        <childnode refid="28858" relation="include">
        </childnode>
        <childnode refid="28859" relation="include">
        </childnode>
        <childnode refid="28856" relation="include">
        </childnode>
        <childnode refid="28860" relation="include">
        </childnode>
        <childnode refid="28863" relation="include">
        </childnode>
        <childnode refid="28865" relation="include">
        </childnode>
        <childnode refid="28866" relation="include">
        </childnode>
        <childnode refid="28875" relation="include">
        </childnode>
        <childnode refid="28876" relation="include">
        </childnode>
      </node>
      <node id="28826">
        <label>cstdio</label>
      </node>
      <node id="28830">
        <label>tuple</label>
      </node>
      <node id="28835">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="28852">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="28835" relation="include">
        </childnode>
        <childnode refid="28836" relation="include">
        </childnode>
        <childnode refid="28837" relation="include">
        </childnode>
        <childnode refid="28839" relation="include">
        </childnode>
        <childnode refid="28853" relation="include">
        </childnode>
        <childnode refid="28854" relation="include">
        </childnode>
        <childnode refid="28855" relation="include">
        </childnode>
        <childnode refid="28856" relation="include">
        </childnode>
      </node>
      <node id="28831">
        <label>utility</label>
      </node>
      <node id="28855">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="28846">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="28843">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="28844" relation="include">
        </childnode>
      </node>
      <node id="28866">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="28867" relation="include">
        </childnode>
        <childnode refid="28868" relation="include">
        </childnode>
        <childnode refid="28869" relation="include">
        </childnode>
        <childnode refid="28870" relation="include">
        </childnode>
        <childnode refid="28871" relation="include">
        </childnode>
        <childnode refid="28872" relation="include">
        </childnode>
        <childnode refid="28873" relation="include">
        </childnode>
        <childnode refid="28874" relation="include">
        </childnode>
      </node>
      <node id="28844">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="28858">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="28856" relation="include">
        </childnode>
        <childnode refid="28852" relation="include">
        </childnode>
        <childnode refid="28859" relation="include">
        </childnode>
      </node>
      <node id="28827">
        <label>cstdlib</label>
      </node>
      <node id="28822">
        <label>cctype</label>
      </node>
      <node id="28845">
        <label>unordered_map</label>
      </node>
      <node id="28824">
        <label>climits</label>
      </node>
      <node id="28819">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/init_rules/oivs_init.hpp</label>
        <link refid="oivs__init_8hpp"/>
        <childnode refid="28820" relation="include">
        </childnode>
        <childnode refid="28877" relation="include">
        </childnode>
        <childnode refid="28878" relation="include">
        </childnode>
      </node>
      <node id="28872">
        <label>mutex</label>
      </node>
      <node id="28868">
        <label>chrono</label>
      </node>
      <node id="28876">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="28874">
        <label>thread</label>
      </node>
      <node id="28862">
        <label>type_traits</label>
      </node>
      <node id="28838">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="28832">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="28856">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="28834" relation="include">
        </childnode>
        <childnode refid="28835" relation="include">
        </childnode>
        <childnode refid="28836" relation="include">
        </childnode>
        <childnode refid="28837" relation="include">
        </childnode>
        <childnode refid="28857" relation="include">
        </childnode>
      </node>
      <node id="28877">
        <label>mlpack/methods/ann/activation_functions/logistic_function.hpp</label>
        <link refid="logistic__function_8hpp"/>
        <childnode refid="28820" relation="include">
        </childnode>
      </node>
      <node id="28828">
        <label>cstring</label>
      </node>
      <node id="28847">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="28836">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1ann_1_1OivsInitialization" prot="public">mlpack::ann::OivsInitialization</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1ann">mlpack::ann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Marcus Edel</para></simplesect>
Definition and implementation of the Optimal Initial Value Setting method (OIVS). This initialization rule is based on geometrical considerations as described by H. Shimodaira.</para><para>For more information, see the following paper.</para><para><programlisting><codeline><highlight class="normal">@inproceedings{ShimodairaICTAI1994,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>title={A<sp/>weight<sp/>value<sp/>initialization<sp/>method<sp/>for<sp/>improving<sp/>learning</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>performance<sp/>of<sp/>the<sp/>backpropagation<sp/>algorithm<sp/>in<sp/>neural<sp/>networks},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>author={Shimodaira,<sp/>H.},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>booktitle={Tools<sp/>with<sp/>Artificial<sp/>Intelligence,<sp/>1994.<sp/>Proceedings.,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Sixth<sp/>International<sp/>Conference<sp/>on},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>year={1994}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="27"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_ANN_INIT_RULES_OIVS_INIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_ANN_INIT_RULES_OIVS_INIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="logistic__function_8hpp" kindref="compound">mlpack/methods/ann/activation_functions/logistic_function.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ann_2init__rules_2random__init_8hpp" kindref="compound">random_init.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ann<sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ActivationFunction<sp/>=<sp/>LogisticFunction</highlight></codeline>
<codeline lineno="58"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="59" refid="classmlpack_1_1ann_1_1OivsInitialization" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1ann_1_1OivsInitialization" kindref="compound">OivsInitialization</ref></highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69" refid="classmlpack_1_1ann_1_1OivsInitialization_1a4a64a3e0ca005879d29245e45f027770" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1ann_1_1OivsInitialization_1a4a64a3e0ca005879d29245e45f027770" kindref="member">OivsInitialization</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon<sp/>=<sp/>0.1,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma<sp/>=<sp/>0.9)<sp/>:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k(k),<sp/>gamma(gamma),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b(<ref refid="namespacestd" kindref="compound">std</ref>::abs(ActivationFunction::Inv(1<sp/>-<sp/>epsilon)<sp/>-</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ActivationFunction::Inv(epsilon)))</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="86" refid="classmlpack_1_1ann_1_1OivsInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1OivsInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" kindref="member">Initialize</ref>(arma::Mat&lt;eT&gt;&amp;<sp/>W,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1RandomInitialization" kindref="compound">RandomInitialization</ref><sp/>randomInit(-gamma,<sp/>gamma);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>randomInit.<ref refid="classmlpack_1_1ann_1_1RandomInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" kindref="member">Initialize</ref>(W,<sp/>rows,<sp/>cols);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>W<sp/>=<sp/>(b<sp/>/<sp/>(k<sp/><sp/>*<sp/>rows))<sp/>*<sp/>arma::sqrt(W<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="100" refid="classmlpack_1_1ann_1_1OivsInitialization_1af2d770912321b8b9ca7b03ab98f735c0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1OivsInitialization_1af2d770912321b8b9ca7b03ab98f735c0" kindref="member">Initialize</ref>(arma::Mat&lt;eT&gt;&amp;<sp/>W)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1RandomInitialization" kindref="compound">RandomInitialization</ref><sp/>randomInit(-gamma,<sp/>gamma);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>randomInit.<ref refid="classmlpack_1_1ann_1_1RandomInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" kindref="member">Initialize</ref>(W);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>W<sp/>=<sp/>(b<sp/>/<sp/>(k<sp/><sp/>*<sp/>W.n_rows))<sp/>*<sp/>arma::sqrt(W<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="118" refid="classmlpack_1_1ann_1_1OivsInitialization_1a40a2b6466bdba0f6aab4eb92b6e65934" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1OivsInitialization_1a40a2b6466bdba0f6aab4eb92b6e65934" kindref="member">Initialize</ref>(arma::Cube&lt;eT&gt;&amp;<sp/>W,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slices)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(W.is_empty())</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>W.set_size(rows,<sp/>cols,<sp/>slices);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>slices;<sp/>++i)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1OivsInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" kindref="member">Initialize</ref>(W.slice(i),<sp/>rows,<sp/>cols);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="137" refid="classmlpack_1_1ann_1_1OivsInitialization_1ae2f3e6d570824a160b687ff9f734f83c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1OivsInitialization_1ae2f3e6d570824a160b687ff9f734f83c" kindref="member">Initialize</ref>(arma::Cube&lt;eT&gt;&amp;<sp/>W)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(W.is_empty())</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Log::Fatal<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>initialize<sp/>an<sp/>empty<sp/>cube.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>W.n_slices;<sp/>++i)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1OivsInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" kindref="member">Initialize</ref>(W.slice(i));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>OivsInitialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/init_rules/oivs_init.hpp"/>
  </compounddef>
</doxygen>
