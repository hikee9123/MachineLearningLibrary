<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1metric_1_1LMetric" kind="class" language="C++" prot="public">
    <compoundname>mlpack::metric::LMetric</compoundname>
    <includes refid="lmetric_8hpp" local="no">lmetric.hpp</includes>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>TPower</declname>
        <defname>TPower</defname>
      </param>
      <param>
        <type>bool</type>
        <declname>TTakeRoot</declname>
        <defname>TTakeRoot</defname>
        <defval>true</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classmlpack_1_1metric_1_1LMetric_1add828b673634e896b13f47cc7fb331f5" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int Power</definition>
        <argsstring></argsstring>
        <name>Power</name>
        <initializer>= TPower</initializer>
        <briefdescription>
<para>The power of the metric. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/metrics/lmetric.hpp" line="91" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/metrics/lmetric.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1metric_1_1LMetric_1a0615e7186f9a9847e2f71d2d2622579d" prot="public" static="yes" mutable="no">
        <type>const bool</type>
        <definition>const bool TakeRoot</definition>
        <argsstring></argsstring>
        <name>TakeRoot</name>
        <initializer>= TTakeRoot</initializer>
        <briefdescription>
<para>Whether or not the root is taken. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/metrics/lmetric.hpp" line="93" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/metrics/lmetric.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1metric_1_1LMetric_1ad296b4c8538551ddcef38a49d0842ca7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>LMetric</definition>
        <argsstring>()</argsstring>
        <name>LMetric</name>
        <briefdescription>
<para>Default constructor does nothing, but is required to satisfy the Metric policy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/metrics/lmetric.hpp" line="70" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/metrics/lmetric.hpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1metric_1_1LMetric_1aa2ccb5a0533a6ba0abe6dfc1f98fbafb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the metric (nothing to do). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/metrics/lmetric.hpp" line="88" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/metrics/lmetric.hpp" bodystart="88" bodyend="88"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmlpack_1_1metric_1_1LMetric_1af39380107875eb94f0efef7d37cc57df" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VecTypeA</type>
          </param>
          <param>
            <type>typename VecTypeB</type>
          </param>
        </templateparamlist>
        <type>VecTypeA::elem_type</type>
        <definition>static VecTypeA::elem_type Evaluate</definition>
        <argsstring>(const VecTypeA &amp;a, const VecTypeB &amp;b)</argsstring>
        <name>Evaluate</name>
        <param>
          <type>const VecTypeA &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const VecTypeB &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Computes the distance between two points. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>VecTypeA</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of first vector (generally arma::vec or arma::sp_vec). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>VecTypeB</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of second vector. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Distance between vectors a and b. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/metrics/lmetric.hpp" line="83" column="1"/>
        <referencedby refid="classKMeansPlusPlusInitialization_1a8ee4dff98d318a0f5586140c5846ef39" compoundref="kmeans__plus__plus__initialization_8hpp" startline="47" endline="100">KMeansPlusPlusInitialization::Cluster</referencedby>
        <referencedby refid="classmlpack_1_1kernel_1_1SphericalKernel_1a9bcc650e49c4b0578d4eb5a62810622a" compoundref="spherical__kernel_8hpp" startline="62" endline="84">SphericalKernel::ConvolutionIntegral</referencedby>
        <referencedby refid="classmlpack_1_1kernel_1_1GaussianKernel_1af3077f924263d1932950f4f7176c93eb" compoundref="gaussian__kernel_8hpp" startline="127" endline="131">GaussianKernel::ConvolutionIntegral</referencedby>
        <referencedby refid="classmlpack_1_1kernel_1_1SphericalKernel_1a84c3aeba25ea7703bd2d4f85a54301da" compoundref="spherical__kernel_8hpp" startline="44" endline="49">SphericalKernel::Evaluate</referencedby>
        <referencedby refid="classmlpack_1_1kernel_1_1TriangularKernel_1a84c3aeba25ea7703bd2d4f85a54301da" compoundref="triangular__kernel_8hpp" startline="49" endline="53">TriangularKernel::Evaluate</referencedby>
        <referencedby refid="classmlpack_1_1kernel_1_1LaplacianKernel_1a84c3aeba25ea7703bd2d4f85a54301da" compoundref="laplacian__kernel_8hpp" startline="61" endline="65">LaplacianKernel::Evaluate</referencedby>
        <referencedby refid="classmlpack_1_1kernel_1_1GaussianKernel_1a84c3aeba25ea7703bd2d4f85a54301da" compoundref="gaussian__kernel_8hpp" startline="65" endline="69">GaussianKernel::Evaluate</referencedby>
        <referencedby refid="classmlpack_1_1kernel_1_1CauchyKernel_1a7bc3cfc0ee3750ba84ee4dc7f62994ae" compoundref="cauchy__kernel_8hpp" startline="65" endline="69">CauchyKernel::Evaluate</referencedby>
        <referencedby refid="classmlpack_1_1metric_1_1LMetric_1ad296b4c8538551ddcef38a49d0842ca7" compoundref="lmetric_8hpp" startline="70" endline="70">LMetric&lt; TPower, true &gt;::LMetric</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The L_p metric for arbitrary integer p, with an option to take the root. </para>    </briefdescription>
    <detaileddescription>
<para>This class implements the standard L_p metric for two arbitrary vectors <formula id="36">$ x $</formula> and <formula id="37">$ y $</formula> of dimensionality <formula id="65">$ n $</formula>:</para><para><formula id="66">\[ d(x, y) = \left( \sum_{i = 1}^{n} | x_i - y_i |^p \right)^{\frac{1}{p}}. \]</formula></para><para>The value of p is given as a template parameter.</para><para>In addition, the function <formula id="67">$ d(x, y) $</formula> can be simplified, neglecting the p-root calculation. This is done by specifying the TakeRoot template parameter to be false. Then,</para><para><formula id="68">\[ d(x, y) = \sum_{i = 1}^{n} | x_i - y_i |^p \]</formula></para><para>It is faster to compute that distance, so TakeRoot is by default off. However, when TakeRoot is false, the distance given is not actually a true metric <ndash/> it does not satisfy the triangle inequality. Some mlpack methods do not require the triangle inequality to operate correctly (such as the BinarySpaceTree), but setting TakeRoot = false in some cases will cause incorrect results.</para><para>A few convenience typedefs are given:</para><para><itemizedlist>
<listitem><para>ManhattanDistance</para></listitem><listitem><para>EuclideanDistance</para></listitem><listitem><para>SquaredEuclideanDistance</para></listitem></itemizedlist>
</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Power</parametername>
</parameternamelist>
<parameterdescription>
<para>Power of metric; i.e. Power = 1 gives the L1-norm (Manhattan distance). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TakeRoot</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, the Power&apos;th root of the result is taken before it is returned. Setting this to false causes the metric to not satisfy the Triangle Inequality (be careful!). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1050">
        <label>LMetric&lt; TPower, true &gt;</label>
        <link refid="classmlpack_1_1metric_1_1LMetric"/>
        <childnode refid="1049" relation="template-instance">
          <edgelabel>&lt; TPower, true &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1049">
        <label>LMetric&lt; TPower, TTakeRoot &gt;</label>
        <link refid="classmlpack_1_1metric_1_1LMetric"/>
      </node>
    </inheritancegraph>
    <location file="/home/aakash/mlpack/src/mlpack/core/metrics/lmetric.hpp" line="64" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/metrics/lmetric.hpp" bodystart="63" bodyend="94"/>
    <listofallmembers>
      <member refid="classmlpack_1_1metric_1_1LMetric_1af39380107875eb94f0efef7d37cc57df" prot="public" virt="non-virtual"><scope>mlpack::metric::LMetric</scope><name>Evaluate</name></member>
      <member refid="classmlpack_1_1metric_1_1LMetric_1ad296b4c8538551ddcef38a49d0842ca7" prot="public" virt="non-virtual"><scope>mlpack::metric::LMetric</scope><name>LMetric</name></member>
      <member refid="classmlpack_1_1metric_1_1LMetric_1add828b673634e896b13f47cc7fb331f5" prot="public" virt="non-virtual"><scope>mlpack::metric::LMetric</scope><name>Power</name></member>
      <member refid="classmlpack_1_1metric_1_1LMetric_1aa2ccb5a0533a6ba0abe6dfc1f98fbafb" prot="public" virt="non-virtual"><scope>mlpack::metric::LMetric</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1metric_1_1LMetric_1a0615e7186f9a9847e2f71d2d2622579d" prot="public" virt="non-virtual"><scope>mlpack::metric::LMetric</scope><name>TakeRoot</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
