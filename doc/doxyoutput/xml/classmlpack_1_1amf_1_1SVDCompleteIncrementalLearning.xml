<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1amf_1_1SVDCompleteIncrementalLearning" kind="class" language="C++" prot="public">
    <compoundname>mlpack::amf::SVDCompleteIncrementalLearning</compoundname>
    <includes refid="svd__complete__incremental__learning_8hpp" local="no">svd_complete_incremental_learning.hpp</includes>
    <templateparamlist>
      <param>
        <type>class MatType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1amf_1_1SVDCompleteIncrementalLearning_1a2ed1500298df79a43a7c7db242721a77" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t currentItemIndex</definition>
        <argsstring></argsstring>
        <name>currentItemIndex</name>
        <briefdescription>
<para>Item index of current entry. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp" line="161" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1amf_1_1SVDCompleteIncrementalLearning_1a0e396da15e6249a960ca686970ee4ba4" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t currentUserIndex</definition>
        <argsstring></argsstring>
        <name>currentUserIndex</name>
        <briefdescription>
<para>User of index of current entry. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp" line="159" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1amf_1_1SVDCompleteIncrementalLearning_1a6d2402476727060562dea8f9d5f44597" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double kh</definition>
        <argsstring></argsstring>
        <name>kh</name>
        <briefdescription>
<para>Regularization parameter for matrix H. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp" line="156" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1amf_1_1SVDCompleteIncrementalLearning_1ae006c02ce3ccca65596953543abc1815" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double kw</definition>
        <argsstring></argsstring>
        <name>kw</name>
        <briefdescription>
<para>Regularization parameter for matrix W. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp" line="154" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1amf_1_1SVDCompleteIncrementalLearning_1aed08c8478a62910aab06ba708a0e5b5f" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double u</definition>
        <argsstring></argsstring>
        <name>u</name>
        <briefdescription>
<para>Step count of batch learning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp" line="152" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1amf_1_1SVDCompleteIncrementalLearning_1a71cdb5129bf4d15ed40d8da831a81117" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVDCompleteIncrementalLearning</definition>
        <argsstring>(double u=0.0001, double kw=0, double kh=0)</argsstring>
        <name>SVDCompleteIncrementalLearning</name>
        <param>
          <type>double</type>
          <declname>u</declname>
          <defval>0.0001</defval>
        </param>
        <param>
          <type>double</type>
          <declname>kw</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>kh</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Initialize the <ref refid="classmlpack_1_1amf_1_1SVDCompleteIncrementalLearning" kindref="compound">SVDCompleteIncrementalLearning</ref> class with the given parameters. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>Step value used in batch learning. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kw</parametername>
</parameternamelist>
<parameterdescription>
<para>Regularization constant for W matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kh</parametername>
</parameternamelist>
<parameterdescription>
<para>Regularization constant for H matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp" line="56" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp" bodystart="56" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1amf_1_1SVDCompleteIncrementalLearning_1a0e71ea053b53eaf173cfc5c443579a23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HUpdate</definition>
        <argsstring>(const MatType &amp;V, const arma::mat &amp;W, arma::mat &amp;H)</argsstring>
        <name>HUpdate</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>V</declname>
        </param>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>W</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>H</declname>
        </param>
        <briefdescription>
<para>The update rule for the encoding matrix H. </para>        </briefdescription>
        <detaileddescription>
<para>The function takes in all the matrices and only changes the value of the H matrix.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>V</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix to be factorized. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>W</parametername>
</parameternamelist>
<parameterdescription>
<para>Basis matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>H</parametername>
</parameternamelist>
<parameterdescription>
<para>Encoding matrix to be updated. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp" line="123" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp" bodystart="123" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1amf_1_1SVDCompleteIncrementalLearning_1ab9a33e66c6132c302ff20b14d66a72ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Initialize</definition>
        <argsstring>(const MatType &amp;, const size_t)</argsstring>
        <name>Initialize</name>
        <param>
          <type>const MatType &amp;</type>
        </param>
        <param>
          <type>const size_t</type>
        </param>
        <briefdescription>
<para>Initialize parameters before factorization. </para>        </briefdescription>
        <detaileddescription>
<para>This function must be called before a new factorization. For this initialization, the input parameters are unnecessary; we are only setting the current element index to 0.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(dataset) Input matrix to be factorized. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(rank) Rank of factorization. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp" line="72" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp" bodystart="72" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1amf_1_1SVDCompleteIncrementalLearning_1a9d294bbec9c31732350d3cae87847d88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void WUpdate</definition>
        <argsstring>(const MatType &amp;V, arma::mat &amp;W, const arma::mat &amp;H)</argsstring>
        <name>WUpdate</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>V</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>W</declname>
        </param>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>H</declname>
        </param>
        <briefdescription>
<para>The update rule for the basis matrix W. </para>        </briefdescription>
        <detaileddescription>
<para>The function takes in all the matrices and only changes the value of the W matrix.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>V</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix to be factorized. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>W</parametername>
</parameternamelist>
<parameterdescription>
<para>Basis matrix to be updated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>H</parametername>
</parameternamelist>
<parameterdescription>
<para>Encoding matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp" line="87" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp" bodystart="87" bodyend="112"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class computes SVD using complete incremental batch learning, as described in the following paper: </para>    </briefdescription>
    <detaileddescription>
<para><programlisting><codeline><highlight class="normal">@techreport{ma2008guide,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>title={A<sp/>Guide<sp/>to<sp/>Singular<sp/>Value<sp/>Decomposition<sp/>for<sp/>Collaborative</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filtering},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>author={Ma,<sp/>Chih-Chao},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>year={2008},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>institution={Department<sp/>of<sp/>Computer<sp/>Science,<sp/>National<sp/>Taiwan<sp/>University}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para>This class implements &apos;Algorithm 3&apos; given in the paper. Complete incremental learning is an extreme case of incremental learning, where feature vectors are updated after looking at each single element in the input matrix (V). This approach differs from incomplete incremental learning where feature vectors are updated after seeing columns of elements in the input matrix.</para><para><simplesect kind="see"><para><ref refid="classmlpack_1_1amf_1_1SVDIncompleteIncrementalLearning" kindref="compound">SVDIncompleteIncrementalLearning</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp" line="46" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp" bodystart="45" bodyend="162"/>
    <listofallmembers>
      <member refid="classmlpack_1_1amf_1_1SVDCompleteIncrementalLearning_1a2ed1500298df79a43a7c7db242721a77" prot="private" virt="non-virtual"><scope>mlpack::amf::SVDCompleteIncrementalLearning</scope><name>currentItemIndex</name></member>
      <member refid="classmlpack_1_1amf_1_1SVDCompleteIncrementalLearning_1a0e396da15e6249a960ca686970ee4ba4" prot="private" virt="non-virtual"><scope>mlpack::amf::SVDCompleteIncrementalLearning</scope><name>currentUserIndex</name></member>
      <member refid="classmlpack_1_1amf_1_1SVDCompleteIncrementalLearning_1a0e71ea053b53eaf173cfc5c443579a23" prot="public" virt="non-virtual"><scope>mlpack::amf::SVDCompleteIncrementalLearning</scope><name>HUpdate</name></member>
      <member refid="classmlpack_1_1amf_1_1SVDCompleteIncrementalLearning_1ab9a33e66c6132c302ff20b14d66a72ff" prot="public" virt="non-virtual"><scope>mlpack::amf::SVDCompleteIncrementalLearning</scope><name>Initialize</name></member>
      <member refid="classmlpack_1_1amf_1_1SVDCompleteIncrementalLearning_1a6d2402476727060562dea8f9d5f44597" prot="private" virt="non-virtual"><scope>mlpack::amf::SVDCompleteIncrementalLearning</scope><name>kh</name></member>
      <member refid="classmlpack_1_1amf_1_1SVDCompleteIncrementalLearning_1ae006c02ce3ccca65596953543abc1815" prot="private" virt="non-virtual"><scope>mlpack::amf::SVDCompleteIncrementalLearning</scope><name>kw</name></member>
      <member refid="classmlpack_1_1amf_1_1SVDCompleteIncrementalLearning_1a71cdb5129bf4d15ed40d8da831a81117" prot="public" virt="non-virtual"><scope>mlpack::amf::SVDCompleteIncrementalLearning</scope><name>SVDCompleteIncrementalLearning</name></member>
      <member refid="classmlpack_1_1amf_1_1SVDCompleteIncrementalLearning_1aed08c8478a62910aab06ba708a0e5b5f" prot="private" virt="non-virtual"><scope>mlpack::amf::SVDCompleteIncrementalLearning</scope><name>u</name></member>
      <member refid="classmlpack_1_1amf_1_1SVDCompleteIncrementalLearning_1a9d294bbec9c31732350d3cae87847d88" prot="public" virt="non-virtual"><scope>mlpack::amf::SVDCompleteIncrementalLearning</scope><name>WUpdate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
