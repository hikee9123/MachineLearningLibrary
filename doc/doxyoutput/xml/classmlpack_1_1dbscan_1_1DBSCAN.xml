<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1dbscan_1_1DBSCAN" kind="class" language="C++" prot="public">
    <compoundname>mlpack::dbscan::DBSCAN</compoundname>
    <includes refid="dbscan_8hpp" local="no">dbscan.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename RangeSearchType</type>
        <defval><ref refid="classmlpack_1_1range_1_1RangeSearch" kindref="compound">range::RangeSearch</ref>&lt;&gt;</defval>
      </param>
      <param>
        <type>typename PointSelectionPolicy</type>
        <defval><ref refid="classmlpack_1_1dbscan_1_1OrderedPointSelection" kindref="compound">OrderedPointSelection</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1dbscan_1_1DBSCAN_1adecaf21e277aac3eead496cd1f3f394a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool batchMode</definition>
        <argsstring></argsstring>
        <name>batchMode</name>
        <briefdescription>
<para>Whether or not to perform the search in batch mode. If false, single. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp" line="123" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1dbscan_1_1DBSCAN_1a4904cc82627458fdf6672ccc0b2802c7" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double epsilon</definition>
        <argsstring></argsstring>
        <name>epsilon</name>
        <briefdescription>
<para>Maximum distance between two points to be part of same cluster. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp" line="116" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1dbscan_1_1DBSCAN_1a7eb1f15290007fced6eef0a08a2e2e0e" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t minPoints</definition>
        <argsstring></argsstring>
        <name>minPoints</name>
        <briefdescription>
<para>Minimum number of points to be in the epsilon-neighborhood (including itself) for the point to be a core-point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp" line="120" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1dbscan_1_1DBSCAN_1a20526b61d9872be9c50ba980aa5122c1" prot="private" static="no" mutable="no">
        <type>PointSelectionPolicy</type>
        <definition>PointSelectionPolicy pointSelector</definition>
        <argsstring></argsstring>
        <name>pointSelector</name>
        <briefdescription>
<para>Instantiated point selection policy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp" line="129" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1dbscan_1_1DBSCAN_1a7a06f63d9a2fc0d3b362a0a871e0df7e" prot="private" static="no" mutable="no">
        <type>RangeSearchType</type>
        <definition>RangeSearchType rangeSearch</definition>
        <argsstring></argsstring>
        <name>rangeSearch</name>
        <briefdescription>
<para>Instantiated range search policy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp" line="126" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1dbscan_1_1DBSCAN_1add1ee82d37001657fc8978359145543b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DBSCAN</definition>
        <argsstring>(const double epsilon, const size_t minPoints, const bool batchMode=true, RangeSearchType rangeSearch=RangeSearchType(), PointSelectionPolicy pointSelector=PointSelectionPolicy())</argsstring>
        <name>DBSCAN</name>
        <param>
          <type>const double</type>
          <declname>epsilon</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>minPoints</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>batchMode</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>RangeSearchType</type>
          <declname>rangeSearch</declname>
          <defval>RangeSearchType()</defval>
        </param>
        <param>
          <type>PointSelectionPolicy</type>
          <declname>pointSelector</declname>
          <defval>PointSelectionPolicy()</defval>
        </param>
        <briefdescription>
<para>Construct the <ref refid="classmlpack_1_1dbscan_1_1DBSCAN" kindref="compound">DBSCAN</ref> object with the given parameters. </para>        </briefdescription>
        <detaileddescription>
<para>The batchMode parameter should be set to false in the case where RAM issues will be encountered (i.e. if the dataset is very large or if epsilon is large). When batchMode is false, each point will be searched iteratively, which could be slower but will use less memory.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of range query. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum number of points for each cluster. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>batchMode</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, all points are searched in batch. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rangeSearch</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional instantiated RangeSearch object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pointSelector</parametername>
</parameternamelist>
<parameterdescription>
<para>OptionL instantiated PointSelectionPolicy object. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1dbscan_1_1DBSCAN_1a224c059e24d3dcdab266b9743ec37404" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MatType</type>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t Cluster</definition>
        <argsstring>(const MatType &amp;data, arma::mat &amp;centroids)</argsstring>
        <name>Cluster</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>centroids</declname>
        </param>
        <briefdescription>
<para>Performs <ref refid="classmlpack_1_1dbscan_1_1DBSCAN" kindref="compound">DBSCAN</ref> clustering on the data, returning number of clusters and also the centroid of each cluster. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MatType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of matrix (arma::mat or arma::sp_mat). </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Dataset to cluster. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>centroids</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix in which centroids are stored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1dbscan_1_1DBSCAN_1a0245b1f39300ec8133bc6cc9309523c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MatType</type>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t Cluster</definition>
        <argsstring>(const MatType &amp;data, arma::Row&lt; size_t &gt; &amp;assignments)</argsstring>
        <name>Cluster</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>arma::Row&lt; size_t &gt; &amp;</type>
          <declname>assignments</declname>
        </param>
        <briefdescription>
<para>Performs <ref refid="classmlpack_1_1dbscan_1_1DBSCAN" kindref="compound">DBSCAN</ref> clustering on the data, returning number of clusters and also the list of cluster assignments. </para>        </briefdescription>
        <detaileddescription>
<para>If assignments[i] == SIZE_MAX, then the point is considered &quot;noise&quot;.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MatType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of matrix (arma::mat or arma::sp_mat). </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Dataset to cluster. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>assignments</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to store cluster assignments. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1dbscan_1_1DBSCAN_1ac413cbc512ae367a3824f70b0b497f4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MatType</type>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t Cluster</definition>
        <argsstring>(const MatType &amp;data, arma::Row&lt; size_t &gt; &amp;assignments, arma::mat &amp;centroids)</argsstring>
        <name>Cluster</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>arma::Row&lt; size_t &gt; &amp;</type>
          <declname>assignments</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>centroids</declname>
        </param>
        <briefdescription>
<para>Performs <ref refid="classmlpack_1_1dbscan_1_1DBSCAN" kindref="compound">DBSCAN</ref> clustering on the data, returning number of clusters, the centroid of each cluster and also the list of cluster assignments. </para>        </briefdescription>
        <detaileddescription>
<para>If assignments[i] == SIZE_MAX, then the point is considered &quot;noise&quot;.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MatType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of matrix (arma::mat or arma::sp_mat). </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Dataset to cluster. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>assignments</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to store cluster assignments. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>centroids</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix in which centroids are stored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp" line="110" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmlpack_1_1dbscan_1_1DBSCAN_1aa818eefa253afead25aa554d4d73a8a7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MatType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void BatchCluster</definition>
        <argsstring>(const MatType &amp;data, emst::UnionFind &amp;uf)</argsstring>
        <name>BatchCluster</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="classmlpack_1_1emst_1_1UnionFind" kindref="compound">emst::UnionFind</ref> &amp;</type>
          <declname>uf</declname>
        </param>
        <briefdescription>
<para>Performs <ref refid="classmlpack_1_1dbscan_1_1DBSCAN" kindref="compound">DBSCAN</ref> clustering on the data, returning number of clusters and also the list of cluster assignments. </para>        </briefdescription>
        <detaileddescription>
<para>This can perform search in batch, so it is well suited for dual-tree or naive search.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Dataset to cluster. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>assignments</parametername>
</parameternamelist>
<parameterdescription>
<para>Assignments for each point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uf</parametername>
</parameternamelist>
<parameterdescription>
<para>UnionFind structure that will be modified. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1dbscan_1_1DBSCAN_1abbe7597876014bf4c7aec02ebcabac4d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MatType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void PointwiseCluster</definition>
        <argsstring>(const MatType &amp;data, emst::UnionFind &amp;uf)</argsstring>
        <name>PointwiseCluster</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="classmlpack_1_1emst_1_1UnionFind" kindref="compound">emst::UnionFind</ref> &amp;</type>
          <declname>uf</declname>
        </param>
        <briefdescription>
<para>Performs <ref refid="classmlpack_1_1dbscan_1_1DBSCAN" kindref="compound">DBSCAN</ref> clustering on the data, returning the number of clusters and also the list of cluster assignments. </para>        </briefdescription>
        <detaileddescription>
<para>This searches each point iteratively, and can save on RAM usage. It may be slower than the batch search with a dual-tree algorithm.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Dataset to cluster. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>assignments</parametername>
</parameternamelist>
<parameterdescription>
<para>Assignments for each point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uf</parametername>
</parameternamelist>
<parameterdescription>
<para>UnionFind structure that will be modified. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp" line="142" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classmlpack_1_1dbscan_1_1DBSCAN" kindref="compound">DBSCAN</ref> (Density-Based Spatial Clustering of Applications with Noise) is a clustering technique described in the following paper: </para>    </briefdescription>
    <detaileddescription>
<para><programlisting><codeline><highlight class="normal">@inproceedings{ester1996density,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>title={A<sp/>density-based<sp/>algorithm<sp/>for<sp/>discovering<sp/>clusters<sp/>in<sp/>large<sp/>spatial</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>databases<sp/>with<sp/>noise.},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>author={Ester,<sp/>M.<sp/>and<sp/>Kriegel,<sp/>H.-P.<sp/>and<sp/>Sander,<sp/>J.<sp/>and<sp/>Xu,<sp/>X.},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>booktitle={Proceedings<sp/>of<sp/>the<sp/>Second<sp/>International<sp/>Conference<sp/>on<sp/>Knowledge</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Discovery<sp/>and<sp/>Data<sp/>Mining<sp/>(KDD<sp/>&apos;96)},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>pages={226--231},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>year={1996}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para>The <ref refid="classmlpack_1_1dbscan_1_1DBSCAN" kindref="compound">DBSCAN</ref> algorithm iteratively clusters points using range searches with a specified radius parameter. This implementation allows configuration of the range search technique used and the point selection strategy by means of template parameters.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>RangeSearchType</parametername>
</parameternamelist>
<parameterdescription>
<para>Class to use for range searching. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PointSelectionPolicy</parametername>
</parameternamelist>
<parameterdescription>
<para>Strategy for selecting next point to cluster with. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp" line="53" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp" bodystart="52" bodyend="157"/>
    <listofallmembers>
      <member refid="classmlpack_1_1dbscan_1_1DBSCAN_1aa818eefa253afead25aa554d4d73a8a7" prot="private" virt="non-virtual"><scope>mlpack::dbscan::DBSCAN</scope><name>BatchCluster</name></member>
      <member refid="classmlpack_1_1dbscan_1_1DBSCAN_1adecaf21e277aac3eead496cd1f3f394a" prot="private" virt="non-virtual"><scope>mlpack::dbscan::DBSCAN</scope><name>batchMode</name></member>
      <member refid="classmlpack_1_1dbscan_1_1DBSCAN_1a224c059e24d3dcdab266b9743ec37404" prot="public" virt="non-virtual"><scope>mlpack::dbscan::DBSCAN</scope><name>Cluster</name></member>
      <member refid="classmlpack_1_1dbscan_1_1DBSCAN_1a0245b1f39300ec8133bc6cc9309523c6" prot="public" virt="non-virtual"><scope>mlpack::dbscan::DBSCAN</scope><name>Cluster</name></member>
      <member refid="classmlpack_1_1dbscan_1_1DBSCAN_1ac413cbc512ae367a3824f70b0b497f4e" prot="public" virt="non-virtual"><scope>mlpack::dbscan::DBSCAN</scope><name>Cluster</name></member>
      <member refid="classmlpack_1_1dbscan_1_1DBSCAN_1add1ee82d37001657fc8978359145543b" prot="public" virt="non-virtual"><scope>mlpack::dbscan::DBSCAN</scope><name>DBSCAN</name></member>
      <member refid="classmlpack_1_1dbscan_1_1DBSCAN_1a4904cc82627458fdf6672ccc0b2802c7" prot="private" virt="non-virtual"><scope>mlpack::dbscan::DBSCAN</scope><name>epsilon</name></member>
      <member refid="classmlpack_1_1dbscan_1_1DBSCAN_1a7eb1f15290007fced6eef0a08a2e2e0e" prot="private" virt="non-virtual"><scope>mlpack::dbscan::DBSCAN</scope><name>minPoints</name></member>
      <member refid="classmlpack_1_1dbscan_1_1DBSCAN_1a20526b61d9872be9c50ba980aa5122c1" prot="private" virt="non-virtual"><scope>mlpack::dbscan::DBSCAN</scope><name>pointSelector</name></member>
      <member refid="classmlpack_1_1dbscan_1_1DBSCAN_1abbe7597876014bf4c7aec02ebcabac4d" prot="private" virt="non-virtual"><scope>mlpack::dbscan::DBSCAN</scope><name>PointwiseCluster</name></member>
      <member refid="classmlpack_1_1dbscan_1_1DBSCAN_1a7a06f63d9a2fc0d3b362a0a871e0df7e" prot="private" virt="non-virtual"><scope>mlpack::dbscan::DBSCAN</scope><name>rangeSearch</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
