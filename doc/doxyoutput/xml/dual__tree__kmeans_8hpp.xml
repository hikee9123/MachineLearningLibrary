<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="dual__tree__kmeans_8hpp" kind="file" language="C++">
    <compoundname>dual_tree_kmeans.hpp</compoundname>
    <includes refid="binary__space__tree_8hpp" local="no">mlpack/core/tree/binary_space_tree.hpp</includes>
    <includes refid="neighbor__search_8hpp" local="no">mlpack/methods/neighbor_search/neighbor_search.hpp</includes>
    <includes refid="cover__tree_8hpp" local="no">mlpack/core/tree/cover_tree.hpp</includes>
    <includes refid="dual__tree__kmeans__statistic_8hpp" local="yes">dual_tree_kmeans_statistic.hpp</includes>
    <includes local="yes">dual_tree_kmeans_impl.hpp</includes>
    <incdepgraph>
      <node id="51966">
        <label>list</label>
      </node>
      <node id="52016">
        <label>breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="52008">
        <label>binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="52005" relation="include">
        </childnode>
        <childnode refid="52009" relation="include">
        </childnode>
      </node>
      <node id="52018">
        <label>binary_space_tree/traits.hpp</label>
        <link refid="binary__space__tree_2traits_8hpp"/>
        <childnode refid="52019" relation="include">
        </childnode>
        <childnode refid="51980" relation="include">
        </childnode>
      </node>
      <node id="51963">
        <label>atomic</label>
      </node>
      <node id="51953">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="51929">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="51965">
        <label>iomanip</label>
      </node>
      <node id="52015">
        <label>queue</label>
      </node>
      <node id="52031">
        <label>typedef.hpp</label>
        <link refid="methods_2neighbor__search_2typedef_8hpp"/>
        <childnode refid="52021" relation="include">
        </childnode>
        <childnode refid="51975" relation="include">
        </childnode>
        <childnode refid="52025" relation="include">
        </childnode>
        <childnode refid="52032" relation="include">
        </childnode>
      </node>
      <node id="52027">
        <label>neighbor_search_rules.hpp</label>
        <link refid="neighbor__search__rules_8hpp"/>
        <childnode refid="52028" relation="include">
        </childnode>
        <childnode refid="52015" relation="include">
        </childnode>
        <childnode refid="52029" relation="include">
        </childnode>
      </node>
      <node id="51977">
        <label>bound_traits.hpp</label>
        <link refid="bound__traits_8hpp"/>
      </node>
      <node id="51990">
        <label>binary_space_tree/mean_split.hpp</label>
        <link refid="mean__split_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="51988" relation="include">
        </childnode>
        <childnode refid="51991" relation="include">
        </childnode>
      </node>
      <node id="51976">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="52023">
        <label>mlpack/core/tree/rectangle_tree.hpp</label>
      </node>
      <node id="51938">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="51939" relation="include">
        </childnode>
        <childnode refid="51941" relation="include">
        </childnode>
      </node>
      <node id="51921">
        <label>cstdint</label>
      </node>
      <node id="51930">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="51937">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="52017">
        <label>binary_space_tree/breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="52026">
        <label>nearest_neighbor_sort_impl.hpp</label>
      </node>
      <node id="51994">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="51991">
        <label>mean_split_impl.hpp</label>
      </node>
      <node id="51960">
        <label>arma_config.hpp</label>
      </node>
      <node id="51982">
        <label>hollow_ball_bound.hpp</label>
        <link refid="hollow__ball__bound_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="51975" relation="include">
        </childnode>
        <childnode refid="51977" relation="include">
        </childnode>
        <childnode refid="51983" relation="include">
        </childnode>
      </node>
      <node id="52006">
        <label>../statistic.hpp</label>
        <link refid="statistic_8hpp"/>
      </node>
      <node id="52024">
        <label>neighbor_search_stat.hpp</label>
        <link refid="neighbor__search__stat_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
      </node>
      <node id="52001">
        <label>lin_alg_impl.hpp</label>
      </node>
      <node id="51950">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="52044">
        <label>dual_tree_kmeans_statistic.hpp</label>
        <link refid="dual__tree__kmeans__statistic_8hpp"/>
        <childnode refid="52024" relation="include">
        </childnode>
      </node>
      <node id="51917">
        <label>cmath</label>
      </node>
      <node id="51973">
        <label>bounds.hpp</label>
        <link refid="bounds_8hpp"/>
        <childnode refid="51974" relation="include">
        </childnode>
        <childnode refid="51975" relation="include">
        </childnode>
        <childnode refid="51977" relation="include">
        </childnode>
        <childnode refid="51978" relation="include">
        </childnode>
        <childnode refid="51980" relation="include">
        </childnode>
        <childnode refid="51982" relation="include">
        </childnode>
        <childnode refid="51984" relation="include">
        </childnode>
      </node>
      <node id="51936">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="51925">
        <label>stdexcept</label>
      </node>
      <node id="52011">
        <label>binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="52005" relation="include">
        </childnode>
        <childnode refid="52012" relation="include">
        </childnode>
      </node>
      <node id="51945">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="51930" relation="include">
        </childnode>
        <childnode refid="51932" relation="include">
        </childnode>
        <childnode refid="51933" relation="include">
        </childnode>
        <childnode refid="51931" relation="include">
        </childnode>
      </node>
      <node id="51974">
        <label>mlpack/core/math/range.hpp</label>
      </node>
      <node id="52043">
        <label>cover_tree/typedef.hpp</label>
        <link refid="core_2tree_2cover__tree_2typedef_8hpp"/>
        <childnode refid="52036" relation="include">
        </childnode>
      </node>
      <node id="51969">
        <label>string</label>
      </node>
      <node id="51997">
        <label>binary_space_tree/rp_tree_max_split.hpp</label>
        <link refid="rp__tree__max__split_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="51988" relation="include">
        </childnode>
        <childnode refid="51998" relation="include">
        </childnode>
      </node>
      <node id="51989">
        <label>midpoint_split_impl.hpp</label>
      </node>
      <node id="51957">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="51958" relation="include">
        </childnode>
        <childnode refid="51924" relation="include">
        </childnode>
      </node>
      <node id="51967">
        <label>map</label>
      </node>
      <node id="52012">
        <label>dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="52000">
        <label>mlpack/core/math/lin_alg.hpp</label>
        <link refid="lin__alg_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="52001" relation="include">
        </childnode>
      </node>
      <node id="51919">
        <label>cfloat</label>
      </node>
      <node id="51949">
        <label>boost/variant.hpp</label>
      </node>
      <node id="51971">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="52045">
        <label>dual_tree_kmeans_impl.hpp</label>
      </node>
      <node id="52040">
        <label>cover_tree/dual_tree_traverser.hpp</label>
        <link refid="cover__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="52015" relation="include">
        </childnode>
        <childnode refid="52012" relation="include">
        </childnode>
      </node>
      <node id="51914">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/dual_tree_kmeans.hpp</label>
        <link refid="dual__tree__kmeans_8hpp"/>
        <childnode refid="51915" relation="include">
        </childnode>
        <childnode refid="52021" relation="include">
        </childnode>
        <childnode refid="52034" relation="include">
        </childnode>
        <childnode refid="52044" relation="include">
        </childnode>
        <childnode refid="52045" relation="include">
        </childnode>
      </node>
      <node id="51933">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="51956">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="51957" relation="include">
        </childnode>
        <childnode refid="51933" relation="include">
        </childnode>
        <childnode refid="51940" relation="include">
        </childnode>
        <childnode refid="51958" relation="include">
        </childnode>
      </node>
      <node id="51946">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="52036">
        <label>cover_tree/cover_tree.hpp</label>
        <link refid="cover__tree_2cover__tree_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="51974" relation="include">
        </childnode>
        <childnode refid="52006" relation="include">
        </childnode>
        <childnode refid="52035" relation="include">
        </childnode>
        <childnode refid="52037" relation="include">
        </childnode>
        <childnode refid="52034" relation="include">
        </childnode>
      </node>
      <node id="51944">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="51930" relation="include">
        </childnode>
        <childnode refid="51932" relation="include">
        </childnode>
        <childnode refid="51933" relation="include">
        </childnode>
        <childnode refid="51931" relation="include">
        </childnode>
      </node>
      <node id="51947">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="51930" relation="include">
        </childnode>
        <childnode refid="51932" relation="include">
        </childnode>
        <childnode refid="51933" relation="include">
        </childnode>
        <childnode refid="51931" relation="include">
        </childnode>
      </node>
      <node id="52007">
        <label>binary_space_tree_impl.hpp</label>
      </node>
      <node id="51935">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="51955">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="51931" relation="include">
        </childnode>
        <childnode refid="51932" relation="include">
        </childnode>
        <childnode refid="51933" relation="include">
        </childnode>
        <childnode refid="51943" relation="include">
        </childnode>
        <childnode refid="51952" relation="include">
        </childnode>
      </node>
      <node id="51959">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="51960" relation="include">
        </childnode>
      </node>
      <node id="52013">
        <label>binary_space_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="52029">
        <label>neighbor_search_rules_impl.hpp</label>
      </node>
      <node id="51961">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="51916">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="51917" relation="include">
        </childnode>
        <childnode refid="51918" relation="include">
        </childnode>
        <childnode refid="51919" relation="include">
        </childnode>
        <childnode refid="51920" relation="include">
        </childnode>
        <childnode refid="51921" relation="include">
        </childnode>
        <childnode refid="51922" relation="include">
        </childnode>
        <childnode refid="51923" relation="include">
        </childnode>
        <childnode refid="51924" relation="include">
        </childnode>
        <childnode refid="51925" relation="include">
        </childnode>
        <childnode refid="51926" relation="include">
        </childnode>
        <childnode refid="51927" relation="include">
        </childnode>
        <childnode refid="51928" relation="include">
        </childnode>
        <childnode refid="51929" relation="include">
        </childnode>
        <childnode refid="51930" relation="include">
        </childnode>
        <childnode refid="51931" relation="include">
        </childnode>
        <childnode refid="51932" relation="include">
        </childnode>
        <childnode refid="51933" relation="include">
        </childnode>
        <childnode refid="51934" relation="include">
        </childnode>
        <childnode refid="51935" relation="include">
        </childnode>
        <childnode refid="51936" relation="include">
        </childnode>
        <childnode refid="51937" relation="include">
        </childnode>
        <childnode refid="51938" relation="include">
        </childnode>
        <childnode refid="51942" relation="include">
        </childnode>
        <childnode refid="51943" relation="include">
        </childnode>
        <childnode refid="51944" relation="include">
        </childnode>
        <childnode refid="51945" relation="include">
        </childnode>
        <childnode refid="51946" relation="include">
        </childnode>
        <childnode refid="51947" relation="include">
        </childnode>
        <childnode refid="51948" relation="include">
        </childnode>
        <childnode refid="51954" relation="include">
        </childnode>
        <childnode refid="51955" relation="include">
        </childnode>
        <childnode refid="51952" relation="include">
        </childnode>
        <childnode refid="51956" relation="include">
        </childnode>
        <childnode refid="51959" relation="include">
        </childnode>
        <childnode refid="51961" relation="include">
        </childnode>
        <childnode refid="51962" relation="include">
        </childnode>
        <childnode refid="51971" relation="include">
        </childnode>
        <childnode refid="51972" relation="include">
        </childnode>
      </node>
      <node id="52009">
        <label>single_tree_traverser_impl.hpp</label>
      </node>
      <node id="52033">
        <label>furthest_neighbor_sort_impl.hpp</label>
      </node>
      <node id="51987">
        <label>binary_space_tree/midpoint_split.hpp</label>
        <link refid="midpoint__split_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="51988" relation="include">
        </childnode>
        <childnode refid="51989" relation="include">
        </childnode>
      </node>
      <node id="52034">
        <label>mlpack/core/tree/cover_tree.hpp</label>
        <link refid="cover__tree_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="52035" relation="include">
        </childnode>
        <childnode refid="52036" relation="include">
        </childnode>
        <childnode refid="52038" relation="include">
        </childnode>
        <childnode refid="52039" relation="include">
        </childnode>
        <childnode refid="52040" relation="include">
        </childnode>
        <childnode refid="52041" relation="include">
        </childnode>
        <childnode refid="52042" relation="include">
        </childnode>
        <childnode refid="52043" relation="include">
        </childnode>
      </node>
      <node id="51995">
        <label>random</label>
      </node>
      <node id="51981">
        <label>ballbound_impl.hpp</label>
      </node>
      <node id="52010">
        <label>binary_space_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="51922">
        <label>cstdio</label>
      </node>
      <node id="51985">
        <label>address.hpp</label>
        <link refid="address_8hpp"/>
      </node>
      <node id="52019">
        <label>mlpack/core/tree/tree_traits.hpp</label>
        <link refid="tree__traits_8hpp"/>
      </node>
      <node id="51926">
        <label>tuple</label>
      </node>
      <node id="51931">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="52003">
        <label>binary_space_tree/ub_tree_split.hpp</label>
        <link refid="ub__tree__split_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="51985" relation="include">
        </childnode>
        <childnode refid="52004" relation="include">
        </childnode>
      </node>
      <node id="51948">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="51931" relation="include">
        </childnode>
        <childnode refid="51932" relation="include">
        </childnode>
        <childnode refid="51933" relation="include">
        </childnode>
        <childnode refid="51935" relation="include">
        </childnode>
        <childnode refid="51949" relation="include">
        </childnode>
        <childnode refid="51950" relation="include">
        </childnode>
        <childnode refid="51951" relation="include">
        </childnode>
        <childnode refid="51952" relation="include">
        </childnode>
      </node>
      <node id="52005">
        <label>binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="52006" relation="include">
        </childnode>
        <childnode refid="51987" relation="include">
        </childnode>
        <childnode refid="52007" relation="include">
        </childnode>
        <childnode refid="51915" relation="include">
        </childnode>
      </node>
      <node id="51978">
        <label>hrectbound.hpp</label>
        <link refid="hrectbound_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="51974" relation="include">
        </childnode>
        <childnode refid="51975" relation="include">
        </childnode>
        <childnode refid="51977" relation="include">
        </childnode>
        <childnode refid="51979" relation="include">
        </childnode>
      </node>
      <node id="52035">
        <label>cover_tree/first_point_is_root.hpp</label>
        <link refid="first__point__is__root_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
      </node>
      <node id="52022">
        <label>vector</label>
      </node>
      <node id="52002">
        <label>rp_tree_mean_split_impl.hpp</label>
      </node>
      <node id="52038">
        <label>cover_tree/single_tree_traverser.hpp</label>
        <link refid="cover__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="52036" relation="include">
        </childnode>
        <childnode refid="52009" relation="include">
        </childnode>
      </node>
      <node id="51993">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="51994" relation="include">
        </childnode>
        <childnode refid="51995" relation="include">
        </childnode>
      </node>
      <node id="51927">
        <label>utility</label>
      </node>
      <node id="51951">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="51942">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="51915">
        <label>mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="51973" relation="include">
        </childnode>
        <childnode refid="51987" relation="include">
        </childnode>
        <childnode refid="51990" relation="include">
        </childnode>
        <childnode refid="51992" relation="include">
        </childnode>
        <childnode refid="51997" relation="include">
        </childnode>
        <childnode refid="51999" relation="include">
        </childnode>
        <childnode refid="52003" relation="include">
        </childnode>
        <childnode refid="52005" relation="include">
        </childnode>
        <childnode refid="52008" relation="include">
        </childnode>
        <childnode refid="52010" relation="include">
        </childnode>
        <childnode refid="52011" relation="include">
        </childnode>
        <childnode refid="52013" relation="include">
        </childnode>
        <childnode refid="52014" relation="include">
        </childnode>
        <childnode refid="52017" relation="include">
        </childnode>
        <childnode refid="52018" relation="include">
        </childnode>
        <childnode refid="52020" relation="include">
        </childnode>
      </node>
      <node id="52025">
        <label>sort_policies/nearest_neighbor_sort.hpp</label>
        <link refid="nearest__neighbor__sort_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="52026" relation="include">
        </childnode>
      </node>
      <node id="51939">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="51940" relation="include">
        </childnode>
      </node>
      <node id="52041">
        <label>cover_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="52037">
        <label>cover_tree_impl.hpp</label>
      </node>
      <node id="51962">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="51963" relation="include">
        </childnode>
        <childnode refid="51964" relation="include">
        </childnode>
        <childnode refid="51965" relation="include">
        </childnode>
        <childnode refid="51966" relation="include">
        </childnode>
        <childnode refid="51967" relation="include">
        </childnode>
        <childnode refid="51968" relation="include">
        </childnode>
        <childnode refid="51969" relation="include">
        </childnode>
        <childnode refid="51970" relation="include">
        </childnode>
      </node>
      <node id="51940">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="52021">
        <label>mlpack/methods/neighbor_search/neighbor_search.hpp</label>
        <link refid="neighbor__search_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="52022" relation="include">
        </childnode>
        <childnode refid="51969" relation="include">
        </childnode>
        <childnode refid="51915" relation="include">
        </childnode>
        <childnode refid="52023" relation="include">
        </childnode>
        <childnode refid="52005" relation="include">
        </childnode>
        <childnode refid="52024" relation="include">
        </childnode>
        <childnode refid="52025" relation="include">
        </childnode>
        <childnode refid="52027" relation="include">
        </childnode>
        <childnode refid="52030" relation="include">
        </childnode>
        <childnode refid="52031" relation="include">
        </childnode>
      </node>
      <node id="51954">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="51952" relation="include">
        </childnode>
        <childnode refid="51948" relation="include">
        </childnode>
        <childnode refid="51955" relation="include">
        </childnode>
      </node>
      <node id="51923">
        <label>cstdlib</label>
      </node>
      <node id="52030">
        <label>neighbor_search_impl.hpp</label>
      </node>
      <node id="51918">
        <label>cctype</label>
      </node>
      <node id="52032">
        <label>sort_policies/furthest_neighbor_sort.hpp</label>
        <link refid="furthest__neighbor__sort_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="52033" relation="include">
        </childnode>
      </node>
      <node id="51941">
        <label>unordered_map</label>
      </node>
      <node id="52039">
        <label>cover_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="51920">
        <label>climits</label>
      </node>
      <node id="51968">
        <label>mutex</label>
      </node>
      <node id="51964">
        <label>chrono</label>
      </node>
      <node id="52028">
        <label>mlpack/core/tree/traversal_info.hpp</label>
        <link refid="traversal__info_8hpp"/>
      </node>
      <node id="51979">
        <label>hrectbound_impl.hpp</label>
      </node>
      <node id="51972">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="51999">
        <label>binary_space_tree/rp_tree_mean_split.hpp</label>
        <link refid="rp__tree__mean__split_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="51997" relation="include">
        </childnode>
        <childnode refid="51988" relation="include">
        </childnode>
        <childnode refid="52000" relation="include">
        </childnode>
        <childnode refid="52002" relation="include">
        </childnode>
      </node>
      <node id="51996">
        <label>vantage_point_split_impl.hpp</label>
      </node>
      <node id="51970">
        <label>thread</label>
      </node>
      <node id="51980">
        <label>ballbound.hpp</label>
        <link refid="ballbound_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="51975" relation="include">
        </childnode>
        <childnode refid="51977" relation="include">
        </childnode>
        <childnode refid="51981" relation="include">
        </childnode>
      </node>
      <node id="51998">
        <label>rp_tree_max_split_impl.hpp</label>
      </node>
      <node id="51988">
        <label>mlpack/core/tree/perform_split.hpp</label>
        <link refid="perform__split_8hpp"/>
      </node>
      <node id="51958">
        <label>type_traits</label>
      </node>
      <node id="52014">
        <label>binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="52015" relation="include">
        </childnode>
        <childnode refid="51915" relation="include">
        </childnode>
        <childnode refid="52016" relation="include">
        </childnode>
      </node>
      <node id="51934">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="52020">
        <label>binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="51915" relation="include">
        </childnode>
      </node>
      <node id="51928">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="51952">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="51930" relation="include">
        </childnode>
        <childnode refid="51931" relation="include">
        </childnode>
        <childnode refid="51932" relation="include">
        </childnode>
        <childnode refid="51933" relation="include">
        </childnode>
        <childnode refid="51953" relation="include">
        </childnode>
      </node>
      <node id="51983">
        <label>hollow_ball_bound_impl.hpp</label>
      </node>
      <node id="51924">
        <label>cstring</label>
      </node>
      <node id="51943">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="51986">
        <label>cellbound_impl.hpp</label>
      </node>
      <node id="52004">
        <label>ub_tree_split_impl.hpp</label>
      </node>
      <node id="51984">
        <label>cellbound.hpp</label>
        <link refid="cellbound_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="51974" relation="include">
        </childnode>
        <childnode refid="51975" relation="include">
        </childnode>
        <childnode refid="51977" relation="include">
        </childnode>
        <childnode refid="51985" relation="include">
        </childnode>
        <childnode refid="51986" relation="include">
        </childnode>
      </node>
      <node id="51932">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="51975">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="51976" relation="include">
        </childnode>
      </node>
      <node id="51992">
        <label>binary_space_tree/vantage_point_split.hpp</label>
        <link refid="vantage__point__split_8hpp"/>
        <childnode refid="51916" relation="include">
        </childnode>
        <childnode refid="51988" relation="include">
        </childnode>
        <childnode refid="51993" relation="include">
        </childnode>
        <childnode refid="51996" relation="include">
        </childnode>
      </node>
      <node id="52042">
        <label>cover_tree/traits.hpp</label>
        <link refid="cover__tree_2traits_8hpp"/>
        <childnode refid="52019" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1kmeans_1_1DualTreeKMeans" prot="public">mlpack::kmeans::DualTreeKMeans</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1kmeans">mlpack::kmeans</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ryan Curtin</para></simplesect>
An implementation of a Lloyd iteration which uses dual-tree nearest neighbor search as a black box. The conditions under which this will perform best are probably limited to the case where k is close to the number of points in the dataset, and the number of iterations of the k-means algorithm will be few.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="15"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_KMEANS_DUAL_TREE_KMEANS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_KMEANS_DUAL_TREE_KMEANS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="binary__space__tree_8hpp" kindref="compound">mlpack/core/tree/binary_space_tree.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="neighbor__search_8hpp" kindref="compound">mlpack/methods/neighbor_search/neighbor_search.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cover__tree_8hpp" kindref="compound">mlpack/core/tree/cover_tree.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dual__tree__kmeans__statistic_8hpp" kindref="compound">dual_tree_kmeans_statistic.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="25" refid="namespacemlpack_1_1kmeans" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">kmeans<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MetricType,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMetricType,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeStatType,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMatType&gt;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TreeType<sp/>=<sp/><ref refid="classmlpack_1_1tree_1_1BinarySpaceTree" kindref="compound">tree::KDTree</ref>&gt;</highlight></codeline>
<codeline lineno="41" refid="classmlpack_1_1kmeans_1_1DualTreeKMeans" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1kmeans_1_1DualTreeKMeans" kindref="compound">DualTreeKMeans</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45" refid="classmlpack_1_1kmeans_1_1DualTreeKMeans_1acaad795a6a26818330dd2476ec5e8731" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TreeType&lt;MetricType,<sp/>DualTreeKMeansStatistic,<sp/>MatType&gt;<sp/><ref refid="classmlpack_1_1kmeans_1_1DualTreeKMeans_1acaad795a6a26818330dd2476ec5e8731" kindref="member">Tree</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMetricType,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IgnoredStatType,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMatType&gt;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kmeans_1_1DualTreeKMeans_1a5b3ef294d06f18f1075d54975f0e7aad" kindref="member">NNSTreeType</ref><sp/>=</highlight></codeline>
<codeline lineno="51" refid="classmlpack_1_1kmeans_1_1DualTreeKMeans_1a5b3ef294d06f18f1075d54975f0e7aad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TreeType&lt;TreeMetricType,<sp/>DualTreeKMeansStatistic,<sp/>TreeMatType&gt;;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1kmeans_1_1DualTreeKMeans_1a6c9ca881ce3156575e49ee41509c9e84" kindref="member">DualTreeKMeans</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>dataset,<sp/>MetricType&amp;<sp/>metric);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1kmeans_1_1DualTreeKMeans_1a41aea8db220102203364a89819766541" kindref="member">~DualTreeKMeans</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kmeans_1_1DualTreeKMeans_1a1618db5fb0d2893a50f0c8614d970453" kindref="member">Iterate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>centroids,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>newCentroids,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Col&lt;size_t&gt;&amp;<sp/>counts);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classmlpack_1_1kmeans_1_1DualTreeKMeans_1a6ab05a40f496b49e405530a1d39120ef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kmeans_1_1DualTreeKMeans_1a6ab05a40f496b49e405530a1d39120ef" kindref="member">DistanceCalculations</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>distanceCalculations;<sp/>}</highlight></codeline>
<codeline lineno="79" refid="classmlpack_1_1kmeans_1_1DualTreeKMeans_1a7fd6d18544595d62025c4b740f8664ab" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1kmeans_1_1DualTreeKMeans_1a7fd6d18544595d62025c4b740f8664ab" kindref="member">DistanceCalculations</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>distanceCalculations;<sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>datasetOrig;<sp/></highlight><highlight class="comment">//<sp/>Maybe<sp/>not<sp/>necessary.</highlight></codeline>
<codeline lineno="85"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/>Tree*<sp/>tree;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>dataset;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>MetricType<sp/>metric;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>distanceCalculations;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iteration;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>arma::vec<sp/>upperBounds;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>arma::vec<sp/>lowerBounds;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>std::vector&lt;bool&gt;<sp/>prunedPoints;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>arma::Row&lt;size_t&gt;<sp/>assignments;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>std::vector&lt;bool&gt;<sp/>visited;<sp/></highlight><highlight class="comment">//<sp/>Was<sp/>the<sp/>point<sp/>visited<sp/>this<sp/>iteration?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>arma::mat<sp/>lastIterationCentroids;<sp/></highlight><highlight class="comment">//<sp/>For<sp/>sanity<sp/>checks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>arma::vec<sp/>clusterDistances;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>amount<sp/>the<sp/>clusters<sp/>moved<sp/>last<sp/>iteration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>arma::mat<sp/>interclusterDistances;<sp/></highlight><highlight class="comment">//<sp/>Static<sp/>storage<sp/>for<sp/>intercluster<sp/>distances.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UpdateTree(Tree&amp;<sp/>node,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>centroids,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>parentUpperBound<sp/>=<sp/>0.0,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>adjustedParentUpperBound<sp/>=<sp/>DBL_MAX,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>parentLowerBound<sp/>=<sp/>DBL_MAX,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>adjustedParentLowerBound<sp/>=<sp/>0.0);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ExtractCentroids(Tree&amp;<sp/>node,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>newCentroids,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Col&lt;size_t&gt;&amp;<sp/>newCounts,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>centroids);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CoalesceTree(Tree&amp;<sp/>node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>child<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DecoalesceTree(Tree&amp;<sp/>node);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">};</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1kmeans_1ae824715a9723b95291ede5396d7ec48a" kindref="member">HideChild</ref>(TreeType&amp;<sp/>node,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>child,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="classmlpack_1_1tree_1_1TreeTraits" kindref="compound">tree::TreeTraits&lt;TreeType&gt;::BinaryTree</ref>&gt;*<sp/>junk<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1kmeans_1ae824715a9723b95291ede5396d7ec48a" kindref="member">HideChild</ref>(TreeType&amp;<sp/>node,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>child,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1tree_1_1TreeTraits" kindref="compound">tree::TreeTraits&lt;TreeType&gt;::BinaryTree</ref>&gt;*<sp/>junk<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1kmeans_1ab8a2dc63dd61b947e7b90e03d31d64c0" kindref="member">RestoreChildren</ref>(TreeType&amp;<sp/>node,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt;!<ref refid="classmlpack_1_1tree_1_1TreeTraits" kindref="compound">tree::TreeTraits</ref>&lt;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TreeType&gt;::BinaryTree&gt;*<sp/>junk<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1kmeans_1ab8a2dc63dd61b947e7b90e03d31d64c0" kindref="member">RestoreChildren</ref>(TreeType&amp;<sp/>node,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt;<ref refid="classmlpack_1_1tree_1_1TreeTraits" kindref="compound">tree::TreeTraits</ref>&lt;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TreeType&gt;::BinaryTree&gt;*<sp/>junk<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MetricType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="164" refid="namespacemlpack_1_1kmeans_1a3d8c82eb428be782996066d70afc122b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kmeans_1_1DualTreeKMeans" kindref="compound">DefaultDualTreeKMeans</ref><sp/>=<sp/><ref refid="classmlpack_1_1kmeans_1_1DualTreeKMeans" kindref="compound">DualTreeKMeans&lt;MetricType, MatType&gt;</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MetricType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kmeans_1_1DualTreeKMeans" kindref="compound">CoverTreeDualTreeKMeans</ref><sp/>=<sp/><ref refid="classmlpack_1_1kmeans_1_1DualTreeKMeans" kindref="compound">DualTreeKMeans</ref>&lt;MetricType,<sp/>MatType,</highlight></codeline>
<codeline lineno="170" refid="namespacemlpack_1_1kmeans_1a050f8eba1b8d0c72e990a9ee3b7ed775" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">tree::StandardCoverTree</ref>&gt;;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>kmeans</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dual_tree_kmeans_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/kmeans/dual_tree_kmeans.hpp"/>
  </compounddef>
</doxygen>
