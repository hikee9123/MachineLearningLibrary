<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sparse__coding_8hpp" kind="file" language="C++">
    <compoundname>sparse_coding.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="lars_8hpp" local="no">mlpack/methods/lars/lars.hpp</includes>
    <includes refid="nothing__initializer_8hpp" local="yes">nothing_initializer.hpp</includes>
    <includes refid="data__dependent__random__initializer_8hpp" local="yes">data_dependent_random_initializer.hpp</includes>
    <includes refid="random__initializer_8hpp" local="yes">random_initializer.hpp</includes>
    <includes local="yes">sparse_coding_impl.hpp</includes>
    <incdepgraph>
      <node id="58086">
        <label>list</label>
      </node>
      <node id="58083">
        <label>atomic</label>
      </node>
      <node id="58035">
        <label>/home/aakash/mlpack/src/mlpack/methods/sparse_coding/sparse_coding.hpp</label>
        <link refid="sparse__coding_8hpp"/>
        <childnode refid="58036" relation="include">
        </childnode>
        <childnode refid="58093" relation="include">
        </childnode>
        <childnode refid="58095" relation="include">
        </childnode>
        <childnode refid="58096" relation="include">
        </childnode>
        <childnode refid="58100" relation="include">
        </childnode>
        <childnode refid="58101" relation="include">
        </childnode>
      </node>
      <node id="58073">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="58049">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="58101">
        <label>sparse_coding_impl.hpp</label>
      </node>
      <node id="58085">
        <label>iomanip</label>
      </node>
      <node id="58096">
        <label>data_dependent_random_initializer.hpp</label>
        <link refid="data__dependent__random__initializer_8hpp"/>
        <childnode refid="58036" relation="include">
        </childnode>
        <childnode refid="58097" relation="include">
        </childnode>
      </node>
      <node id="58058">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="58059" relation="include">
        </childnode>
        <childnode refid="58061" relation="include">
        </childnode>
      </node>
      <node id="58041">
        <label>cstdint</label>
      </node>
      <node id="58050">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="58057">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="58093">
        <label>mlpack/methods/lars/lars.hpp</label>
        <link refid="lars_8hpp"/>
        <childnode refid="58036" relation="include">
        </childnode>
        <childnode refid="58094" relation="include">
        </childnode>
      </node>
      <node id="58098">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="58080">
        <label>arma_config.hpp</label>
      </node>
      <node id="58070">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="58037">
        <label>cmath</label>
      </node>
      <node id="58056">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="58045">
        <label>stdexcept</label>
      </node>
      <node id="58065">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="58050" relation="include">
        </childnode>
        <childnode refid="58052" relation="include">
        </childnode>
        <childnode refid="58053" relation="include">
        </childnode>
        <childnode refid="58051" relation="include">
        </childnode>
      </node>
      <node id="58089">
        <label>string</label>
      </node>
      <node id="58077">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="58078" relation="include">
        </childnode>
        <childnode refid="58044" relation="include">
        </childnode>
      </node>
      <node id="58087">
        <label>map</label>
      </node>
      <node id="58100">
        <label>random_initializer.hpp</label>
        <link refid="random__initializer_8hpp"/>
        <childnode refid="58036" relation="include">
        </childnode>
      </node>
      <node id="58039">
        <label>cfloat</label>
      </node>
      <node id="58069">
        <label>boost/variant.hpp</label>
      </node>
      <node id="58091">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="58053">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="58076">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="58077" relation="include">
        </childnode>
        <childnode refid="58053" relation="include">
        </childnode>
        <childnode refid="58060" relation="include">
        </childnode>
        <childnode refid="58078" relation="include">
        </childnode>
      </node>
      <node id="58066">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="58064">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="58050" relation="include">
        </childnode>
        <childnode refid="58052" relation="include">
        </childnode>
        <childnode refid="58053" relation="include">
        </childnode>
        <childnode refid="58051" relation="include">
        </childnode>
      </node>
      <node id="58067">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="58050" relation="include">
        </childnode>
        <childnode refid="58052" relation="include">
        </childnode>
        <childnode refid="58053" relation="include">
        </childnode>
        <childnode refid="58051" relation="include">
        </childnode>
      </node>
      <node id="58055">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="58075">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="58051" relation="include">
        </childnode>
        <childnode refid="58052" relation="include">
        </childnode>
        <childnode refid="58053" relation="include">
        </childnode>
        <childnode refid="58063" relation="include">
        </childnode>
        <childnode refid="58072" relation="include">
        </childnode>
      </node>
      <node id="58079">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="58080" relation="include">
        </childnode>
      </node>
      <node id="58081">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="58036">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="58037" relation="include">
        </childnode>
        <childnode refid="58038" relation="include">
        </childnode>
        <childnode refid="58039" relation="include">
        </childnode>
        <childnode refid="58040" relation="include">
        </childnode>
        <childnode refid="58041" relation="include">
        </childnode>
        <childnode refid="58042" relation="include">
        </childnode>
        <childnode refid="58043" relation="include">
        </childnode>
        <childnode refid="58044" relation="include">
        </childnode>
        <childnode refid="58045" relation="include">
        </childnode>
        <childnode refid="58046" relation="include">
        </childnode>
        <childnode refid="58047" relation="include">
        </childnode>
        <childnode refid="58048" relation="include">
        </childnode>
        <childnode refid="58049" relation="include">
        </childnode>
        <childnode refid="58050" relation="include">
        </childnode>
        <childnode refid="58051" relation="include">
        </childnode>
        <childnode refid="58052" relation="include">
        </childnode>
        <childnode refid="58053" relation="include">
        </childnode>
        <childnode refid="58054" relation="include">
        </childnode>
        <childnode refid="58055" relation="include">
        </childnode>
        <childnode refid="58056" relation="include">
        </childnode>
        <childnode refid="58057" relation="include">
        </childnode>
        <childnode refid="58058" relation="include">
        </childnode>
        <childnode refid="58062" relation="include">
        </childnode>
        <childnode refid="58063" relation="include">
        </childnode>
        <childnode refid="58064" relation="include">
        </childnode>
        <childnode refid="58065" relation="include">
        </childnode>
        <childnode refid="58066" relation="include">
        </childnode>
        <childnode refid="58067" relation="include">
        </childnode>
        <childnode refid="58068" relation="include">
        </childnode>
        <childnode refid="58074" relation="include">
        </childnode>
        <childnode refid="58075" relation="include">
        </childnode>
        <childnode refid="58072" relation="include">
        </childnode>
        <childnode refid="58076" relation="include">
        </childnode>
        <childnode refid="58079" relation="include">
        </childnode>
        <childnode refid="58081" relation="include">
        </childnode>
        <childnode refid="58082" relation="include">
        </childnode>
        <childnode refid="58091" relation="include">
        </childnode>
        <childnode refid="58092" relation="include">
        </childnode>
      </node>
      <node id="58099">
        <label>random</label>
      </node>
      <node id="58042">
        <label>cstdio</label>
      </node>
      <node id="58046">
        <label>tuple</label>
      </node>
      <node id="58051">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="58068">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="58051" relation="include">
        </childnode>
        <childnode refid="58052" relation="include">
        </childnode>
        <childnode refid="58053" relation="include">
        </childnode>
        <childnode refid="58055" relation="include">
        </childnode>
        <childnode refid="58069" relation="include">
        </childnode>
        <childnode refid="58070" relation="include">
        </childnode>
        <childnode refid="58071" relation="include">
        </childnode>
        <childnode refid="58072" relation="include">
        </childnode>
      </node>
      <node id="58097">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="58036" relation="include">
        </childnode>
        <childnode refid="58098" relation="include">
        </childnode>
        <childnode refid="58099" relation="include">
        </childnode>
      </node>
      <node id="58047">
        <label>utility</label>
      </node>
      <node id="58071">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="58062">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="58094">
        <label>lars_impl.hpp</label>
      </node>
      <node id="58059">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="58060" relation="include">
        </childnode>
      </node>
      <node id="58095">
        <label>nothing_initializer.hpp</label>
        <link refid="nothing__initializer_8hpp"/>
        <childnode refid="58036" relation="include">
        </childnode>
      </node>
      <node id="58082">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="58083" relation="include">
        </childnode>
        <childnode refid="58084" relation="include">
        </childnode>
        <childnode refid="58085" relation="include">
        </childnode>
        <childnode refid="58086" relation="include">
        </childnode>
        <childnode refid="58087" relation="include">
        </childnode>
        <childnode refid="58088" relation="include">
        </childnode>
        <childnode refid="58089" relation="include">
        </childnode>
        <childnode refid="58090" relation="include">
        </childnode>
      </node>
      <node id="58060">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="58074">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="58072" relation="include">
        </childnode>
        <childnode refid="58068" relation="include">
        </childnode>
        <childnode refid="58075" relation="include">
        </childnode>
      </node>
      <node id="58043">
        <label>cstdlib</label>
      </node>
      <node id="58038">
        <label>cctype</label>
      </node>
      <node id="58061">
        <label>unordered_map</label>
      </node>
      <node id="58040">
        <label>climits</label>
      </node>
      <node id="58088">
        <label>mutex</label>
      </node>
      <node id="58084">
        <label>chrono</label>
      </node>
      <node id="58092">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="58090">
        <label>thread</label>
      </node>
      <node id="58078">
        <label>type_traits</label>
      </node>
      <node id="58054">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="58048">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="58072">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="58050" relation="include">
        </childnode>
        <childnode refid="58051" relation="include">
        </childnode>
        <childnode refid="58052" relation="include">
        </childnode>
        <childnode refid="58053" relation="include">
        </childnode>
        <childnode refid="58073" relation="include">
        </childnode>
      </node>
      <node id="58044">
        <label>cstring</label>
      </node>
      <node id="58063">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="58052">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1sparse__coding_1_1SparseCoding" prot="public">mlpack::sparse_coding::SparseCoding</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1sparse__coding">mlpack::sparse_coding</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Nishant Mehta</para></simplesect>
Definition of the SparseCoding class, which performs L1 (LASSO) or L1+L2 (Elastic Net)-regularized sparse coding with dictionary learning</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_SPARSE_CODING_SPARSE_CODING_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_SPARSE_CODING_SPARSE_CODING_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="lars_8hpp" kindref="compound">mlpack/methods/lars/lars.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>our<sp/>three<sp/>simple<sp/>dictionary<sp/>initializers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nothing__initializer_8hpp" kindref="compound">nothing_initializer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="data__dependent__random__initializer_8hpp" kindref="compound">data_dependent_random_initializer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="random__initializer_8hpp" kindref="compound">random_initializer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">sparse_coding<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="classmlpack_1_1sparse__coding_1_1SparseCoding" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1sparse__coding_1_1SparseCoding" kindref="compound">SparseCoding</ref></highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DictionaryInitializer<sp/>=<sp/>DataDependentRandomInitializer&gt;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a603b4e6346773526111dd0e759ec1283" kindref="member">SparseCoding</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>atoms,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda1,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda2<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>objTolerance<sp/>=<sp/>0.01,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newtonTolerance<sp/>=<sp/>1e-6,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryInitializer&amp;<sp/>initializer<sp/>=</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DictionaryInitializer());</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a603b4e6346773526111dd0e759ec1283" kindref="member">SparseCoding</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>atoms<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda1<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda2<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>objTolerance<sp/>=<sp/>0.01,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newtonTolerance<sp/>=<sp/>1e-6);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DictionaryInitializer<sp/>=<sp/>DataDependentRandomInitializer&gt;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a69503a211de26a7b35e7e7867cf20246" kindref="member">Train</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DictionaryInitializer&amp;<sp/>initializer<sp/>=</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DictionaryInitializer());</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a4b2741b0e146d6eb6a09e30f228ea309" kindref="member">Encode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,<sp/>arma::mat&amp;<sp/>codes);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a2d164dea45075388335d75f8c27fd659" kindref="member">OptimizeDictionary</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>codes,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::uvec&amp;<sp/>adjacencies);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1ab8a90e33cb1a5db9cda2ef2f0ba26e5f" kindref="member">ProjectDictionary</ref>();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a8a45b3d947cc22079a5941b9d46acfe3" kindref="member">Objective</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>codes)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a29bceb0b46c45a45594c9feb0e743171" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/><ref refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a29bceb0b46c45a45594c9feb0e743171" kindref="member">Dictionary</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dictionary;<sp/>}</highlight></codeline>
<codeline lineno="225" refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a3146526cfc85ff339121972d67c73f62" refkind="member"><highlight class="normal"><sp/><sp/>arma::mat&amp;<sp/><ref refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a3146526cfc85ff339121972d67c73f62" kindref="member">Dictionary</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dictionary;<sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1ac1a924c2cc0b117283fc8aba76a92a07" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1ac1a924c2cc0b117283fc8aba76a92a07" kindref="member">Atoms</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atoms;<sp/>}</highlight></codeline>
<codeline lineno="230" refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a30a05b58ad809476c03aba6df5970b52" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a30a05b58ad809476c03aba6df5970b52" kindref="member">Atoms</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atoms;<sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a264615b0081adef98427420db074cd44" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a264615b0081adef98427420db074cd44" kindref="member">Lambda1</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lambda1;<sp/>}</highlight></codeline>
<codeline lineno="235" refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a743296069b1e03a1bb2e7a466eb68022" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a743296069b1e03a1bb2e7a466eb68022" kindref="member">Lambda1</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lambda1;<sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1aae12d0e36b1a7fa52a155f9d3f7a50f1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1aae12d0e36b1a7fa52a155f9d3f7a50f1" kindref="member">Lambda2</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lambda2;<sp/>}</highlight></codeline>
<codeline lineno="240" refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1adb32f19e01e1576af72865eb87978008" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1adb32f19e01e1576af72865eb87978008" kindref="member">Lambda2</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lambda2;<sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a420770944a5b0c7a852c4ec372c4a2d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a420770944a5b0c7a852c4ec372c4a2d1" kindref="member">MaxIterations</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxIterations;<sp/>}</highlight></codeline>
<codeline lineno="245" refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1acda675ab4ab86b95c92bc33bc391a61b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1acda675ab4ab86b95c92bc33bc391a61b" kindref="member">MaxIterations</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxIterations;<sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a8c2c8dec8e93ca1ddc14ac238266ef20" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a8c2c8dec8e93ca1ddc14ac238266ef20" kindref="member">ObjTolerance</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>objTolerance;<sp/>}</highlight></codeline>
<codeline lineno="250" refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1afe546afaa975282a5549cc416c1d64f5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1afe546afaa975282a5549cc416c1d64f5" kindref="member">ObjTolerance</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>objTolerance;<sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a6fcf2b9f21e7933d9292d11be1535475" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a6fcf2b9f21e7933d9292d11be1535475" kindref="member">NewtonTolerance</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newtonTolerance;<sp/>}</highlight></codeline>
<codeline lineno="255" refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a32f233437346e49c0b7dad746ac62b6b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a32f233437346e49c0b7dad746ac62b6b" kindref="member">NewtonTolerance</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newtonTolerance;<sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1sparse__coding_1_1SparseCoding_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>atoms;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>arma::mat<sp/>dictionary;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda1;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda2;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>objTolerance;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newtonTolerance;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">};</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>sparse_coding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sparse_coding_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_coding/sparse_coding.hpp"/>
  </compounddef>
</doxygen>
