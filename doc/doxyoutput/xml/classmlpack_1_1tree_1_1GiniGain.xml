<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1tree_1_1GiniGain" kind="class" language="C++" prot="public">
    <compoundname>mlpack::tree::GiniGain</compoundname>
    <includes refid="gini__gain_8hpp" local="no">gini_gain.hpp</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1GiniGain_1a55301b1d670a7627f34d9a9e03b02cfb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>UseWeights</declname>
            <defname>UseWeights</defname>
          </param>
          <param>
            <type>typename RowType</type>
          </param>
          <param>
            <type>typename WeightVecType</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>static double Evaluate</definition>
        <argsstring>(const RowType &amp;labels, const size_t numClasses, const WeightVecType &amp;weights)</argsstring>
        <name>Evaluate</name>
        <param>
          <type>const RowType &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>numClasses</declname>
        </param>
        <param>
          <type>const WeightVecType &amp;</type>
          <declname>weights</declname>
        </param>
        <briefdescription>
<para>Evaluate the Gini impurity on the given set of labels. </para>        </briefdescription>
        <detaileddescription>
<para>RowType should be an Armadillo vector that holds size_t objects.</para><para>Note that it is possible that due to floating-point representation issues, it is possible that the gain returned can be very slightly greater than 0! Thus, if you are checking for a perfect fit, be sure to use &apos;gain &gt;= 0.0&apos; not &apos;gain == 0.0&apos;.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of labels to evaluate Gini impurity on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numClasses</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of classes in the dataset. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weights</parametername>
</parameternamelist>
<parameterdescription>
<para>Weight of labels. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/decision_tree/gini_gain.hpp" line="62" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/decision_tree/gini_gain.hpp" bodystart="62" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1GiniGain_1a67d1277fdaf085606937d4b523f615ba" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>UseWeights</declname>
            <defname>UseWeights</defname>
          </param>
          <param>
            <type>typename CountType</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>static double EvaluatePtr</definition>
        <argsstring>(const CountType *counts, const size_t countLength, const CountType totalCount)</argsstring>
        <name>EvaluatePtr</name>
        <param>
          <type>const CountType *</type>
          <declname>counts</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>countLength</declname>
        </param>
        <param>
          <type>const CountType</type>
          <declname>totalCount</declname>
        </param>
        <briefdescription>
<para>Evaluate the Gini impurity given a vector of class weight counts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/decision_tree/gini_gain.hpp" line="34" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/decision_tree/gini_gain.hpp" bodystart="34" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1GiniGain_1a9d801bb1be5db5207213f846f224458f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double Range</definition>
        <argsstring>(const size_t numClasses)</argsstring>
        <name>Range</name>
        <param>
          <type>const size_t</type>
          <declname>numClasses</declname>
        </param>
        <briefdescription>
<para>Return the range of the Gini impurity for the given number of classes. </para>        </briefdescription>
        <detaileddescription>
<para>(That is, the difference between the maximum possible value and the minimum possible value.)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numClasses</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of classes in the dataset. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/decision_tree/gini_gain.hpp" line="203" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/decision_tree/gini_gain.hpp" bodystart="203" bodyend="209"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The Gini gain, a measure of set purity usable as a fitness function (FitnessFunction) for decision trees. </para>    </briefdescription>
    <detaileddescription>
<para>This is the exact same thing as the well-known Gini impurity, but negated<mdash/>since the decision tree will be trying to maximize gain (and the Gini impurity would need to be minimized). </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/decision_tree/gini_gain.hpp" line="28" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/decision_tree/gini_gain.hpp" bodystart="27" bodyend="210"/>
    <listofallmembers>
      <member refid="classmlpack_1_1tree_1_1GiniGain_1a55301b1d670a7627f34d9a9e03b02cfb" prot="public" virt="non-virtual"><scope>mlpack::tree::GiniGain</scope><name>Evaluate</name></member>
      <member refid="classmlpack_1_1tree_1_1GiniGain_1a67d1277fdaf085606937d4b523f615ba" prot="public" virt="non-virtual"><scope>mlpack::tree::GiniGain</scope><name>EvaluatePtr</name></member>
      <member refid="classmlpack_1_1tree_1_1GiniGain_1a9d801bb1be5db5207213f846f224458f" prot="public" virt="non-virtual"><scope>mlpack::tree::GiniGain</scope><name>Range</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
