<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="quic__svd__method_8hpp" kind="file" language="C++">
    <compoundname>quic_svd_method.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="quic__svd_8hpp" local="no">mlpack/methods/quic_svd/quic_svd.hpp</includes>
    <incdepgraph>
      <node id="54961">
        <label>list</label>
      </node>
      <node id="54958">
        <label>atomic</label>
      </node>
      <node id="54948">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="54924">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="54960">
        <label>iomanip</label>
      </node>
      <node id="54910">
        <label>/home/aakash/mlpack/src/mlpack/methods/pca/decomposition_policies/quic_svd_method.hpp</label>
        <link refid="quic__svd__method_8hpp"/>
        <childnode refid="54911" relation="include">
        </childnode>
        <childnode refid="54968" relation="include">
        </childnode>
      </node>
      <node id="54970">
        <label>boost/heap/priority_queue.hpp</label>
      </node>
      <node id="54933">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="54934" relation="include">
        </childnode>
        <childnode refid="54936" relation="include">
        </childnode>
      </node>
      <node id="54916">
        <label>cstdint</label>
      </node>
      <node id="54925">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="54932">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="54955">
        <label>arma_config.hpp</label>
      </node>
      <node id="54945">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="54912">
        <label>cmath</label>
      </node>
      <node id="54931">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="54920">
        <label>stdexcept</label>
      </node>
      <node id="54940">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="54925" relation="include">
        </childnode>
        <childnode refid="54927" relation="include">
        </childnode>
        <childnode refid="54928" relation="include">
        </childnode>
        <childnode refid="54926" relation="include">
        </childnode>
      </node>
      <node id="54964">
        <label>string</label>
      </node>
      <node id="54952">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="54953" relation="include">
        </childnode>
        <childnode refid="54919" relation="include">
        </childnode>
      </node>
      <node id="54962">
        <label>map</label>
      </node>
      <node id="54914">
        <label>cfloat</label>
      </node>
      <node id="54944">
        <label>boost/variant.hpp</label>
      </node>
      <node id="54966">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="54928">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="54951">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="54952" relation="include">
        </childnode>
        <childnode refid="54928" relation="include">
        </childnode>
        <childnode refid="54935" relation="include">
        </childnode>
        <childnode refid="54953" relation="include">
        </childnode>
      </node>
      <node id="54941">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="54939">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="54925" relation="include">
        </childnode>
        <childnode refid="54927" relation="include">
        </childnode>
        <childnode refid="54928" relation="include">
        </childnode>
        <childnode refid="54926" relation="include">
        </childnode>
      </node>
      <node id="54942">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="54925" relation="include">
        </childnode>
        <childnode refid="54927" relation="include">
        </childnode>
        <childnode refid="54928" relation="include">
        </childnode>
        <childnode refid="54926" relation="include">
        </childnode>
      </node>
      <node id="54930">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="54950">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="54926" relation="include">
        </childnode>
        <childnode refid="54927" relation="include">
        </childnode>
        <childnode refid="54928" relation="include">
        </childnode>
        <childnode refid="54938" relation="include">
        </childnode>
        <childnode refid="54947" relation="include">
        </childnode>
      </node>
      <node id="54954">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="54955" relation="include">
        </childnode>
      </node>
      <node id="54956">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="54911">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="54912" relation="include">
        </childnode>
        <childnode refid="54913" relation="include">
        </childnode>
        <childnode refid="54914" relation="include">
        </childnode>
        <childnode refid="54915" relation="include">
        </childnode>
        <childnode refid="54916" relation="include">
        </childnode>
        <childnode refid="54917" relation="include">
        </childnode>
        <childnode refid="54918" relation="include">
        </childnode>
        <childnode refid="54919" relation="include">
        </childnode>
        <childnode refid="54920" relation="include">
        </childnode>
        <childnode refid="54921" relation="include">
        </childnode>
        <childnode refid="54922" relation="include">
        </childnode>
        <childnode refid="54923" relation="include">
        </childnode>
        <childnode refid="54924" relation="include">
        </childnode>
        <childnode refid="54925" relation="include">
        </childnode>
        <childnode refid="54926" relation="include">
        </childnode>
        <childnode refid="54927" relation="include">
        </childnode>
        <childnode refid="54928" relation="include">
        </childnode>
        <childnode refid="54929" relation="include">
        </childnode>
        <childnode refid="54930" relation="include">
        </childnode>
        <childnode refid="54931" relation="include">
        </childnode>
        <childnode refid="54932" relation="include">
        </childnode>
        <childnode refid="54933" relation="include">
        </childnode>
        <childnode refid="54937" relation="include">
        </childnode>
        <childnode refid="54938" relation="include">
        </childnode>
        <childnode refid="54939" relation="include">
        </childnode>
        <childnode refid="54940" relation="include">
        </childnode>
        <childnode refid="54941" relation="include">
        </childnode>
        <childnode refid="54942" relation="include">
        </childnode>
        <childnode refid="54943" relation="include">
        </childnode>
        <childnode refid="54949" relation="include">
        </childnode>
        <childnode refid="54950" relation="include">
        </childnode>
        <childnode refid="54947" relation="include">
        </childnode>
        <childnode refid="54951" relation="include">
        </childnode>
        <childnode refid="54954" relation="include">
        </childnode>
        <childnode refid="54956" relation="include">
        </childnode>
        <childnode refid="54957" relation="include">
        </childnode>
        <childnode refid="54966" relation="include">
        </childnode>
        <childnode refid="54967" relation="include">
        </childnode>
      </node>
      <node id="54917">
        <label>cstdio</label>
      </node>
      <node id="54921">
        <label>tuple</label>
      </node>
      <node id="54926">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="54943">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="54926" relation="include">
        </childnode>
        <childnode refid="54927" relation="include">
        </childnode>
        <childnode refid="54928" relation="include">
        </childnode>
        <childnode refid="54930" relation="include">
        </childnode>
        <childnode refid="54944" relation="include">
        </childnode>
        <childnode refid="54945" relation="include">
        </childnode>
        <childnode refid="54946" relation="include">
        </childnode>
        <childnode refid="54947" relation="include">
        </childnode>
      </node>
      <node id="54922">
        <label>utility</label>
      </node>
      <node id="54946">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="54937">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="54934">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="54935" relation="include">
        </childnode>
      </node>
      <node id="54957">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="54958" relation="include">
        </childnode>
        <childnode refid="54959" relation="include">
        </childnode>
        <childnode refid="54960" relation="include">
        </childnode>
        <childnode refid="54961" relation="include">
        </childnode>
        <childnode refid="54962" relation="include">
        </childnode>
        <childnode refid="54963" relation="include">
        </childnode>
        <childnode refid="54964" relation="include">
        </childnode>
        <childnode refid="54965" relation="include">
        </childnode>
      </node>
      <node id="54935">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="54949">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="54947" relation="include">
        </childnode>
        <childnode refid="54943" relation="include">
        </childnode>
        <childnode refid="54950" relation="include">
        </childnode>
      </node>
      <node id="54918">
        <label>cstdlib</label>
      </node>
      <node id="54913">
        <label>cctype</label>
      </node>
      <node id="54936">
        <label>unordered_map</label>
      </node>
      <node id="54915">
        <label>climits</label>
      </node>
      <node id="54963">
        <label>mutex</label>
      </node>
      <node id="54959">
        <label>chrono</label>
      </node>
      <node id="54967">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="54968">
        <label>mlpack/methods/quic_svd/quic_svd.hpp</label>
        <link refid="quic__svd_8hpp"/>
        <childnode refid="54911" relation="include">
        </childnode>
        <childnode refid="54969" relation="include">
        </childnode>
      </node>
      <node id="54965">
        <label>thread</label>
      </node>
      <node id="54953">
        <label>type_traits</label>
      </node>
      <node id="54929">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="54923">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="54947">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="54925" relation="include">
        </childnode>
        <childnode refid="54926" relation="include">
        </childnode>
        <childnode refid="54927" relation="include">
        </childnode>
        <childnode refid="54928" relation="include">
        </childnode>
        <childnode refid="54948" relation="include">
        </childnode>
      </node>
      <node id="54969">
        <label>mlpack/core/tree/cosine_tree/cosine_tree.hpp</label>
        <link refid="cosine__tree_8hpp"/>
        <childnode refid="54911" relation="include">
        </childnode>
        <childnode refid="54970" relation="include">
        </childnode>
      </node>
      <node id="54919">
        <label>cstring</label>
      </node>
      <node id="54938">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="54927">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1pca_1_1QUICSVDPolicy" prot="public">mlpack::pca::QUICSVDPolicy</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1pca">mlpack::pca</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Marcus Edel</para></simplesect>
Implementation of the QUIC-SVD policy for use in the Principal Components Analysis method.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="14"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_PCA_DECOMPOSITION_POLICIES_QUIC_SVD_METHOD_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_PCA_DECOMPOSITION_POLICIES_QUIC_SVD_METHOD_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="quic__svd_8hpp" kindref="compound">mlpack/methods/quic_svd/quic_svd.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">pca<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classmlpack_1_1pca_1_1QUICSVDPolicy" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1pca_1_1QUICSVDPolicy" kindref="compound">QUICSVDPolicy</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35" refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1a4bf967380d96a318ba10dc5b844d5e4c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1a4bf967380d96a318ba10dc5b844d5e4c" kindref="member">QUICSVDPolicy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon<sp/>=<sp/>0.03,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>0.1)<sp/>:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epsilon(epsilon),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta(delta)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1a0ff241481a91b6d5cbf4279ba0e47fd6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1a0ff241481a91b6d5cbf4279ba0e47fd6" kindref="member">Apply</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>centeredData,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>transformedData,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>eigVal,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>eigvec,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>rank<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>matrix<sp/>will<sp/>store<sp/>the<sp/>right<sp/>singular<sp/>values;<sp/>we<sp/>do<sp/>not<sp/>need<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::mat<sp/>v,<sp/>sigma;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>singular<sp/>value<sp/>decomposition<sp/>using<sp/>the<sp/>QUIC-SVD<sp/>algorithm.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1svd_1_1QUIC__SVD" kindref="compound">svd::QUIC_SVD</ref><sp/>quicsvd(centeredData,<sp/>eigvec,<sp/>v,<sp/>sigma,<sp/>epsilon,<sp/>delta);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>must<sp/>square<sp/>the<sp/>singular<sp/>values<sp/>to<sp/>get<sp/>the<sp/>eigenvalues.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>addition<sp/>we<sp/>must<sp/>divide<sp/>by<sp/>the<sp/>number<sp/>of<sp/>points,<sp/>because<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>covariance<sp/>matrix<sp/>is<sp/>X<sp/>*<sp/>X&apos;<sp/>/<sp/>(N<sp/>-<sp/>1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>eigVal<sp/>=<sp/>arma::pow(arma::diagvec(sigma),<sp/>2)<sp/>/<sp/>(data.n_cols<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Project<sp/>the<sp/>samples<sp/>to<sp/>the<sp/>principals.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>transformedData<sp/>=<sp/>arma::trans(eigvec)<sp/>*<sp/>centeredData;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1af6d960193bb5db37e51416e12bf720de" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1af6d960193bb5db37e51416e12bf720de" kindref="member">Epsilon</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>epsilon;<sp/>}</highlight></codeline>
<codeline lineno="78" refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1ab6a080993b32456443eced5df2f8b9b9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1ab6a080993b32456443eced5df2f8b9b9" kindref="member">Epsilon</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>epsilon;<sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1acb1f7d73ed8ec9121d6d0e45b560d8fa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1acb1f7d73ed8ec9121d6d0e45b560d8fa" kindref="member">Delta</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>delta;<sp/>}</highlight></codeline>
<codeline lineno="83" refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1a9fcb8a5caa7165245d5aa803b0a94a7c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1a9fcb8a5caa7165245d5aa803b0a94a7c" kindref="member">Delta</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>delta;<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>pca</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/pca/decomposition_policies/quic_svd_method.hpp"/>
  </compounddef>
</doxygen>
