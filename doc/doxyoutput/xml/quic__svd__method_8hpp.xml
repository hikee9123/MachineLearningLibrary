<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="quic__svd__method_8hpp" kind="file" language="C++">
    <compoundname>quic_svd_method.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="quic__svd_8hpp" local="no">mlpack/methods/quic_svd/quic_svd.hpp</includes>
    <incdepgraph>
      <node id="53477">
        <label>list</label>
      </node>
      <node id="53474">
        <label>atomic</label>
      </node>
      <node id="53464">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="53440">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="53476">
        <label>iomanip</label>
      </node>
      <node id="53426">
        <label>/home/aakash/mlpack/src/mlpack/methods/pca/decomposition_policies/quic_svd_method.hpp</label>
        <link refid="quic__svd__method_8hpp"/>
        <childnode refid="53427" relation="include">
        </childnode>
        <childnode refid="53484" relation="include">
        </childnode>
      </node>
      <node id="53486">
        <label>boost/heap/priority_queue.hpp</label>
      </node>
      <node id="53449">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="53450" relation="include">
        </childnode>
        <childnode refid="53452" relation="include">
        </childnode>
      </node>
      <node id="53432">
        <label>cstdint</label>
      </node>
      <node id="53441">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="53448">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="53471">
        <label>arma_config.hpp</label>
      </node>
      <node id="53461">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="53428">
        <label>cmath</label>
      </node>
      <node id="53447">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="53436">
        <label>stdexcept</label>
      </node>
      <node id="53456">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="53441" relation="include">
        </childnode>
        <childnode refid="53443" relation="include">
        </childnode>
        <childnode refid="53444" relation="include">
        </childnode>
        <childnode refid="53442" relation="include">
        </childnode>
      </node>
      <node id="53480">
        <label>string</label>
      </node>
      <node id="53468">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="53469" relation="include">
        </childnode>
        <childnode refid="53435" relation="include">
        </childnode>
      </node>
      <node id="53478">
        <label>map</label>
      </node>
      <node id="53430">
        <label>cfloat</label>
      </node>
      <node id="53460">
        <label>boost/variant.hpp</label>
      </node>
      <node id="53482">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="53444">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="53467">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="53468" relation="include">
        </childnode>
        <childnode refid="53444" relation="include">
        </childnode>
        <childnode refid="53451" relation="include">
        </childnode>
        <childnode refid="53469" relation="include">
        </childnode>
      </node>
      <node id="53457">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="53455">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="53441" relation="include">
        </childnode>
        <childnode refid="53443" relation="include">
        </childnode>
        <childnode refid="53444" relation="include">
        </childnode>
        <childnode refid="53442" relation="include">
        </childnode>
      </node>
      <node id="53458">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="53441" relation="include">
        </childnode>
        <childnode refid="53443" relation="include">
        </childnode>
        <childnode refid="53444" relation="include">
        </childnode>
        <childnode refid="53442" relation="include">
        </childnode>
      </node>
      <node id="53446">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="53466">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="53442" relation="include">
        </childnode>
        <childnode refid="53443" relation="include">
        </childnode>
        <childnode refid="53444" relation="include">
        </childnode>
        <childnode refid="53454" relation="include">
        </childnode>
        <childnode refid="53463" relation="include">
        </childnode>
      </node>
      <node id="53470">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="53471" relation="include">
        </childnode>
      </node>
      <node id="53472">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="53427">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="53428" relation="include">
        </childnode>
        <childnode refid="53429" relation="include">
        </childnode>
        <childnode refid="53430" relation="include">
        </childnode>
        <childnode refid="53431" relation="include">
        </childnode>
        <childnode refid="53432" relation="include">
        </childnode>
        <childnode refid="53433" relation="include">
        </childnode>
        <childnode refid="53434" relation="include">
        </childnode>
        <childnode refid="53435" relation="include">
        </childnode>
        <childnode refid="53436" relation="include">
        </childnode>
        <childnode refid="53437" relation="include">
        </childnode>
        <childnode refid="53438" relation="include">
        </childnode>
        <childnode refid="53439" relation="include">
        </childnode>
        <childnode refid="53440" relation="include">
        </childnode>
        <childnode refid="53441" relation="include">
        </childnode>
        <childnode refid="53442" relation="include">
        </childnode>
        <childnode refid="53443" relation="include">
        </childnode>
        <childnode refid="53444" relation="include">
        </childnode>
        <childnode refid="53445" relation="include">
        </childnode>
        <childnode refid="53446" relation="include">
        </childnode>
        <childnode refid="53447" relation="include">
        </childnode>
        <childnode refid="53448" relation="include">
        </childnode>
        <childnode refid="53449" relation="include">
        </childnode>
        <childnode refid="53453" relation="include">
        </childnode>
        <childnode refid="53454" relation="include">
        </childnode>
        <childnode refid="53455" relation="include">
        </childnode>
        <childnode refid="53456" relation="include">
        </childnode>
        <childnode refid="53457" relation="include">
        </childnode>
        <childnode refid="53458" relation="include">
        </childnode>
        <childnode refid="53459" relation="include">
        </childnode>
        <childnode refid="53465" relation="include">
        </childnode>
        <childnode refid="53466" relation="include">
        </childnode>
        <childnode refid="53463" relation="include">
        </childnode>
        <childnode refid="53467" relation="include">
        </childnode>
        <childnode refid="53470" relation="include">
        </childnode>
        <childnode refid="53472" relation="include">
        </childnode>
        <childnode refid="53473" relation="include">
        </childnode>
        <childnode refid="53482" relation="include">
        </childnode>
        <childnode refid="53483" relation="include">
        </childnode>
      </node>
      <node id="53433">
        <label>cstdio</label>
      </node>
      <node id="53437">
        <label>tuple</label>
      </node>
      <node id="53442">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="53459">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="53442" relation="include">
        </childnode>
        <childnode refid="53443" relation="include">
        </childnode>
        <childnode refid="53444" relation="include">
        </childnode>
        <childnode refid="53446" relation="include">
        </childnode>
        <childnode refid="53460" relation="include">
        </childnode>
        <childnode refid="53461" relation="include">
        </childnode>
        <childnode refid="53462" relation="include">
        </childnode>
        <childnode refid="53463" relation="include">
        </childnode>
      </node>
      <node id="53438">
        <label>utility</label>
      </node>
      <node id="53462">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="53453">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="53450">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="53451" relation="include">
        </childnode>
      </node>
      <node id="53473">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="53474" relation="include">
        </childnode>
        <childnode refid="53475" relation="include">
        </childnode>
        <childnode refid="53476" relation="include">
        </childnode>
        <childnode refid="53477" relation="include">
        </childnode>
        <childnode refid="53478" relation="include">
        </childnode>
        <childnode refid="53479" relation="include">
        </childnode>
        <childnode refid="53480" relation="include">
        </childnode>
        <childnode refid="53481" relation="include">
        </childnode>
      </node>
      <node id="53451">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="53465">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="53463" relation="include">
        </childnode>
        <childnode refid="53459" relation="include">
        </childnode>
        <childnode refid="53466" relation="include">
        </childnode>
      </node>
      <node id="53434">
        <label>cstdlib</label>
      </node>
      <node id="53429">
        <label>cctype</label>
      </node>
      <node id="53452">
        <label>unordered_map</label>
      </node>
      <node id="53431">
        <label>climits</label>
      </node>
      <node id="53479">
        <label>mutex</label>
      </node>
      <node id="53475">
        <label>chrono</label>
      </node>
      <node id="53483">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="53484">
        <label>mlpack/methods/quic_svd/quic_svd.hpp</label>
        <link refid="quic__svd_8hpp"/>
        <childnode refid="53427" relation="include">
        </childnode>
        <childnode refid="53485" relation="include">
        </childnode>
      </node>
      <node id="53481">
        <label>thread</label>
      </node>
      <node id="53469">
        <label>type_traits</label>
      </node>
      <node id="53445">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="53439">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="53463">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="53441" relation="include">
        </childnode>
        <childnode refid="53442" relation="include">
        </childnode>
        <childnode refid="53443" relation="include">
        </childnode>
        <childnode refid="53444" relation="include">
        </childnode>
        <childnode refid="53464" relation="include">
        </childnode>
      </node>
      <node id="53485">
        <label>mlpack/core/tree/cosine_tree/cosine_tree.hpp</label>
        <link refid="cosine__tree_8hpp"/>
        <childnode refid="53427" relation="include">
        </childnode>
        <childnode refid="53486" relation="include">
        </childnode>
      </node>
      <node id="53435">
        <label>cstring</label>
      </node>
      <node id="53454">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="53443">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1pca_1_1QUICSVDPolicy" prot="public">mlpack::pca::QUICSVDPolicy</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1pca">mlpack::pca</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Marcus Edel</para></simplesect>
Implementation of the QUIC-SVD policy for use in the Principal Components Analysis method.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="14"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_PCA_DECOMPOSITION_POLICIES_QUIC_SVD_METHOD_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_PCA_DECOMPOSITION_POLICIES_QUIC_SVD_METHOD_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="quic__svd_8hpp" kindref="compound">mlpack/methods/quic_svd/quic_svd.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">pca<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classmlpack_1_1pca_1_1QUICSVDPolicy" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1pca_1_1QUICSVDPolicy" kindref="compound">QUICSVDPolicy</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35" refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1a4bf967380d96a318ba10dc5b844d5e4c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1a4bf967380d96a318ba10dc5b844d5e4c" kindref="member">QUICSVDPolicy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon<sp/>=<sp/>0.03,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>0.1)<sp/>:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>epsilon(epsilon),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta(delta)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1a0ff241481a91b6d5cbf4279ba0e47fd6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1a0ff241481a91b6d5cbf4279ba0e47fd6" kindref="member">Apply</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>centeredData,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>transformedData,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>eigVal,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>eigvec,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>rank<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>matrix<sp/>will<sp/>store<sp/>the<sp/>right<sp/>singular<sp/>values;<sp/>we<sp/>do<sp/>not<sp/>need<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::mat<sp/>v,<sp/>sigma;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>singular<sp/>value<sp/>decomposition<sp/>using<sp/>the<sp/>QUIC-SVD<sp/>algorithm.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1svd_1_1QUIC__SVD" kindref="compound">svd::QUIC_SVD</ref><sp/>quicsvd(centeredData,<sp/>eigvec,<sp/>v,<sp/>sigma,<sp/>epsilon,<sp/>delta);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>must<sp/>square<sp/>the<sp/>singular<sp/>values<sp/>to<sp/>get<sp/>the<sp/>eigenvalues.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>addition<sp/>we<sp/>must<sp/>divide<sp/>by<sp/>the<sp/>number<sp/>of<sp/>points,<sp/>because<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>covariance<sp/>matrix<sp/>is<sp/>X<sp/>*<sp/>X&apos;<sp/>/<sp/>(N<sp/>-<sp/>1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>eigVal<sp/>=<sp/>arma::pow(arma::diagvec(sigma),<sp/>2)<sp/>/<sp/>(data.n_cols<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Project<sp/>the<sp/>samples<sp/>to<sp/>the<sp/>principals.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>transformedData<sp/>=<sp/>arma::trans(eigvec)<sp/>*<sp/>centeredData;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1af6d960193bb5db37e51416e12bf720de" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1af6d960193bb5db37e51416e12bf720de" kindref="member">Epsilon</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>epsilon;<sp/>}</highlight></codeline>
<codeline lineno="78" refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1ab6a080993b32456443eced5df2f8b9b9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1ab6a080993b32456443eced5df2f8b9b9" kindref="member">Epsilon</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>epsilon;<sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1acb1f7d73ed8ec9121d6d0e45b560d8fa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1acb1f7d73ed8ec9121d6d0e45b560d8fa" kindref="member">Delta</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>delta;<sp/>}</highlight></codeline>
<codeline lineno="83" refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1a9fcb8a5caa7165245d5aa803b0a94a7c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1pca_1_1QUICSVDPolicy_1a9fcb8a5caa7165245d5aa803b0a94a7c" kindref="member">Delta</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>delta;<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>pca</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/pca/decomposition_policies/quic_svd_method.hpp"/>
  </compounddef>
</doxygen>
