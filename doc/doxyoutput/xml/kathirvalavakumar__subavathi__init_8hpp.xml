<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="kathirvalavakumar__subavathi__init_8hpp" kind="file" language="C++">
    <compoundname>kathirvalavakumar_subavathi_init.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="init__rules__traits_8hpp" local="yes">init_rules_traits.hpp</includes>
    <includes refid="ann_2init__rules_2random__init_8hpp" local="yes">random_init.hpp</includes>
    <includes refid="logistic__function_8hpp" local="no">mlpack/methods/ann/activation_functions/logistic_function.hpp</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="28906">
        <label>list</label>
      </node>
      <node id="28903">
        <label>atomic</label>
      </node>
      <node id="28893">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="28869">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="28905">
        <label>iomanip</label>
      </node>
      <node id="28878">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="28879" relation="include">
        </childnode>
        <childnode refid="28881" relation="include">
        </childnode>
      </node>
      <node id="28861">
        <label>cstdint</label>
      </node>
      <node id="28870">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="28877">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="28900">
        <label>arma_config.hpp</label>
      </node>
      <node id="28890">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="28857">
        <label>cmath</label>
      </node>
      <node id="28876">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="28865">
        <label>stdexcept</label>
      </node>
      <node id="28885">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="28870" relation="include">
        </childnode>
        <childnode refid="28872" relation="include">
        </childnode>
        <childnode refid="28873" relation="include">
        </childnode>
        <childnode refid="28871" relation="include">
        </childnode>
      </node>
      <node id="28909">
        <label>string</label>
      </node>
      <node id="28897">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="28898" relation="include">
        </childnode>
        <childnode refid="28864" relation="include">
        </childnode>
      </node>
      <node id="28907">
        <label>map</label>
      </node>
      <node id="28859">
        <label>cfloat</label>
      </node>
      <node id="28889">
        <label>boost/variant.hpp</label>
      </node>
      <node id="28911">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="28873">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="28896">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="28897" relation="include">
        </childnode>
        <childnode refid="28873" relation="include">
        </childnode>
        <childnode refid="28880" relation="include">
        </childnode>
        <childnode refid="28898" relation="include">
        </childnode>
      </node>
      <node id="28914">
        <label>random_init.hpp</label>
        <link refid="ann_2init__rules_2random__init_8hpp"/>
        <childnode refid="28856" relation="include">
        </childnode>
      </node>
      <node id="28886">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="28884">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="28870" relation="include">
        </childnode>
        <childnode refid="28872" relation="include">
        </childnode>
        <childnode refid="28873" relation="include">
        </childnode>
        <childnode refid="28871" relation="include">
        </childnode>
      </node>
      <node id="28887">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="28870" relation="include">
        </childnode>
        <childnode refid="28872" relation="include">
        </childnode>
        <childnode refid="28873" relation="include">
        </childnode>
        <childnode refid="28871" relation="include">
        </childnode>
      </node>
      <node id="28875">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="28895">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="28871" relation="include">
        </childnode>
        <childnode refid="28872" relation="include">
        </childnode>
        <childnode refid="28873" relation="include">
        </childnode>
        <childnode refid="28883" relation="include">
        </childnode>
        <childnode refid="28892" relation="include">
        </childnode>
      </node>
      <node id="28899">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="28900" relation="include">
        </childnode>
      </node>
      <node id="28901">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="28856">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="28857" relation="include">
        </childnode>
        <childnode refid="28858" relation="include">
        </childnode>
        <childnode refid="28859" relation="include">
        </childnode>
        <childnode refid="28860" relation="include">
        </childnode>
        <childnode refid="28861" relation="include">
        </childnode>
        <childnode refid="28862" relation="include">
        </childnode>
        <childnode refid="28863" relation="include">
        </childnode>
        <childnode refid="28864" relation="include">
        </childnode>
        <childnode refid="28865" relation="include">
        </childnode>
        <childnode refid="28866" relation="include">
        </childnode>
        <childnode refid="28867" relation="include">
        </childnode>
        <childnode refid="28868" relation="include">
        </childnode>
        <childnode refid="28869" relation="include">
        </childnode>
        <childnode refid="28870" relation="include">
        </childnode>
        <childnode refid="28871" relation="include">
        </childnode>
        <childnode refid="28872" relation="include">
        </childnode>
        <childnode refid="28873" relation="include">
        </childnode>
        <childnode refid="28874" relation="include">
        </childnode>
        <childnode refid="28875" relation="include">
        </childnode>
        <childnode refid="28876" relation="include">
        </childnode>
        <childnode refid="28877" relation="include">
        </childnode>
        <childnode refid="28878" relation="include">
        </childnode>
        <childnode refid="28882" relation="include">
        </childnode>
        <childnode refid="28883" relation="include">
        </childnode>
        <childnode refid="28884" relation="include">
        </childnode>
        <childnode refid="28885" relation="include">
        </childnode>
        <childnode refid="28886" relation="include">
        </childnode>
        <childnode refid="28887" relation="include">
        </childnode>
        <childnode refid="28888" relation="include">
        </childnode>
        <childnode refid="28894" relation="include">
        </childnode>
        <childnode refid="28895" relation="include">
        </childnode>
        <childnode refid="28892" relation="include">
        </childnode>
        <childnode refid="28896" relation="include">
        </childnode>
        <childnode refid="28899" relation="include">
        </childnode>
        <childnode refid="28901" relation="include">
        </childnode>
        <childnode refid="28902" relation="include">
        </childnode>
        <childnode refid="28911" relation="include">
        </childnode>
        <childnode refid="28912" relation="include">
        </childnode>
      </node>
      <node id="28862">
        <label>cstdio</label>
      </node>
      <node id="28866">
        <label>tuple</label>
      </node>
      <node id="28871">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="28888">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="28871" relation="include">
        </childnode>
        <childnode refid="28872" relation="include">
        </childnode>
        <childnode refid="28873" relation="include">
        </childnode>
        <childnode refid="28875" relation="include">
        </childnode>
        <childnode refid="28889" relation="include">
        </childnode>
        <childnode refid="28890" relation="include">
        </childnode>
        <childnode refid="28891" relation="include">
        </childnode>
        <childnode refid="28892" relation="include">
        </childnode>
      </node>
      <node id="28867">
        <label>utility</label>
      </node>
      <node id="28891">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="28882">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="28913">
        <label>init_rules_traits.hpp</label>
        <link refid="init__rules__traits_8hpp"/>
      </node>
      <node id="28879">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="28880" relation="include">
        </childnode>
      </node>
      <node id="28902">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="28903" relation="include">
        </childnode>
        <childnode refid="28904" relation="include">
        </childnode>
        <childnode refid="28905" relation="include">
        </childnode>
        <childnode refid="28906" relation="include">
        </childnode>
        <childnode refid="28907" relation="include">
        </childnode>
        <childnode refid="28908" relation="include">
        </childnode>
        <childnode refid="28909" relation="include">
        </childnode>
        <childnode refid="28910" relation="include">
        </childnode>
      </node>
      <node id="28880">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="28894">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="28892" relation="include">
        </childnode>
        <childnode refid="28888" relation="include">
        </childnode>
        <childnode refid="28895" relation="include">
        </childnode>
      </node>
      <node id="28863">
        <label>cstdlib</label>
      </node>
      <node id="28858">
        <label>cctype</label>
      </node>
      <node id="28916">
        <label>iostream</label>
      </node>
      <node id="28881">
        <label>unordered_map</label>
      </node>
      <node id="28860">
        <label>climits</label>
      </node>
      <node id="28908">
        <label>mutex</label>
      </node>
      <node id="28904">
        <label>chrono</label>
      </node>
      <node id="28912">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="28855">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/init_rules/kathirvalavakumar_subavathi_init.hpp</label>
        <link refid="kathirvalavakumar__subavathi__init_8hpp"/>
        <childnode refid="28856" relation="include">
        </childnode>
        <childnode refid="28913" relation="include">
        </childnode>
        <childnode refid="28914" relation="include">
        </childnode>
        <childnode refid="28915" relation="include">
        </childnode>
        <childnode refid="28916" relation="include">
        </childnode>
      </node>
      <node id="28910">
        <label>thread</label>
      </node>
      <node id="28898">
        <label>type_traits</label>
      </node>
      <node id="28874">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="28868">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="28892">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="28870" relation="include">
        </childnode>
        <childnode refid="28871" relation="include">
        </childnode>
        <childnode refid="28872" relation="include">
        </childnode>
        <childnode refid="28873" relation="include">
        </childnode>
        <childnode refid="28893" relation="include">
        </childnode>
      </node>
      <node id="28915">
        <label>mlpack/methods/ann/activation_functions/logistic_function.hpp</label>
        <link refid="logistic__function_8hpp"/>
        <childnode refid="28856" relation="include">
        </childnode>
      </node>
      <node id="28864">
        <label>cstring</label>
      </node>
      <node id="28883">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="28872">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1ann_1_1InitTraits_3_01KathirvalavakumarSubavathiInitialization_01_4" prot="public">mlpack::ann::InitTraits&lt; KathirvalavakumarSubavathiInitialization &gt;</innerclass>
    <innerclass refid="classmlpack_1_1ann_1_1KathirvalavakumarSubavathiInitialization" prot="public">mlpack::ann::KathirvalavakumarSubavathiInitialization</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1ann">mlpack::ann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Marcus Edel</para></simplesect>
Definition and implementation of the initialization method by T. Kathirvalavakumar and S. Subavathi. This initialization rule is based on sensitivity analysis using cauchy’s inequality.</para><para>For more information, see the following paper.</para><para><programlisting><codeline><highlight class="normal">@inproceedings{KathirvalavakumarJILSA2011,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>title={A<sp/>New<sp/>Weight<sp/>Initialization<sp/>Method<sp/>Using<sp/>Cauchy’s<sp/>Inequality<sp/>Based</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>on<sp/>Sensitivity<sp/>Analysis},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>author={T.<sp/>Kathirvalavakumar<sp/>and<sp/>S.<sp/>Subavathi},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>booktitle={Journal<sp/>of<sp/>Intelligent<sp/>Learning<sp/>Systems<sp/>and<sp/>Applications,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Vol.<sp/>3<sp/>No.<sp/>4},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>year={2011}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="27"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_ANN_INIT_RULES_KATHIRVALAVAKUMAR_SUBAVATHI_INIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_ANN_INIT_RULES_KATHIRVALAVAKUMAR_SUBAVATHI_INIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="init__rules__traits_8hpp" kindref="compound">init_rules_traits.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ann_2init__rules_2random__init_8hpp" kindref="compound">random_init.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="logistic__function_8hpp" kindref="compound">mlpack/methods/ann/activation_functions/logistic_function.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ann<sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classmlpack_1_1ann_1_1KathirvalavakumarSubavathiInitialization" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1ann_1_1KathirvalavakumarSubavathiInitialization" kindref="compound">KathirvalavakumarSubavathiInitialization</ref></highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="70" refid="classmlpack_1_1ann_1_1KathirvalavakumarSubavathiInitialization_1aaf0e7a11a0a428552525a83382e45148" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1ann_1_1KathirvalavakumarSubavathiInitialization_1aaf0e7a11a0a428552525a83382e45148" kindref="member">KathirvalavakumarSubavathiInitialization</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>data,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s)<sp/>:<sp/>s(s)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>dataSum<sp/>=<sp/>arma::sum(data<sp/>%<sp/>data);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="85" refid="classmlpack_1_1ann_1_1KathirvalavakumarSubavathiInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1KathirvalavakumarSubavathiInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" kindref="member">Initialize</ref>(arma::Mat&lt;eT&gt;&amp;<sp/>W,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Row&lt;eT&gt;<sp/>b<sp/>=<sp/>s<sp/>*<sp/>arma::sqrt(3<sp/>/<sp/>(rows<sp/>*<sp/>dataSum));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta<sp/>=<sp/>b.min();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1RandomInitialization" kindref="compound">RandomInitialization</ref><sp/>randomInit(-theta,<sp/>theta);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>randomInit.<ref refid="classmlpack_1_1ann_1_1RandomInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" kindref="member">Initialize</ref>(W,<sp/>rows,<sp/>cols);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="100" refid="classmlpack_1_1ann_1_1KathirvalavakumarSubavathiInitialization_1af2d770912321b8b9ca7b03ab98f735c0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1KathirvalavakumarSubavathiInitialization_1af2d770912321b8b9ca7b03ab98f735c0" kindref="member">Initialize</ref>(arma::Mat&lt;eT&gt;&amp;<sp/>W)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Row&lt;eT&gt;<sp/>b<sp/>=<sp/>s<sp/>*<sp/>arma::sqrt(3<sp/>/<sp/>(W.n_rows<sp/>*<sp/>dataSum));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta<sp/>=<sp/>b.min();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1RandomInitialization" kindref="compound">RandomInitialization</ref><sp/>randomInit(-theta,<sp/>theta);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>randomInit.<ref refid="classmlpack_1_1ann_1_1RandomInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" kindref="member">Initialize</ref>(W);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="118" refid="classmlpack_1_1ann_1_1KathirvalavakumarSubavathiInitialization_1a40a2b6466bdba0f6aab4eb92b6e65934" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1KathirvalavakumarSubavathiInitialization_1a40a2b6466bdba0f6aab4eb92b6e65934" kindref="member">Initialize</ref>(arma::Cube&lt;eT&gt;&amp;<sp/>W,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slices)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(W.is_empty())</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>W.set_size(rows,<sp/>cols,<sp/>slices);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>slices;<sp/>++i)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1KathirvalavakumarSubavathiInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" kindref="member">Initialize</ref>(W.slice(i),<sp/>rows,<sp/>cols);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="137" refid="classmlpack_1_1ann_1_1KathirvalavakumarSubavathiInitialization_1ae2f3e6d570824a160b687ff9f734f83c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1KathirvalavakumarSubavathiInitialization_1ae2f3e6d570824a160b687ff9f734f83c" kindref="member">Initialize</ref>(arma::Cube&lt;eT&gt;&amp;<sp/>W)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(W.is_empty())</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Log::Fatal<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>initialize<sp/>an<sp/>empty<sp/>cube.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>W.n_slices;<sp/>++i)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1KathirvalavakumarSubavathiInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" kindref="member">Initialize</ref>(W.slice(i));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>arma::rowvec<sp/>dataSum;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>KathirvalavakumarSubavathiInitialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="156" refid="classmlpack_1_1ann_1_1InitTraits_3_01KathirvalavakumarSubavathiInitialization_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1ann_1_1InitTraits" kindref="compound">InitTraits</ref>&lt;<ref refid="classmlpack_1_1ann_1_1KathirvalavakumarSubavathiInitialization" kindref="compound">KathirvalavakumarSubavathiInitialization</ref>&gt;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="161" refid="classmlpack_1_1ann_1_1InitTraits_3_01KathirvalavakumarSubavathiInitialization_01_4_1a6aadf10c95af2a5f0ab17196f682ffd4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UseLayer<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/init_rules/kathirvalavakumar_subavathi_init.hpp"/>
  </compounddef>
</doxygen>
