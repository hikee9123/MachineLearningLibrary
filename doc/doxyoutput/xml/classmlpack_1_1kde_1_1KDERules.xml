<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1kde_1_1KDERules" kind="class" language="C++" prot="public">
    <compoundname>mlpack::kde::KDERules</compoundname>
    <includes refid="kde__rules_8hpp" local="no">kde_rules.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename MetricType</type>
      </param>
      <param>
        <type>typename KernelType</type>
      </param>
      <param>
        <type>typename TreeType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmlpack_1_1kde_1_1KDERules_1ab5f079db10d0a6813eefeb1115e894cb" prot="public" static="no">
        <type><ref refid="classmlpack_1_1tree_1_1TraversalInfo" kindref="compound">tree::TraversalInfo</ref>&lt; TreeType &gt;</type>
        <definition>typedef tree::TraversalInfo&lt;TreeType&gt; TraversalInfoType</definition>
        <argsstring></argsstring>
        <name>TraversalInfoType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="82" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDERules_1a1970dec131f956c1957036d1064bb33e" prot="private" static="no" mutable="no">
        <type>const double</type>
        <definition>const double absError</definition>
        <argsstring></argsstring>
        <name>absError</name>
        <briefdescription>
<para>Absolute error tolerance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="122" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDERules_1a78cfd4687a1e41db8c7080ff4bd54e87" prot="private" static="no" mutable="no">
        <type>const double</type>
        <definition>const double absErrorTol</definition>
        <argsstring></argsstring>
        <name>absErrorTol</name>
        <briefdescription>
<para>Absolute error tolerance available for each reference point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="166" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDERules_1a44d2766dfd7babcdcfb89dac519eac82" prot="private" static="no" mutable="no">
        <type>arma::vec</type>
        <definition>arma::vec accumError</definition>
        <argsstring></argsstring>
        <name>accumError</name>
        <briefdescription>
<para>Accumulated not used error tolerance for each query point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="156" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDERules_1ac481f5f5a98defd9f6e2fa6a0662eff0" prot="private" static="no" mutable="no">
        <type>arma::vec</type>
        <definition>arma::vec accumMCAlpha</definition>
        <argsstring></argsstring>
        <name>accumMCAlpha</name>
        <briefdescription>
<para>Accumulated not used MC alpha values for each query point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="153" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDERules_1a06e4c7b3f942c628e2b3584e7ba02cbf" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t baseCases</definition>
        <argsstring></argsstring>
        <name>baseCases</name>
        <briefdescription>
<para>The number of base cases. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="178" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDERules_1a5c50874087b9893fe805e339af1a21de" prot="private" static="no" mutable="no">
        <type>arma::vec &amp;</type>
        <definition>arma::vec&amp; densities</definition>
        <argsstring></argsstring>
        <name>densities</name>
        <briefdescription>
<para>Density values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="119" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDERules_1a318eaa8792a6ae8e575dc96adda6966b" prot="private" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t initialSampleSize</definition>
        <argsstring></argsstring>
        <name>initialSampleSize</name>
        <briefdescription>
<para>Initial sample size for Monte Carlo estimations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="132" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDERules_1ae043832173634f697df2b49d6e7edb36" prot="private" static="no" mutable="no">
        <type>KernelType &amp;</type>
        <definition>KernelType&amp; kernel</definition>
        <argsstring></argsstring>
        <name>kernel</name>
        <briefdescription>
<para>Instantiated kernel. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="147" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDERules_1a89e87b0301224505aa09b8c85738a364" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t lastQueryIndex</definition>
        <argsstring></argsstring>
        <name>lastQueryIndex</name>
        <briefdescription>
<para>The last query index. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="169" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDERules_1ad83397af4d986c7afc78e3d1f31f9276" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t lastReferenceIndex</definition>
        <argsstring></argsstring>
        <name>lastReferenceIndex</name>
        <briefdescription>
<para>The last reference index. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="172" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDERules_1a7ecc424fd660d36039f30ccd2cd794f8" prot="private" static="no" mutable="no">
        <type>const double</type>
        <definition>const double mcAccessCoef</definition>
        <argsstring></argsstring>
        <name>mcAccessCoef</name>
        <briefdescription>
<para>Coefficient to control how much larger does the amount of node descendants has to be compared to the initial sample size in order to be a candidate for Monte Carlo estimations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="137" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDERules_1a5282441a811f3272636dffa36583c113" prot="private" static="no" mutable="no">
        <type>const double</type>
        <definition>const double mcBeta</definition>
        <argsstring></argsstring>
        <name>mcBeta</name>
        <briefdescription>
<para>Significance level for relative error compliance for Monte Carlo estimations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="129" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDERules_1ab1d1079efca75b3380ef482dd6972cb7" prot="private" static="no" mutable="no">
        <type>const double</type>
        <definition>const double mcBreakCoef</definition>
        <argsstring></argsstring>
        <name>mcBreakCoef</name>
        <briefdescription>
<para>Coefficient to control what fraction of the amount of node&apos;s descendants is the limit before Monte Carlo estimation recurses. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="141" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDERules_1abc0ef94d224e16bddfe3ded53dfb5133" prot="private" static="no" mutable="no">
        <type>MetricType &amp;</type>
        <definition>MetricType&amp; metric</definition>
        <argsstring></argsstring>
        <name>metric</name>
        <briefdescription>
<para>Instantiated metric. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="144" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDERules_1a53d5fd25f46a1d971ec023f48a153b20" prot="private" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool monteCarlo</definition>
        <argsstring></argsstring>
        <name>monteCarlo</name>
        <briefdescription>
<para>Whether Monte Carlo estimations are going to be applied. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="150" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDERules_1ad585c8d02ad487ba4559c4fefdf121cc" prot="private" static="no" mutable="no">
        <type>const arma::mat &amp;</type>
        <definition>const arma::mat&amp; querySet</definition>
        <argsstring></argsstring>
        <name>querySet</name>
        <briefdescription>
<para>The query set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="116" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDERules_1a620a93f66bf649d3ac7143ee6e5af010" prot="private" static="no" mutable="no">
        <type>const arma::mat &amp;</type>
        <definition>const arma::mat&amp; referenceSet</definition>
        <argsstring></argsstring>
        <name>referenceSet</name>
        <briefdescription>
<para>The reference set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="113" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDERules_1a37edf70ea8d2e86624456991d4787a5b" prot="private" static="no" mutable="no">
        <type>const double</type>
        <definition>const double relError</definition>
        <argsstring></argsstring>
        <name>relError</name>
        <briefdescription>
<para>Relatve error tolerance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="125" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDERules_1ad7d8632ae20ad90d6671caaa4b1fe6de" prot="private" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool sameSet</definition>
        <argsstring></argsstring>
        <name>sameSet</name>
        <briefdescription>
<para>Whether reference and query sets are the same. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="159" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDERules_1aecc3c9a30f1be1fe8b602374bde73e7b" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t scores</definition>
        <argsstring></argsstring>
        <name>scores</name>
        <briefdescription>
<para>The number of scores. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="181" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDERules_1aa987143b3965542c77c85c8212abedbe" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1kde_1_1KDERules_1ab5f079db10d0a6813eefeb1115e894cb" kindref="member">TraversalInfoType</ref></type>
        <definition>TraversalInfoType traversalInfo</definition>
        <argsstring></argsstring>
        <name>traversalInfo</name>
        <briefdescription>
<para>Traversal information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="175" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDERules_1a612c9b9ff37f48a5960ae27867e1f32d" prot="private" static="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool kernelIsGaussian</definition>
        <argsstring></argsstring>
        <name>kernelIsGaussian</name>
        <initializer>=
      std::is_same&lt;KernelType, <ref refid="classmlpack_1_1kernel_1_1GaussianKernel" kindref="compound">kernel::GaussianKernel</ref>&gt;::value</initializer>
        <briefdescription>
<para>Whether the kernel used for the rule is the Gaussian Kernel. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="162" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDERules_1a6049807a617e88381ec447a426a93275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDERules</definition>
        <argsstring>(const arma::mat &amp;referenceSet, const arma::mat &amp;querySet, arma::vec &amp;densities, const double relError, const double absError, const double mcProb, const size_t initialSampleSize, const double mcAccessCoef, const double mcBreakCoef, MetricType &amp;metric, KernelType &amp;kernel, const bool monteCarlo, const bool sameSet)</argsstring>
        <name>KDERules</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>referenceSet</declname>
        </param>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>querySet</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>densities</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>relError</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>absError</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>mcProb</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>initialSampleSize</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>mcAccessCoef</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>mcBreakCoef</declname>
        </param>
        <param>
          <type>MetricType &amp;</type>
          <declname>metric</declname>
        </param>
        <param>
          <type>KernelType &amp;</type>
          <declname>kernel</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>monteCarlo</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>sameSet</declname>
        </param>
        <briefdescription>
<para>Construct <ref refid="classmlpack_1_1kde_1_1KDERules" kindref="compound">KDERules</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>referenceSet</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference set data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>querySet</parametername>
</parameternamelist>
<parameterdescription>
<para>Query set data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>densities</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector where estimations will be written. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>relError</parametername>
</parameternamelist>
<parameterdescription>
<para>Relative error tolerance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>absError</parametername>
</parameternamelist>
<parameterdescription>
<para>Absolute error tolerance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mcProb</parametername>
</parameternamelist>
<parameterdescription>
<para>Probability of relative error compliance for Monte Carlo estimations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialSampleSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial size of the Monte Carlo samples. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mcAccessCoef</parametername>
</parameternamelist>
<parameterdescription>
<para>Access coefficient for Monte Carlo estimations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mcBreakCoef</parametername>
</parameternamelist>
<parameterdescription>
<para>Break coefficient for Monte Carlo estimations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metric</parametername>
</parameternamelist>
<parameterdescription>
<para>Instantiated metric. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kernel</parametername>
</parameternamelist>
<parameterdescription>
<para>Instantiated kernel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>monteCarlo</parametername>
</parameternamelist>
<parameterdescription>
<para>If true Monte Carlo estimations will be applied when possible. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sameSet</parametername>
</parameternamelist>
<parameterdescription>
<para>True if query and reference sets are the same (monochromatic evaluation). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDERules_1abac50f780bb5e1bc12dd0d16d850cacc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double BaseCase</definition>
        <argsstring>(const size_t queryIndex, const size_t referenceIndex)</argsstring>
        <name>BaseCase</name>
        <param>
          <type>const size_t</type>
          <declname>queryIndex</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>referenceIndex</declname>
        </param>
        <briefdescription>
<para>Base Case. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="64" column="1"/>
        <referencedby refid="classmlpack_1_1kde_1_1KDECleanRules_1a9b4a8d3068b51fba5a4631ef16d2d80b" compoundref="kde__rules_8hpp" startline="193" endline="193">KDECleanRules&lt; TreeType &gt;::KDECleanRules</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDERules_1a3f4bd5d0aa64ea090796725f7755287d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t BaseCases</definition>
        <argsstring>() const</argsstring>
        <name>BaseCases</name>
        <briefdescription>
<para>Get the number of base cases. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="91" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDERules_1a469f61784f9cce8f2574c23823405768" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t MinimumBaseCases</definition>
        <argsstring>() const</argsstring>
        <name>MinimumBaseCases</name>
        <briefdescription>
<para>Get the minimum number of base cases we need to perform to have acceptable results. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="98" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDERules_1ae0ad46f30e80aadc5bc476d46886540f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Rescore</definition>
        <argsstring>(const size_t queryIndex, TreeType &amp;referenceNode, const double oldScore) const</argsstring>
        <name>Rescore</name>
        <param>
          <type>const size_t</type>
          <declname>queryIndex</declname>
        </param>
        <param>
          <type>TreeType &amp;</type>
          <declname>referenceNode</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>oldScore</declname>
        </param>
        <briefdescription>
<para>SingleTree Score. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDERules_1a536e5a7cbce35b9be7443775d32e11f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Rescore</definition>
        <argsstring>(TreeType &amp;queryNode, TreeType &amp;referenceNode, const double oldScore) const</argsstring>
        <name>Rescore</name>
        <param>
          <type>TreeType &amp;</type>
          <declname>queryNode</declname>
        </param>
        <param>
          <type>TreeType &amp;</type>
          <declname>referenceNode</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>oldScore</declname>
        </param>
        <briefdescription>
<para>Dual-Tree Rescore. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDERules_1a53d373b7aeee359b0e686f823c602b1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Score</definition>
        <argsstring>(const size_t queryIndex, TreeType &amp;referenceNode)</argsstring>
        <name>Score</name>
        <param>
          <type>const size_t</type>
          <declname>queryIndex</declname>
        </param>
        <param>
          <type>TreeType &amp;</type>
          <declname>referenceNode</declname>
        </param>
        <briefdescription>
<para>SingleTree Rescore. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="67" column="1"/>
        <referencedby refid="classmlpack_1_1kde_1_1KDECleanRules_1a9b4a8d3068b51fba5a4631ef16d2d80b" compoundref="kde__rules_8hpp" startline="193" endline="193">KDECleanRules&lt; TreeType &gt;::KDECleanRules</referencedby>
        <referencedby refid="classmlpack_1_1kde_1_1KDECleanRules_1a12a9cd8472681e4db55db7d8600e16f7" compoundref="kde__rules_8hpp" startline="202" endline="204">KDECleanRules&lt; TreeType &gt;::Rescore</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDERules_1a05b142945ef94221b628a75961f48b02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Score</definition>
        <argsstring>(TreeType &amp;queryNode, TreeType &amp;referenceNode)</argsstring>
        <name>Score</name>
        <param>
          <type>TreeType &amp;</type>
          <declname>queryNode</declname>
        </param>
        <param>
          <type>TreeType &amp;</type>
          <declname>referenceNode</declname>
        </param>
        <briefdescription>
<para>Dual-Tree Score. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDERules_1a4d1e40c0bf406280a237ca1b487e3c62" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Scores</definition>
        <argsstring>() const</argsstring>
        <name>Scores</name>
        <briefdescription>
<para>Get the number of scores. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="94" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDERules_1ab5c6f4ae7c3b71b808403a7b7454f26f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classmlpack_1_1kde_1_1KDERules_1ab5f079db10d0a6813eefeb1115e894cb" kindref="member">TraversalInfoType</ref> &amp;</type>
        <definition>const TraversalInfoType&amp; TraversalInfo</definition>
        <argsstring>() const</argsstring>
        <name>TraversalInfo</name>
        <briefdescription>
<para>Get traversal information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="85" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDERules_1a4027bb90e756a4520d55978459c7f83e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1kde_1_1KDERules_1ab5f079db10d0a6813eefeb1115e894cb" kindref="member">TraversalInfoType</ref> &amp;</type>
        <definition>TraversalInfoType&amp; TraversalInfo</definition>
        <argsstring>()</argsstring>
        <name>TraversalInfo</name>
        <briefdescription>
<para>Modify traversal information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="88" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="88" bodyend="88"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDERules_1a15608e83f6160315e40f625195886ea2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double CalculateAlpha</definition>
        <argsstring>(TreeType *node)</argsstring>
        <name>CalculateAlpha</name>
        <param>
          <type>TreeType *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Calculate depth alpha for some node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDERules_1ae0290362a1953ed0ff9e34534c6c5f86" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double EvaluateKernel</definition>
        <argsstring>(const size_t queryIndex, const size_t referenceIndex) const</argsstring>
        <name>EvaluateKernel</name>
        <param>
          <type>const size_t</type>
          <declname>queryIndex</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>referenceIndex</declname>
        </param>
        <briefdescription>
<para>Evaluate kernel value of 2 points given their indexes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDERules_1ac30c10904fdded1681c0002f3c5cb125" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double EvaluateKernel</definition>
        <argsstring>(const arma::vec &amp;query, const arma::vec &amp;reference) const</argsstring>
        <name>EvaluateKernel</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>reference</declname>
        </param>
        <briefdescription>
<para>Evaluate kernel value of 2 points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="106" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A dual-tree traversal Rules class for kernel density estimation. </para>    </briefdescription>
    <detaileddescription>
<para>This contains the <ref refid="classmlpack_1_1kde_1_1KDERules_1a53d373b7aeee359b0e686f823c602b1c" kindref="member">Score()</ref> and <ref refid="classmlpack_1_1kde_1_1KDERules_1abac50f780bb5e1bc12dd0d16d850cacc" kindref="member">BaseCase()</ref> implementations. </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" line="27" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_rules.hpp" bodystart="26" bodyend="182"/>
    <listofallmembers>
      <member refid="classmlpack_1_1kde_1_1KDERules_1a1970dec131f956c1957036d1064bb33e" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>absError</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1a78cfd4687a1e41db8c7080ff4bd54e87" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>absErrorTol</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1a44d2766dfd7babcdcfb89dac519eac82" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>accumError</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1ac481f5f5a98defd9f6e2fa6a0662eff0" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>accumMCAlpha</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1abac50f780bb5e1bc12dd0d16d850cacc" prot="public" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>BaseCase</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1a06e4c7b3f942c628e2b3584e7ba02cbf" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>baseCases</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1a3f4bd5d0aa64ea090796725f7755287d" prot="public" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>BaseCases</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1a15608e83f6160315e40f625195886ea2" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>CalculateAlpha</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1a5c50874087b9893fe805e339af1a21de" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>densities</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1ae0290362a1953ed0ff9e34534c6c5f86" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>EvaluateKernel</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1ac30c10904fdded1681c0002f3c5cb125" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>EvaluateKernel</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1a318eaa8792a6ae8e575dc96adda6966b" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>initialSampleSize</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1a6049807a617e88381ec447a426a93275" prot="public" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>KDERules</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1ae043832173634f697df2b49d6e7edb36" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>kernel</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1a612c9b9ff37f48a5960ae27867e1f32d" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>kernelIsGaussian</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1a89e87b0301224505aa09b8c85738a364" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>lastQueryIndex</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1ad83397af4d986c7afc78e3d1f31f9276" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>lastReferenceIndex</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1a7ecc424fd660d36039f30ccd2cd794f8" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>mcAccessCoef</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1a5282441a811f3272636dffa36583c113" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>mcBeta</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1ab1d1079efca75b3380ef482dd6972cb7" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>mcBreakCoef</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1abc0ef94d224e16bddfe3ded53dfb5133" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>metric</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1a469f61784f9cce8f2574c23823405768" prot="public" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>MinimumBaseCases</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1a53d5fd25f46a1d971ec023f48a153b20" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>monteCarlo</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1ad585c8d02ad487ba4559c4fefdf121cc" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>querySet</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1a620a93f66bf649d3ac7143ee6e5af010" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>referenceSet</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1a37edf70ea8d2e86624456991d4787a5b" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>relError</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1ae0ad46f30e80aadc5bc476d46886540f" prot="public" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>Rescore</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1a536e5a7cbce35b9be7443775d32e11f5" prot="public" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>Rescore</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1ad7d8632ae20ad90d6671caaa4b1fe6de" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>sameSet</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1a53d373b7aeee359b0e686f823c602b1c" prot="public" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>Score</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1a05b142945ef94221b628a75961f48b02" prot="public" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>Score</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1aecc3c9a30f1be1fe8b602374bde73e7b" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>scores</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1a4d1e40c0bf406280a237ca1b487e3c62" prot="public" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>Scores</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1aa987143b3965542c77c85c8212abedbe" prot="private" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>traversalInfo</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1ab5c6f4ae7c3b71b808403a7b7454f26f" prot="public" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>TraversalInfo</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1a4027bb90e756a4520d55978459c7f83e" prot="public" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>TraversalInfo</name></member>
      <member refid="classmlpack_1_1kde_1_1KDERules_1ab5f079db10d0a6813eefeb1115e894cb" prot="public" virt="non-virtual"><scope>mlpack::kde::KDERules</scope><name>TraversalInfoType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
