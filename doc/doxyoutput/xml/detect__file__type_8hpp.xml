<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="detect__file__type_8hpp" kind="file" language="C++">
    <compoundname>detect_file_type.hpp</compoundname>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1data">mlpack::data</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Conrad Sanderson </para></simplesect>
<simplesect kind="author"><para>Ryan Curtin</para></simplesect>
Functionality to guess the type of a file by inspecting it. Parts of the implementation are adapted from the Armadillo sources and relicensed to be a part of mlpack with permission from Conrad.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="15"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_DATA_DETECT_FILE_TYPE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_DATA_DETECT_FILE_TYPE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">data<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">std::string<sp/><ref refid="namespacemlpack_1_1data_1a898633566d45ba664faacc815915e416" kindref="member">GetStringType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::file_type&amp;<sp/>type);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">arma::file_type<sp/><ref refid="namespacemlpack_1_1data_1aa2f0956c373bd666d19e70551fecaf90" kindref="member">GuessFileType</ref>(std::istream&amp;<sp/>f);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">arma::file_type<sp/><ref refid="namespacemlpack_1_1data_1aa47724fc0e8e354c6ca18818d81705a3" kindref="member">AutoDetect</ref>(std::fstream&amp;<sp/>stream,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">arma::file_type<sp/><ref refid="namespacemlpack_1_1data_1ac3115b81a148283970b530603b3f2aaa" kindref="member">DetectFromExtension</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/data/detect_file_type.hpp"/>
  </compounddef>
</doxygen>
