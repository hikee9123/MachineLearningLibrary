<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="mean__absolute__percentage__error_8hpp" kind="file" language="C++">
    <compoundname>mean_absolute_percentage_error.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="yes">mean_absolute_percentage_error_impl.hpp</includes>
    <incdepgraph>
      <node id="39818">
        <label>list</label>
      </node>
      <node id="39815">
        <label>atomic</label>
      </node>
      <node id="39805">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="39781">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="39817">
        <label>iomanip</label>
      </node>
      <node id="39790">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="39791" relation="include">
        </childnode>
        <childnode refid="39793" relation="include">
        </childnode>
      </node>
      <node id="39773">
        <label>cstdint</label>
      </node>
      <node id="39782">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="39789">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="39812">
        <label>arma_config.hpp</label>
      </node>
      <node id="39802">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="39769">
        <label>cmath</label>
      </node>
      <node id="39788">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="39777">
        <label>stdexcept</label>
      </node>
      <node id="39797">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="39782" relation="include">
        </childnode>
        <childnode refid="39784" relation="include">
        </childnode>
        <childnode refid="39785" relation="include">
        </childnode>
        <childnode refid="39783" relation="include">
        </childnode>
      </node>
      <node id="39821">
        <label>string</label>
      </node>
      <node id="39809">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="39810" relation="include">
        </childnode>
        <childnode refid="39776" relation="include">
        </childnode>
      </node>
      <node id="39819">
        <label>map</label>
      </node>
      <node id="39771">
        <label>cfloat</label>
      </node>
      <node id="39801">
        <label>boost/variant.hpp</label>
      </node>
      <node id="39823">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="39785">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="39808">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="39809" relation="include">
        </childnode>
        <childnode refid="39785" relation="include">
        </childnode>
        <childnode refid="39792" relation="include">
        </childnode>
        <childnode refid="39810" relation="include">
        </childnode>
      </node>
      <node id="39798">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="39796">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="39782" relation="include">
        </childnode>
        <childnode refid="39784" relation="include">
        </childnode>
        <childnode refid="39785" relation="include">
        </childnode>
        <childnode refid="39783" relation="include">
        </childnode>
      </node>
      <node id="39799">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="39782" relation="include">
        </childnode>
        <childnode refid="39784" relation="include">
        </childnode>
        <childnode refid="39785" relation="include">
        </childnode>
        <childnode refid="39783" relation="include">
        </childnode>
      </node>
      <node id="39787">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="39807">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="39783" relation="include">
        </childnode>
        <childnode refid="39784" relation="include">
        </childnode>
        <childnode refid="39785" relation="include">
        </childnode>
        <childnode refid="39795" relation="include">
        </childnode>
        <childnode refid="39804" relation="include">
        </childnode>
      </node>
      <node id="39811">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="39812" relation="include">
        </childnode>
      </node>
      <node id="39813">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="39768">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="39769" relation="include">
        </childnode>
        <childnode refid="39770" relation="include">
        </childnode>
        <childnode refid="39771" relation="include">
        </childnode>
        <childnode refid="39772" relation="include">
        </childnode>
        <childnode refid="39773" relation="include">
        </childnode>
        <childnode refid="39774" relation="include">
        </childnode>
        <childnode refid="39775" relation="include">
        </childnode>
        <childnode refid="39776" relation="include">
        </childnode>
        <childnode refid="39777" relation="include">
        </childnode>
        <childnode refid="39778" relation="include">
        </childnode>
        <childnode refid="39779" relation="include">
        </childnode>
        <childnode refid="39780" relation="include">
        </childnode>
        <childnode refid="39781" relation="include">
        </childnode>
        <childnode refid="39782" relation="include">
        </childnode>
        <childnode refid="39783" relation="include">
        </childnode>
        <childnode refid="39784" relation="include">
        </childnode>
        <childnode refid="39785" relation="include">
        </childnode>
        <childnode refid="39786" relation="include">
        </childnode>
        <childnode refid="39787" relation="include">
        </childnode>
        <childnode refid="39788" relation="include">
        </childnode>
        <childnode refid="39789" relation="include">
        </childnode>
        <childnode refid="39790" relation="include">
        </childnode>
        <childnode refid="39794" relation="include">
        </childnode>
        <childnode refid="39795" relation="include">
        </childnode>
        <childnode refid="39796" relation="include">
        </childnode>
        <childnode refid="39797" relation="include">
        </childnode>
        <childnode refid="39798" relation="include">
        </childnode>
        <childnode refid="39799" relation="include">
        </childnode>
        <childnode refid="39800" relation="include">
        </childnode>
        <childnode refid="39806" relation="include">
        </childnode>
        <childnode refid="39807" relation="include">
        </childnode>
        <childnode refid="39804" relation="include">
        </childnode>
        <childnode refid="39808" relation="include">
        </childnode>
        <childnode refid="39811" relation="include">
        </childnode>
        <childnode refid="39813" relation="include">
        </childnode>
        <childnode refid="39814" relation="include">
        </childnode>
        <childnode refid="39823" relation="include">
        </childnode>
        <childnode refid="39824" relation="include">
        </childnode>
      </node>
      <node id="39767">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/mean_absolute_percentage_error.hpp</label>
        <link refid="mean__absolute__percentage__error_8hpp"/>
        <childnode refid="39768" relation="include">
        </childnode>
        <childnode refid="39825" relation="include">
        </childnode>
      </node>
      <node id="39774">
        <label>cstdio</label>
      </node>
      <node id="39778">
        <label>tuple</label>
      </node>
      <node id="39783">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="39800">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="39783" relation="include">
        </childnode>
        <childnode refid="39784" relation="include">
        </childnode>
        <childnode refid="39785" relation="include">
        </childnode>
        <childnode refid="39787" relation="include">
        </childnode>
        <childnode refid="39801" relation="include">
        </childnode>
        <childnode refid="39802" relation="include">
        </childnode>
        <childnode refid="39803" relation="include">
        </childnode>
        <childnode refid="39804" relation="include">
        </childnode>
      </node>
      <node id="39825">
        <label>mean_absolute_percentage_error_impl.hpp</label>
      </node>
      <node id="39779">
        <label>utility</label>
      </node>
      <node id="39803">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="39794">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="39791">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="39792" relation="include">
        </childnode>
      </node>
      <node id="39814">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="39815" relation="include">
        </childnode>
        <childnode refid="39816" relation="include">
        </childnode>
        <childnode refid="39817" relation="include">
        </childnode>
        <childnode refid="39818" relation="include">
        </childnode>
        <childnode refid="39819" relation="include">
        </childnode>
        <childnode refid="39820" relation="include">
        </childnode>
        <childnode refid="39821" relation="include">
        </childnode>
        <childnode refid="39822" relation="include">
        </childnode>
      </node>
      <node id="39792">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="39806">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="39804" relation="include">
        </childnode>
        <childnode refid="39800" relation="include">
        </childnode>
        <childnode refid="39807" relation="include">
        </childnode>
      </node>
      <node id="39775">
        <label>cstdlib</label>
      </node>
      <node id="39770">
        <label>cctype</label>
      </node>
      <node id="39793">
        <label>unordered_map</label>
      </node>
      <node id="39772">
        <label>climits</label>
      </node>
      <node id="39820">
        <label>mutex</label>
      </node>
      <node id="39816">
        <label>chrono</label>
      </node>
      <node id="39824">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="39822">
        <label>thread</label>
      </node>
      <node id="39810">
        <label>type_traits</label>
      </node>
      <node id="39786">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="39780">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="39804">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="39782" relation="include">
        </childnode>
        <childnode refid="39783" relation="include">
        </childnode>
        <childnode refid="39784" relation="include">
        </childnode>
        <childnode refid="39785" relation="include">
        </childnode>
        <childnode refid="39805" relation="include">
        </childnode>
      </node>
      <node id="39776">
        <label>cstring</label>
      </node>
      <node id="39795">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="39784">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError" prot="public">mlpack::ann::MeanAbsolutePercentageError</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1ann">mlpack::ann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Aakash Kaushik</para></simplesect>
Implementation of the Mean Absolute Percentage Error function.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_ANN_LOSS_FUNCTION_MEAN_ABSOLUTE_PERCENTAGE_ERROR_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_ANN_LOSS_FUNCTION_MEAN_ABSOLUTE_PERCENTAGE_ERROR_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ann<sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputDataType<sp/>=<sp/>arma::mat,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputDataType<sp/>=<sp/>arma::mat</highlight></codeline>
<codeline lineno="48"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="49" refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError" kindref="compound">MeanAbsolutePercentageError</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1a22e2e0323ca71c49651ac02646ff0392" kindref="member">MeanAbsolutePercentageError</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PredictionType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TargetType&gt;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PredictionType::elem_type<sp/><ref refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1ab3640059898ea76c13709b8099316fe8" kindref="member">Forward</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PredictionType&amp;<sp/>prediction,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TargetType&amp;<sp/>target);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PredictionType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TargetType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LossType&gt;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1add41dbaf358dc099750dc6064cb7e0d7" kindref="member">Backward</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PredictionType&amp;<sp/>prediction,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TargetType&amp;<sp/>target,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LossType&amp;<sp/>loss);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1a8bae962cc603d1cab8d80ec78f8d505d" refkind="member"><highlight class="normal"><sp/><sp/>OutputDataType&amp;<sp/><ref refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1a8bae962cc603d1cab8d80ec78f8d505d" kindref="member">OutputParameter</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputParameter;<sp/>}</highlight></codeline>
<codeline lineno="84" refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1a21d5f745f02c709625a4ee0907f004a5" refkind="member"><highlight class="normal"><sp/><sp/>OutputDataType&amp;<sp/><ref refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1a21d5f745f02c709625a4ee0907f004a5" kindref="member">OutputParameter</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputParameter;<sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1af0dd9205158ccf7bcfcd8ff81f79c927" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>OutputDataType<sp/>outputParameter;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>MeanAbsolutePercentageError</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mean_absolute_percentage_error_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/mean_absolute_percentage_error.hpp"/>
  </compounddef>
</doxygen>
