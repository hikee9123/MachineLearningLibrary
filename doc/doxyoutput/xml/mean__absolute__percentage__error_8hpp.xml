<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="mean__absolute__percentage__error_8hpp" kind="file" language="C++">
    <compoundname>mean_absolute_percentage_error.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="yes">mean_absolute_percentage_error_impl.hpp</includes>
    <incdepgraph>
      <node id="40892">
        <label>list</label>
      </node>
      <node id="40889">
        <label>atomic</label>
      </node>
      <node id="40879">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="40855">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="40891">
        <label>iomanip</label>
      </node>
      <node id="40864">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="40865" relation="include">
        </childnode>
        <childnode refid="40867" relation="include">
        </childnode>
      </node>
      <node id="40847">
        <label>cstdint</label>
      </node>
      <node id="40856">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="40863">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="40886">
        <label>arma_config.hpp</label>
      </node>
      <node id="40876">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="40843">
        <label>cmath</label>
      </node>
      <node id="40862">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="40851">
        <label>stdexcept</label>
      </node>
      <node id="40871">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="40856" relation="include">
        </childnode>
        <childnode refid="40858" relation="include">
        </childnode>
        <childnode refid="40859" relation="include">
        </childnode>
        <childnode refid="40857" relation="include">
        </childnode>
      </node>
      <node id="40895">
        <label>string</label>
      </node>
      <node id="40883">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="40884" relation="include">
        </childnode>
        <childnode refid="40850" relation="include">
        </childnode>
      </node>
      <node id="40893">
        <label>map</label>
      </node>
      <node id="40845">
        <label>cfloat</label>
      </node>
      <node id="40875">
        <label>boost/variant.hpp</label>
      </node>
      <node id="40897">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="40859">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="40882">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="40883" relation="include">
        </childnode>
        <childnode refid="40859" relation="include">
        </childnode>
        <childnode refid="40866" relation="include">
        </childnode>
        <childnode refid="40884" relation="include">
        </childnode>
      </node>
      <node id="40872">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="40870">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="40856" relation="include">
        </childnode>
        <childnode refid="40858" relation="include">
        </childnode>
        <childnode refid="40859" relation="include">
        </childnode>
        <childnode refid="40857" relation="include">
        </childnode>
      </node>
      <node id="40873">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="40856" relation="include">
        </childnode>
        <childnode refid="40858" relation="include">
        </childnode>
        <childnode refid="40859" relation="include">
        </childnode>
        <childnode refid="40857" relation="include">
        </childnode>
      </node>
      <node id="40861">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="40881">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="40857" relation="include">
        </childnode>
        <childnode refid="40858" relation="include">
        </childnode>
        <childnode refid="40859" relation="include">
        </childnode>
        <childnode refid="40869" relation="include">
        </childnode>
        <childnode refid="40878" relation="include">
        </childnode>
      </node>
      <node id="40885">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="40886" relation="include">
        </childnode>
      </node>
      <node id="40887">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="40842">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="40843" relation="include">
        </childnode>
        <childnode refid="40844" relation="include">
        </childnode>
        <childnode refid="40845" relation="include">
        </childnode>
        <childnode refid="40846" relation="include">
        </childnode>
        <childnode refid="40847" relation="include">
        </childnode>
        <childnode refid="40848" relation="include">
        </childnode>
        <childnode refid="40849" relation="include">
        </childnode>
        <childnode refid="40850" relation="include">
        </childnode>
        <childnode refid="40851" relation="include">
        </childnode>
        <childnode refid="40852" relation="include">
        </childnode>
        <childnode refid="40853" relation="include">
        </childnode>
        <childnode refid="40854" relation="include">
        </childnode>
        <childnode refid="40855" relation="include">
        </childnode>
        <childnode refid="40856" relation="include">
        </childnode>
        <childnode refid="40857" relation="include">
        </childnode>
        <childnode refid="40858" relation="include">
        </childnode>
        <childnode refid="40859" relation="include">
        </childnode>
        <childnode refid="40860" relation="include">
        </childnode>
        <childnode refid="40861" relation="include">
        </childnode>
        <childnode refid="40862" relation="include">
        </childnode>
        <childnode refid="40863" relation="include">
        </childnode>
        <childnode refid="40864" relation="include">
        </childnode>
        <childnode refid="40868" relation="include">
        </childnode>
        <childnode refid="40869" relation="include">
        </childnode>
        <childnode refid="40870" relation="include">
        </childnode>
        <childnode refid="40871" relation="include">
        </childnode>
        <childnode refid="40872" relation="include">
        </childnode>
        <childnode refid="40873" relation="include">
        </childnode>
        <childnode refid="40874" relation="include">
        </childnode>
        <childnode refid="40880" relation="include">
        </childnode>
        <childnode refid="40881" relation="include">
        </childnode>
        <childnode refid="40878" relation="include">
        </childnode>
        <childnode refid="40882" relation="include">
        </childnode>
        <childnode refid="40885" relation="include">
        </childnode>
        <childnode refid="40887" relation="include">
        </childnode>
        <childnode refid="40888" relation="include">
        </childnode>
        <childnode refid="40897" relation="include">
        </childnode>
        <childnode refid="40898" relation="include">
        </childnode>
      </node>
      <node id="40841">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/mean_absolute_percentage_error.hpp</label>
        <link refid="mean__absolute__percentage__error_8hpp"/>
        <childnode refid="40842" relation="include">
        </childnode>
        <childnode refid="40899" relation="include">
        </childnode>
      </node>
      <node id="40848">
        <label>cstdio</label>
      </node>
      <node id="40852">
        <label>tuple</label>
      </node>
      <node id="40857">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="40874">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="40857" relation="include">
        </childnode>
        <childnode refid="40858" relation="include">
        </childnode>
        <childnode refid="40859" relation="include">
        </childnode>
        <childnode refid="40861" relation="include">
        </childnode>
        <childnode refid="40875" relation="include">
        </childnode>
        <childnode refid="40876" relation="include">
        </childnode>
        <childnode refid="40877" relation="include">
        </childnode>
        <childnode refid="40878" relation="include">
        </childnode>
      </node>
      <node id="40899">
        <label>mean_absolute_percentage_error_impl.hpp</label>
      </node>
      <node id="40853">
        <label>utility</label>
      </node>
      <node id="40877">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="40868">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="40865">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="40866" relation="include">
        </childnode>
      </node>
      <node id="40888">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="40889" relation="include">
        </childnode>
        <childnode refid="40890" relation="include">
        </childnode>
        <childnode refid="40891" relation="include">
        </childnode>
        <childnode refid="40892" relation="include">
        </childnode>
        <childnode refid="40893" relation="include">
        </childnode>
        <childnode refid="40894" relation="include">
        </childnode>
        <childnode refid="40895" relation="include">
        </childnode>
        <childnode refid="40896" relation="include">
        </childnode>
      </node>
      <node id="40866">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="40880">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="40878" relation="include">
        </childnode>
        <childnode refid="40874" relation="include">
        </childnode>
        <childnode refid="40881" relation="include">
        </childnode>
      </node>
      <node id="40849">
        <label>cstdlib</label>
      </node>
      <node id="40844">
        <label>cctype</label>
      </node>
      <node id="40867">
        <label>unordered_map</label>
      </node>
      <node id="40846">
        <label>climits</label>
      </node>
      <node id="40894">
        <label>mutex</label>
      </node>
      <node id="40890">
        <label>chrono</label>
      </node>
      <node id="40898">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="40896">
        <label>thread</label>
      </node>
      <node id="40884">
        <label>type_traits</label>
      </node>
      <node id="40860">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="40854">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="40878">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="40856" relation="include">
        </childnode>
        <childnode refid="40857" relation="include">
        </childnode>
        <childnode refid="40858" relation="include">
        </childnode>
        <childnode refid="40859" relation="include">
        </childnode>
        <childnode refid="40879" relation="include">
        </childnode>
      </node>
      <node id="40850">
        <label>cstring</label>
      </node>
      <node id="40869">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="40858">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError" prot="public">mlpack::ann::MeanAbsolutePercentageError</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1ann">mlpack::ann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Aakash Kaushik</para></simplesect>
Implementation of the Mean Absolute Percentage Error function.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_ANN_LOSS_FUNCTION_MEAN_ABSOLUTE_PERCENTAGE_ERROR_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_ANN_LOSS_FUNCTION_MEAN_ABSOLUTE_PERCENTAGE_ERROR_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ann<sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputDataType<sp/>=<sp/>arma::mat,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputDataType<sp/>=<sp/>arma::mat</highlight></codeline>
<codeline lineno="48"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="49" refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError" kindref="compound">MeanAbsolutePercentageError</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1a22e2e0323ca71c49651ac02646ff0392" kindref="member">MeanAbsolutePercentageError</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PredictionType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TargetType&gt;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PredictionType::elem_type<sp/><ref refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1ab3640059898ea76c13709b8099316fe8" kindref="member">Forward</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PredictionType&amp;<sp/>prediction,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TargetType&amp;<sp/>target);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PredictionType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TargetType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LossType&gt;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1add41dbaf358dc099750dc6064cb7e0d7" kindref="member">Backward</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PredictionType&amp;<sp/>prediction,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TargetType&amp;<sp/>target,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LossType&amp;<sp/>loss);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1a8bae962cc603d1cab8d80ec78f8d505d" refkind="member"><highlight class="normal"><sp/><sp/>OutputDataType&amp;<sp/><ref refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1a8bae962cc603d1cab8d80ec78f8d505d" kindref="member">OutputParameter</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputParameter;<sp/>}</highlight></codeline>
<codeline lineno="84" refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1a21d5f745f02c709625a4ee0907f004a5" refkind="member"><highlight class="normal"><sp/><sp/>OutputDataType&amp;<sp/><ref refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1a21d5f745f02c709625a4ee0907f004a5" kindref="member">OutputParameter</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputParameter;<sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1af0dd9205158ccf7bcfcd8ff81f79c927" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>OutputDataType<sp/>outputParameter;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>MeanAbsolutePercentageError</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mean_absolute_percentage_error_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/mean_absolute_percentage_error.hpp"/>
  </compounddef>
</doxygen>
