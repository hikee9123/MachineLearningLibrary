<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="data__dependent__random__initializer_8hpp" kind="file" language="C++">
    <compoundname>data_dependent_random_initializer.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="random_8hpp" local="no">mlpack/core/math/random.hpp</includes>
    <includedby refid="lcc_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp</includedby>
    <includedby refid="sparse__coding_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/sparse_coding/sparse_coding.hpp</includedby>
    <incdepgraph>
      <node id="59457">
        <label>list</label>
      </node>
      <node id="59454">
        <label>atomic</label>
      </node>
      <node id="59444">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="59420">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="59456">
        <label>iomanip</label>
      </node>
      <node id="59406">
        <label>/home/aakash/mlpack/src/mlpack/methods/sparse_coding/data_dependent_random_initializer.hpp</label>
        <link refid="data__dependent__random__initializer_8hpp"/>
        <childnode refid="59407" relation="include">
        </childnode>
        <childnode refid="59464" relation="include">
        </childnode>
      </node>
      <node id="59429">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="59430" relation="include">
        </childnode>
        <childnode refid="59432" relation="include">
        </childnode>
      </node>
      <node id="59412">
        <label>cstdint</label>
      </node>
      <node id="59421">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="59428">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="59465">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="59451">
        <label>arma_config.hpp</label>
      </node>
      <node id="59441">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="59408">
        <label>cmath</label>
      </node>
      <node id="59427">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="59416">
        <label>stdexcept</label>
      </node>
      <node id="59436">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="59421" relation="include">
        </childnode>
        <childnode refid="59423" relation="include">
        </childnode>
        <childnode refid="59424" relation="include">
        </childnode>
        <childnode refid="59422" relation="include">
        </childnode>
      </node>
      <node id="59460">
        <label>string</label>
      </node>
      <node id="59448">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="59449" relation="include">
        </childnode>
        <childnode refid="59415" relation="include">
        </childnode>
      </node>
      <node id="59458">
        <label>map</label>
      </node>
      <node id="59410">
        <label>cfloat</label>
      </node>
      <node id="59440">
        <label>boost/variant.hpp</label>
      </node>
      <node id="59462">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="59424">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="59447">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="59448" relation="include">
        </childnode>
        <childnode refid="59424" relation="include">
        </childnode>
        <childnode refid="59431" relation="include">
        </childnode>
        <childnode refid="59449" relation="include">
        </childnode>
      </node>
      <node id="59437">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="59435">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="59421" relation="include">
        </childnode>
        <childnode refid="59423" relation="include">
        </childnode>
        <childnode refid="59424" relation="include">
        </childnode>
        <childnode refid="59422" relation="include">
        </childnode>
      </node>
      <node id="59438">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="59421" relation="include">
        </childnode>
        <childnode refid="59423" relation="include">
        </childnode>
        <childnode refid="59424" relation="include">
        </childnode>
        <childnode refid="59422" relation="include">
        </childnode>
      </node>
      <node id="59426">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="59446">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="59422" relation="include">
        </childnode>
        <childnode refid="59423" relation="include">
        </childnode>
        <childnode refid="59424" relation="include">
        </childnode>
        <childnode refid="59434" relation="include">
        </childnode>
        <childnode refid="59443" relation="include">
        </childnode>
      </node>
      <node id="59450">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="59451" relation="include">
        </childnode>
      </node>
      <node id="59452">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="59407">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="59408" relation="include">
        </childnode>
        <childnode refid="59409" relation="include">
        </childnode>
        <childnode refid="59410" relation="include">
        </childnode>
        <childnode refid="59411" relation="include">
        </childnode>
        <childnode refid="59412" relation="include">
        </childnode>
        <childnode refid="59413" relation="include">
        </childnode>
        <childnode refid="59414" relation="include">
        </childnode>
        <childnode refid="59415" relation="include">
        </childnode>
        <childnode refid="59416" relation="include">
        </childnode>
        <childnode refid="59417" relation="include">
        </childnode>
        <childnode refid="59418" relation="include">
        </childnode>
        <childnode refid="59419" relation="include">
        </childnode>
        <childnode refid="59420" relation="include">
        </childnode>
        <childnode refid="59421" relation="include">
        </childnode>
        <childnode refid="59422" relation="include">
        </childnode>
        <childnode refid="59423" relation="include">
        </childnode>
        <childnode refid="59424" relation="include">
        </childnode>
        <childnode refid="59425" relation="include">
        </childnode>
        <childnode refid="59426" relation="include">
        </childnode>
        <childnode refid="59427" relation="include">
        </childnode>
        <childnode refid="59428" relation="include">
        </childnode>
        <childnode refid="59429" relation="include">
        </childnode>
        <childnode refid="59433" relation="include">
        </childnode>
        <childnode refid="59434" relation="include">
        </childnode>
        <childnode refid="59435" relation="include">
        </childnode>
        <childnode refid="59436" relation="include">
        </childnode>
        <childnode refid="59437" relation="include">
        </childnode>
        <childnode refid="59438" relation="include">
        </childnode>
        <childnode refid="59439" relation="include">
        </childnode>
        <childnode refid="59445" relation="include">
        </childnode>
        <childnode refid="59446" relation="include">
        </childnode>
        <childnode refid="59443" relation="include">
        </childnode>
        <childnode refid="59447" relation="include">
        </childnode>
        <childnode refid="59450" relation="include">
        </childnode>
        <childnode refid="59452" relation="include">
        </childnode>
        <childnode refid="59453" relation="include">
        </childnode>
        <childnode refid="59462" relation="include">
        </childnode>
        <childnode refid="59463" relation="include">
        </childnode>
      </node>
      <node id="59466">
        <label>random</label>
      </node>
      <node id="59413">
        <label>cstdio</label>
      </node>
      <node id="59417">
        <label>tuple</label>
      </node>
      <node id="59422">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="59439">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="59422" relation="include">
        </childnode>
        <childnode refid="59423" relation="include">
        </childnode>
        <childnode refid="59424" relation="include">
        </childnode>
        <childnode refid="59426" relation="include">
        </childnode>
        <childnode refid="59440" relation="include">
        </childnode>
        <childnode refid="59441" relation="include">
        </childnode>
        <childnode refid="59442" relation="include">
        </childnode>
        <childnode refid="59443" relation="include">
        </childnode>
      </node>
      <node id="59464">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="59407" relation="include">
        </childnode>
        <childnode refid="59465" relation="include">
        </childnode>
        <childnode refid="59466" relation="include">
        </childnode>
      </node>
      <node id="59418">
        <label>utility</label>
      </node>
      <node id="59442">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="59433">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="59430">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="59431" relation="include">
        </childnode>
      </node>
      <node id="59453">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="59454" relation="include">
        </childnode>
        <childnode refid="59455" relation="include">
        </childnode>
        <childnode refid="59456" relation="include">
        </childnode>
        <childnode refid="59457" relation="include">
        </childnode>
        <childnode refid="59458" relation="include">
        </childnode>
        <childnode refid="59459" relation="include">
        </childnode>
        <childnode refid="59460" relation="include">
        </childnode>
        <childnode refid="59461" relation="include">
        </childnode>
      </node>
      <node id="59431">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="59445">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="59443" relation="include">
        </childnode>
        <childnode refid="59439" relation="include">
        </childnode>
        <childnode refid="59446" relation="include">
        </childnode>
      </node>
      <node id="59414">
        <label>cstdlib</label>
      </node>
      <node id="59409">
        <label>cctype</label>
      </node>
      <node id="59432">
        <label>unordered_map</label>
      </node>
      <node id="59411">
        <label>climits</label>
      </node>
      <node id="59459">
        <label>mutex</label>
      </node>
      <node id="59455">
        <label>chrono</label>
      </node>
      <node id="59463">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="59461">
        <label>thread</label>
      </node>
      <node id="59449">
        <label>type_traits</label>
      </node>
      <node id="59425">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="59419">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="59443">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="59421" relation="include">
        </childnode>
        <childnode refid="59422" relation="include">
        </childnode>
        <childnode refid="59423" relation="include">
        </childnode>
        <childnode refid="59424" relation="include">
        </childnode>
        <childnode refid="59444" relation="include">
        </childnode>
      </node>
      <node id="59415">
        <label>cstring</label>
      </node>
      <node id="59434">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="59423">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="59469">
        <label>/home/aakash/mlpack/src/mlpack/methods/sparse_coding/sparse_coding.hpp</label>
        <link refid="sparse__coding_8hpp"/>
      </node>
      <node id="59467">
        <label>/home/aakash/mlpack/src/mlpack/methods/sparse_coding/data_dependent_random_initializer.hpp</label>
        <link refid="data__dependent__random__initializer_8hpp"/>
        <childnode refid="59468" relation="include">
        </childnode>
        <childnode refid="59469" relation="include">
        </childnode>
      </node>
      <node id="59468">
        <label>/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp</label>
        <link refid="lcc_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1sparse__coding_1_1DataDependentRandomInitializer" prot="public">mlpack::sparse_coding::DataDependentRandomInitializer</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1sparse__coding">mlpack::sparse_coding</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Nishant Mehta</para></simplesect>
A sensible heuristic for initializing dictionaries for sparse coding.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_SPARSE_CODING_DATA_DEPENDENT_RANDOM_INITIALIZER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_SPARSE_CODING_DATA_DEPENDENT_RANDOM_INITIALIZER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="random_8hpp" kindref="compound">mlpack/core/math/random.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="19" refid="namespacemlpack_1_1sparse__coding" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">sparse_coding<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classmlpack_1_1sparse__coding_1_1DataDependentRandomInitializer" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1sparse__coding_1_1DataDependentRandomInitializer" kindref="compound">DataDependentRandomInitializer</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38" refid="classmlpack_1_1sparse__coding_1_1DataDependentRandomInitializer_1adea2ca6a95e9508c74ae836538ce4be8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1sparse__coding_1_1DataDependentRandomInitializer_1adea2ca6a95e9508c74ae836538ce4be8" kindref="member">Initialize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>atoms,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>dictionary)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>size<sp/>of<sp/>the<sp/>dictionary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>dictionary.set_size(data.n_rows,<sp/>atoms);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>each<sp/>atom.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>atoms;<sp/>++i)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>three<sp/>atoms<sp/>together.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dictionary.col(i)<sp/>=<sp/>(data.col(<ref refid="namespacemlpack_1_1math_1aad090ac225728d74c1b66bcf52f3ab95" kindref="member">math::RandInt</ref>(data.n_cols))<sp/>+</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.col(<ref refid="namespacemlpack_1_1math_1aad090ac225728d74c1b66bcf52f3ab95" kindref="member">math::RandInt</ref>(data.n_cols))<sp/>+</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.col(<ref refid="namespacemlpack_1_1math_1aad090ac225728d74c1b66bcf52f3ab95" kindref="member">math::RandInt</ref>(data.n_cols)));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>normalize<sp/>the<sp/>atom.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dictionary.col(i)<sp/>/=<sp/>norm(dictionary.col(i),<sp/>2);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>sparse_coding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_coding/data_dependent_random_initializer.hpp"/>
  </compounddef>
</doxygen>
