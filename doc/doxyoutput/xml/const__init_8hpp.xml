<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="const__init_8hpp" kind="file" language="C++">
    <compoundname>const_init.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <incdepgraph>
      <node id="28132">
        <label>list</label>
      </node>
      <node id="28129">
        <label>atomic</label>
      </node>
      <node id="28119">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="28095">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="28131">
        <label>iomanip</label>
      </node>
      <node id="28104">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="28105" relation="include">
        </childnode>
        <childnode refid="28107" relation="include">
        </childnode>
      </node>
      <node id="28087">
        <label>cstdint</label>
      </node>
      <node id="28096">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="28103">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="28126">
        <label>arma_config.hpp</label>
      </node>
      <node id="28116">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="28083">
        <label>cmath</label>
      </node>
      <node id="28102">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="28091">
        <label>stdexcept</label>
      </node>
      <node id="28111">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="28096" relation="include">
        </childnode>
        <childnode refid="28098" relation="include">
        </childnode>
        <childnode refid="28099" relation="include">
        </childnode>
        <childnode refid="28097" relation="include">
        </childnode>
      </node>
      <node id="28135">
        <label>string</label>
      </node>
      <node id="28123">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="28124" relation="include">
        </childnode>
        <childnode refid="28090" relation="include">
        </childnode>
      </node>
      <node id="28081">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/init_rules/const_init.hpp</label>
        <link refid="const__init_8hpp"/>
        <childnode refid="28082" relation="include">
        </childnode>
      </node>
      <node id="28133">
        <label>map</label>
      </node>
      <node id="28085">
        <label>cfloat</label>
      </node>
      <node id="28115">
        <label>boost/variant.hpp</label>
      </node>
      <node id="28137">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="28099">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="28122">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="28123" relation="include">
        </childnode>
        <childnode refid="28099" relation="include">
        </childnode>
        <childnode refid="28106" relation="include">
        </childnode>
        <childnode refid="28124" relation="include">
        </childnode>
      </node>
      <node id="28112">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="28110">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="28096" relation="include">
        </childnode>
        <childnode refid="28098" relation="include">
        </childnode>
        <childnode refid="28099" relation="include">
        </childnode>
        <childnode refid="28097" relation="include">
        </childnode>
      </node>
      <node id="28113">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="28096" relation="include">
        </childnode>
        <childnode refid="28098" relation="include">
        </childnode>
        <childnode refid="28099" relation="include">
        </childnode>
        <childnode refid="28097" relation="include">
        </childnode>
      </node>
      <node id="28101">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="28121">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="28097" relation="include">
        </childnode>
        <childnode refid="28098" relation="include">
        </childnode>
        <childnode refid="28099" relation="include">
        </childnode>
        <childnode refid="28109" relation="include">
        </childnode>
        <childnode refid="28118" relation="include">
        </childnode>
      </node>
      <node id="28125">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="28126" relation="include">
        </childnode>
      </node>
      <node id="28127">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="28082">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="28083" relation="include">
        </childnode>
        <childnode refid="28084" relation="include">
        </childnode>
        <childnode refid="28085" relation="include">
        </childnode>
        <childnode refid="28086" relation="include">
        </childnode>
        <childnode refid="28087" relation="include">
        </childnode>
        <childnode refid="28088" relation="include">
        </childnode>
        <childnode refid="28089" relation="include">
        </childnode>
        <childnode refid="28090" relation="include">
        </childnode>
        <childnode refid="28091" relation="include">
        </childnode>
        <childnode refid="28092" relation="include">
        </childnode>
        <childnode refid="28093" relation="include">
        </childnode>
        <childnode refid="28094" relation="include">
        </childnode>
        <childnode refid="28095" relation="include">
        </childnode>
        <childnode refid="28096" relation="include">
        </childnode>
        <childnode refid="28097" relation="include">
        </childnode>
        <childnode refid="28098" relation="include">
        </childnode>
        <childnode refid="28099" relation="include">
        </childnode>
        <childnode refid="28100" relation="include">
        </childnode>
        <childnode refid="28101" relation="include">
        </childnode>
        <childnode refid="28102" relation="include">
        </childnode>
        <childnode refid="28103" relation="include">
        </childnode>
        <childnode refid="28104" relation="include">
        </childnode>
        <childnode refid="28108" relation="include">
        </childnode>
        <childnode refid="28109" relation="include">
        </childnode>
        <childnode refid="28110" relation="include">
        </childnode>
        <childnode refid="28111" relation="include">
        </childnode>
        <childnode refid="28112" relation="include">
        </childnode>
        <childnode refid="28113" relation="include">
        </childnode>
        <childnode refid="28114" relation="include">
        </childnode>
        <childnode refid="28120" relation="include">
        </childnode>
        <childnode refid="28121" relation="include">
        </childnode>
        <childnode refid="28118" relation="include">
        </childnode>
        <childnode refid="28122" relation="include">
        </childnode>
        <childnode refid="28125" relation="include">
        </childnode>
        <childnode refid="28127" relation="include">
        </childnode>
        <childnode refid="28128" relation="include">
        </childnode>
        <childnode refid="28137" relation="include">
        </childnode>
        <childnode refid="28138" relation="include">
        </childnode>
      </node>
      <node id="28088">
        <label>cstdio</label>
      </node>
      <node id="28092">
        <label>tuple</label>
      </node>
      <node id="28097">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="28114">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="28097" relation="include">
        </childnode>
        <childnode refid="28098" relation="include">
        </childnode>
        <childnode refid="28099" relation="include">
        </childnode>
        <childnode refid="28101" relation="include">
        </childnode>
        <childnode refid="28115" relation="include">
        </childnode>
        <childnode refid="28116" relation="include">
        </childnode>
        <childnode refid="28117" relation="include">
        </childnode>
        <childnode refid="28118" relation="include">
        </childnode>
      </node>
      <node id="28093">
        <label>utility</label>
      </node>
      <node id="28117">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="28108">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="28105">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="28106" relation="include">
        </childnode>
      </node>
      <node id="28128">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="28129" relation="include">
        </childnode>
        <childnode refid="28130" relation="include">
        </childnode>
        <childnode refid="28131" relation="include">
        </childnode>
        <childnode refid="28132" relation="include">
        </childnode>
        <childnode refid="28133" relation="include">
        </childnode>
        <childnode refid="28134" relation="include">
        </childnode>
        <childnode refid="28135" relation="include">
        </childnode>
        <childnode refid="28136" relation="include">
        </childnode>
      </node>
      <node id="28106">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="28120">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="28118" relation="include">
        </childnode>
        <childnode refid="28114" relation="include">
        </childnode>
        <childnode refid="28121" relation="include">
        </childnode>
      </node>
      <node id="28089">
        <label>cstdlib</label>
      </node>
      <node id="28084">
        <label>cctype</label>
      </node>
      <node id="28107">
        <label>unordered_map</label>
      </node>
      <node id="28086">
        <label>climits</label>
      </node>
      <node id="28134">
        <label>mutex</label>
      </node>
      <node id="28130">
        <label>chrono</label>
      </node>
      <node id="28138">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="28136">
        <label>thread</label>
      </node>
      <node id="28124">
        <label>type_traits</label>
      </node>
      <node id="28100">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="28094">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="28118">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="28096" relation="include">
        </childnode>
        <childnode refid="28097" relation="include">
        </childnode>
        <childnode refid="28098" relation="include">
        </childnode>
        <childnode refid="28099" relation="include">
        </childnode>
        <childnode refid="28119" relation="include">
        </childnode>
      </node>
      <node id="28090">
        <label>cstring</label>
      </node>
      <node id="28109">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="28098">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1ann_1_1ConstInitialization" prot="public">mlpack::ann::ConstInitialization</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1ann">mlpack::ann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Sumedh Ghaisas</para></simplesect>
Intialization rule for the neural networks. This simple initialization is performed by assigning a matrix of all constant values to the weight matrix.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="14"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_ANN_INIT_RULES_CONST_INIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_ANN_INIT_RULES_CONST_INIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ann<sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classmlpack_1_1ann_1_1ConstInitialization" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1ann_1_1ConstInitialization" kindref="compound">ConstInitialization</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31" refid="classmlpack_1_1ann_1_1ConstInitialization_1ac235c11e6009ac9fc7418e772113c5b0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1ann_1_1ConstInitialization_1ac235c11e6009ac9fc7418e772113c5b0" kindref="member">ConstInitialization</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initVal<sp/>=<sp/>0)<sp/>:<sp/>initVal(initVal)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do<sp/>here<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="42" refid="classmlpack_1_1ann_1_1ConstInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1ConstInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" kindref="member">Initialize</ref>(arma::Mat&lt;eT&gt;&amp;<sp/>W,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(W.is_empty())</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>W.set_size(rows,<sp/>cols);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>W.fill(initVal);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="56" refid="classmlpack_1_1ann_1_1ConstInitialization_1af2d770912321b8b9ca7b03ab98f735c0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1ConstInitialization_1af2d770912321b8b9ca7b03ab98f735c0" kindref="member">Initialize</ref>(arma::Mat&lt;eT&gt;&amp;<sp/>W)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(W.is_empty())</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Log::Fatal<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>initialize<sp/>an<sp/>empty<sp/>matrix.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>W.fill(initVal);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="73" refid="classmlpack_1_1ann_1_1ConstInitialization_1a40a2b6466bdba0f6aab4eb92b6e65934" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1ConstInitialization_1a40a2b6466bdba0f6aab4eb92b6e65934" kindref="member">Initialize</ref>(arma::Cube&lt;eT&gt;&amp;<sp/>W,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slices)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(W.is_empty())</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>W.set_size(rows,<sp/>cols,<sp/>slices);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>W.fill(initVal);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="90" refid="classmlpack_1_1ann_1_1ConstInitialization_1ae2f3e6d570824a160b687ff9f734f83c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1ConstInitialization_1ae2f3e6d570824a160b687ff9f734f83c" kindref="member">Initialize</ref>(arma::Cube&lt;eT&gt;&amp;<sp/>W)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(W.is_empty())</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Log::Fatal<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>initialize<sp/>an<sp/>empty<sp/>cube.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>W.fill(initVal);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classmlpack_1_1ann_1_1ConstInitialization_1a5d3c69bca294328f8ee408de931ba6de" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1ConstInitialization_1a5d3c69bca294328f8ee408de931ba6de" kindref="member">InitValue</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>initVal;<sp/>}</highlight></codeline>
<codeline lineno="101" refid="classmlpack_1_1ann_1_1ConstInitialization_1a49a1b2ccd67469246ceaabc154c836d5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1ConstInitialization_1a49a1b2ccd67469246ceaabc154c836d5" kindref="member">initValue</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>initVal;<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initVal;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>ConstInitialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/init_rules/const_init.hpp"/>
  </compounddef>
</doxygen>
