<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="svd__batch__learning_8hpp" kind="file" language="C++">
    <compoundname>svd_batch_learning.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includedby refid="amf_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/amf/amf.hpp</includedby>
    <incdepgraph>
      <node id="23918">
        <label>list</label>
      </node>
      <node id="23915">
        <label>atomic</label>
      </node>
      <node id="23905">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="23881">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="23917">
        <label>iomanip</label>
      </node>
      <node id="23890">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="23891" relation="include">
        </childnode>
        <childnode refid="23893" relation="include">
        </childnode>
      </node>
      <node id="23873">
        <label>cstdint</label>
      </node>
      <node id="23882">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="23889">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="23912">
        <label>arma_config.hpp</label>
      </node>
      <node id="23902">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="23869">
        <label>cmath</label>
      </node>
      <node id="23888">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="23877">
        <label>stdexcept</label>
      </node>
      <node id="23897">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="23882" relation="include">
        </childnode>
        <childnode refid="23884" relation="include">
        </childnode>
        <childnode refid="23885" relation="include">
        </childnode>
        <childnode refid="23883" relation="include">
        </childnode>
      </node>
      <node id="23921">
        <label>string</label>
      </node>
      <node id="23909">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="23910" relation="include">
        </childnode>
        <childnode refid="23876" relation="include">
        </childnode>
      </node>
      <node id="23919">
        <label>map</label>
      </node>
      <node id="23871">
        <label>cfloat</label>
      </node>
      <node id="23901">
        <label>boost/variant.hpp</label>
      </node>
      <node id="23923">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="23885">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="23908">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="23909" relation="include">
        </childnode>
        <childnode refid="23885" relation="include">
        </childnode>
        <childnode refid="23892" relation="include">
        </childnode>
        <childnode refid="23910" relation="include">
        </childnode>
      </node>
      <node id="23898">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="23896">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="23882" relation="include">
        </childnode>
        <childnode refid="23884" relation="include">
        </childnode>
        <childnode refid="23885" relation="include">
        </childnode>
        <childnode refid="23883" relation="include">
        </childnode>
      </node>
      <node id="23899">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="23882" relation="include">
        </childnode>
        <childnode refid="23884" relation="include">
        </childnode>
        <childnode refid="23885" relation="include">
        </childnode>
        <childnode refid="23883" relation="include">
        </childnode>
      </node>
      <node id="23887">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="23907">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="23883" relation="include">
        </childnode>
        <childnode refid="23884" relation="include">
        </childnode>
        <childnode refid="23885" relation="include">
        </childnode>
        <childnode refid="23895" relation="include">
        </childnode>
        <childnode refid="23904" relation="include">
        </childnode>
      </node>
      <node id="23911">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="23912" relation="include">
        </childnode>
      </node>
      <node id="23913">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="23868">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="23869" relation="include">
        </childnode>
        <childnode refid="23870" relation="include">
        </childnode>
        <childnode refid="23871" relation="include">
        </childnode>
        <childnode refid="23872" relation="include">
        </childnode>
        <childnode refid="23873" relation="include">
        </childnode>
        <childnode refid="23874" relation="include">
        </childnode>
        <childnode refid="23875" relation="include">
        </childnode>
        <childnode refid="23876" relation="include">
        </childnode>
        <childnode refid="23877" relation="include">
        </childnode>
        <childnode refid="23878" relation="include">
        </childnode>
        <childnode refid="23879" relation="include">
        </childnode>
        <childnode refid="23880" relation="include">
        </childnode>
        <childnode refid="23881" relation="include">
        </childnode>
        <childnode refid="23882" relation="include">
        </childnode>
        <childnode refid="23883" relation="include">
        </childnode>
        <childnode refid="23884" relation="include">
        </childnode>
        <childnode refid="23885" relation="include">
        </childnode>
        <childnode refid="23886" relation="include">
        </childnode>
        <childnode refid="23887" relation="include">
        </childnode>
        <childnode refid="23888" relation="include">
        </childnode>
        <childnode refid="23889" relation="include">
        </childnode>
        <childnode refid="23890" relation="include">
        </childnode>
        <childnode refid="23894" relation="include">
        </childnode>
        <childnode refid="23895" relation="include">
        </childnode>
        <childnode refid="23896" relation="include">
        </childnode>
        <childnode refid="23897" relation="include">
        </childnode>
        <childnode refid="23898" relation="include">
        </childnode>
        <childnode refid="23899" relation="include">
        </childnode>
        <childnode refid="23900" relation="include">
        </childnode>
        <childnode refid="23906" relation="include">
        </childnode>
        <childnode refid="23907" relation="include">
        </childnode>
        <childnode refid="23904" relation="include">
        </childnode>
        <childnode refid="23908" relation="include">
        </childnode>
        <childnode refid="23911" relation="include">
        </childnode>
        <childnode refid="23913" relation="include">
        </childnode>
        <childnode refid="23914" relation="include">
        </childnode>
        <childnode refid="23923" relation="include">
        </childnode>
        <childnode refid="23924" relation="include">
        </childnode>
      </node>
      <node id="23867">
        <label>/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_batch_learning.hpp</label>
        <link refid="svd__batch__learning_8hpp"/>
        <childnode refid="23868" relation="include">
        </childnode>
      </node>
      <node id="23874">
        <label>cstdio</label>
      </node>
      <node id="23878">
        <label>tuple</label>
      </node>
      <node id="23883">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="23900">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="23883" relation="include">
        </childnode>
        <childnode refid="23884" relation="include">
        </childnode>
        <childnode refid="23885" relation="include">
        </childnode>
        <childnode refid="23887" relation="include">
        </childnode>
        <childnode refid="23901" relation="include">
        </childnode>
        <childnode refid="23902" relation="include">
        </childnode>
        <childnode refid="23903" relation="include">
        </childnode>
        <childnode refid="23904" relation="include">
        </childnode>
      </node>
      <node id="23879">
        <label>utility</label>
      </node>
      <node id="23903">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="23894">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="23891">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="23892" relation="include">
        </childnode>
      </node>
      <node id="23914">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="23915" relation="include">
        </childnode>
        <childnode refid="23916" relation="include">
        </childnode>
        <childnode refid="23917" relation="include">
        </childnode>
        <childnode refid="23918" relation="include">
        </childnode>
        <childnode refid="23919" relation="include">
        </childnode>
        <childnode refid="23920" relation="include">
        </childnode>
        <childnode refid="23921" relation="include">
        </childnode>
        <childnode refid="23922" relation="include">
        </childnode>
      </node>
      <node id="23892">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="23906">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="23904" relation="include">
        </childnode>
        <childnode refid="23900" relation="include">
        </childnode>
        <childnode refid="23907" relation="include">
        </childnode>
      </node>
      <node id="23875">
        <label>cstdlib</label>
      </node>
      <node id="23870">
        <label>cctype</label>
      </node>
      <node id="23893">
        <label>unordered_map</label>
      </node>
      <node id="23872">
        <label>climits</label>
      </node>
      <node id="23920">
        <label>mutex</label>
      </node>
      <node id="23916">
        <label>chrono</label>
      </node>
      <node id="23924">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="23922">
        <label>thread</label>
      </node>
      <node id="23910">
        <label>type_traits</label>
      </node>
      <node id="23886">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="23880">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="23904">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="23882" relation="include">
        </childnode>
        <childnode refid="23883" relation="include">
        </childnode>
        <childnode refid="23884" relation="include">
        </childnode>
        <childnode refid="23885" relation="include">
        </childnode>
        <childnode refid="23905" relation="include">
        </childnode>
      </node>
      <node id="23876">
        <label>cstring</label>
      </node>
      <node id="23895">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="23884">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="23926">
        <label>/home/aakash/mlpack/src/mlpack/methods/amf/amf.hpp</label>
        <link refid="amf_8hpp"/>
        <childnode refid="23927" relation="include">
        </childnode>
        <childnode refid="23935" relation="include">
        </childnode>
        <childnode refid="23936" relation="include">
        </childnode>
        <childnode refid="23937" relation="include">
        </childnode>
        <childnode refid="23938" relation="include">
        </childnode>
      </node>
      <node id="23930">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp</label>
        <link refid="cf__model_8hpp"/>
      </node>
      <node id="23932">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp</label>
        <link refid="regularized__svd__method_8hpp"/>
      </node>
      <node id="23929">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/bias_svd_method.hpp</label>
        <link refid="bias__svd__method_8hpp"/>
      </node>
      <node id="23927">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf.hpp</label>
        <link refid="cf_8hpp"/>
        <childnode refid="23928" relation="include">
        </childnode>
        <childnode refid="23930" relation="include">
        </childnode>
        <childnode refid="23931" relation="include">
        </childnode>
        <childnode refid="23933" relation="include">
        </childnode>
      </node>
      <node id="23933">
        <label>/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp</label>
        <link refid="svdplusplus_8hpp"/>
        <childnode refid="23934" relation="include">
        </childnode>
      </node>
      <node id="23938">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svd_incomplete_method.hpp</label>
        <link refid="svd__incomplete__method_8hpp"/>
      </node>
      <node id="23935">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/batch_svd_method.hpp</label>
        <link refid="batch__svd__method_8hpp"/>
      </node>
      <node id="23925">
        <label>/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_batch_learning.hpp</label>
        <link refid="svd__batch__learning_8hpp"/>
        <childnode refid="23926" relation="include">
        </childnode>
      </node>
      <node id="23928">
        <label>/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp</label>
        <link refid="bias__svd_8hpp"/>
        <childnode refid="23929" relation="include">
        </childnode>
      </node>
      <node id="23934">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svdplusplus_method.hpp</label>
        <link refid="svdplusplus__method_8hpp"/>
      </node>
      <node id="23931">
        <label>/home/aakash/mlpack/src/mlpack/methods/regularized_svd/regularized_svd.hpp</label>
        <link refid="regularized__svd_8hpp"/>
        <childnode refid="23932" relation="include">
        </childnode>
      </node>
      <node id="23937">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svd_complete_method.hpp</label>
        <link refid="svd__complete__method_8hpp"/>
      </node>
      <node id="23936">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/nmf_method.hpp</label>
        <link refid="nmf__method_8hpp"/>
        <childnode refid="23927" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1amf_1_1SVDBatchLearning" prot="public">mlpack::amf::SVDBatchLearning</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1amf">mlpack::amf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Sumedh Ghaisas</para></simplesect>
SVD factorizer used in AMF (Alternating Matrix Factorization).</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_AMF_UPDATE_RULES_SVD_BATCH_LEARNING_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_AMF_UPDATE_RULES_SVD_BATCH_LEARNING_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">amf<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classmlpack_1_1amf_1_1SVDBatchLearning" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1amf_1_1SVDBatchLearning" kindref="compound">SVDBatchLearning</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52" refid="classmlpack_1_1amf_1_1SVDBatchLearning_1aaec0e3862d8b79920ea8ecda25dfcfba" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1amf_1_1SVDBatchLearning_1aaec0e3862d8b79920ea8ecda25dfcfba" kindref="member">SVDBatchLearning</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>u<sp/>=<sp/>0.0002,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kw<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kh<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>momentum<sp/>=<sp/>0.9)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>u(u),<sp/>kw(kw),<sp/>kh(kh),<sp/>momentum(momentum)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>empty<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="69" refid="classmlpack_1_1amf_1_1SVDBatchLearning_1a1af73fa03a54127db8d2bbc558a58c4c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1SVDBatchLearning_1a1af73fa03a54127db8d2bbc558a58c4c" kindref="member">Initialize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>dataset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rank)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>dataset.n_rows;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>dataset.n_cols;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>mW.zeros(n,<sp/>rank);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>mH.zeros(rank,<sp/>m);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="88" refid="classmlpack_1_1amf_1_1SVDBatchLearning_1a2df8bfa574f8a8e43e6b1466dc0526fe" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1SVDBatchLearning_1a2df8bfa574f8a8e43e6b1466dc0526fe" kindref="member">WUpdate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>V,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>W,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>H)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>V.n_rows;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>V.n_cols;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>W.n_cols;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>the<sp/>momentum<sp/>of<sp/>this<sp/>iteration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>mW<sp/>=<sp/>momentum<sp/>*<sp/>mW;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>step.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::mat<sp/>deltaW;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaW.zeros(n,<sp/>r);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>m;<sp/>++j)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>V(i,<sp/>j);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deltaW.row(i)<sp/>+=<sp/>(val<sp/>-<sp/>arma::dot(W.row(i),<sp/>H.col(j)))<sp/>*</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::trans(H.col(j));</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>regularization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kw<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deltaW.row(i)<sp/>-=<sp/>kw<sp/>*<sp/>W.row(i);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>step<sp/>to<sp/>the<sp/>momentum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>mW<sp/>+=<sp/>u<sp/>*<sp/>deltaW;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>momentum<sp/>to<sp/>the<sp/>W<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>W<sp/>+=<sp/>mW;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="133" refid="classmlpack_1_1amf_1_1SVDBatchLearning_1a3c338e327964c027a7d4172e638a5dff" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1SVDBatchLearning_1a3c338e327964c027a7d4172e638a5dff" kindref="member">HUpdate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>V,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>W,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>H)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>V.n_rows;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>V.n_cols;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>W.n_cols;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>momentum<sp/>of<sp/>this<sp/>iteration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>mH<sp/>=<sp/>momentum<sp/>*<sp/>mH;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>step.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::mat<sp/>deltaH;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaH.zeros(r,<sp/>m);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>m;<sp/>++j)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>V(i,<sp/>j);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deltaH.col(j)<sp/>+=<sp/>(val<sp/>-<sp/>arma::dot(W.row(i),<sp/>H.col(j)))<sp/>*<sp/>W.row(i).t();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>regularization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kh<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deltaH.col(j)<sp/>-=<sp/>kh<sp/>*<sp/>H.col(j);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>this<sp/>step<sp/>to<sp/>the<sp/>momentum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>mH<sp/>+=<sp/>u<sp/>*<sp/>deltaH;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>momentum<sp/>to<sp/>H.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>H<sp/>+=<sp/>mH;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="169" refid="classmlpack_1_1amf_1_1SVDBatchLearning_1a65cba07328997659bec80b9879b15a51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1SVDBatchLearning_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(u));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(kw));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(kh));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(momentum));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(mW));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(mH));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>u;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kw;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kh;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>momentum;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>arma::mat<sp/>mW;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>arma::mat<sp/>mH;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>SVDBatchLearning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"></codeline>
<codeline lineno="201"><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="202" refid="namespacemlpack_1_1amf_1afe7f98a0fec98543b68a87ed1f044af0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SVDBatchLearning::WUpdate&lt;arma::sp_mat&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::sp_mat&amp;<sp/>V,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>W,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>H)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>V.n_rows;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>W.n_cols;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>mW<sp/>=<sp/>momentum<sp/>*<sp/>mW;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>arma::mat<sp/>deltaW;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>deltaW.zeros(n,<sp/>r);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(arma::sp_mat::const_iterator<sp/>it<sp/>=<sp/>V.begin();<sp/>it<sp/>!=<sp/>V.end();<sp/>++it)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>it.row();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>it.col();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaW.row(it.row())<sp/>+=<sp/>(*it<sp/>-<sp/>arma::dot(W.row(row),<sp/>H.col(col)))<sp/>*</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::trans(H.col(col));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kw<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaW<sp/>-=<sp/>kw<sp/>*<sp/>W;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>mW<sp/>+=<sp/>u<sp/>*<sp/>deltaW;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>W<sp/>+=<sp/>mW;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="230" refid="namespacemlpack_1_1amf_1aff87130b0b4854026fdb315627b93916" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SVDBatchLearning::HUpdate&lt;arma::sp_mat&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::sp_mat&amp;<sp/>V,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>W,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>H)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>V.n_cols;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>W.n_cols;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>mH<sp/>=<sp/>momentum<sp/>*<sp/>mH;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>arma::mat<sp/>deltaH;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>deltaH.zeros(r,<sp/>m);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(arma::sp_mat::const_iterator<sp/>it<sp/>=<sp/>V.begin();<sp/>it<sp/>!=<sp/>V.end();<sp/>++it)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>it.row();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>it.col();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaH.col(col)<sp/>+=<sp/>(*it<sp/>-<sp/>arma::dot(W.row(row),<sp/>H.col(col)))<sp/>*</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W.row(row).t();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kh<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaH<sp/>-=<sp/>kh<sp/>*<sp/>H;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>mH<sp/>+=<sp/>u<sp/>*<sp/>deltaH;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>H<sp/>+=<sp/>mH;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>amf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>MLPACK_METHODS_AMF_UPDATE_RULES_SVD_BATCH_LEARNING_HPP</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_batch_learning.hpp"/>
  </compounddef>
</doxygen>
