<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1kde_1_1KDEModel" kind="class" language="C++" prot="public">
    <compoundname>mlpack::kde::KDEModel</compoundname>
    <includes refid="kde__model_8hpp" local="no">kde_model.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61" prot="public" static="no">
        <name>KernelTypes</name>
        <enumvalue id="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61af52665cc69ef62c8ad00a49c8e259c13" prot="public">
          <name>GAUSSIAN_KERNEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61af0f03a73eb0dce407b0b027dc8f98cdc" prot="public">
          <name>EPANECHNIKOV_KERNEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61ac188c6a7e514f7ccf2fc1ac5160e30c6" prot="public">
          <name>LAPLACIAN_KERNEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61aa2896ec0bb1099c97a137e4ca80bdc9b" prot="public">
          <name>SPHERICAL_KERNEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61a54d012af1c18f0d33fc7b76ee3d164fe" prot="public">
          <name>TRIANGULAR_KERNEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="242" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="241" bodyend="248"/>
      </memberdef>
      <memberdef kind="enum" id="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8d" prot="public" static="no">
        <name>TreeTypes</name>
        <enumvalue id="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8daa688e9cd1158916bc183aa517724568c" prot="public">
          <name>KD_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8da994ef1bcca8841d5b7d1431b99fcb10d" prot="public">
          <name>BALL_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8da92f172b47c8ae18ed401f8bf9f5ecad3" prot="public">
          <name>COVER_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8daabefbb1ea7a801b1b00c9b0709dcec50" prot="public">
          <name>OCTREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8da2a93dc779a94d5f09b72ffbdc5ac9cd9" prot="public">
          <name>R_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="233" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="232" bodyend="239"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDEModel_1a38e57e048afe37ef2a403d310a8dd9f8" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double absError</definition>
        <argsstring></argsstring>
        <name>absError</name>
        <briefdescription>
<para>Absolute error tolerance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="258" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDEModel_1a3a14628ead92d0afcce5f53e0ff017c8" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double bandwidth</definition>
        <argsstring></argsstring>
        <name>bandwidth</name>
        <briefdescription>
<para>Bandwidth of the kernel. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="252" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDEModel_1a2e3a35723280d717b9c1db0a7d6471f6" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t initialSampleSize</definition>
        <argsstring></argsstring>
        <name>initialSampleSize</name>
        <briefdescription>
<para>Size of the initial sample for Monte Carlo estimations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="274" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDEModel_1af659f94ea6b9232498a689018c164216" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1kde_1_1KDEWrapperBase" kindref="compound">KDEWrapperBase</ref> *</type>
        <definition>KDEWrapperBase* kdeModel</definition>
        <argsstring></argsstring>
        <name>kdeModel</name>
        <briefdescription>
<para>kdeModel holds whatever <ref refid="classmlpack_1_1kde_1_1KDE" kindref="compound">KDE</ref> type we are using. </para>        </briefdescription>
        <detaileddescription>
<para>It is initialized using the <computeroutput><ref refid="classmlpack_1_1kde_1_1KDEModel_1a746b74589783efc0ac89f108ee92cca3" kindref="member">BuildModel()</ref></computeroutput> method. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="286" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDEModel_1a5095659d9f5bfca38fb028c37ddbdf64" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61" kindref="member">KernelTypes</ref></type>
        <definition>KernelTypes kernelType</definition>
        <argsstring></argsstring>
        <name>kernelType</name>
        <briefdescription>
<para>Type of kernel. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="261" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDEModel_1a685ab3f2bb8273358bcfe2870b6ccfbe" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double mcBreakCoef</definition>
        <argsstring></argsstring>
        <name>mcBreakCoef</name>
        <briefdescription>
<para>Break coefficient for Monte Carlo estimations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="280" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDEModel_1ae636b3c1a2b7bf752d59837d40d98976" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double mcEntryCoef</definition>
        <argsstring></argsstring>
        <name>mcEntryCoef</name>
        <briefdescription>
<para>Entry coefficient for Monte Carlo estimations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="277" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDEModel_1afb23ca9afeecf748091eac2474625e23" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double mcProb</definition>
        <argsstring></argsstring>
        <name>mcProb</name>
        <briefdescription>
<para>Probability of estimation being bounded by relative error when using Monte Carlo estimations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="271" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDEModel_1ac095a4deea604e3737439eb0e578e403" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool monteCarlo</definition>
        <argsstring></argsstring>
        <name>monteCarlo</name>
        <briefdescription>
<para>Whether Monte Carlo estimations will be used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="267" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDEModel_1a2556780cd95fe475d055ddd520d04470" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double relError</definition>
        <argsstring></argsstring>
        <name>relError</name>
        <briefdescription>
<para>Relative error tolerance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="255" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kde_1_1KDEModel_1a4c037c9b8e9f3f7d429a0f3f4326a067" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8d" kindref="member">TreeTypes</ref></type>
        <definition>TreeTypes treeType</definition>
        <argsstring></argsstring>
        <name>treeType</name>
        <briefdescription>
<para>Type of tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="264" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="264" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1a231a4c7043e722e0615c30195dc8253b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDEModel</definition>
        <argsstring>(const double bandwidth=1.0, const double relError=KDEDefaultParams::relError, const double absError=KDEDefaultParams::absError, const KernelTypes kernelType=KernelTypes::GAUSSIAN_KERNEL, const TreeTypes treeType=TreeTypes::KD_TREE, const bool monteCarlo=KDEDefaultParams::mode, const double mcProb=KDEDefaultParams::mcProb, const size_t initialSampleSize=KDEDefaultParams::initialSampleSize, const double mcEntryCoef=KDEDefaultParams::mcEntryCoef, const double mcBreakCoef=KDEDefaultParams::mcBreakCoef)</argsstring>
        <name>KDEModel</name>
        <param>
          <type>const double</type>
          <declname>bandwidth</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>relError</declname>
          <defval><ref refid="structmlpack_1_1kde_1_1KDEDefaultParams_1aeb65650a99fac3883ae86f043cfcb70d" kindref="member">KDEDefaultParams::relError</ref></defval>
        </param>
        <param>
          <type>const double</type>
          <declname>absError</declname>
          <defval><ref refid="structmlpack_1_1kde_1_1KDEDefaultParams_1a12de6688cc175aaadc1e5685ca4aec86" kindref="member">KDEDefaultParams::absError</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61" kindref="member">KernelTypes</ref></type>
          <declname>kernelType</declname>
          <defval>KernelTypes::GAUSSIAN_KERNEL</defval>
        </param>
        <param>
          <type>const <ref refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8d" kindref="member">TreeTypes</ref></type>
          <declname>treeType</declname>
          <defval>TreeTypes::KD_TREE</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>monteCarlo</declname>
          <defval><ref refid="structmlpack_1_1kde_1_1KDEDefaultParams_1a0941bfbc554e306c3acf9b2e0340d62d" kindref="member">KDEDefaultParams::mode</ref></defval>
        </param>
        <param>
          <type>const double</type>
          <declname>mcProb</declname>
          <defval><ref refid="structmlpack_1_1kde_1_1KDEDefaultParams_1a1964adf2fa5d838bf2de7ee65b48787c" kindref="member">KDEDefaultParams::mcProb</ref></defval>
        </param>
        <param>
          <type>const size_t</type>
          <declname>initialSampleSize</declname>
          <defval><ref refid="structmlpack_1_1kde_1_1KDEDefaultParams_1abd70d00e0d91208e2ad9648c4e432e3a" kindref="member">KDEDefaultParams::initialSampleSize</ref></defval>
        </param>
        <param>
          <type>const double</type>
          <declname>mcEntryCoef</declname>
          <defval><ref refid="structmlpack_1_1kde_1_1KDEDefaultParams_1a646a8d6af4bad0e5e180f48a66f9545a" kindref="member">KDEDefaultParams::mcEntryCoef</ref></defval>
        </param>
        <param>
          <type>const double</type>
          <declname>mcBreakCoef</declname>
          <defval><ref refid="structmlpack_1_1kde_1_1KDEDefaultParams_1a382324ec45e8a9dd93c414c20a0a891a" kindref="member">KDEDefaultParams::mcBreakCoef</ref></defval>
        </param>
        <briefdescription>
<para>Initialize <ref refid="classmlpack_1_1kde_1_1KDEModel" kindref="compound">KDEModel</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bandwidth</parametername>
</parameternamelist>
<parameterdescription>
<para>Bandwidth to use for the kernel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>relError</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum relative error tolerance for each point in the model. For example, 0.05 means that each value must be within 5% of the true <ref refid="classmlpack_1_1kde_1_1KDE" kindref="compound">KDE</ref> value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>absError</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum absolute error tolerance for each point in the model. For example, 0.1 means that for each point the value can have a maximum error of 0.1 units. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kernelType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of kernel to use. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>treeType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of tree to use. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>monteCarlo</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to use Monte Carlo estimations when possible. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mcProb</parametername>
</parameternamelist>
<parameterdescription>
<para>of a Monte Carlo estimation to be bounded by relative error tolerance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialSampleSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial sample size for Monte Carlo estimations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mcEntryCoef</parametername>
</parameternamelist>
<parameterdescription>
<para>Coefficient to control how much larger does the amount of node descendants has to be compared to the initial sample size in order for it to be a candidate for Monte Carlo estimations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mcBreakCoef</parametername>
</parameternamelist>
<parameterdescription>
<para>Coefficient to control what fraction of the node&apos;s descendants evaluated is the limit before Monte Carlo estimation recurses. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="313" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1ae0feb41c790cd66b73b9b80ebfee3eee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDEModel</definition>
        <argsstring>(const KDEModel &amp;other)</argsstring>
        <name>KDEModel</name>
        <param>
          <type>const <ref refid="classmlpack_1_1kde_1_1KDEModel" kindref="compound">KDEModel</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor of the given model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="325" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1ae8c4ef0a1a70cf8f40d81741998ab553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KDEModel</definition>
        <argsstring>(KDEModel &amp;&amp;other)</argsstring>
        <name>KDEModel</name>
        <param>
          <type><ref refid="classmlpack_1_1kde_1_1KDEModel" kindref="compound">KDEModel</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Move constructor of the given model. Takes ownership of the model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="328" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1ad8baf08396802e5c81a0231298c676f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~KDEModel</definition>
        <argsstring>()</argsstring>
        <name>~KDEModel</name>
        <briefdescription>
<para>Destroy the <ref refid="classmlpack_1_1kde_1_1KDEModel" kindref="compound">KDEModel</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="345" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1aca74512f13027b15d913461e55df3da2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double AbsoluteError</definition>
        <argsstring>() const</argsstring>
        <name>AbsoluteError</name>
        <briefdescription>
<para>Get the absolute error tolerance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="364" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="364" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1a483f08ac8e9153c13d41e251c99d60b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AbsoluteError</definition>
        <argsstring>(const double newAbsError)</argsstring>
        <name>AbsoluteError</name>
        <param>
          <type>const double</type>
          <declname>newAbsError</declname>
        </param>
        <briefdescription>
<para>Modify the absolute error tolerance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="367" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1ae9cbd816179d6c36036139ccc8fea8c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Bandwidth</definition>
        <argsstring>() const</argsstring>
        <name>Bandwidth</name>
        <briefdescription>
<para>Get the bandwidth of the kernel. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="352" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="352" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1a7895968fbbc5b94d25fffbc285a8c5cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Bandwidth</definition>
        <argsstring>(const double newBandwidth)</argsstring>
        <name>Bandwidth</name>
        <param>
          <type>const double</type>
          <declname>newBandwidth</declname>
        </param>
        <briefdescription>
<para>Modify the bandwidth of the kernel. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="355" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1a746b74589783efc0ac89f108ee92cca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BuildModel</definition>
        <argsstring>(arma::mat &amp;&amp;referenceSet)</argsstring>
        <name>BuildModel</name>
        <param>
          <type>arma::mat &amp;&amp;</type>
          <declname>referenceSet</declname>
        </param>
        <briefdescription>
<para>Build the <ref refid="classmlpack_1_1kde_1_1KDE" kindref="compound">KDE</ref> model with the given parameters and then trains it with the given reference data. </para>        </briefdescription>
        <detaileddescription>
<para>Takes possession of the reference set to avoid a copy, so the reference set will not be usable after this.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>referenceSet</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of reference points. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="430" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1af7194c84540dfed2a4aabf1c03acef47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Evaluate</definition>
        <argsstring>(arma::mat &amp;&amp;querySet, arma::vec &amp;estimations)</argsstring>
        <name>Evaluate</name>
        <param>
          <type>arma::mat &amp;&amp;</type>
          <declname>querySet</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>estimations</declname>
        </param>
        <briefdescription>
<para>Perform kernel density estimation on the given query set. </para>        </briefdescription>
        <detaileddescription>
<para>Takes possession of the query set to avoid a copy, so the query set will not be usable after this. If possible, it returns normalized estimations.</para><para><simplesect kind="pre"><para>The model has to be previously created with BuildModel. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>querySet</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of query points. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>estimations</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector where the results will be stored in the same order as the query points. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="443" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1a995ae5cd93b97b9b96f4fb9b87c427c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Evaluate</definition>
        <argsstring>(arma::vec &amp;estimations)</argsstring>
        <name>Evaluate</name>
        <param>
          <type>arma::vec &amp;</type>
          <declname>estimations</declname>
        </param>
        <briefdescription>
<para>Perform kernel density estimation on the reference set. </para>        </briefdescription>
        <detaileddescription>
<para>If possible, it returns normalized estimations.</para><para><simplesect kind="pre"><para>The model has to be previously created with BuildModel. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>estimations</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector where the results will be stored in the same order as the query points. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="453" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1a555a4a9bdced7a608634c924677c71fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InitializeModel</definition>
        <argsstring>()</argsstring>
        <name>InitializeModel</name>
        <briefdescription>
<para>Initialize the <ref refid="classmlpack_1_1kde_1_1KDE" kindref="compound">KDE</ref> model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="420" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1a0f08fc745756dd035dcf6b42dddd4ed5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61" kindref="member">KernelTypes</ref></type>
        <definition>KernelTypes KernelType</definition>
        <argsstring>() const</argsstring>
        <name>KernelType</name>
        <briefdescription>
<para>Get the kernel type of the model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="376" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="376" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1ad94d196c8fc2a42899de31332737dbf9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61" kindref="member">KernelTypes</ref> &amp;</type>
        <definition>KernelTypes&amp; KernelType</definition>
        <argsstring>()</argsstring>
        <name>KernelType</name>
        <briefdescription>
<para>Modify the kernel type of the model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="379" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="379" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1a9c0a8d126dc31ef5571d89a1d8b6652a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double MCBreakCoefficient</definition>
        <argsstring>() const</argsstring>
        <name>MCBreakCoefficient</name>
        <briefdescription>
<para>Get Monte Carlo break coefficient. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="406" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="406" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1a37b06524e3ce6a667818ccd97ca3e7f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCBreakCoefficient</definition>
        <argsstring>(const double newBreakCoef)</argsstring>
        <name>MCBreakCoefficient</name>
        <param>
          <type>const double</type>
          <declname>newBreakCoef</declname>
        </param>
        <briefdescription>
<para>Modify Monte Carlo break coefficient. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="409" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1a0bd2b747cf6abfefe9095240199da326" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double MCEntryCoefficient</definition>
        <argsstring>() const</argsstring>
        <name>MCEntryCoefficient</name>
        <briefdescription>
<para>Get Monte Carlo entry coefficient. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="400" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="400" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1a8d16364dbe5a0bc7c5588cb2ba7cfb8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCEntryCoefficient</definition>
        <argsstring>(const double newEntryCoef)</argsstring>
        <name>MCEntryCoefficient</name>
        <param>
          <type>const double</type>
          <declname>newEntryCoef</declname>
        </param>
        <briefdescription>
<para>Modify Monte Carlo entry coefficient. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="403" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1a9c03312f8ff7dec25f32ba59dac70881" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t MCInitialSampleSize</definition>
        <argsstring>() const</argsstring>
        <name>MCInitialSampleSize</name>
        <briefdescription>
<para>Get the initial sample size for Monte Carlo estimations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="394" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="394" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1af2700f342fa534312acc8a8387847408" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCInitialSampleSize</definition>
        <argsstring>(const size_t newSampleSize)</argsstring>
        <name>MCInitialSampleSize</name>
        <param>
          <type>const size_t</type>
          <declname>newSampleSize</declname>
        </param>
        <briefdescription>
<para>Modify the initial sample size for Monte Carlo estimations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="397" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1a539085b4f4f70fecec611fc7415d0299" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double MCProbability</definition>
        <argsstring>() const</argsstring>
        <name>MCProbability</name>
        <briefdescription>
<para>Get Monte Carlo probability of error being bounded by relative error. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="388" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="388" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1ae8fd2bcc35a81f8b68d3244ed8d89bc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MCProbability</definition>
        <argsstring>(const double newMCProb)</argsstring>
        <name>MCProbability</name>
        <param>
          <type>const double</type>
          <declname>newMCProb</declname>
        </param>
        <briefdescription>
<para>Modify Monte Carlo probability of error being bounded by relative error. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="391" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1a6f3cb532b850ad02807a209193ff2289" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacemlpack_1_1kde_1a0ff4f94721e558082ebf9d0ef6183d38" kindref="member">KDEMode</ref></type>
        <definition>KDEMode Mode</definition>
        <argsstring>() const</argsstring>
        <name>Mode</name>
        <briefdescription>
<para>Get the mode of the model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="412" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="412" bodyend="412"/>
        <references refid="classmlpack_1_1kde_1_1KDEWrapperBase_1ab38fc729a0a6f58a4d9ef6e38a9959cf">KDEWrapperBase::Mode</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1a94b40037a0d33cbb55823d5c36d677a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacemlpack_1_1kde_1a0ff4f94721e558082ebf9d0ef6183d38" kindref="member">KDEMode</ref> &amp;</type>
        <definition>KDEMode&amp; Mode</definition>
        <argsstring>()</argsstring>
        <name>Mode</name>
        <briefdescription>
<para>Modify the mode of the model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="415" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="415" bodyend="415"/>
        <references refid="classmlpack_1_1kde_1_1KDEWrapperBase_1ab38fc729a0a6f58a4d9ef6e38a9959cf">KDEWrapperBase::Mode</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1aa7ca7b5a3a96b5603461debdc82f3c3e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool MonteCarlo</definition>
        <argsstring>() const</argsstring>
        <name>MonteCarlo</name>
        <briefdescription>
<para>Get whether the model is using Monte Carlo estimations or not. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="382" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="382" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1a3640495dcb137b48ad03c29a26fe4080" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MonteCarlo</definition>
        <argsstring>(const bool newMonteCarlo)</argsstring>
        <name>MonteCarlo</name>
        <param>
          <type>const bool</type>
          <declname>newMonteCarlo</declname>
        </param>
        <briefdescription>
<para>Modify whether the model is using Monte Carlo estimations or not. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="385" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1af3d32c8f38422d7dcb7a6b3bbbf5f404" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1kde_1_1KDEModel" kindref="compound">KDEModel</ref> &amp;</type>
        <definition>KDEModel&amp; operator=</definition>
        <argsstring>(const KDEModel &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmlpack_1_1kde_1_1KDEModel" kindref="compound">KDEModel</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy the given model. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classmlpack_1_1kde_1_1KDEModel" kindref="compound">KDEModel</ref> to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="335" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1a3d2f900bed1a1bae950c34099f1c1cb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1kde_1_1KDEModel" kindref="compound">KDEModel</ref> &amp;</type>
        <definition>KDEModel&amp; operator=</definition>
        <argsstring>(KDEModel &amp;&amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classmlpack_1_1kde_1_1KDEModel" kindref="compound">KDEModel</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Take ownership of the contents of the given model. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classmlpack_1_1kde_1_1KDEModel" kindref="compound">KDEModel</ref> to take ownership of. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="342" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1a2cd3d49a6dcafe980d0734421d296828" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double RelativeError</definition>
        <argsstring>() const</argsstring>
        <name>RelativeError</name>
        <briefdescription>
<para>Get the relative error tolerance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="358" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="358" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1a24a6ffff18a48102087ee7fc3339717d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RelativeError</definition>
        <argsstring>(const double newRelError)</argsstring>
        <name>RelativeError</name>
        <param>
          <type>const double</type>
          <declname>newRelError</declname>
        </param>
        <briefdescription>
<para>Modify the relative error tolerance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="361" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1a72d63b74c8166dff8e1a9006905ad9ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t version)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>version</declname>
        </param>
        <briefdescription>
<para>Serialize the <ref refid="classmlpack_1_1kde_1_1KDE" kindref="compound">KDE</ref> model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="349" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1adb3d0b75d7754ec6741d890232576ffc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8d" kindref="member">TreeTypes</ref></type>
        <definition>TreeTypes TreeType</definition>
        <argsstring>() const</argsstring>
        <name>TreeType</name>
        <briefdescription>
<para>Get the tree type of the model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="370" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="370" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1a56b0460c7769ea1ef9d8314026ef36c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8d" kindref="member">TreeTypes</ref> &amp;</type>
        <definition>TreeTypes&amp; TreeType</definition>
        <argsstring>()</argsstring>
        <name>TreeType</name>
        <briefdescription>
<para>Modify the tree type of the model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="373" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="373" bodyend="373"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEModel_1a444067d1e8832ff9d5c90d5d73045e5d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CleanMemory</definition>
        <argsstring>()</argsstring>
        <name>CleanMemory</name>
        <briefdescription>
<para>Clean memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="458" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classmlpack_1_1kde_1_1KDEModel" kindref="compound">KDEModel</ref> provides an abstraction for the <ref refid="classmlpack_1_1kde_1_1KDE" kindref="compound">KDE</ref> class, abstracting away the KernelType and TreeType parameters and allowing those to be specified at runtime. </para>    </briefdescription>
    <detaileddescription>
<para>This class is written for the sake of the <computeroutput>kde</computeroutput> binding, but it is not necessarily restricted to that usage. </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="230" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="229" bodyend="459"/>
    <listofallmembers>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a38e57e048afe37ef2a403d310a8dd9f8" prot="private" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>absError</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1aca74512f13027b15d913461e55df3da2" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>AbsoluteError</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a483f08ac8e9153c13d41e251c99d60b7" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>AbsoluteError</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8da994ef1bcca8841d5b7d1431b99fcb10d" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>BALL_TREE</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a3a14628ead92d0afcce5f53e0ff017c8" prot="private" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>bandwidth</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1ae9cbd816179d6c36036139ccc8fea8c8" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>Bandwidth</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a7895968fbbc5b94d25fffbc285a8c5cd" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>Bandwidth</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a746b74589783efc0ac89f108ee92cca3" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>BuildModel</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a444067d1e8832ff9d5c90d5d73045e5d" prot="private" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>CleanMemory</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8da92f172b47c8ae18ed401f8bf9f5ecad3" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>COVER_TREE</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61af0f03a73eb0dce407b0b027dc8f98cdc" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>EPANECHNIKOV_KERNEL</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1af7194c84540dfed2a4aabf1c03acef47" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>Evaluate</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a995ae5cd93b97b9b96f4fb9b87c427c9" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>Evaluate</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61af52665cc69ef62c8ad00a49c8e259c13" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>GAUSSIAN_KERNEL</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a555a4a9bdced7a608634c924677c71fd" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>InitializeModel</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a2e3a35723280d717b9c1db0a7d6471f6" prot="private" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>initialSampleSize</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8daa688e9cd1158916bc183aa517724568c" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>KD_TREE</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a231a4c7043e722e0615c30195dc8253b" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>KDEModel</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1ae0feb41c790cd66b73b9b80ebfee3eee" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>KDEModel</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1ae8c4ef0a1a70cf8f40d81741998ab553" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>KDEModel</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1af659f94ea6b9232498a689018c164216" prot="private" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>kdeModel</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a0f08fc745756dd035dcf6b42dddd4ed5" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>KernelType</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1ad94d196c8fc2a42899de31332737dbf9" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>KernelType</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a5095659d9f5bfca38fb028c37ddbdf64" prot="private" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>kernelType</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>KernelTypes</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61ac188c6a7e514f7ccf2fc1ac5160e30c6" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>LAPLACIAN_KERNEL</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a685ab3f2bb8273358bcfe2870b6ccfbe" prot="private" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>mcBreakCoef</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a9c0a8d126dc31ef5571d89a1d8b6652a" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>MCBreakCoefficient</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a37b06524e3ce6a667818ccd97ca3e7f0" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>MCBreakCoefficient</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1ae636b3c1a2b7bf752d59837d40d98976" prot="private" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>mcEntryCoef</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a0bd2b747cf6abfefe9095240199da326" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>MCEntryCoefficient</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a8d16364dbe5a0bc7c5588cb2ba7cfb8f" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>MCEntryCoefficient</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a9c03312f8ff7dec25f32ba59dac70881" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>MCInitialSampleSize</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1af2700f342fa534312acc8a8387847408" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>MCInitialSampleSize</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1afb23ca9afeecf748091eac2474625e23" prot="private" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>mcProb</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a539085b4f4f70fecec611fc7415d0299" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>MCProbability</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1ae8fd2bcc35a81f8b68d3244ed8d89bc1" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>MCProbability</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a6f3cb532b850ad02807a209193ff2289" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>Mode</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a94b40037a0d33cbb55823d5c36d677a7" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>Mode</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1aa7ca7b5a3a96b5603461debdc82f3c3e" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>MonteCarlo</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a3640495dcb137b48ad03c29a26fe4080" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>MonteCarlo</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1ac095a4deea604e3737439eb0e578e403" prot="private" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>monteCarlo</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8daabefbb1ea7a801b1b00c9b0709dcec50" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>OCTREE</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1af3d32c8f38422d7dcb7a6b3bbbf5f404" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>operator=</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a3d2f900bed1a1bae950c34099f1c1cb4" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>operator=</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8da2a93dc779a94d5f09b72ffbdc5ac9cd9" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>R_TREE</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a2cd3d49a6dcafe980d0734421d296828" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>RelativeError</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a24a6ffff18a48102087ee7fc3339717d" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>RelativeError</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a2556780cd95fe475d055ddd520d04470" prot="private" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>relError</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a72d63b74c8166dff8e1a9006905ad9ca" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61aa2896ec0bb1099c97a137e4ca80bdc9b" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>SPHERICAL_KERNEL</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1adb3d0b75d7754ec6741d890232576ffc" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>TreeType</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a56b0460c7769ea1ef9d8314026ef36c6" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>TreeType</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a4c037c9b8e9f3f7d429a0f3f4326a067" prot="private" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>treeType</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8d" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>TreeTypes</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61a54d012af1c18f0d33fc7b76ee3d164fe" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>TRIANGULAR_KERNEL</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEModel_1ad8baf08396802e5c81a0231298c676f3" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEModel</scope><name>~KDEModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
