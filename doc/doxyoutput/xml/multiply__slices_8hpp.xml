<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="multiply__slices_8hpp" kind="file" language="C++">
    <compoundname>multiply_slices.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="yes">multiply_slices_impl.hpp</includes>
    <incdepgraph>
      <node id="12658">
        <label>list</label>
      </node>
      <node id="12655">
        <label>atomic</label>
      </node>
      <node id="12645">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="12621">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="12657">
        <label>iomanip</label>
      </node>
      <node id="12607">
        <label>/home/aakash/mlpack/src/mlpack/core/math/multiply_slices.hpp</label>
        <link refid="multiply__slices_8hpp"/>
        <childnode refid="12608" relation="include">
        </childnode>
        <childnode refid="12665" relation="include">
        </childnode>
      </node>
      <node id="12630">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="12631" relation="include">
        </childnode>
        <childnode refid="12633" relation="include">
        </childnode>
      </node>
      <node id="12613">
        <label>cstdint</label>
      </node>
      <node id="12622">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="12629">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="12652">
        <label>arma_config.hpp</label>
      </node>
      <node id="12642">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="12609">
        <label>cmath</label>
      </node>
      <node id="12628">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="12617">
        <label>stdexcept</label>
      </node>
      <node id="12637">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="12622" relation="include">
        </childnode>
        <childnode refid="12624" relation="include">
        </childnode>
        <childnode refid="12625" relation="include">
        </childnode>
        <childnode refid="12623" relation="include">
        </childnode>
      </node>
      <node id="12661">
        <label>string</label>
      </node>
      <node id="12649">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="12650" relation="include">
        </childnode>
        <childnode refid="12616" relation="include">
        </childnode>
      </node>
      <node id="12659">
        <label>map</label>
      </node>
      <node id="12611">
        <label>cfloat</label>
      </node>
      <node id="12641">
        <label>boost/variant.hpp</label>
      </node>
      <node id="12663">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="12625">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="12648">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="12649" relation="include">
        </childnode>
        <childnode refid="12625" relation="include">
        </childnode>
        <childnode refid="12632" relation="include">
        </childnode>
        <childnode refid="12650" relation="include">
        </childnode>
      </node>
      <node id="12638">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="12636">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="12622" relation="include">
        </childnode>
        <childnode refid="12624" relation="include">
        </childnode>
        <childnode refid="12625" relation="include">
        </childnode>
        <childnode refid="12623" relation="include">
        </childnode>
      </node>
      <node id="12639">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="12622" relation="include">
        </childnode>
        <childnode refid="12624" relation="include">
        </childnode>
        <childnode refid="12625" relation="include">
        </childnode>
        <childnode refid="12623" relation="include">
        </childnode>
      </node>
      <node id="12627">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="12647">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="12623" relation="include">
        </childnode>
        <childnode refid="12624" relation="include">
        </childnode>
        <childnode refid="12625" relation="include">
        </childnode>
        <childnode refid="12635" relation="include">
        </childnode>
        <childnode refid="12644" relation="include">
        </childnode>
      </node>
      <node id="12651">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="12652" relation="include">
        </childnode>
      </node>
      <node id="12653">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="12608">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="12609" relation="include">
        </childnode>
        <childnode refid="12610" relation="include">
        </childnode>
        <childnode refid="12611" relation="include">
        </childnode>
        <childnode refid="12612" relation="include">
        </childnode>
        <childnode refid="12613" relation="include">
        </childnode>
        <childnode refid="12614" relation="include">
        </childnode>
        <childnode refid="12615" relation="include">
        </childnode>
        <childnode refid="12616" relation="include">
        </childnode>
        <childnode refid="12617" relation="include">
        </childnode>
        <childnode refid="12618" relation="include">
        </childnode>
        <childnode refid="12619" relation="include">
        </childnode>
        <childnode refid="12620" relation="include">
        </childnode>
        <childnode refid="12621" relation="include">
        </childnode>
        <childnode refid="12622" relation="include">
        </childnode>
        <childnode refid="12623" relation="include">
        </childnode>
        <childnode refid="12624" relation="include">
        </childnode>
        <childnode refid="12625" relation="include">
        </childnode>
        <childnode refid="12626" relation="include">
        </childnode>
        <childnode refid="12627" relation="include">
        </childnode>
        <childnode refid="12628" relation="include">
        </childnode>
        <childnode refid="12629" relation="include">
        </childnode>
        <childnode refid="12630" relation="include">
        </childnode>
        <childnode refid="12634" relation="include">
        </childnode>
        <childnode refid="12635" relation="include">
        </childnode>
        <childnode refid="12636" relation="include">
        </childnode>
        <childnode refid="12637" relation="include">
        </childnode>
        <childnode refid="12638" relation="include">
        </childnode>
        <childnode refid="12639" relation="include">
        </childnode>
        <childnode refid="12640" relation="include">
        </childnode>
        <childnode refid="12646" relation="include">
        </childnode>
        <childnode refid="12647" relation="include">
        </childnode>
        <childnode refid="12644" relation="include">
        </childnode>
        <childnode refid="12648" relation="include">
        </childnode>
        <childnode refid="12651" relation="include">
        </childnode>
        <childnode refid="12653" relation="include">
        </childnode>
        <childnode refid="12654" relation="include">
        </childnode>
        <childnode refid="12663" relation="include">
        </childnode>
        <childnode refid="12664" relation="include">
        </childnode>
      </node>
      <node id="12614">
        <label>cstdio</label>
      </node>
      <node id="12618">
        <label>tuple</label>
      </node>
      <node id="12623">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="12640">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="12623" relation="include">
        </childnode>
        <childnode refid="12624" relation="include">
        </childnode>
        <childnode refid="12625" relation="include">
        </childnode>
        <childnode refid="12627" relation="include">
        </childnode>
        <childnode refid="12641" relation="include">
        </childnode>
        <childnode refid="12642" relation="include">
        </childnode>
        <childnode refid="12643" relation="include">
        </childnode>
        <childnode refid="12644" relation="include">
        </childnode>
      </node>
      <node id="12619">
        <label>utility</label>
      </node>
      <node id="12643">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="12634">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="12631">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="12632" relation="include">
        </childnode>
      </node>
      <node id="12654">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="12655" relation="include">
        </childnode>
        <childnode refid="12656" relation="include">
        </childnode>
        <childnode refid="12657" relation="include">
        </childnode>
        <childnode refid="12658" relation="include">
        </childnode>
        <childnode refid="12659" relation="include">
        </childnode>
        <childnode refid="12660" relation="include">
        </childnode>
        <childnode refid="12661" relation="include">
        </childnode>
        <childnode refid="12662" relation="include">
        </childnode>
      </node>
      <node id="12632">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="12646">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="12644" relation="include">
        </childnode>
        <childnode refid="12640" relation="include">
        </childnode>
        <childnode refid="12647" relation="include">
        </childnode>
      </node>
      <node id="12615">
        <label>cstdlib</label>
      </node>
      <node id="12610">
        <label>cctype</label>
      </node>
      <node id="12633">
        <label>unordered_map</label>
      </node>
      <node id="12612">
        <label>climits</label>
      </node>
      <node id="12660">
        <label>mutex</label>
      </node>
      <node id="12665">
        <label>multiply_slices_impl.hpp</label>
      </node>
      <node id="12656">
        <label>chrono</label>
      </node>
      <node id="12664">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="12662">
        <label>thread</label>
      </node>
      <node id="12650">
        <label>type_traits</label>
      </node>
      <node id="12626">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="12620">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="12644">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="12622" relation="include">
        </childnode>
        <childnode refid="12623" relation="include">
        </childnode>
        <childnode refid="12624" relation="include">
        </childnode>
        <childnode refid="12625" relation="include">
        </childnode>
        <childnode refid="12645" relation="include">
        </childnode>
      </node>
      <node id="12616">
        <label>cstring</label>
      </node>
      <node id="12635">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="12624">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1math">mlpack::math</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Mrityunjay Tripathi</para></simplesect>
Function to perform matrix multiplication on cubes.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_MATH_MULTIPLY_SLICES_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_MATH_MULTIPLY_SLICES_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">math<sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CubeType&gt;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">CubeType<sp/><ref refid="namespacemlpack_1_1math_1a047dc14951af6707554936acb575ecdd" kindref="member">MultiplyCube2Cube</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CubeType&amp;<sp/>cubeA,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CubeType&amp;<sp/>cubeB,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>aTranspose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bTranspose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CubeType&gt;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">CubeType<sp/><ref refid="namespacemlpack_1_1math_1a6921a2dfaeb07fc6c47616b9fabdffce" kindref="member">MultiplyMat2Cube</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>matA,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CubeType&amp;<sp/>cubeB,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>aTranspose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bTranspose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CubeType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">CubeType<sp/><ref refid="namespacemlpack_1_1math_1a75d67d2fe4e1046bfdc903f32a4b0230" kindref="member">MultiplyCube2Mat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CubeType&amp;<sp/>cubeA,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>matB,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>aTranspose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bTranspose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>math</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;multiply_slices_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/math/multiply_slices.hpp"/>
  </compounddef>
</doxygen>
