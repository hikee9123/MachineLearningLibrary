<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="multiply__slices_8hpp" kind="file" language="C++">
    <compoundname>multiply_slices.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="yes">multiply_slices_impl.hpp</includes>
    <incdepgraph>
      <node id="12478">
        <label>list</label>
      </node>
      <node id="12475">
        <label>atomic</label>
      </node>
      <node id="12465">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="12441">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="12477">
        <label>iomanip</label>
      </node>
      <node id="12427">
        <label>/home/aakash/mlpack/src/mlpack/core/math/multiply_slices.hpp</label>
        <link refid="multiply__slices_8hpp"/>
        <childnode refid="12428" relation="include">
        </childnode>
        <childnode refid="12485" relation="include">
        </childnode>
      </node>
      <node id="12450">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="12451" relation="include">
        </childnode>
        <childnode refid="12453" relation="include">
        </childnode>
      </node>
      <node id="12433">
        <label>cstdint</label>
      </node>
      <node id="12442">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="12449">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="12472">
        <label>arma_config.hpp</label>
      </node>
      <node id="12462">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="12429">
        <label>cmath</label>
      </node>
      <node id="12448">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="12437">
        <label>stdexcept</label>
      </node>
      <node id="12457">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="12442" relation="include">
        </childnode>
        <childnode refid="12444" relation="include">
        </childnode>
        <childnode refid="12445" relation="include">
        </childnode>
        <childnode refid="12443" relation="include">
        </childnode>
      </node>
      <node id="12481">
        <label>string</label>
      </node>
      <node id="12469">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="12470" relation="include">
        </childnode>
        <childnode refid="12436" relation="include">
        </childnode>
      </node>
      <node id="12479">
        <label>map</label>
      </node>
      <node id="12431">
        <label>cfloat</label>
      </node>
      <node id="12461">
        <label>boost/variant.hpp</label>
      </node>
      <node id="12483">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="12445">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="12468">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="12469" relation="include">
        </childnode>
        <childnode refid="12445" relation="include">
        </childnode>
        <childnode refid="12452" relation="include">
        </childnode>
        <childnode refid="12470" relation="include">
        </childnode>
      </node>
      <node id="12458">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="12456">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="12442" relation="include">
        </childnode>
        <childnode refid="12444" relation="include">
        </childnode>
        <childnode refid="12445" relation="include">
        </childnode>
        <childnode refid="12443" relation="include">
        </childnode>
      </node>
      <node id="12459">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="12442" relation="include">
        </childnode>
        <childnode refid="12444" relation="include">
        </childnode>
        <childnode refid="12445" relation="include">
        </childnode>
        <childnode refid="12443" relation="include">
        </childnode>
      </node>
      <node id="12447">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="12467">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="12443" relation="include">
        </childnode>
        <childnode refid="12444" relation="include">
        </childnode>
        <childnode refid="12445" relation="include">
        </childnode>
        <childnode refid="12455" relation="include">
        </childnode>
        <childnode refid="12464" relation="include">
        </childnode>
      </node>
      <node id="12471">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="12472" relation="include">
        </childnode>
      </node>
      <node id="12473">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="12428">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="12429" relation="include">
        </childnode>
        <childnode refid="12430" relation="include">
        </childnode>
        <childnode refid="12431" relation="include">
        </childnode>
        <childnode refid="12432" relation="include">
        </childnode>
        <childnode refid="12433" relation="include">
        </childnode>
        <childnode refid="12434" relation="include">
        </childnode>
        <childnode refid="12435" relation="include">
        </childnode>
        <childnode refid="12436" relation="include">
        </childnode>
        <childnode refid="12437" relation="include">
        </childnode>
        <childnode refid="12438" relation="include">
        </childnode>
        <childnode refid="12439" relation="include">
        </childnode>
        <childnode refid="12440" relation="include">
        </childnode>
        <childnode refid="12441" relation="include">
        </childnode>
        <childnode refid="12442" relation="include">
        </childnode>
        <childnode refid="12443" relation="include">
        </childnode>
        <childnode refid="12444" relation="include">
        </childnode>
        <childnode refid="12445" relation="include">
        </childnode>
        <childnode refid="12446" relation="include">
        </childnode>
        <childnode refid="12447" relation="include">
        </childnode>
        <childnode refid="12448" relation="include">
        </childnode>
        <childnode refid="12449" relation="include">
        </childnode>
        <childnode refid="12450" relation="include">
        </childnode>
        <childnode refid="12454" relation="include">
        </childnode>
        <childnode refid="12455" relation="include">
        </childnode>
        <childnode refid="12456" relation="include">
        </childnode>
        <childnode refid="12457" relation="include">
        </childnode>
        <childnode refid="12458" relation="include">
        </childnode>
        <childnode refid="12459" relation="include">
        </childnode>
        <childnode refid="12460" relation="include">
        </childnode>
        <childnode refid="12466" relation="include">
        </childnode>
        <childnode refid="12467" relation="include">
        </childnode>
        <childnode refid="12464" relation="include">
        </childnode>
        <childnode refid="12468" relation="include">
        </childnode>
        <childnode refid="12471" relation="include">
        </childnode>
        <childnode refid="12473" relation="include">
        </childnode>
        <childnode refid="12474" relation="include">
        </childnode>
        <childnode refid="12483" relation="include">
        </childnode>
        <childnode refid="12484" relation="include">
        </childnode>
      </node>
      <node id="12434">
        <label>cstdio</label>
      </node>
      <node id="12438">
        <label>tuple</label>
      </node>
      <node id="12443">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="12460">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="12443" relation="include">
        </childnode>
        <childnode refid="12444" relation="include">
        </childnode>
        <childnode refid="12445" relation="include">
        </childnode>
        <childnode refid="12447" relation="include">
        </childnode>
        <childnode refid="12461" relation="include">
        </childnode>
        <childnode refid="12462" relation="include">
        </childnode>
        <childnode refid="12463" relation="include">
        </childnode>
        <childnode refid="12464" relation="include">
        </childnode>
      </node>
      <node id="12439">
        <label>utility</label>
      </node>
      <node id="12463">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="12454">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="12451">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="12452" relation="include">
        </childnode>
      </node>
      <node id="12474">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="12475" relation="include">
        </childnode>
        <childnode refid="12476" relation="include">
        </childnode>
        <childnode refid="12477" relation="include">
        </childnode>
        <childnode refid="12478" relation="include">
        </childnode>
        <childnode refid="12479" relation="include">
        </childnode>
        <childnode refid="12480" relation="include">
        </childnode>
        <childnode refid="12481" relation="include">
        </childnode>
        <childnode refid="12482" relation="include">
        </childnode>
      </node>
      <node id="12452">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="12466">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="12464" relation="include">
        </childnode>
        <childnode refid="12460" relation="include">
        </childnode>
        <childnode refid="12467" relation="include">
        </childnode>
      </node>
      <node id="12435">
        <label>cstdlib</label>
      </node>
      <node id="12430">
        <label>cctype</label>
      </node>
      <node id="12453">
        <label>unordered_map</label>
      </node>
      <node id="12432">
        <label>climits</label>
      </node>
      <node id="12480">
        <label>mutex</label>
      </node>
      <node id="12485">
        <label>multiply_slices_impl.hpp</label>
      </node>
      <node id="12476">
        <label>chrono</label>
      </node>
      <node id="12484">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="12482">
        <label>thread</label>
      </node>
      <node id="12470">
        <label>type_traits</label>
      </node>
      <node id="12446">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="12440">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="12464">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="12442" relation="include">
        </childnode>
        <childnode refid="12443" relation="include">
        </childnode>
        <childnode refid="12444" relation="include">
        </childnode>
        <childnode refid="12445" relation="include">
        </childnode>
        <childnode refid="12465" relation="include">
        </childnode>
      </node>
      <node id="12436">
        <label>cstring</label>
      </node>
      <node id="12455">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="12444">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1math">mlpack::math</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Mrityunjay Tripathi</para></simplesect>
Function to perform matrix multiplication on cubes.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_MATH_MULTIPLY_SLICES_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_MATH_MULTIPLY_SLICES_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">math<sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CubeType&gt;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">CubeType<sp/><ref refid="namespacemlpack_1_1math_1a047dc14951af6707554936acb575ecdd" kindref="member">MultiplyCube2Cube</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CubeType&amp;<sp/>cubeA,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CubeType&amp;<sp/>cubeB,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>aTranspose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bTranspose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CubeType&gt;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">CubeType<sp/><ref refid="namespacemlpack_1_1math_1a6921a2dfaeb07fc6c47616b9fabdffce" kindref="member">MultiplyMat2Cube</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>matA,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CubeType&amp;<sp/>cubeB,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>aTranspose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bTranspose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CubeType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">CubeType<sp/><ref refid="namespacemlpack_1_1math_1a75d67d2fe4e1046bfdc903f32a4b0230" kindref="member">MultiplyCube2Mat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CubeType&amp;<sp/>cubeA,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>matB,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>aTranspose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bTranspose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>math</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;multiply_slices_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/math/multiply_slices.hpp"/>
  </compounddef>
</doxygen>
