<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1neighbor_1_1SpillNSWrapper" kind="class" language="C++" prot="public">
    <compoundname>mlpack::neighbor::SpillNSWrapper</compoundname>
    <basecompoundref refid="classmlpack_1_1neighbor_1_1NSWrapper" prot="public" virt="non-virtual">NSWrapper&lt; SortPolicy, tree::SPTree, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistDualTreeTraverser, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistSingleTreeTraverser &gt;</basecompoundref>
    <includes refid="ns__model_8hpp" local="no">ns_model.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename SortPolicy</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1SpillNSWrapper_1a85c6919690f25dd0cf0bd93c9e1110e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SpillNSWrapper</definition>
        <argsstring>(const NeighborSearchMode searchMode, const double epsilon)</argsstring>
        <name>SpillNSWrapper</name>
        <param>
          <type>const <ref refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15" kindref="member">NeighborSearchMode</ref></type>
          <declname>searchMode</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
<para>Construct the <ref refid="classmlpack_1_1neighbor_1_1SpillNSWrapper" kindref="compound">SpillNSWrapper</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="274" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="274" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1SpillNSWrapper_1ac0de56010f449839feb1a03bc66ca453" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual ~SpillNSWrapper</definition>
        <argsstring>()</argsstring>
        <name>~SpillNSWrapper</name>
        <briefdescription>
<para>Destruct the <ref refid="classmlpack_1_1neighbor_1_1SpillNSWrapper" kindref="compound">SpillNSWrapper</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="291" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="291" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1SpillNSWrapper_1a09080a653d528fcd34bb630ea566badb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classmlpack_1_1neighbor_1_1SpillNSWrapper" kindref="compound">SpillNSWrapper</ref> *</type>
        <definition>virtual SpillNSWrapper* Clone</definition>
        <argsstring>() const</argsstring>
        <name>Clone</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1NSWrapper_1a99ca7e011f7ab92c5ba440bc1304536d">Clone</reimplements>
        <briefdescription>
<para>Return a copy of the <ref refid="classmlpack_1_1neighbor_1_1SpillNSWrapper" kindref="compound">SpillNSWrapper</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="294" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="294" bodyend="294"/>
        <references refid="classmlpack_1_1neighbor_1_1NSWrapperBase_1a77e0c8a26bf09774799738767d39e898">NSWrapperBase::Search</references>
        <references refid="classmlpack_1_1neighbor_1_1NSWrapperBase_1a17c2adbcf179c81dd6337d0424b945b8">NSWrapperBase::Train</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1SpillNSWrapper_1a426eb7af072a5176fff19e1ec42b4318" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Search</definition>
        <argsstring>(util::Timers &amp;timers, arma::mat &amp;&amp;querySet, const size_t k, arma::Mat&lt; size_t &gt; &amp;neighbors, arma::mat &amp;distances, const size_t leafSize, const double rho)</argsstring>
        <name>Search</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1NSWrapper_1a9e5c7f49611693baf982d577abcdffc4">Search</reimplements>
        <param>
          <type><ref refid="classmlpack_1_1util_1_1Timers" kindref="compound">util::Timers</ref> &amp;</type>
          <declname>timers</declname>
        </param>
        <param>
          <type>arma::mat &amp;&amp;</type>
          <declname>querySet</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>neighbors</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>distances</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>leafSize</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>rho</declname>
        </param>
        <briefdescription>
<para>Perform bichromatic search (i.e. </para>        </briefdescription>
        <detaileddescription>
<para>search with a different query set) using the given parameters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="305" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1SpillNSWrapper_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the <ref refid="classmlpack_1_1neighbor_1_1NeighborSearch" kindref="compound">NeighborSearch</ref> model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="315" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="315" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1SpillNSWrapper_1aadb567979423035ec7e671b2f48dbd6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Train</definition>
        <argsstring>(util::Timers &amp;timers, arma::mat &amp;&amp;referenceSet, const size_t leafSize, const double tau, const double rho)</argsstring>
        <name>Train</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1NSWrapper_1af9d87167b758e59c7cc44492904d9acb">Train</reimplements>
        <param>
          <type><ref refid="classmlpack_1_1util_1_1Timers" kindref="compound">util::Timers</ref> &amp;</type>
          <declname>timers</declname>
        </param>
        <param>
          <type>arma::mat &amp;&amp;</type>
          <declname>referenceSet</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>leafSize</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>rho</declname>
        </param>
        <briefdescription>
<para>Train the model using the given parameters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="297" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classmlpack_1_1neighbor_1_1SpillNSWrapper" kindref="compound">SpillNSWrapper</ref> class wraps the <ref refid="classmlpack_1_1neighbor_1_1NeighborSearch" kindref="compound">NeighborSearch</ref> class when the spill tree is used. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1148">
        <label>NSWrapperBase</label>
        <link refid="classmlpack_1_1neighbor_1_1NSWrapperBase"/>
      </node>
      <node id="1149">
        <label>NSWrapper&lt; SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1NSWrapper"/>
        <childnode refid="1148" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1146">
        <label>SpillNSWrapper&lt; SortPolicy &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1SpillNSWrapper"/>
        <childnode refid="1147" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1147">
        <label>NSWrapper&lt; SortPolicy, tree::SPTree, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistDualTreeTraverser, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistSingleTreeTraverser &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1NSWrapper"/>
        <childnode refid="1148" relation="public-inheritance">
        </childnode>
        <childnode refid="1149" relation="template-instance">
          <edgelabel>&lt; SortPolicy, tree::SPTree, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistDualTreeTraverser, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistSingleTreeTraverser &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1154">
        <label>NeighborSearch&lt; SortPolicy, MetricType, MatType, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1NeighborSearch"/>
      </node>
      <node id="1153">
        <label>NeighborSearch&lt; SortPolicy, metric::EuclideanDistance, arma::mat, tree::SPTree, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistDualTreeTraverser, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistSingleTreeTraverser &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1NeighborSearch"/>
        <childnode refid="1154" relation="template-instance">
          <edgelabel>&lt; SortPolicy, metric::EuclideanDistance, arma::mat, tree::SPTree, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistDualTreeTraverser, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistSingleTreeTraverser &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1152">
        <label>NSWrapperBase</label>
        <link refid="classmlpack_1_1neighbor_1_1NSWrapperBase"/>
      </node>
      <node id="1155">
        <label>NSWrapper&lt; SortPolicy, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1NSWrapper"/>
        <childnode refid="1152" relation="public-inheritance">
        </childnode>
        <childnode refid="1156" relation="usage">
          <edgelabel>ns</edgelabel>
        </childnode>
      </node>
      <node id="1150">
        <label>SpillNSWrapper&lt; SortPolicy &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1SpillNSWrapper"/>
        <childnode refid="1151" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1156">
        <label>NeighborSearch&lt; SortPolicy, metric::EuclideanDistance, arma::mat, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1NeighborSearch"/>
        <childnode refid="1154" relation="template-instance">
          <edgelabel>&lt; SortPolicy, metric::EuclideanDistance, arma::mat, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1151">
        <label>NSWrapper&lt; SortPolicy, tree::SPTree, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistDualTreeTraverser, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistSingleTreeTraverser &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1NSWrapper"/>
        <childnode refid="1152" relation="public-inheritance">
        </childnode>
        <childnode refid="1153" relation="usage">
          <edgelabel>ns</edgelabel>
        </childnode>
        <childnode refid="1155" relation="template-instance">
          <edgelabel>&lt; SortPolicy, tree::SPTree, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistDualTreeTraverser, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistSingleTreeTraverser &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="271" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="261" bodyend="330"/>
    <listofallmembers>
      <member refid="classmlpack_1_1neighbor_1_1SpillNSWrapper_1a09080a653d528fcd34bb630ea566badb" prot="public" virt="virtual"><scope>mlpack::neighbor::SpillNSWrapper</scope><name>Clone</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1aff320b9a86b77a150e630c01d5888273" prot="public" virt="virtual"><scope>mlpack::neighbor::SpillNSWrapper</scope><name>Dataset</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1af6d960193bb5db37e51416e12bf720de" prot="public" virt="virtual"><scope>mlpack::neighbor::SpillNSWrapper</scope><name>Epsilon</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1ab6a080993b32456443eced5df2f8b9b9" prot="public" virt="virtual"><scope>mlpack::neighbor::SpillNSWrapper</scope><name>Epsilon</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1a36863b56066068618466a828a1e75578" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::SpillNSWrapper</scope><name>ns</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1ad2fc06b46e6469a058f3a27bcc1ba9ef" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::SpillNSWrapper</scope><name>NSType</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1aa5e9531452fb70b839ae680037add615" prot="public" virt="non-virtual"><scope>mlpack::neighbor::SpillNSWrapper</scope><name>NSWrapper</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapperBase_1afe3cd9a0f215a7de10b6d31cbfc33dca" prot="public" virt="non-virtual"><scope>mlpack::neighbor::SpillNSWrapper</scope><name>NSWrapperBase</name></member>
      <member refid="classmlpack_1_1neighbor_1_1SpillNSWrapper_1a426eb7af072a5176fff19e1ec42b4318" prot="public" virt="virtual"><scope>mlpack::neighbor::SpillNSWrapper</scope><name>Search</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1a6c6cf8fe51983b2f1597f70753ca2d1a" prot="public" virt="virtual" ambiguityscope="NSWrapper&lt; SortPolicy, tree::SPTree, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistDualTreeTraverser, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistSingleTreeTraverser &gt;::"><scope>mlpack::neighbor::SpillNSWrapper</scope><name>Search</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1a23cdc4b734a3dc41722aaded92244fd4" prot="public" virt="virtual"><scope>mlpack::neighbor::SpillNSWrapper</scope><name>SearchMode</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1a6071cc412821cb4ce4364fbc2a0a8533" prot="public" virt="virtual"><scope>mlpack::neighbor::SpillNSWrapper</scope><name>SearchMode</name></member>
      <member refid="classmlpack_1_1neighbor_1_1SpillNSWrapper_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::neighbor::SpillNSWrapper</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1neighbor_1_1SpillNSWrapper_1a85c6919690f25dd0cf0bd93c9e1110e1" prot="public" virt="non-virtual"><scope>mlpack::neighbor::SpillNSWrapper</scope><name>SpillNSWrapper</name></member>
      <member refid="classmlpack_1_1neighbor_1_1SpillNSWrapper_1aadb567979423035ec7e671b2f48dbd6b" prot="public" virt="virtual"><scope>mlpack::neighbor::SpillNSWrapper</scope><name>Train</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapper_1a33da04d4db6bb80d7354d3a3839bb408" prot="public" virt="virtual"><scope>mlpack::neighbor::SpillNSWrapper</scope><name>~NSWrapper</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSWrapperBase_1a62d0554213b6a374ac784bd040c4377d" prot="public" virt="virtual"><scope>mlpack::neighbor::SpillNSWrapper</scope><name>~NSWrapperBase</name></member>
      <member refid="classmlpack_1_1neighbor_1_1SpillNSWrapper_1ac0de56010f449839feb1a03bc66ca453" prot="public" virt="virtual"><scope>mlpack::neighbor::SpillNSWrapper</scope><name>~SpillNSWrapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
