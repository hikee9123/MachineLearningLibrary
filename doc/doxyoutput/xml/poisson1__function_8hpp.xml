<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="poisson1__function_8hpp" kind="file" language="C++">
    <compoundname>poisson1_function.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <incdepgraph>
      <node id="25315">
        <label>list</label>
      </node>
      <node id="25312">
        <label>atomic</label>
      </node>
      <node id="25302">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="25278">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="25314">
        <label>iomanip</label>
      </node>
      <node id="25287">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="25288" relation="include">
        </childnode>
        <childnode refid="25290" relation="include">
        </childnode>
      </node>
      <node id="25270">
        <label>cstdint</label>
      </node>
      <node id="25279">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="25286">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="25309">
        <label>arma_config.hpp</label>
      </node>
      <node id="25299">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="25266">
        <label>cmath</label>
      </node>
      <node id="25285">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="25274">
        <label>stdexcept</label>
      </node>
      <node id="25294">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="25279" relation="include">
        </childnode>
        <childnode refid="25281" relation="include">
        </childnode>
        <childnode refid="25282" relation="include">
        </childnode>
        <childnode refid="25280" relation="include">
        </childnode>
      </node>
      <node id="25318">
        <label>string</label>
      </node>
      <node id="25306">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="25307" relation="include">
        </childnode>
        <childnode refid="25273" relation="include">
        </childnode>
      </node>
      <node id="25316">
        <label>map</label>
      </node>
      <node id="25268">
        <label>cfloat</label>
      </node>
      <node id="25298">
        <label>boost/variant.hpp</label>
      </node>
      <node id="25320">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="25282">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="25305">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="25306" relation="include">
        </childnode>
        <childnode refid="25282" relation="include">
        </childnode>
        <childnode refid="25289" relation="include">
        </childnode>
        <childnode refid="25307" relation="include">
        </childnode>
      </node>
      <node id="25295">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="25293">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="25279" relation="include">
        </childnode>
        <childnode refid="25281" relation="include">
        </childnode>
        <childnode refid="25282" relation="include">
        </childnode>
        <childnode refid="25280" relation="include">
        </childnode>
      </node>
      <node id="25296">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="25279" relation="include">
        </childnode>
        <childnode refid="25281" relation="include">
        </childnode>
        <childnode refid="25282" relation="include">
        </childnode>
        <childnode refid="25280" relation="include">
        </childnode>
      </node>
      <node id="25284">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="25304">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="25280" relation="include">
        </childnode>
        <childnode refid="25281" relation="include">
        </childnode>
        <childnode refid="25282" relation="include">
        </childnode>
        <childnode refid="25292" relation="include">
        </childnode>
        <childnode refid="25301" relation="include">
        </childnode>
      </node>
      <node id="25308">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="25309" relation="include">
        </childnode>
      </node>
      <node id="25310">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="25265">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="25266" relation="include">
        </childnode>
        <childnode refid="25267" relation="include">
        </childnode>
        <childnode refid="25268" relation="include">
        </childnode>
        <childnode refid="25269" relation="include">
        </childnode>
        <childnode refid="25270" relation="include">
        </childnode>
        <childnode refid="25271" relation="include">
        </childnode>
        <childnode refid="25272" relation="include">
        </childnode>
        <childnode refid="25273" relation="include">
        </childnode>
        <childnode refid="25274" relation="include">
        </childnode>
        <childnode refid="25275" relation="include">
        </childnode>
        <childnode refid="25276" relation="include">
        </childnode>
        <childnode refid="25277" relation="include">
        </childnode>
        <childnode refid="25278" relation="include">
        </childnode>
        <childnode refid="25279" relation="include">
        </childnode>
        <childnode refid="25280" relation="include">
        </childnode>
        <childnode refid="25281" relation="include">
        </childnode>
        <childnode refid="25282" relation="include">
        </childnode>
        <childnode refid="25283" relation="include">
        </childnode>
        <childnode refid="25284" relation="include">
        </childnode>
        <childnode refid="25285" relation="include">
        </childnode>
        <childnode refid="25286" relation="include">
        </childnode>
        <childnode refid="25287" relation="include">
        </childnode>
        <childnode refid="25291" relation="include">
        </childnode>
        <childnode refid="25292" relation="include">
        </childnode>
        <childnode refid="25293" relation="include">
        </childnode>
        <childnode refid="25294" relation="include">
        </childnode>
        <childnode refid="25295" relation="include">
        </childnode>
        <childnode refid="25296" relation="include">
        </childnode>
        <childnode refid="25297" relation="include">
        </childnode>
        <childnode refid="25303" relation="include">
        </childnode>
        <childnode refid="25304" relation="include">
        </childnode>
        <childnode refid="25301" relation="include">
        </childnode>
        <childnode refid="25305" relation="include">
        </childnode>
        <childnode refid="25308" relation="include">
        </childnode>
        <childnode refid="25310" relation="include">
        </childnode>
        <childnode refid="25311" relation="include">
        </childnode>
        <childnode refid="25320" relation="include">
        </childnode>
        <childnode refid="25321" relation="include">
        </childnode>
      </node>
      <node id="25271">
        <label>cstdio</label>
      </node>
      <node id="25275">
        <label>tuple</label>
      </node>
      <node id="25280">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="25297">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="25280" relation="include">
        </childnode>
        <childnode refid="25281" relation="include">
        </childnode>
        <childnode refid="25282" relation="include">
        </childnode>
        <childnode refid="25284" relation="include">
        </childnode>
        <childnode refid="25298" relation="include">
        </childnode>
        <childnode refid="25299" relation="include">
        </childnode>
        <childnode refid="25300" relation="include">
        </childnode>
        <childnode refid="25301" relation="include">
        </childnode>
      </node>
      <node id="25276">
        <label>utility</label>
      </node>
      <node id="25300">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="25291">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="25288">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="25289" relation="include">
        </childnode>
      </node>
      <node id="25311">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="25312" relation="include">
        </childnode>
        <childnode refid="25313" relation="include">
        </childnode>
        <childnode refid="25314" relation="include">
        </childnode>
        <childnode refid="25315" relation="include">
        </childnode>
        <childnode refid="25316" relation="include">
        </childnode>
        <childnode refid="25317" relation="include">
        </childnode>
        <childnode refid="25318" relation="include">
        </childnode>
        <childnode refid="25319" relation="include">
        </childnode>
      </node>
      <node id="25289">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="25303">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="25301" relation="include">
        </childnode>
        <childnode refid="25297" relation="include">
        </childnode>
        <childnode refid="25304" relation="include">
        </childnode>
      </node>
      <node id="25272">
        <label>cstdlib</label>
      </node>
      <node id="25267">
        <label>cctype</label>
      </node>
      <node id="25290">
        <label>unordered_map</label>
      </node>
      <node id="25269">
        <label>climits</label>
      </node>
      <node id="25264">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/activation_functions/poisson1_function.hpp</label>
        <link refid="poisson1__function_8hpp"/>
        <childnode refid="25265" relation="include">
        </childnode>
      </node>
      <node id="25317">
        <label>mutex</label>
      </node>
      <node id="25313">
        <label>chrono</label>
      </node>
      <node id="25321">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="25319">
        <label>thread</label>
      </node>
      <node id="25307">
        <label>type_traits</label>
      </node>
      <node id="25283">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="25277">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="25301">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="25279" relation="include">
        </childnode>
        <childnode refid="25280" relation="include">
        </childnode>
        <childnode refid="25281" relation="include">
        </childnode>
        <childnode refid="25282" relation="include">
        </childnode>
        <childnode refid="25302" relation="include">
        </childnode>
      </node>
      <node id="25273">
        <label>cstring</label>
      </node>
      <node id="25292">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="25281">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1ann_1_1Poisson1Function" prot="public">mlpack::ann::Poisson1Function</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1ann">mlpack::ann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_ANN_ACTIVATION_FUNCTIONS_POISSON1_FUNCTION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_ANN_ACTIVATION_FUNCTIONS_POISSON1_FUNCTION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ann<sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classmlpack_1_1ann_1_1Poisson1Function" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1ann_1_1Poisson1Function" kindref="compound">Poisson1Function</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37" refid="classmlpack_1_1ann_1_1Poisson1Function_1a11bd9a1195e6b107f9fee73643bc328b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1Poisson1Function_1a11bd9a1195e6b107f9fee73643bc328b" kindref="member">Fn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>-<sp/>1)<sp/>*<sp/>std::exp(-x);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputVecType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputVecType&gt;</highlight></codeline>
<codeline lineno="49" refid="classmlpack_1_1ann_1_1Poisson1Function_1af6cf5da90eb6312e3e25c9b8bd9c3527" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1Poisson1Function_1af6cf5da90eb6312e3e25c9b8bd9c3527" kindref="member">Fn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputVecType&amp;<sp/>x,<sp/>OutputVecType&amp;<sp/>y)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>(x<sp/>-<sp/>1)<sp/>%<sp/>arma::exp(-x);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classmlpack_1_1ann_1_1Poisson1Function_1a163d34fd09f8edf457164f5033c635cf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1Poisson1Function_1a163d34fd09f8edf457164f5033c635cf" kindref="member">Deriv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>std::exp(-y)<sp/>+<sp/>(1<sp/>-<sp/>y)<sp/>*<sp/>std::exp(-y);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputVecType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputVecType&gt;</highlight></codeline>
<codeline lineno="72" refid="classmlpack_1_1ann_1_1Poisson1Function_1a0ad035ec996acd7025807d0e9e082887" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1Poisson1Function_1a0ad035ec996acd7025807d0e9e082887" kindref="member">Deriv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputVecType&amp;<sp/>x,<sp/>OutputVecType&amp;<sp/>y)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>arma::exp(-x)<sp/>+<sp/>(1<sp/>-<sp/>x)<sp/>%<sp/>arma::exp(-x);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>Poisson1Function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/activation_functions/poisson1_function.hpp"/>
  </compounddef>
</doxygen>
