<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="poisson1__function_8hpp" kind="file" language="C++">
    <compoundname>poisson1_function.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <incdepgraph>
      <node id="25698">
        <label>list</label>
      </node>
      <node id="25695">
        <label>atomic</label>
      </node>
      <node id="25685">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="25661">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="25697">
        <label>iomanip</label>
      </node>
      <node id="25670">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="25671" relation="include">
        </childnode>
        <childnode refid="25673" relation="include">
        </childnode>
      </node>
      <node id="25653">
        <label>cstdint</label>
      </node>
      <node id="25662">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="25669">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="25692">
        <label>arma_config.hpp</label>
      </node>
      <node id="25682">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="25649">
        <label>cmath</label>
      </node>
      <node id="25668">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="25657">
        <label>stdexcept</label>
      </node>
      <node id="25677">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="25662" relation="include">
        </childnode>
        <childnode refid="25664" relation="include">
        </childnode>
        <childnode refid="25665" relation="include">
        </childnode>
        <childnode refid="25663" relation="include">
        </childnode>
      </node>
      <node id="25701">
        <label>string</label>
      </node>
      <node id="25689">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="25690" relation="include">
        </childnode>
        <childnode refid="25656" relation="include">
        </childnode>
      </node>
      <node id="25699">
        <label>map</label>
      </node>
      <node id="25651">
        <label>cfloat</label>
      </node>
      <node id="25681">
        <label>boost/variant.hpp</label>
      </node>
      <node id="25703">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="25665">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="25688">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="25689" relation="include">
        </childnode>
        <childnode refid="25665" relation="include">
        </childnode>
        <childnode refid="25672" relation="include">
        </childnode>
        <childnode refid="25690" relation="include">
        </childnode>
      </node>
      <node id="25678">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="25676">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="25662" relation="include">
        </childnode>
        <childnode refid="25664" relation="include">
        </childnode>
        <childnode refid="25665" relation="include">
        </childnode>
        <childnode refid="25663" relation="include">
        </childnode>
      </node>
      <node id="25679">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="25662" relation="include">
        </childnode>
        <childnode refid="25664" relation="include">
        </childnode>
        <childnode refid="25665" relation="include">
        </childnode>
        <childnode refid="25663" relation="include">
        </childnode>
      </node>
      <node id="25667">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="25687">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="25663" relation="include">
        </childnode>
        <childnode refid="25664" relation="include">
        </childnode>
        <childnode refid="25665" relation="include">
        </childnode>
        <childnode refid="25675" relation="include">
        </childnode>
        <childnode refid="25684" relation="include">
        </childnode>
      </node>
      <node id="25691">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="25692" relation="include">
        </childnode>
      </node>
      <node id="25693">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="25648">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="25649" relation="include">
        </childnode>
        <childnode refid="25650" relation="include">
        </childnode>
        <childnode refid="25651" relation="include">
        </childnode>
        <childnode refid="25652" relation="include">
        </childnode>
        <childnode refid="25653" relation="include">
        </childnode>
        <childnode refid="25654" relation="include">
        </childnode>
        <childnode refid="25655" relation="include">
        </childnode>
        <childnode refid="25656" relation="include">
        </childnode>
        <childnode refid="25657" relation="include">
        </childnode>
        <childnode refid="25658" relation="include">
        </childnode>
        <childnode refid="25659" relation="include">
        </childnode>
        <childnode refid="25660" relation="include">
        </childnode>
        <childnode refid="25661" relation="include">
        </childnode>
        <childnode refid="25662" relation="include">
        </childnode>
        <childnode refid="25663" relation="include">
        </childnode>
        <childnode refid="25664" relation="include">
        </childnode>
        <childnode refid="25665" relation="include">
        </childnode>
        <childnode refid="25666" relation="include">
        </childnode>
        <childnode refid="25667" relation="include">
        </childnode>
        <childnode refid="25668" relation="include">
        </childnode>
        <childnode refid="25669" relation="include">
        </childnode>
        <childnode refid="25670" relation="include">
        </childnode>
        <childnode refid="25674" relation="include">
        </childnode>
        <childnode refid="25675" relation="include">
        </childnode>
        <childnode refid="25676" relation="include">
        </childnode>
        <childnode refid="25677" relation="include">
        </childnode>
        <childnode refid="25678" relation="include">
        </childnode>
        <childnode refid="25679" relation="include">
        </childnode>
        <childnode refid="25680" relation="include">
        </childnode>
        <childnode refid="25686" relation="include">
        </childnode>
        <childnode refid="25687" relation="include">
        </childnode>
        <childnode refid="25684" relation="include">
        </childnode>
        <childnode refid="25688" relation="include">
        </childnode>
        <childnode refid="25691" relation="include">
        </childnode>
        <childnode refid="25693" relation="include">
        </childnode>
        <childnode refid="25694" relation="include">
        </childnode>
        <childnode refid="25703" relation="include">
        </childnode>
        <childnode refid="25704" relation="include">
        </childnode>
      </node>
      <node id="25654">
        <label>cstdio</label>
      </node>
      <node id="25658">
        <label>tuple</label>
      </node>
      <node id="25663">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="25680">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="25663" relation="include">
        </childnode>
        <childnode refid="25664" relation="include">
        </childnode>
        <childnode refid="25665" relation="include">
        </childnode>
        <childnode refid="25667" relation="include">
        </childnode>
        <childnode refid="25681" relation="include">
        </childnode>
        <childnode refid="25682" relation="include">
        </childnode>
        <childnode refid="25683" relation="include">
        </childnode>
        <childnode refid="25684" relation="include">
        </childnode>
      </node>
      <node id="25659">
        <label>utility</label>
      </node>
      <node id="25683">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="25674">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="25671">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="25672" relation="include">
        </childnode>
      </node>
      <node id="25694">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="25695" relation="include">
        </childnode>
        <childnode refid="25696" relation="include">
        </childnode>
        <childnode refid="25697" relation="include">
        </childnode>
        <childnode refid="25698" relation="include">
        </childnode>
        <childnode refid="25699" relation="include">
        </childnode>
        <childnode refid="25700" relation="include">
        </childnode>
        <childnode refid="25701" relation="include">
        </childnode>
        <childnode refid="25702" relation="include">
        </childnode>
      </node>
      <node id="25672">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="25686">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="25684" relation="include">
        </childnode>
        <childnode refid="25680" relation="include">
        </childnode>
        <childnode refid="25687" relation="include">
        </childnode>
      </node>
      <node id="25655">
        <label>cstdlib</label>
      </node>
      <node id="25650">
        <label>cctype</label>
      </node>
      <node id="25673">
        <label>unordered_map</label>
      </node>
      <node id="25652">
        <label>climits</label>
      </node>
      <node id="25647">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/activation_functions/poisson1_function.hpp</label>
        <link refid="poisson1__function_8hpp"/>
        <childnode refid="25648" relation="include">
        </childnode>
      </node>
      <node id="25700">
        <label>mutex</label>
      </node>
      <node id="25696">
        <label>chrono</label>
      </node>
      <node id="25704">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="25702">
        <label>thread</label>
      </node>
      <node id="25690">
        <label>type_traits</label>
      </node>
      <node id="25666">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="25660">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="25684">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="25662" relation="include">
        </childnode>
        <childnode refid="25663" relation="include">
        </childnode>
        <childnode refid="25664" relation="include">
        </childnode>
        <childnode refid="25665" relation="include">
        </childnode>
        <childnode refid="25685" relation="include">
        </childnode>
      </node>
      <node id="25656">
        <label>cstring</label>
      </node>
      <node id="25675">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="25664">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1ann_1_1Poisson1Function" prot="public">mlpack::ann::Poisson1Function</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1ann">mlpack::ann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_ANN_ACTIVATION_FUNCTIONS_POISSON1_FUNCTION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_ANN_ACTIVATION_FUNCTIONS_POISSON1_FUNCTION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ann<sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classmlpack_1_1ann_1_1Poisson1Function" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1ann_1_1Poisson1Function" kindref="compound">Poisson1Function</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37" refid="classmlpack_1_1ann_1_1Poisson1Function_1a11bd9a1195e6b107f9fee73643bc328b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1Poisson1Function_1a11bd9a1195e6b107f9fee73643bc328b" kindref="member">Fn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>-<sp/>1)<sp/>*<sp/>std::exp(-x);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputVecType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputVecType&gt;</highlight></codeline>
<codeline lineno="49" refid="classmlpack_1_1ann_1_1Poisson1Function_1af6cf5da90eb6312e3e25c9b8bd9c3527" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1Poisson1Function_1af6cf5da90eb6312e3e25c9b8bd9c3527" kindref="member">Fn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputVecType&amp;<sp/>x,<sp/>OutputVecType&amp;<sp/>y)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>(x<sp/>-<sp/>1)<sp/>%<sp/>arma::exp(-x);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classmlpack_1_1ann_1_1Poisson1Function_1a163d34fd09f8edf457164f5033c635cf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1Poisson1Function_1a163d34fd09f8edf457164f5033c635cf" kindref="member">Deriv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>std::exp(-y)<sp/>+<sp/>(1<sp/>-<sp/>y)<sp/>*<sp/>std::exp(-y);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputVecType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputVecType&gt;</highlight></codeline>
<codeline lineno="72" refid="classmlpack_1_1ann_1_1Poisson1Function_1a0ad035ec996acd7025807d0e9e082887" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1Poisson1Function_1a0ad035ec996acd7025807d0e9e082887" kindref="member">Deriv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputVecType&amp;<sp/>x,<sp/>OutputVecType&amp;<sp/>y)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>arma::exp(-x)<sp/>+<sp/>(1<sp/>-<sp/>x)<sp/>%<sp/>arma::exp(-x);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>Poisson1Function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/activation_functions/poisson1_function.hpp"/>
  </compounddef>
</doxygen>
