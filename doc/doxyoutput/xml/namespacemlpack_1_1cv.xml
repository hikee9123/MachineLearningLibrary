<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacemlpack_1_1cv" kind="namespace" language="C++">
    <compoundname>mlpack::cv</compoundname>
    <innerclass refid="classmlpack_1_1cv_1_1Accuracy" prot="public">mlpack::cv::Accuracy</innerclass>
    <innerclass refid="classmlpack_1_1cv_1_1CVBase" prot="public">mlpack::cv::CVBase</innerclass>
    <innerclass refid="classmlpack_1_1cv_1_1F1" prot="public">mlpack::cv::F1</innerclass>
    <innerclass refid="classmlpack_1_1cv_1_1KFoldCV" prot="public">mlpack::cv::KFoldCV</innerclass>
    <innerclass refid="classmlpack_1_1cv_1_1MetaInfoExtractor" prot="public">mlpack::cv::MetaInfoExtractor</innerclass>
    <innerclass refid="classmlpack_1_1cv_1_1MSE" prot="public">mlpack::cv::MSE</innerclass>
    <innerclass refid="structmlpack_1_1cv_1_1NotFoundMethodForm" prot="public">mlpack::cv::NotFoundMethodForm</innerclass>
    <innerclass refid="classmlpack_1_1cv_1_1Precision" prot="public">mlpack::cv::Precision</innerclass>
    <innerclass refid="classmlpack_1_1cv_1_1R2Score" prot="public">mlpack::cv::R2Score</innerclass>
    <innerclass refid="classmlpack_1_1cv_1_1Recall" prot="public">mlpack::cv::Recall</innerclass>
    <innerclass refid="structmlpack_1_1cv_1_1SelectMethodForm" prot="public">mlpack::cv::SelectMethodForm</innerclass>
    <innerclass refid="structmlpack_1_1cv_1_1SelectMethodForm_3_01MLAlgorithm_01_4" prot="public">mlpack::cv::SelectMethodForm&lt; MLAlgorithm &gt;</innerclass>
    <innerclass refid="structmlpack_1_1cv_1_1SelectMethodForm_3_01MLAlgorithm_00_01HasMethodForm_00_01HMFs_8_8_8_01_4" prot="public">mlpack::cv::SelectMethodForm&lt; MLAlgorithm, HasMethodForm, HMFs... &gt;</innerclass>
    <innerclass refid="classmlpack_1_1cv_1_1SilhouetteScore" prot="public">mlpack::cv::SilhouetteScore</innerclass>
    <innerclass refid="classmlpack_1_1cv_1_1SimpleCV" prot="public">mlpack::cv::SimpleCV</innerclass>
    <innerclass refid="structmlpack_1_1cv_1_1TrainForm" prot="public">mlpack::cv::TrainForm</innerclass>
    <innerclass refid="structmlpack_1_1cv_1_1TrainForm_3_01MT_00_01PT_00_01void_00_01false_00_01false_01_4" prot="public">mlpack::cv::TrainForm&lt; MT, PT, void, false, false &gt;</innerclass>
    <innerclass refid="structmlpack_1_1cv_1_1TrainForm_3_01MT_00_01PT_00_01void_00_01false_00_01true_01_4" prot="public">mlpack::cv::TrainForm&lt; MT, PT, void, false, true &gt;</innerclass>
    <innerclass refid="structmlpack_1_1cv_1_1TrainForm_3_01MT_00_01PT_00_01void_00_01true_00_01false_01_4" prot="public">mlpack::cv::TrainForm&lt; MT, PT, void, true, false &gt;</innerclass>
    <innerclass refid="structmlpack_1_1cv_1_1TrainForm_3_01MT_00_01PT_00_01void_00_01true_00_01true_01_4" prot="public">mlpack::cv::TrainForm&lt; MT, PT, void, true, true &gt;</innerclass>
    <innerclass refid="structmlpack_1_1cv_1_1TrainForm_3_01MT_00_01PT_00_01WT_00_01false_00_01false_01_4" prot="public">mlpack::cv::TrainForm&lt; MT, PT, WT, false, false &gt;</innerclass>
    <innerclass refid="structmlpack_1_1cv_1_1TrainForm_3_01MT_00_01PT_00_01WT_00_01false_00_01true_01_4" prot="public">mlpack::cv::TrainForm&lt; MT, PT, WT, false, true &gt;</innerclass>
    <innerclass refid="structmlpack_1_1cv_1_1TrainForm_3_01MT_00_01PT_00_01WT_00_01true_00_01false_01_4" prot="public">mlpack::cv::TrainForm&lt; MT, PT, WT, true, false &gt;</innerclass>
    <innerclass refid="structmlpack_1_1cv_1_1TrainForm_3_01MT_00_01PT_00_01WT_00_01true_00_01true_01_4" prot="public">mlpack::cv::TrainForm&lt; MT, PT, WT, true, true &gt;</innerclass>
    <innerclass refid="structmlpack_1_1cv_1_1TrainFormBase4" prot="public">mlpack::cv::TrainFormBase4</innerclass>
    <innerclass refid="structmlpack_1_1cv_1_1TrainFormBase5" prot="public">mlpack::cv::TrainFormBase5</innerclass>
    <innerclass refid="structmlpack_1_1cv_1_1TrainFormBase6" prot="public">mlpack::cv::TrainFormBase6</innerclass>
    <innerclass refid="structmlpack_1_1cv_1_1TrainFormBase7" prot="public">mlpack::cv::TrainFormBase7</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacemlpack_1_1cv_1aff3913a61cbadcd7389264288e51ab06" prot="public" static="no">
        <name>AverageStrategy</name>
        <enumvalue id="namespacemlpack_1_1cv_1aff3913a61cbadcd7389264288e51ab06ae27b0860dfa490c46dd387b06d21a04b" prot="public">
          <name>Binary</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacemlpack_1_1cv_1aff3913a61cbadcd7389264288e51ab06ae919d9c95f0fd4a08f3c94e13a3f8a9f" prot="public">
          <name>Micro</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacemlpack_1_1cv_1aff3913a61cbadcd7389264288e51ab06a74c916f3663a0877600e8ebec7f7fe5e" prot="public">
          <name>Macro</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>This enum declares possible strategies for averaging that can be used in some metrics like precision, recall, and <ref refid="classmlpack_1_1cv_1_1F1" kindref="compound">F1</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>The &quot;Binary&quot; strategy means binary classification is going to be used, and there is no need to average. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/cv/metrics/average_strategy.hpp" line="26" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/cv/metrics/average_strategy.hpp" bodystart="25" bodyend="30"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacemlpack_1_1cv_1a5197899946f07e19aabd0f2526a4ec62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
          <param>
            <type>typename Metric</type>
          </param>
        </templateparamlist>
        <type>DataType</type>
        <definition>DataType mlpack::cv::PairwiseDistances</definition>
        <argsstring>(const DataType &amp;data, const Metric &amp;metric)</argsstring>
        <name>PairwiseDistances</name>
        <param>
          <type>const DataType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const Metric &amp;</type>
          <declname>metric</declname>
        </param>
        <briefdescription>
<para>Pairwise distance of the given data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Column-major matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metric</parametername>
</parameternamelist>
<parameterdescription>
<para>Distance metric to be used. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/cv/metrics/facilities.hpp" line="29" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/cv/metrics/facilities.hpp" bodystart="29" bodyend="43"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/core/cv/cv_base.hpp" line="18" column="1"/>
  </compounddef>
</doxygen>
