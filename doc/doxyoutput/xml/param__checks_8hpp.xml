<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="param__checks_8hpp" kind="file" language="C++">
    <compoundname>param_checks.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="yes">param_checks_impl.hpp</includes>
    <incdepgraph>
      <node id="20949">
        <label>list</label>
      </node>
      <node id="20946">
        <label>atomic</label>
      </node>
      <node id="20936">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="20912">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="20948">
        <label>iomanip</label>
      </node>
      <node id="20921">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="20922" relation="include">
        </childnode>
        <childnode refid="20924" relation="include">
        </childnode>
      </node>
      <node id="20904">
        <label>cstdint</label>
      </node>
      <node id="20913">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="20920">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="20943">
        <label>arma_config.hpp</label>
      </node>
      <node id="20933">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="20900">
        <label>cmath</label>
      </node>
      <node id="20919">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="20908">
        <label>stdexcept</label>
      </node>
      <node id="20928">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="20913" relation="include">
        </childnode>
        <childnode refid="20915" relation="include">
        </childnode>
        <childnode refid="20916" relation="include">
        </childnode>
        <childnode refid="20914" relation="include">
        </childnode>
      </node>
      <node id="20952">
        <label>string</label>
      </node>
      <node id="20940">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="20941" relation="include">
        </childnode>
        <childnode refid="20907" relation="include">
        </childnode>
      </node>
      <node id="20950">
        <label>map</label>
      </node>
      <node id="20902">
        <label>cfloat</label>
      </node>
      <node id="20932">
        <label>boost/variant.hpp</label>
      </node>
      <node id="20954">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="20916">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="20939">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="20940" relation="include">
        </childnode>
        <childnode refid="20916" relation="include">
        </childnode>
        <childnode refid="20923" relation="include">
        </childnode>
        <childnode refid="20941" relation="include">
        </childnode>
      </node>
      <node id="20929">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="20927">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="20913" relation="include">
        </childnode>
        <childnode refid="20915" relation="include">
        </childnode>
        <childnode refid="20916" relation="include">
        </childnode>
        <childnode refid="20914" relation="include">
        </childnode>
      </node>
      <node id="20930">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="20913" relation="include">
        </childnode>
        <childnode refid="20915" relation="include">
        </childnode>
        <childnode refid="20916" relation="include">
        </childnode>
        <childnode refid="20914" relation="include">
        </childnode>
      </node>
      <node id="20918">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="20938">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="20914" relation="include">
        </childnode>
        <childnode refid="20915" relation="include">
        </childnode>
        <childnode refid="20916" relation="include">
        </childnode>
        <childnode refid="20926" relation="include">
        </childnode>
        <childnode refid="20935" relation="include">
        </childnode>
      </node>
      <node id="20942">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="20943" relation="include">
        </childnode>
      </node>
      <node id="20956">
        <label>param_checks_impl.hpp</label>
      </node>
      <node id="20944">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="20899">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="20900" relation="include">
        </childnode>
        <childnode refid="20901" relation="include">
        </childnode>
        <childnode refid="20902" relation="include">
        </childnode>
        <childnode refid="20903" relation="include">
        </childnode>
        <childnode refid="20904" relation="include">
        </childnode>
        <childnode refid="20905" relation="include">
        </childnode>
        <childnode refid="20906" relation="include">
        </childnode>
        <childnode refid="20907" relation="include">
        </childnode>
        <childnode refid="20908" relation="include">
        </childnode>
        <childnode refid="20909" relation="include">
        </childnode>
        <childnode refid="20910" relation="include">
        </childnode>
        <childnode refid="20911" relation="include">
        </childnode>
        <childnode refid="20912" relation="include">
        </childnode>
        <childnode refid="20913" relation="include">
        </childnode>
        <childnode refid="20914" relation="include">
        </childnode>
        <childnode refid="20915" relation="include">
        </childnode>
        <childnode refid="20916" relation="include">
        </childnode>
        <childnode refid="20917" relation="include">
        </childnode>
        <childnode refid="20918" relation="include">
        </childnode>
        <childnode refid="20919" relation="include">
        </childnode>
        <childnode refid="20920" relation="include">
        </childnode>
        <childnode refid="20921" relation="include">
        </childnode>
        <childnode refid="20925" relation="include">
        </childnode>
        <childnode refid="20926" relation="include">
        </childnode>
        <childnode refid="20927" relation="include">
        </childnode>
        <childnode refid="20928" relation="include">
        </childnode>
        <childnode refid="20929" relation="include">
        </childnode>
        <childnode refid="20930" relation="include">
        </childnode>
        <childnode refid="20931" relation="include">
        </childnode>
        <childnode refid="20937" relation="include">
        </childnode>
        <childnode refid="20938" relation="include">
        </childnode>
        <childnode refid="20935" relation="include">
        </childnode>
        <childnode refid="20939" relation="include">
        </childnode>
        <childnode refid="20942" relation="include">
        </childnode>
        <childnode refid="20944" relation="include">
        </childnode>
        <childnode refid="20945" relation="include">
        </childnode>
        <childnode refid="20954" relation="include">
        </childnode>
        <childnode refid="20955" relation="include">
        </childnode>
      </node>
      <node id="20898">
        <label>/home/aakash/mlpack/src/mlpack/core/util/param_checks.hpp</label>
        <link refid="param__checks_8hpp"/>
        <childnode refid="20899" relation="include">
        </childnode>
        <childnode refid="20956" relation="include">
        </childnode>
      </node>
      <node id="20905">
        <label>cstdio</label>
      </node>
      <node id="20909">
        <label>tuple</label>
      </node>
      <node id="20914">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="20931">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="20914" relation="include">
        </childnode>
        <childnode refid="20915" relation="include">
        </childnode>
        <childnode refid="20916" relation="include">
        </childnode>
        <childnode refid="20918" relation="include">
        </childnode>
        <childnode refid="20932" relation="include">
        </childnode>
        <childnode refid="20933" relation="include">
        </childnode>
        <childnode refid="20934" relation="include">
        </childnode>
        <childnode refid="20935" relation="include">
        </childnode>
      </node>
      <node id="20910">
        <label>utility</label>
      </node>
      <node id="20934">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="20925">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="20922">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="20923" relation="include">
        </childnode>
      </node>
      <node id="20945">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="20946" relation="include">
        </childnode>
        <childnode refid="20947" relation="include">
        </childnode>
        <childnode refid="20948" relation="include">
        </childnode>
        <childnode refid="20949" relation="include">
        </childnode>
        <childnode refid="20950" relation="include">
        </childnode>
        <childnode refid="20951" relation="include">
        </childnode>
        <childnode refid="20952" relation="include">
        </childnode>
        <childnode refid="20953" relation="include">
        </childnode>
      </node>
      <node id="20923">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="20937">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="20935" relation="include">
        </childnode>
        <childnode refid="20931" relation="include">
        </childnode>
        <childnode refid="20938" relation="include">
        </childnode>
      </node>
      <node id="20906">
        <label>cstdlib</label>
      </node>
      <node id="20901">
        <label>cctype</label>
      </node>
      <node id="20924">
        <label>unordered_map</label>
      </node>
      <node id="20903">
        <label>climits</label>
      </node>
      <node id="20951">
        <label>mutex</label>
      </node>
      <node id="20947">
        <label>chrono</label>
      </node>
      <node id="20955">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="20953">
        <label>thread</label>
      </node>
      <node id="20941">
        <label>type_traits</label>
      </node>
      <node id="20917">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="20911">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="20935">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="20913" relation="include">
        </childnode>
        <childnode refid="20914" relation="include">
        </childnode>
        <childnode refid="20915" relation="include">
        </childnode>
        <childnode refid="20916" relation="include">
        </childnode>
        <childnode refid="20936" relation="include">
        </childnode>
      </node>
      <node id="20907">
        <label>cstring</label>
      </node>
      <node id="20926">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="20915">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1util">mlpack::util</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ryan Curtin</para></simplesect>
A set of utility functions to check parameter values for mlpack programs. These are meant to be used as the first part of an mlpackMain() function, to validate parameters.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="14"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_UTIL_PARAM_CHECKS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_UTIL_PARAM_CHECKS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1util_1a015ed435ccbb64bf7e4408a100fa095d" kindref="member">RequireOnlyOnePassed</ref>(</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>util::Params&amp;<sp/>params,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>constraints,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fatal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>customErrorMessage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allowNone<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1util_1a6d1c576544a52b021a857c40b3b1d841" kindref="member">RequireAtLeastOnePassed</ref>(</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>util::Params&amp;<sp/>params,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>constraints,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fatal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>customErrorMessage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1util_1a504ee55c910ffb18c1e12e2b067b1e8f" kindref="member">RequireNoneOrAllPassed</ref>(</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>util::Params&amp;<sp/>params,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>constraints,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fatal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>customErrorMessage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1util_1adb04a1f1e20036f06efea1ad226fc116" kindref="member">RequireParamInSet</ref>(util::Params&amp;<sp/>params,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>paramName,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;&amp;<sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fatal,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>errorMessage);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1util_1af6914a72a7b265d07fba2137a8b85451" kindref="member">RequireParamValue</ref>(util::Params&amp;<sp/>params,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>paramName,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::function&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(T)&gt;&amp;<sp/>conditional,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fatal,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>errorMessage);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1util_1a15d3dd71420e35891f2383141e55a17d" kindref="member">ReportIgnoredParam</ref>(</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>util::Params&amp;<sp/>params,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::pair&lt;std::string,<sp/>bool&gt;&gt;&amp;<sp/>constraints,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>paramName);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1util_1a15d3dd71420e35891f2383141e55a17d" kindref="member">ReportIgnoredParam</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>paramName,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>reason);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>util</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;param_checks_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/util/param_checks.hpp"/>
  </compounddef>
</doxygen>
