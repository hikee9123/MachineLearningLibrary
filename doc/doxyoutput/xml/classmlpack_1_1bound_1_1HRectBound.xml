<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1bound_1_1HRectBound" kind="class" language="C++" prot="public">
    <compoundname>mlpack::bound::HRectBound</compoundname>
    <includes refid="hrectbound_8hpp" local="no">hrectbound.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>MetricType</declname>
        <defname>MetricType</defname>
        <defval><ref refid="classmlpack_1_1metric_1_1LMetric" kindref="compound">metric::LMetric</ref>&lt;2, true&gt;</defval>
      </param>
      <param>
        <type>typename</type>
        <declname>ElemType</declname>
        <defname>ElemType</defname>
        <defval>double</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1bound_1_1HRectBound_1ae5a809599d709fb05805cfa6af27b845" prot="private" static="no" mutable="no">
        <type>math::RangeType&lt; ElemType &gt; *</type>
        <definition>math::RangeType&lt;ElemType&gt;* bounds</definition>
        <argsstring></argsstring>
        <name>bounds</name>
        <briefdescription>
<para>The bounds for each dimension. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="242" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1bound_1_1HRectBound_1a226055b65c95a957d221674051683344" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t dim</definition>
        <argsstring></argsstring>
        <name>dim</name>
        <briefdescription>
<para>The dimensionality of the bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="240" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1bound_1_1HRectBound_1ad069c71a7bc99c59bce1c3f859e5d22b" prot="private" static="no" mutable="no">
        <type>MetricType</type>
        <definition>MetricType metric</definition>
        <argsstring></argsstring>
        <name>metric</name>
        <briefdescription>
<para>Instantiated metric (likely has size 0). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="246" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1bound_1_1HRectBound_1ac6a539d0a5e4d1fb8b85c37824301928" prot="private" static="no" mutable="no">
        <type>ElemType</type>
        <definition>ElemType minWidth</definition>
        <argsstring></argsstring>
        <name>minWidth</name>
        <briefdescription>
<para>Cached minimum width of bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="244" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" bodystart="244" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1a14d6367f1a3e1718deed8cf4fd8300d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HRectBound</definition>
        <argsstring>()</argsstring>
        <name>HRectBound</name>
        <briefdescription>
<para>Empty constructor; creates a bound of dimensionality 0. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1a64c0d7420d56f31d05bdbf3612bc91b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HRectBound</definition>
        <argsstring>(const size_t dimension)</argsstring>
        <name>HRectBound</name>
        <param>
          <type>const size_t</type>
          <declname>dimension</declname>
        </param>
        <briefdescription>
<para>Initializes to specified dimensionality with each dimension the empty set. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dimension</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimensionality of bound. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1a1cd26f681a6e3c5ee325850ace586cfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HRectBound</definition>
        <argsstring>(const HRectBound &amp;other)</argsstring>
        <name>HRectBound</name>
        <param>
          <type>const <ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor; necessary to prevent memory leaks. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1a554cc0da21197f0b6cb7dfc6050ead63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HRectBound</definition>
        <argsstring>(HRectBound &amp;&amp;other)</argsstring>
        <name>HRectBound</name>
        <param>
          <type><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Move constructor: take possession of another bound&apos;s information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1a68cfb4331fef891c5a7587cc454df1cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~HRectBound</definition>
        <argsstring>()</argsstring>
        <name>~HRectBound</name>
        <briefdescription>
<para>Destructor: clean up memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1ac519e0ecb1bbd517724a93b4b57cc399" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Center</definition>
        <argsstring>(arma::Col&lt; ElemType &gt; &amp;center) const</argsstring>
        <name>Center</name>
        <param>
          <type>arma::Col&lt; ElemType &gt; &amp;</type>
          <declname>center</declname>
        </param>
        <briefdescription>
<para>Calculates the center of the range, placing it into the given vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector which the center will be written to. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="120" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1Octree_1aa800439660375c0253008cafa648da78" compoundref="octree_2octree_8hpp" startline="397" endline="397">Octree&lt; MetricType, StatisticType, MatType &gt;::Center</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1aa71d36872f416feaa853788a7a7a7ef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
<para>Resets all dimensions to the empty set (so that this bound contains nothing). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1a3c1084b782672d502264b8c6d33ed0dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VecType</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Contains</definition>
        <argsstring>(const VecType &amp;point) const</argsstring>
        <name>Contains</name>
        <param>
          <type>const VecType &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Determines if a point is within this bound. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to check the condition. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1ad3a69a98f323de871cc834fe91114792" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Contains</definition>
        <argsstring>(const HRectBound &amp;bound) const</argsstring>
        <name>Contains</name>
        <param>
          <type>const <ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref> &amp;</type>
          <declname>bound</declname>
        </param>
        <briefdescription>
<para>Determines if this bound partially contains a bound. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bound</parametername>
</parameternamelist>
<parameterdescription>
<para>Bound to check the condition. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1a60e7246d34103909f688395e35869b39" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ElemType</type>
        <definition>ElemType Diameter</definition>
        <argsstring>() const</argsstring>
        <name>Diameter</name>
        <briefdescription>
<para>Returns the diameter of the hyperrectangle (that is, the longest diagonal). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1a7993a4f36c530e03b78b28b5f53bb286" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Dim</definition>
        <argsstring>() const</argsstring>
        <name>Dim</name>
        <briefdescription>
<para>Gets the dimensionality. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="96" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1ae764d88483236cc470f5abe0273df4c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VecType</type>
          </param>
        </templateparamlist>
        <type>ElemType</type>
        <definition>ElemType MaxDistance</definition>
        <argsstring>(const VecType &amp;point, typename std::enable_if_t&lt; IsVector&lt; VecType &gt;::value &gt; *=0) const</argsstring>
        <name>MaxDistance</name>
        <param>
          <type>const VecType &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>typename <ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt; <ref refid="structIsVector" kindref="compound">IsVector</ref>&lt; VecType &gt;::value &gt; *</type>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Calculates maximum bound-to-point squared distance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to which the maximum distance is requested. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1aff674aa2febc8534dadd90e03d93c087" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ElemType</type>
        <definition>ElemType MaxDistance</definition>
        <argsstring>(const HRectBound &amp;other) const</argsstring>
        <name>MaxDistance</name>
        <param>
          <type>const <ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Computes maximum distance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Bound to which the maximum distance is requested. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1aac4d643c62af7d9cc2a072aea10d2b32" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const MetricType &amp;</type>
        <definition>const MetricType&amp; Metric</definition>
        <argsstring>() const</argsstring>
        <name>Metric</name>
        <briefdescription>
<para>Get the instantiated metric associated with the bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="111" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1acc71d930ed90e73b2bc0c360835c5371" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>MetricType &amp;</type>
        <definition>MetricType&amp; Metric</definition>
        <argsstring>()</argsstring>
        <name>Metric</name>
        <briefdescription>
<para>Modify the instantiated metric associated with the bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="113" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1a73bf99a433e88a31d98b46bf4c0da147" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VecType</type>
          </param>
        </templateparamlist>
        <type>ElemType</type>
        <definition>ElemType MinDistance</definition>
        <argsstring>(const VecType &amp;point, typename std::enable_if_t&lt; IsVector&lt; VecType &gt;::value &gt; *=0) const</argsstring>
        <name>MinDistance</name>
        <param>
          <type>const VecType &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>typename <ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt; <ref refid="structIsVector" kindref="compound">IsVector</ref>&lt; VecType &gt;::value &gt; *</type>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Calculates minimum bound-to-point distance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to which the minimum distance is requested. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1aee3d05d30173b45bce8fb59678093923" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ElemType</type>
        <definition>ElemType MinDistance</definition>
        <argsstring>(const HRectBound &amp;other) const</argsstring>
        <name>MinDistance</name>
        <param>
          <type>const <ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Calculates minimum bound-to-bound distance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Bound to which the minimum distance is requested. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1ab8478ff52c4d4d5e7fa6311fa39abb76" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ElemType</type>
        <definition>ElemType MinWidth</definition>
        <argsstring>() const</argsstring>
        <name>MinWidth</name>
        <briefdescription>
<para>Get the minimum width of the bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="106" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1a216fa2f42fce4a6edd8f1a354d24aac2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ElemType &amp;</type>
        <definition>ElemType&amp; MinWidth</definition>
        <argsstring>()</argsstring>
        <name>MinWidth</name>
        <briefdescription>
<para>Modify the minimum width of the bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="108" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1a3becb0b78fc8642f6233a92d9a4494d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref></type>
        <definition>HRectBound operator&amp;</definition>
        <argsstring>(const HRectBound &amp;bound) const</argsstring>
        <name>operator &amp;</name>
        <param>
          <type>const <ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref> &amp;</type>
          <declname>bound</declname>
        </param>
        <briefdescription>
<para>Returns the intersection of this bound and another. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1a6b81bda204986dd2a1bfeecb46c82a73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref> &amp;</type>
        <definition>HRectBound&amp; operator&amp;=</definition>
        <argsstring>(const HRectBound &amp;bound)</argsstring>
        <name>operator &amp;=</name>
        <param>
          <type>const <ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref> &amp;</type>
          <declname>bound</declname>
        </param>
        <briefdescription>
<para>Intersects this bound with another. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1ae368f3b87f5b50c43247724aa0ec253c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref> &amp;</type>
        <definition>HRectBound&amp; operator=</definition>
        <argsstring>(const HRectBound &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Same as copy constructor; necessary to prevent memory leaks. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1a993c1901b1bc446219fabeb54776f6b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref> &amp;</type>
        <definition>HRectBound&amp; operator=</definition>
        <argsstring>(HRectBound &amp;&amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Move assignment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1a3f5bdaafab276f919fb5fbca6cc2f885" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>math::RangeType&lt; ElemType &gt; &amp;</type>
        <definition>math::RangeType&lt;ElemType&gt;&amp; operator[]</definition>
        <argsstring>(const size_t i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Get the range for a particular dimension. </para>        </briefdescription>
        <detaileddescription>
<para>No bounds checking. Be careful: this may make <ref refid="classmlpack_1_1bound_1_1HRectBound_1a216fa2f42fce4a6edd8f1a354d24aac2" kindref="member">MinWidth()</ref> invalid. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="100" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1a4ab2ad05d0e4e59b868c4c5bef904ee1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const math::RangeType&lt; ElemType &gt; &amp;</type>
        <definition>const math::RangeType&lt;ElemType&gt;&amp; operator[]</definition>
        <argsstring>(const size_t i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Modify the range for a particular dimension. No bounds checking. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="102" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" bodystart="102" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1a9e955961567ca1540df58d2185f81439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MatType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref> &amp;</type>
        <definition>HRectBound&amp; operator|=</definition>
        <argsstring>(const MatType &amp;data)</argsstring>
        <name>operator|=</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Expands this region to include new points. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MatType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of matrix; could be Mat, SpMat, a subview, or just a vector. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data points to expand this region to include. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1a77f7aac5543d1e00596af2d2074c142b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref> &amp;</type>
        <definition>HRectBound&amp; operator|=</definition>
        <argsstring>(const HRectBound &amp;other)</argsstring>
        <name>operator|=</name>
        <param>
          <type>const <ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Expands this region to encompass another bound. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1a237a387176c306c3b8c025590d691338" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ElemType</type>
        <definition>ElemType Overlap</definition>
        <argsstring>(const HRectBound &amp;bound) const</argsstring>
        <name>Overlap</name>
        <param>
          <type>const <ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref> &amp;</type>
          <declname>bound</declname>
        </param>
        <briefdescription>
<para>Returns the volume of overlap of this bound and another. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="225" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1a2c5555e91d38db00fc5f76fe0032044c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>math::RangeType&lt; ElemType &gt;</type>
        <definition>math::RangeType&lt;ElemType&gt; RangeDistance</definition>
        <argsstring>(const HRectBound &amp;other) const</argsstring>
        <name>RangeDistance</name>
        <param>
          <type>const <ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Calculates minimum and maximum bound-to-bound distance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Bound to which the minimum and maximum distances are requested. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1a60a550bf46aa1d7b858134ce41fd5a3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VecType</type>
          </param>
        </templateparamlist>
        <type>math::RangeType&lt; ElemType &gt;</type>
        <definition>math::RangeType&lt;ElemType&gt; RangeDistance</definition>
        <argsstring>(const VecType &amp;point, typename std::enable_if_t&lt; IsVector&lt; VecType &gt;::value &gt; *=0) const</argsstring>
        <name>RangeDistance</name>
        <param>
          <type>const VecType &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>typename <ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt; <ref refid="structIsVector" kindref="compound">IsVector</ref>&lt; VecType &gt;::value &gt; *</type>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Calculates minimum and maximum bound-to-point distance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to which the minimum and maximum distances are requested. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1a72d63b74c8166dff8e1a9006905ad9ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t version)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>version</declname>
        </param>
        <briefdescription>
<para>Serialize the bound object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="236" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1bound_1_1HRectBound_1ac0e1df0f15250ddde83eed6a1bf52eba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ElemType</type>
        <definition>ElemType Volume</definition>
        <argsstring>() const</argsstring>
        <name>Volume</name>
        <briefdescription>
<para>Calculate the volume of the hyperrectangle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Volume of the hyperrectangle. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="127" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hyper-rectangle bound for an L-metric. </para>    </briefdescription>
    <detaileddescription>
<para>This should be used in conjunction with the LMetric class. Be sure to use the same template parameters for LMetric as you do for <ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref> <ndash/> otherwise odd results may occur.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MetricType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of metric to use; must be of type LMetric. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ElemType</parametername>
</parameternamelist>
<parameterdescription>
<para>Element type (double/float/int/etc.). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="541">
        <label>HRectBound&lt; metric::EuclideanDistance, ElemType &gt;</label>
        <link refid="classmlpack_1_1bound_1_1HRectBound"/>
        <childnode refid="540" relation="template-instance">
          <edgelabel>&lt; metric::EuclideanDistance, ElemType &gt;</edgelabel>
        </childnode>
      </node>
      <node id="540">
        <label>HRectBound&lt; MetricType, ElemType &gt;</label>
        <link refid="classmlpack_1_1bound_1_1HRectBound"/>
      </node>
      <node id="542">
        <label>HRectBound&lt; MetricType &gt;</label>
        <link refid="classmlpack_1_1bound_1_1HRectBound"/>
        <childnode refid="540" relation="template-instance">
          <edgelabel>&lt; MetricType &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" line="55" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp" bodystart="54" bodyend="247"/>
    <listofallmembers>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1ae5a809599d709fb05805cfa6af27b845" prot="private" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>bounds</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1ac519e0ecb1bbd517724a93b4b57cc399" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>Center</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1aa71d36872f416feaa853788a7a7a7ef8" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>Clear</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1a3c1084b782672d502264b8c6d33ed0dd" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>Contains</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1ad3a69a98f323de871cc834fe91114792" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>Contains</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1a60e7246d34103909f688395e35869b39" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>Diameter</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1a226055b65c95a957d221674051683344" prot="private" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>dim</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1a7993a4f36c530e03b78b28b5f53bb286" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>Dim</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1a14d6367f1a3e1718deed8cf4fd8300d4" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>HRectBound</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1a64c0d7420d56f31d05bdbf3612bc91b2" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>HRectBound</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1a1cd26f681a6e3c5ee325850ace586cfa" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>HRectBound</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1a554cc0da21197f0b6cb7dfc6050ead63" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>HRectBound</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1ae764d88483236cc470f5abe0273df4c5" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>MaxDistance</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1aff674aa2febc8534dadd90e03d93c087" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>MaxDistance</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1ad069c71a7bc99c59bce1c3f859e5d22b" prot="private" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>metric</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1aac4d643c62af7d9cc2a072aea10d2b32" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>Metric</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1acc71d930ed90e73b2bc0c360835c5371" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>Metric</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1a73bf99a433e88a31d98b46bf4c0da147" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>MinDistance</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1aee3d05d30173b45bce8fb59678093923" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>MinDistance</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1ab8478ff52c4d4d5e7fa6311fa39abb76" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>MinWidth</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1a216fa2f42fce4a6edd8f1a354d24aac2" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>MinWidth</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1ac6a539d0a5e4d1fb8b85c37824301928" prot="private" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>minWidth</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1a3becb0b78fc8642f6233a92d9a4494d9" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>operator &amp;</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1a6b81bda204986dd2a1bfeecb46c82a73" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>operator &amp;=</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1ae368f3b87f5b50c43247724aa0ec253c" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>operator=</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1a993c1901b1bc446219fabeb54776f6b7" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>operator=</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1a3f5bdaafab276f919fb5fbca6cc2f885" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>operator[]</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1a4ab2ad05d0e4e59b868c4c5bef904ee1" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>operator[]</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1a9e955961567ca1540df58d2185f81439" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>operator|=</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1a77f7aac5543d1e00596af2d2074c142b" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>operator|=</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1a237a387176c306c3b8c025590d691338" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>Overlap</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1a2c5555e91d38db00fc5f76fe0032044c" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>RangeDistance</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1a60a550bf46aa1d7b858134ce41fd5a3a" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>RangeDistance</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1a72d63b74c8166dff8e1a9006905ad9ca" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1ac0e1df0f15250ddde83eed6a1bf52eba" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>Volume</name></member>
      <member refid="classmlpack_1_1bound_1_1HRectBound_1a68cfb4331fef891c5a7587cc454df1cb" prot="public" virt="non-virtual"><scope>mlpack::bound::HRectBound</scope><name>~HRectBound</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
