<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="random__replay_8hpp" kind="file" language="C++">
    <compoundname>random_replay.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="no">cassert</includes>
    <includedby refid="q__learning_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_learning.hpp</includedby>
    <includedby refid="sac_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/sac.hpp</includedby>
    <incdepgraph>
      <node id="58816">
        <label>list</label>
      </node>
      <node id="58813">
        <label>atomic</label>
      </node>
      <node id="58803">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="58779">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="58815">
        <label>iomanip</label>
      </node>
      <node id="58765">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/replay/random_replay.hpp</label>
        <link refid="random__replay_8hpp"/>
        <childnode refid="58766" relation="include">
        </childnode>
        <childnode refid="58823" relation="include">
        </childnode>
      </node>
      <node id="58788">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="58789" relation="include">
        </childnode>
        <childnode refid="58791" relation="include">
        </childnode>
      </node>
      <node id="58771">
        <label>cstdint</label>
      </node>
      <node id="58780">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="58787">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="58810">
        <label>arma_config.hpp</label>
      </node>
      <node id="58800">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="58767">
        <label>cmath</label>
      </node>
      <node id="58823">
        <label>cassert</label>
      </node>
      <node id="58786">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="58775">
        <label>stdexcept</label>
      </node>
      <node id="58795">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="58780" relation="include">
        </childnode>
        <childnode refid="58782" relation="include">
        </childnode>
        <childnode refid="58783" relation="include">
        </childnode>
        <childnode refid="58781" relation="include">
        </childnode>
      </node>
      <node id="58819">
        <label>string</label>
      </node>
      <node id="58807">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="58808" relation="include">
        </childnode>
        <childnode refid="58774" relation="include">
        </childnode>
      </node>
      <node id="58817">
        <label>map</label>
      </node>
      <node id="58769">
        <label>cfloat</label>
      </node>
      <node id="58799">
        <label>boost/variant.hpp</label>
      </node>
      <node id="58821">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="58783">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="58806">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="58807" relation="include">
        </childnode>
        <childnode refid="58783" relation="include">
        </childnode>
        <childnode refid="58790" relation="include">
        </childnode>
        <childnode refid="58808" relation="include">
        </childnode>
      </node>
      <node id="58796">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="58794">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="58780" relation="include">
        </childnode>
        <childnode refid="58782" relation="include">
        </childnode>
        <childnode refid="58783" relation="include">
        </childnode>
        <childnode refid="58781" relation="include">
        </childnode>
      </node>
      <node id="58797">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="58780" relation="include">
        </childnode>
        <childnode refid="58782" relation="include">
        </childnode>
        <childnode refid="58783" relation="include">
        </childnode>
        <childnode refid="58781" relation="include">
        </childnode>
      </node>
      <node id="58785">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="58805">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="58781" relation="include">
        </childnode>
        <childnode refid="58782" relation="include">
        </childnode>
        <childnode refid="58783" relation="include">
        </childnode>
        <childnode refid="58793" relation="include">
        </childnode>
        <childnode refid="58802" relation="include">
        </childnode>
      </node>
      <node id="58809">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="58810" relation="include">
        </childnode>
      </node>
      <node id="58811">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="58766">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="58767" relation="include">
        </childnode>
        <childnode refid="58768" relation="include">
        </childnode>
        <childnode refid="58769" relation="include">
        </childnode>
        <childnode refid="58770" relation="include">
        </childnode>
        <childnode refid="58771" relation="include">
        </childnode>
        <childnode refid="58772" relation="include">
        </childnode>
        <childnode refid="58773" relation="include">
        </childnode>
        <childnode refid="58774" relation="include">
        </childnode>
        <childnode refid="58775" relation="include">
        </childnode>
        <childnode refid="58776" relation="include">
        </childnode>
        <childnode refid="58777" relation="include">
        </childnode>
        <childnode refid="58778" relation="include">
        </childnode>
        <childnode refid="58779" relation="include">
        </childnode>
        <childnode refid="58780" relation="include">
        </childnode>
        <childnode refid="58781" relation="include">
        </childnode>
        <childnode refid="58782" relation="include">
        </childnode>
        <childnode refid="58783" relation="include">
        </childnode>
        <childnode refid="58784" relation="include">
        </childnode>
        <childnode refid="58785" relation="include">
        </childnode>
        <childnode refid="58786" relation="include">
        </childnode>
        <childnode refid="58787" relation="include">
        </childnode>
        <childnode refid="58788" relation="include">
        </childnode>
        <childnode refid="58792" relation="include">
        </childnode>
        <childnode refid="58793" relation="include">
        </childnode>
        <childnode refid="58794" relation="include">
        </childnode>
        <childnode refid="58795" relation="include">
        </childnode>
        <childnode refid="58796" relation="include">
        </childnode>
        <childnode refid="58797" relation="include">
        </childnode>
        <childnode refid="58798" relation="include">
        </childnode>
        <childnode refid="58804" relation="include">
        </childnode>
        <childnode refid="58805" relation="include">
        </childnode>
        <childnode refid="58802" relation="include">
        </childnode>
        <childnode refid="58806" relation="include">
        </childnode>
        <childnode refid="58809" relation="include">
        </childnode>
        <childnode refid="58811" relation="include">
        </childnode>
        <childnode refid="58812" relation="include">
        </childnode>
        <childnode refid="58821" relation="include">
        </childnode>
        <childnode refid="58822" relation="include">
        </childnode>
      </node>
      <node id="58772">
        <label>cstdio</label>
      </node>
      <node id="58776">
        <label>tuple</label>
      </node>
      <node id="58781">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="58798">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="58781" relation="include">
        </childnode>
        <childnode refid="58782" relation="include">
        </childnode>
        <childnode refid="58783" relation="include">
        </childnode>
        <childnode refid="58785" relation="include">
        </childnode>
        <childnode refid="58799" relation="include">
        </childnode>
        <childnode refid="58800" relation="include">
        </childnode>
        <childnode refid="58801" relation="include">
        </childnode>
        <childnode refid="58802" relation="include">
        </childnode>
      </node>
      <node id="58777">
        <label>utility</label>
      </node>
      <node id="58801">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="58792">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="58789">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="58790" relation="include">
        </childnode>
      </node>
      <node id="58812">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="58813" relation="include">
        </childnode>
        <childnode refid="58814" relation="include">
        </childnode>
        <childnode refid="58815" relation="include">
        </childnode>
        <childnode refid="58816" relation="include">
        </childnode>
        <childnode refid="58817" relation="include">
        </childnode>
        <childnode refid="58818" relation="include">
        </childnode>
        <childnode refid="58819" relation="include">
        </childnode>
        <childnode refid="58820" relation="include">
        </childnode>
      </node>
      <node id="58790">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="58804">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="58802" relation="include">
        </childnode>
        <childnode refid="58798" relation="include">
        </childnode>
        <childnode refid="58805" relation="include">
        </childnode>
      </node>
      <node id="58773">
        <label>cstdlib</label>
      </node>
      <node id="58768">
        <label>cctype</label>
      </node>
      <node id="58791">
        <label>unordered_map</label>
      </node>
      <node id="58770">
        <label>climits</label>
      </node>
      <node id="58818">
        <label>mutex</label>
      </node>
      <node id="58814">
        <label>chrono</label>
      </node>
      <node id="58822">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="58820">
        <label>thread</label>
      </node>
      <node id="58808">
        <label>type_traits</label>
      </node>
      <node id="58784">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="58778">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="58802">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="58780" relation="include">
        </childnode>
        <childnode refid="58781" relation="include">
        </childnode>
        <childnode refid="58782" relation="include">
        </childnode>
        <childnode refid="58783" relation="include">
        </childnode>
        <childnode refid="58803" relation="include">
        </childnode>
      </node>
      <node id="58774">
        <label>cstring</label>
      </node>
      <node id="58793">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="58782">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="58825">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_learning.hpp</label>
        <link refid="q__learning_8hpp"/>
      </node>
      <node id="58824">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/replay/random_replay.hpp</label>
        <link refid="random__replay_8hpp"/>
        <childnode refid="58825" relation="include">
        </childnode>
        <childnode refid="58826" relation="include">
        </childnode>
      </node>
      <node id="58826">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/sac.hpp</label>
        <link refid="sac_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1rl_1_1RandomReplay" prot="public">mlpack::rl::RandomReplay</innerclass>
    <innerclass refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition" prot="public">mlpack::rl::RandomReplay::Transition</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1rl">mlpack::rl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Shangtong Zhang</para></simplesect>
This file is an implementation of random experience replay.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_RL_REPLAY_RANDOM_REPLAY_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_RL_REPLAY_RANDOM_REPLAY_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">rl<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>EnvironmentType&gt;</highlight></codeline>
<codeline lineno="44" refid="classmlpack_1_1rl_1_1RandomReplay" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1rl_1_1RandomReplay" kindref="compound">RandomReplay</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48" refid="classmlpack_1_1rl_1_1RandomReplay_1aaf7b2dc5d49d01961601c7c16be76777" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1RandomReplay_1aaf7b2dc5d49d01961601c7c16be76777" kindref="member">ActionType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>EnvironmentType::Action;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classmlpack_1_1rl_1_1RandomReplay_1ada68ef405b7c331a2bee337614f00088" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1RandomReplay_1ada68ef405b7c331a2bee337614f00088" kindref="member">StateType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>EnvironmentType::State;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition" kindref="compound">Transition</ref></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="55" refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1a4d1aa26dcfa648e02cbb0964cddbdbfe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1rl_1_1RandomReplay_1ada68ef405b7c331a2bee337614f00088" kindref="member">StateType</ref><sp/><ref refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1a4d1aa26dcfa648e02cbb0964cddbdbfe" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="56" refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1a99189868c044162e6d669fd832ecdc81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1rl_1_1RandomReplay_1aaf7b2dc5d49d01961601c7c16be76777" kindref="member">ActionType</ref><sp/><ref refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1a99189868c044162e6d669fd832ecdc81" kindref="member">action</ref>;</highlight></codeline>
<codeline lineno="57" refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1acee3a91cbbd4173eee61bff21bd94815" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1acee3a91cbbd4173eee61bff21bd94815" kindref="member">reward</ref>;</highlight></codeline>
<codeline lineno="58" refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1a3a01625e5f3d13101025ef2ad44d35db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1rl_1_1RandomReplay_1ada68ef405b7c331a2bee337614f00088" kindref="member">StateType</ref><sp/><ref refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1a3a01625e5f3d13101025ef2ad44d35db" kindref="member">nextState</ref>;</highlight></codeline>
<codeline lineno="59" refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1a110a50eb2161ae511abfacc86dc4d888" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1a110a50eb2161ae511abfacc86dc4d888" kindref="member">isEnd</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classmlpack_1_1rl_1_1RandomReplay_1a63672681bb61c707da6ca94ada59164a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1rl_1_1RandomReplay_1a63672681bb61c707da6ca94ada59164a" kindref="member">RandomReplay</ref>():</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>batchSize(0),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>capacity(0),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>position(0),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>full(false),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nSteps(0)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do<sp/>here.<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classmlpack_1_1rl_1_1RandomReplay_1ad222f724aae50a27cb0f3f4f761cad01" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1rl_1_1RandomReplay_1ad222f724aae50a27cb0f3f4f761cad01" kindref="member">RandomReplay</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>batchSize,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>capacity,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nSteps<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimension<sp/>=<sp/>StateType::dimension)<sp/>:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>batchSize(batchSize),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>capacity(capacity),</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>position(0),</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>full(false),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nSteps(nSteps),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>states(dimension,<sp/>capacity),</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>actions(capacity),</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rewards(capacity),</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nextStates(dimension,<sp/>capacity),</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isTerminal(capacity)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do<sp/>here.<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classmlpack_1_1rl_1_1RandomReplay_1ab17ee90540cf7b26647b57acf16116d5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1RandomReplay_1ab17ee90540cf7b26647b57acf16116d5" kindref="member">Store</ref>(<ref refid="classmlpack_1_1rl_1_1RandomReplay_1ada68ef405b7c331a2bee337614f00088" kindref="member">StateType</ref><sp/><ref refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1a4d1aa26dcfa648e02cbb0964cddbdbfe" kindref="member">state</ref>,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1rl_1_1RandomReplay_1aaf7b2dc5d49d01961601c7c16be76777" kindref="member">ActionType</ref><sp/><ref refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1a99189868c044162e6d669fd832ecdc81" kindref="member">action</ref>,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1acee3a91cbbd4173eee61bff21bd94815" kindref="member">reward</ref>,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1rl_1_1RandomReplay_1ada68ef405b7c331a2bee337614f00088" kindref="member">StateType</ref><sp/><ref refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1a3a01625e5f3d13101025ef2ad44d35db" kindref="member">nextState</ref>,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1a110a50eb2161ae511abfacc86dc4d888" kindref="member">isEnd</ref>,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>discount)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>nStepBuffer.push_back({<ref refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1a4d1aa26dcfa648e02cbb0964cddbdbfe" kindref="member">state</ref>,<sp/><ref refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1a99189868c044162e6d669fd832ecdc81" kindref="member">action</ref>,<sp/><ref refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1acee3a91cbbd4173eee61bff21bd94815" kindref="member">reward</ref>,<sp/><ref refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1a3a01625e5f3d13101025ef2ad44d35db" kindref="member">nextState</ref>,<sp/>isEnd});</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Single<sp/>step<sp/>transition<sp/>is<sp/>not<sp/>ready.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nStepBuffer.size()<sp/>&lt;<sp/>nSteps)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>keep<sp/>the<sp/>queue<sp/>size<sp/>fixed<sp/>to<sp/>nSteps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nStepBuffer.size()<sp/>&gt;<sp/>nSteps)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nStepBuffer.pop_front();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>moving<sp/>ahead,<sp/>lets<sp/>confirm<sp/>if<sp/>our<sp/>fixed<sp/>size<sp/>buffer<sp/>works.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(nStepBuffer.size()<sp/>==<sp/>nSteps);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>n-step<sp/>transition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1rl_1_1RandomReplay_1abf36129b66f5b30a65d96d11ebfde027" kindref="member">GetNStepInfo</ref>(reward,<sp/>nextState,<sp/>isEnd,<sp/>discount);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>nStepBuffer.front().state;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>action<sp/>=<sp/>nStepBuffer.front().action;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>states.col(position)<sp/>=<sp/>state.Encode();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>actions[position]<sp/>=<sp/><ref refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1a99189868c044162e6d669fd832ecdc81" kindref="member">action</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>rewards(position)<sp/>=<sp/><ref refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1acee3a91cbbd4173eee61bff21bd94815" kindref="member">reward</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>nextStates.col(position)<sp/>=<sp/>nextState.Encode();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>isTerminal(position)<sp/>=<sp/><ref refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1a110a50eb2161ae511abfacc86dc4d888" kindref="member">isEnd</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>position++;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(position<sp/>==<sp/>capacity)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>full<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>position<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="classmlpack_1_1rl_1_1RandomReplay_1abf36129b66f5b30a65d96d11ebfde027" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1RandomReplay_1abf36129b66f5b30a65d96d11ebfde027" kindref="member">GetNStepInfo</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1acee3a91cbbd4173eee61bff21bd94815" kindref="member">reward</ref>,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1rl_1_1RandomReplay_1ada68ef405b7c331a2bee337614f00088" kindref="member">StateType</ref>&amp;<sp/><ref refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1a3a01625e5f3d13101025ef2ad44d35db" kindref="member">nextState</ref>,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="structmlpack_1_1rl_1_1RandomReplay_1_1Transition_1a110a50eb2161ae511abfacc86dc4d888" kindref="member">isEnd</ref>,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>discount)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>reward<sp/>=<sp/>nStepBuffer.back().reward;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>nextState<sp/>=<sp/>nStepBuffer.back().nextState;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>isEnd<sp/>=<sp/>nStepBuffer.back().isEnd;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>start<sp/>from<sp/>the<sp/>second<sp/>last<sp/>transition<sp/>in<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>nStepBuffer.size()<sp/>-<sp/>2;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>iE<sp/>=<sp/>nStepBuffer[i].isEnd;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reward<sp/>=<sp/>nStepBuffer[i].reward<sp/>+<sp/>discount<sp/>*<sp/>reward<sp/>*<sp/>(1<sp/>-<sp/>iE);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iE)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextState<sp/>=<sp/>nStepBuffer[i].nextState;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isEnd<sp/>=<sp/>iE;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="classmlpack_1_1rl_1_1RandomReplay_1a6ecc6da2d5f83f0eefdc74be3465925a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1RandomReplay_1a6ecc6da2d5f83f0eefdc74be3465925a" kindref="member">Sample</ref>(arma::mat&amp;<sp/>sampledStates,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;ActionType&gt;&amp;<sp/>sampledActions,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::rowvec&amp;<sp/>sampledRewards,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>sampledNextStates,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::irowvec&amp;<sp/>isTerminal)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>upperBound<sp/>=<sp/>full<sp/>?<sp/>capacity<sp/>:<sp/>position;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::uvec<sp/>sampledIndices<sp/>=<sp/>arma::randi&lt;arma::uvec&gt;(</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>batchSize,<sp/>arma::distr_param(0,<sp/>upperBound<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>sampledStates<sp/>=<sp/>states.cols(sampledIndices);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;<sp/>t<sp/>&lt;<sp/>sampledIndices.n_rows;<sp/>t<sp/>++)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sampledActions.push_back(actions[sampledIndices[t]]);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>sampledRewards<sp/>=<sp/>rewards.elem(sampledIndices).t();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>sampledNextStates<sp/>=<sp/>nextStates.cols(sampledIndices);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>isTerminal<sp/>=<sp/>this-&gt;isTerminal.elem(sampledIndices).t();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="classmlpack_1_1rl_1_1RandomReplay_1ab8983dc8f7847b4c77148b86d0e7fc8d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1rl_1_1RandomReplay_1ab8983dc8f7847b4c77148b86d0e7fc8d" kindref="member">Size</ref>()</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>full<sp/>?<sp/>capacity<sp/>:<sp/>position;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="classmlpack_1_1rl_1_1RandomReplay_1ab1989879b7d6a3110f2391a5b239e7aa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1RandomReplay_1ab1989879b7d6a3110f2391a5b239e7aa" kindref="member">Update</ref>(arma::mat<sp/></highlight><highlight class="comment">/*<sp/>target<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;ActionType&gt;<sp/></highlight><highlight class="comment">/*<sp/>sampledActions<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat<sp/></highlight><highlight class="comment">/*<sp/>nextActionValues<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/></highlight><highlight class="comment">/*<sp/>gradients<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>nothing<sp/>for<sp/>random<sp/>replay.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="classmlpack_1_1rl_1_1RandomReplay_1a48a86a6254329a98e1f15d4722c4e85b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1rl_1_1RandomReplay_1a48a86a6254329a98e1f15d4722c4e85b" kindref="member">NSteps</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nSteps;<sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>batchSize;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>capacity;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>position;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>full;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nSteps;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>std::deque&lt;Transition&gt;<sp/>nStepBuffer;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>arma::mat<sp/>states;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>std::vector&lt;ActionType&gt;<sp/>actions;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>arma::rowvec<sp/>rewards;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>arma::mat<sp/>nextStates;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>arma::irowvec<sp/>isTerminal;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">};</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>rl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/replay/random_replay.hpp"/>
  </compounddef>
</doxygen>
