<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="dtb_8hpp" kind="file" language="C++">
    <compoundname>dtb.hpp</compoundname>
    <includes refid="dtb__stat_8hpp" local="yes">dtb_stat.hpp</includes>
    <includes refid="edge__pair_8hpp" local="yes">edge_pair.hpp</includes>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="lmetric_8hpp" local="no">mlpack/core/metrics/lmetric.hpp</includes>
    <includes refid="binary__space__tree_8hpp" local="no">mlpack/core/tree/binary_space_tree.hpp</includes>
    <includes local="yes">dtb_impl.hpp</includes>
    <incdepgraph>
      <node id="47563">
        <label>list</label>
      </node>
      <node id="47616">
        <label>breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="47571">
        <label>union_find.hpp</label>
        <link refid="union__find_8hpp"/>
        <childnode refid="47513" relation="include">
        </childnode>
      </node>
      <node id="47608">
        <label>binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="47513" relation="include">
        </childnode>
        <childnode refid="47605" relation="include">
        </childnode>
        <childnode refid="47609" relation="include">
        </childnode>
      </node>
      <node id="47618">
        <label>binary_space_tree/traits.hpp</label>
        <link refid="binary__space__tree_2traits_8hpp"/>
        <childnode refid="47619" relation="include">
        </childnode>
        <childnode refid="47580" relation="include">
        </childnode>
      </node>
      <node id="47560">
        <label>atomic</label>
      </node>
      <node id="47550">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="47526">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="47562">
        <label>iomanip</label>
      </node>
      <node id="47615">
        <label>queue</label>
      </node>
      <node id="47577">
        <label>bound_traits.hpp</label>
        <link refid="bound__traits_8hpp"/>
      </node>
      <node id="47590">
        <label>binary_space_tree/mean_split.hpp</label>
        <link refid="mean__split_8hpp"/>
        <childnode refid="47513" relation="include">
        </childnode>
        <childnode refid="47588" relation="include">
        </childnode>
        <childnode refid="47591" relation="include">
        </childnode>
      </node>
      <node id="47573">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="47535">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="47536" relation="include">
        </childnode>
        <childnode refid="47538" relation="include">
        </childnode>
      </node>
      <node id="47518">
        <label>cstdint</label>
      </node>
      <node id="47527">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="47534">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="47617">
        <label>binary_space_tree/breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="47594">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="47591">
        <label>mean_split_impl.hpp</label>
      </node>
      <node id="47557">
        <label>arma_config.hpp</label>
      </node>
      <node id="47582">
        <label>hollow_ball_bound.hpp</label>
        <link refid="hollow__ball__bound_8hpp"/>
        <childnode refid="47513" relation="include">
        </childnode>
        <childnode refid="47572" relation="include">
        </childnode>
        <childnode refid="47577" relation="include">
        </childnode>
        <childnode refid="47583" relation="include">
        </childnode>
      </node>
      <node id="47606">
        <label>../statistic.hpp</label>
        <link refid="statistic_8hpp"/>
      </node>
      <node id="47601">
        <label>lin_alg_impl.hpp</label>
      </node>
      <node id="47547">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="47514">
        <label>cmath</label>
      </node>
      <node id="47575">
        <label>bounds.hpp</label>
        <link refid="bounds_8hpp"/>
        <childnode refid="47576" relation="include">
        </childnode>
        <childnode refid="47572" relation="include">
        </childnode>
        <childnode refid="47577" relation="include">
        </childnode>
        <childnode refid="47578" relation="include">
        </childnode>
        <childnode refid="47580" relation="include">
        </childnode>
        <childnode refid="47582" relation="include">
        </childnode>
        <childnode refid="47584" relation="include">
        </childnode>
      </node>
      <node id="47533">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="47522">
        <label>stdexcept</label>
      </node>
      <node id="47611">
        <label>binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="47513" relation="include">
        </childnode>
        <childnode refid="47605" relation="include">
        </childnode>
        <childnode refid="47612" relation="include">
        </childnode>
      </node>
      <node id="47542">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="47527" relation="include">
        </childnode>
        <childnode refid="47529" relation="include">
        </childnode>
        <childnode refid="47530" relation="include">
        </childnode>
        <childnode refid="47528" relation="include">
        </childnode>
      </node>
      <node id="47576">
        <label>mlpack/core/math/range.hpp</label>
      </node>
      <node id="47566">
        <label>string</label>
      </node>
      <node id="47597">
        <label>binary_space_tree/rp_tree_max_split.hpp</label>
        <link refid="rp__tree__max__split_8hpp"/>
        <childnode refid="47513" relation="include">
        </childnode>
        <childnode refid="47588" relation="include">
        </childnode>
        <childnode refid="47598" relation="include">
        </childnode>
      </node>
      <node id="47589">
        <label>midpoint_split_impl.hpp</label>
      </node>
      <node id="47554">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="47555" relation="include">
        </childnode>
        <childnode refid="47521" relation="include">
        </childnode>
      </node>
      <node id="47564">
        <label>map</label>
      </node>
      <node id="47612">
        <label>dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="47600">
        <label>mlpack/core/math/lin_alg.hpp</label>
        <link refid="lin__alg_8hpp"/>
        <childnode refid="47513" relation="include">
        </childnode>
        <childnode refid="47601" relation="include">
        </childnode>
      </node>
      <node id="47516">
        <label>cfloat</label>
      </node>
      <node id="47546">
        <label>boost/variant.hpp</label>
      </node>
      <node id="47568">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="47530">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="47553">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="47554" relation="include">
        </childnode>
        <childnode refid="47530" relation="include">
        </childnode>
        <childnode refid="47537" relation="include">
        </childnode>
        <childnode refid="47555" relation="include">
        </childnode>
      </node>
      <node id="47543">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="47541">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="47527" relation="include">
        </childnode>
        <childnode refid="47529" relation="include">
        </childnode>
        <childnode refid="47530" relation="include">
        </childnode>
        <childnode refid="47528" relation="include">
        </childnode>
      </node>
      <node id="47544">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="47527" relation="include">
        </childnode>
        <childnode refid="47529" relation="include">
        </childnode>
        <childnode refid="47530" relation="include">
        </childnode>
        <childnode refid="47528" relation="include">
        </childnode>
      </node>
      <node id="47607">
        <label>binary_space_tree_impl.hpp</label>
      </node>
      <node id="47532">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="47552">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="47528" relation="include">
        </childnode>
        <childnode refid="47529" relation="include">
        </childnode>
        <childnode refid="47530" relation="include">
        </childnode>
        <childnode refid="47540" relation="include">
        </childnode>
        <childnode refid="47549" relation="include">
        </childnode>
      </node>
      <node id="47556">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="47557" relation="include">
        </childnode>
      </node>
      <node id="47613">
        <label>binary_space_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="47512">
        <label>dtb_stat.hpp</label>
        <link refid="dtb__stat_8hpp"/>
        <childnode refid="47513" relation="include">
        </childnode>
      </node>
      <node id="47558">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="47513">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="47514" relation="include">
        </childnode>
        <childnode refid="47515" relation="include">
        </childnode>
        <childnode refid="47516" relation="include">
        </childnode>
        <childnode refid="47517" relation="include">
        </childnode>
        <childnode refid="47518" relation="include">
        </childnode>
        <childnode refid="47519" relation="include">
        </childnode>
        <childnode refid="47520" relation="include">
        </childnode>
        <childnode refid="47521" relation="include">
        </childnode>
        <childnode refid="47522" relation="include">
        </childnode>
        <childnode refid="47523" relation="include">
        </childnode>
        <childnode refid="47524" relation="include">
        </childnode>
        <childnode refid="47525" relation="include">
        </childnode>
        <childnode refid="47526" relation="include">
        </childnode>
        <childnode refid="47527" relation="include">
        </childnode>
        <childnode refid="47528" relation="include">
        </childnode>
        <childnode refid="47529" relation="include">
        </childnode>
        <childnode refid="47530" relation="include">
        </childnode>
        <childnode refid="47531" relation="include">
        </childnode>
        <childnode refid="47532" relation="include">
        </childnode>
        <childnode refid="47533" relation="include">
        </childnode>
        <childnode refid="47534" relation="include">
        </childnode>
        <childnode refid="47535" relation="include">
        </childnode>
        <childnode refid="47539" relation="include">
        </childnode>
        <childnode refid="47540" relation="include">
        </childnode>
        <childnode refid="47541" relation="include">
        </childnode>
        <childnode refid="47542" relation="include">
        </childnode>
        <childnode refid="47543" relation="include">
        </childnode>
        <childnode refid="47544" relation="include">
        </childnode>
        <childnode refid="47545" relation="include">
        </childnode>
        <childnode refid="47551" relation="include">
        </childnode>
        <childnode refid="47552" relation="include">
        </childnode>
        <childnode refid="47549" relation="include">
        </childnode>
        <childnode refid="47553" relation="include">
        </childnode>
        <childnode refid="47556" relation="include">
        </childnode>
        <childnode refid="47558" relation="include">
        </childnode>
        <childnode refid="47559" relation="include">
        </childnode>
        <childnode refid="47568" relation="include">
        </childnode>
        <childnode refid="47569" relation="include">
        </childnode>
      </node>
      <node id="47609">
        <label>single_tree_traverser_impl.hpp</label>
      </node>
      <node id="47587">
        <label>binary_space_tree/midpoint_split.hpp</label>
        <link refid="midpoint__split_8hpp"/>
        <childnode refid="47513" relation="include">
        </childnode>
        <childnode refid="47588" relation="include">
        </childnode>
        <childnode refid="47589" relation="include">
        </childnode>
      </node>
      <node id="47595">
        <label>random</label>
      </node>
      <node id="47581">
        <label>ballbound_impl.hpp</label>
      </node>
      <node id="47610">
        <label>binary_space_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="47570">
        <label>edge_pair.hpp</label>
        <link refid="edge__pair_8hpp"/>
        <childnode refid="47513" relation="include">
        </childnode>
        <childnode refid="47571" relation="include">
        </childnode>
      </node>
      <node id="47519">
        <label>cstdio</label>
      </node>
      <node id="47585">
        <label>address.hpp</label>
        <link refid="address_8hpp"/>
      </node>
      <node id="47619">
        <label>mlpack/core/tree/tree_traits.hpp</label>
        <link refid="tree__traits_8hpp"/>
      </node>
      <node id="47523">
        <label>tuple</label>
      </node>
      <node id="47528">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="47603">
        <label>binary_space_tree/ub_tree_split.hpp</label>
        <link refid="ub__tree__split_8hpp"/>
        <childnode refid="47513" relation="include">
        </childnode>
        <childnode refid="47585" relation="include">
        </childnode>
        <childnode refid="47604" relation="include">
        </childnode>
      </node>
      <node id="47545">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="47528" relation="include">
        </childnode>
        <childnode refid="47529" relation="include">
        </childnode>
        <childnode refid="47530" relation="include">
        </childnode>
        <childnode refid="47532" relation="include">
        </childnode>
        <childnode refid="47546" relation="include">
        </childnode>
        <childnode refid="47547" relation="include">
        </childnode>
        <childnode refid="47548" relation="include">
        </childnode>
        <childnode refid="47549" relation="include">
        </childnode>
      </node>
      <node id="47605">
        <label>binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="47513" relation="include">
        </childnode>
        <childnode refid="47606" relation="include">
        </childnode>
        <childnode refid="47587" relation="include">
        </childnode>
        <childnode refid="47607" relation="include">
        </childnode>
        <childnode refid="47574" relation="include">
        </childnode>
      </node>
      <node id="47578">
        <label>hrectbound.hpp</label>
        <link refid="hrectbound_8hpp"/>
        <childnode refid="47513" relation="include">
        </childnode>
        <childnode refid="47576" relation="include">
        </childnode>
        <childnode refid="47572" relation="include">
        </childnode>
        <childnode refid="47577" relation="include">
        </childnode>
        <childnode refid="47579" relation="include">
        </childnode>
      </node>
      <node id="47602">
        <label>rp_tree_mean_split_impl.hpp</label>
      </node>
      <node id="47593">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="47513" relation="include">
        </childnode>
        <childnode refid="47594" relation="include">
        </childnode>
        <childnode refid="47595" relation="include">
        </childnode>
      </node>
      <node id="47524">
        <label>utility</label>
      </node>
      <node id="47548">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="47539">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="47574">
        <label>mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="47513" relation="include">
        </childnode>
        <childnode refid="47575" relation="include">
        </childnode>
        <childnode refid="47587" relation="include">
        </childnode>
        <childnode refid="47590" relation="include">
        </childnode>
        <childnode refid="47592" relation="include">
        </childnode>
        <childnode refid="47597" relation="include">
        </childnode>
        <childnode refid="47599" relation="include">
        </childnode>
        <childnode refid="47603" relation="include">
        </childnode>
        <childnode refid="47605" relation="include">
        </childnode>
        <childnode refid="47608" relation="include">
        </childnode>
        <childnode refid="47610" relation="include">
        </childnode>
        <childnode refid="47611" relation="include">
        </childnode>
        <childnode refid="47613" relation="include">
        </childnode>
        <childnode refid="47614" relation="include">
        </childnode>
        <childnode refid="47617" relation="include">
        </childnode>
        <childnode refid="47618" relation="include">
        </childnode>
        <childnode refid="47620" relation="include">
        </childnode>
      </node>
      <node id="47536">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="47537" relation="include">
        </childnode>
      </node>
      <node id="47559">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="47560" relation="include">
        </childnode>
        <childnode refid="47561" relation="include">
        </childnode>
        <childnode refid="47562" relation="include">
        </childnode>
        <childnode refid="47563" relation="include">
        </childnode>
        <childnode refid="47564" relation="include">
        </childnode>
        <childnode refid="47565" relation="include">
        </childnode>
        <childnode refid="47566" relation="include">
        </childnode>
        <childnode refid="47567" relation="include">
        </childnode>
      </node>
      <node id="47537">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="47551">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="47549" relation="include">
        </childnode>
        <childnode refid="47545" relation="include">
        </childnode>
        <childnode refid="47552" relation="include">
        </childnode>
      </node>
      <node id="47520">
        <label>cstdlib</label>
      </node>
      <node id="47515">
        <label>cctype</label>
      </node>
      <node id="47538">
        <label>unordered_map</label>
      </node>
      <node id="47517">
        <label>climits</label>
      </node>
      <node id="47511">
        <label>/home/aakash/mlpack/src/mlpack/methods/emst/dtb.hpp</label>
        <link refid="dtb_8hpp"/>
        <childnode refid="47512" relation="include">
        </childnode>
        <childnode refid="47570" relation="include">
        </childnode>
        <childnode refid="47513" relation="include">
        </childnode>
        <childnode refid="47572" relation="include">
        </childnode>
        <childnode refid="47574" relation="include">
        </childnode>
        <childnode refid="47621" relation="include">
        </childnode>
      </node>
      <node id="47565">
        <label>mutex</label>
      </node>
      <node id="47561">
        <label>chrono</label>
      </node>
      <node id="47579">
        <label>hrectbound_impl.hpp</label>
      </node>
      <node id="47569">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="47599">
        <label>binary_space_tree/rp_tree_mean_split.hpp</label>
        <link refid="rp__tree__mean__split_8hpp"/>
        <childnode refid="47513" relation="include">
        </childnode>
        <childnode refid="47597" relation="include">
        </childnode>
        <childnode refid="47588" relation="include">
        </childnode>
        <childnode refid="47600" relation="include">
        </childnode>
        <childnode refid="47602" relation="include">
        </childnode>
      </node>
      <node id="47596">
        <label>vantage_point_split_impl.hpp</label>
      </node>
      <node id="47567">
        <label>thread</label>
      </node>
      <node id="47580">
        <label>ballbound.hpp</label>
        <link refid="ballbound_8hpp"/>
        <childnode refid="47513" relation="include">
        </childnode>
        <childnode refid="47572" relation="include">
        </childnode>
        <childnode refid="47577" relation="include">
        </childnode>
        <childnode refid="47581" relation="include">
        </childnode>
      </node>
      <node id="47598">
        <label>rp_tree_max_split_impl.hpp</label>
      </node>
      <node id="47588">
        <label>mlpack/core/tree/perform_split.hpp</label>
        <link refid="perform__split_8hpp"/>
      </node>
      <node id="47555">
        <label>type_traits</label>
      </node>
      <node id="47614">
        <label>binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="47513" relation="include">
        </childnode>
        <childnode refid="47615" relation="include">
        </childnode>
        <childnode refid="47574" relation="include">
        </childnode>
        <childnode refid="47616" relation="include">
        </childnode>
      </node>
      <node id="47621">
        <label>dtb_impl.hpp</label>
      </node>
      <node id="47531">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="47620">
        <label>binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="47574" relation="include">
        </childnode>
      </node>
      <node id="47525">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="47549">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="47527" relation="include">
        </childnode>
        <childnode refid="47528" relation="include">
        </childnode>
        <childnode refid="47529" relation="include">
        </childnode>
        <childnode refid="47530" relation="include">
        </childnode>
        <childnode refid="47550" relation="include">
        </childnode>
      </node>
      <node id="47583">
        <label>hollow_ball_bound_impl.hpp</label>
      </node>
      <node id="47521">
        <label>cstring</label>
      </node>
      <node id="47540">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="47586">
        <label>cellbound_impl.hpp</label>
      </node>
      <node id="47604">
        <label>ub_tree_split_impl.hpp</label>
      </node>
      <node id="47584">
        <label>cellbound.hpp</label>
        <link refid="cellbound_8hpp"/>
        <childnode refid="47513" relation="include">
        </childnode>
        <childnode refid="47576" relation="include">
        </childnode>
        <childnode refid="47572" relation="include">
        </childnode>
        <childnode refid="47577" relation="include">
        </childnode>
        <childnode refid="47585" relation="include">
        </childnode>
        <childnode refid="47586" relation="include">
        </childnode>
      </node>
      <node id="47529">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="47572">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="47513" relation="include">
        </childnode>
        <childnode refid="47573" relation="include">
        </childnode>
      </node>
      <node id="47592">
        <label>binary_space_tree/vantage_point_split.hpp</label>
        <link refid="vantage__point__split_8hpp"/>
        <childnode refid="47513" relation="include">
        </childnode>
        <childnode refid="47588" relation="include">
        </childnode>
        <childnode refid="47593" relation="include">
        </childnode>
        <childnode refid="47596" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1emst_1_1DualTreeBoruvka" prot="public">mlpack::emst::DualTreeBoruvka</innerclass>
    <innerclass refid="structmlpack_1_1emst_1_1DualTreeBoruvka_1_1SortEdgesHelper" prot="private">mlpack::emst::DualTreeBoruvka::SortEdgesHelper</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1emst">mlpack::emst</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Bill March (<ulink url="mailto:march@gatech.edu">march@gatech.edu</ulink>)</para></simplesect>
Contains an implementation of the DualTreeBoruvka algorithm for finding a Euclidean Minimum Spanning Tree using the kd-tree data structure.</para><para><programlisting><codeline><highlight class="normal">@inproceedings{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>author<sp/>=<sp/>{March,<sp/>W.B.,<sp/>Ram,<sp/>P.,<sp/>and<sp/>Gray,<sp/>A.G.},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>title<sp/>=<sp/>{{Fast<sp/>Euclidean<sp/>Minimum<sp/>Spanning<sp/>Tree:<sp/>Algorithm,<sp/>Analysis,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Applications.}},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>booktitle<sp/>=<sp/>{Proceedings<sp/>of<sp/>the<sp/>16th<sp/>ACM<sp/>SIGKDD<sp/>International<sp/>Conference</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>on<sp/>Knowledge<sp/>Discovery<sp/>and<sp/>Data<sp/>Mining}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>series<sp/>=<sp/>{KDD<sp/>2010},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>year<sp/>=<sp/>{2010}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="25"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_EMST_DTB_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_EMST_DTB_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dtb__stat_8hpp" kindref="compound">dtb_stat.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="edge__pair_8hpp" kindref="compound">edge_pair.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="lmetric_8hpp" kindref="compound">mlpack/core/metrics/lmetric.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="binary__space__tree_8hpp" kindref="compound">mlpack/core/tree/binary_space_tree.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="37" refid="namespacemlpack_1_1emst" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">emst<sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MetricType<sp/>=<sp/><ref refid="namespacemlpack_1_1metric_1a0306f114fdf32dcdfa8f015408cfc37d" kindref="member">metric::EuclideanDistance</ref>,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType<sp/>=<sp/>arma::mat,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMetricType,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeStatType,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMatType&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TreeType<sp/>=<sp/><ref refid="classmlpack_1_1tree_1_1BinarySpaceTree" kindref="compound">tree::KDTree</ref></highlight></codeline>
<codeline lineno="82"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="83" refid="classmlpack_1_1emst_1_1DualTreeBoruvka" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1emst_1_1DualTreeBoruvka" kindref="compound">DualTreeBoruvka</ref></highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87" refid="classmlpack_1_1emst_1_1DualTreeBoruvka_1add9de6c53980696f4a41e4d1d3b71942" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TreeType&lt;MetricType,<sp/>DTBStat,<sp/>MatType&gt;<sp/><ref refid="classmlpack_1_1emst_1_1DualTreeBoruvka_1add9de6c53980696f4a41e4d1d3b71942" kindref="member">Tree</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>std::vector&lt;size_t&gt;<sp/>oldFromNew;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>Tree*<sp/>tree;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ownTree;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>naive;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>std::vector&lt;EdgePair&gt;<sp/>edges;<sp/></highlight><highlight class="comment">//<sp/>We<sp/>must<sp/>use<sp/>vector<sp/>with<sp/>non-numerical<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1emst_1_1UnionFind" kindref="compound">UnionFind</ref><sp/>connections;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>arma::Col&lt;size_t&gt;<sp/>neighborsInComponent;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>arma::Col&lt;size_t&gt;<sp/>neighborsOutComponent;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>arma::vec<sp/>neighborsDistances;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>totalDist;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>MetricType<sp/>metric;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SortEdgesHelper</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1emst_1_1EdgePair" kindref="compound">EdgePair</ref>&amp;<sp/>pairA,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1emst_1_1EdgePair" kindref="compound">EdgePair</ref>&amp;<sp/>pairB)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pairA.<ref refid="classmlpack_1_1emst_1_1EdgePair_1a2a7bfdfb655cc5a9fbf9f8613121eb52" kindref="member">Distance</ref>()<sp/>&lt;<sp/>pairB.<ref refid="classmlpack_1_1emst_1_1EdgePair_1a2a7bfdfb655cc5a9fbf9f8613121eb52" kindref="member">Distance</ref>());</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}<sp/>SortFun;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1emst_1_1DualTreeBoruvka_1ace5bd00e87dc4694e14549f154aaef4e" kindref="member">DualTreeBoruvka</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>dataset,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>naive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MetricType<sp/>metric<sp/>=<sp/>MetricType());</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1emst_1_1DualTreeBoruvka_1ace5bd00e87dc4694e14549f154aaef4e" kindref="member">DualTreeBoruvka</ref>(Tree*<sp/>tree,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MetricType<sp/>metric<sp/>=<sp/>MetricType());</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1emst_1_1DualTreeBoruvka_1ae413c24d961195f2ae5fd856454900f0" kindref="member">~DualTreeBoruvka</ref>();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1emst_1_1DualTreeBoruvka_1a47d46f4bccd05a45cfe752c4630088ef" kindref="member">ComputeMST</ref>(arma::mat&amp;<sp/>results);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddEdge(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>e1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>e2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distance);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddAllEdges();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EmitResults(arma::mat&amp;<sp/>results);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CleanupHelper(Tree*<sp/>tree);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Cleanup();</highlight></codeline>
<codeline lineno="204"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>DualTreeBoruvka</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>emst</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;dtb_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>MLPACK_METHODS_EMST_DTB_HPP</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/emst/dtb.hpp"/>
  </compounddef>
</doxygen>
