<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pca_2decomposition__policies_2randomized__svd__method_8hpp" kind="file" language="C++">
    <compoundname>randomized_svd_method.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="randomized__svd_8hpp" local="no">mlpack/methods/randomized_svd/randomized_svd.hpp</includes>
    <incdepgraph>
      <node id="46388">
        <label>list</label>
      </node>
      <node id="46385">
        <label>atomic</label>
      </node>
      <node id="46375">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="46351">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="46337">
        <label>/home/aakash/mlpack/src/mlpack/methods/pca/decomposition_policies/randomized_svd_method.hpp</label>
        <link refid="pca_2decomposition__policies_2randomized__svd__method_8hpp"/>
        <childnode refid="46338" relation="include">
        </childnode>
        <childnode refid="46395" relation="include">
        </childnode>
      </node>
      <node id="46387">
        <label>iomanip</label>
      </node>
      <node id="46360">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="46361" relation="include">
        </childnode>
        <childnode refid="46363" relation="include">
        </childnode>
      </node>
      <node id="46343">
        <label>cstdint</label>
      </node>
      <node id="46352">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="46359">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="46382">
        <label>arma_config.hpp</label>
      </node>
      <node id="46372">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="46339">
        <label>cmath</label>
      </node>
      <node id="46358">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="46347">
        <label>stdexcept</label>
      </node>
      <node id="46367">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="46352" relation="include">
        </childnode>
        <childnode refid="46354" relation="include">
        </childnode>
        <childnode refid="46355" relation="include">
        </childnode>
        <childnode refid="46353" relation="include">
        </childnode>
      </node>
      <node id="46391">
        <label>string</label>
      </node>
      <node id="46379">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="46380" relation="include">
        </childnode>
        <childnode refid="46346" relation="include">
        </childnode>
      </node>
      <node id="46389">
        <label>map</label>
      </node>
      <node id="46341">
        <label>cfloat</label>
      </node>
      <node id="46371">
        <label>boost/variant.hpp</label>
      </node>
      <node id="46393">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="46355">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="46378">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="46379" relation="include">
        </childnode>
        <childnode refid="46355" relation="include">
        </childnode>
        <childnode refid="46362" relation="include">
        </childnode>
        <childnode refid="46380" relation="include">
        </childnode>
      </node>
      <node id="46368">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="46366">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="46352" relation="include">
        </childnode>
        <childnode refid="46354" relation="include">
        </childnode>
        <childnode refid="46355" relation="include">
        </childnode>
        <childnode refid="46353" relation="include">
        </childnode>
      </node>
      <node id="46369">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="46352" relation="include">
        </childnode>
        <childnode refid="46354" relation="include">
        </childnode>
        <childnode refid="46355" relation="include">
        </childnode>
        <childnode refid="46353" relation="include">
        </childnode>
      </node>
      <node id="46357">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="46377">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="46353" relation="include">
        </childnode>
        <childnode refid="46354" relation="include">
        </childnode>
        <childnode refid="46355" relation="include">
        </childnode>
        <childnode refid="46365" relation="include">
        </childnode>
        <childnode refid="46374" relation="include">
        </childnode>
      </node>
      <node id="46381">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="46382" relation="include">
        </childnode>
      </node>
      <node id="46383">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="46338">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="46339" relation="include">
        </childnode>
        <childnode refid="46340" relation="include">
        </childnode>
        <childnode refid="46341" relation="include">
        </childnode>
        <childnode refid="46342" relation="include">
        </childnode>
        <childnode refid="46343" relation="include">
        </childnode>
        <childnode refid="46344" relation="include">
        </childnode>
        <childnode refid="46345" relation="include">
        </childnode>
        <childnode refid="46346" relation="include">
        </childnode>
        <childnode refid="46347" relation="include">
        </childnode>
        <childnode refid="46348" relation="include">
        </childnode>
        <childnode refid="46349" relation="include">
        </childnode>
        <childnode refid="46350" relation="include">
        </childnode>
        <childnode refid="46351" relation="include">
        </childnode>
        <childnode refid="46352" relation="include">
        </childnode>
        <childnode refid="46353" relation="include">
        </childnode>
        <childnode refid="46354" relation="include">
        </childnode>
        <childnode refid="46355" relation="include">
        </childnode>
        <childnode refid="46356" relation="include">
        </childnode>
        <childnode refid="46357" relation="include">
        </childnode>
        <childnode refid="46358" relation="include">
        </childnode>
        <childnode refid="46359" relation="include">
        </childnode>
        <childnode refid="46360" relation="include">
        </childnode>
        <childnode refid="46364" relation="include">
        </childnode>
        <childnode refid="46365" relation="include">
        </childnode>
        <childnode refid="46366" relation="include">
        </childnode>
        <childnode refid="46367" relation="include">
        </childnode>
        <childnode refid="46368" relation="include">
        </childnode>
        <childnode refid="46369" relation="include">
        </childnode>
        <childnode refid="46370" relation="include">
        </childnode>
        <childnode refid="46376" relation="include">
        </childnode>
        <childnode refid="46377" relation="include">
        </childnode>
        <childnode refid="46374" relation="include">
        </childnode>
        <childnode refid="46378" relation="include">
        </childnode>
        <childnode refid="46381" relation="include">
        </childnode>
        <childnode refid="46383" relation="include">
        </childnode>
        <childnode refid="46384" relation="include">
        </childnode>
        <childnode refid="46393" relation="include">
        </childnode>
        <childnode refid="46394" relation="include">
        </childnode>
      </node>
      <node id="46344">
        <label>cstdio</label>
      </node>
      <node id="46348">
        <label>tuple</label>
      </node>
      <node id="46353">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="46370">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="46353" relation="include">
        </childnode>
        <childnode refid="46354" relation="include">
        </childnode>
        <childnode refid="46355" relation="include">
        </childnode>
        <childnode refid="46357" relation="include">
        </childnode>
        <childnode refid="46371" relation="include">
        </childnode>
        <childnode refid="46372" relation="include">
        </childnode>
        <childnode refid="46373" relation="include">
        </childnode>
        <childnode refid="46374" relation="include">
        </childnode>
      </node>
      <node id="46349">
        <label>utility</label>
      </node>
      <node id="46373">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="46364">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="46361">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="46362" relation="include">
        </childnode>
      </node>
      <node id="46384">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="46385" relation="include">
        </childnode>
        <childnode refid="46386" relation="include">
        </childnode>
        <childnode refid="46387" relation="include">
        </childnode>
        <childnode refid="46388" relation="include">
        </childnode>
        <childnode refid="46389" relation="include">
        </childnode>
        <childnode refid="46390" relation="include">
        </childnode>
        <childnode refid="46391" relation="include">
        </childnode>
        <childnode refid="46392" relation="include">
        </childnode>
      </node>
      <node id="46362">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="46376">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="46374" relation="include">
        </childnode>
        <childnode refid="46370" relation="include">
        </childnode>
        <childnode refid="46377" relation="include">
        </childnode>
      </node>
      <node id="46345">
        <label>cstdlib</label>
      </node>
      <node id="46340">
        <label>cctype</label>
      </node>
      <node id="46363">
        <label>unordered_map</label>
      </node>
      <node id="46342">
        <label>climits</label>
      </node>
      <node id="46390">
        <label>mutex</label>
      </node>
      <node id="46386">
        <label>chrono</label>
      </node>
      <node id="46394">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="46392">
        <label>thread</label>
      </node>
      <node id="46380">
        <label>type_traits</label>
      </node>
      <node id="46356">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="46350">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="46374">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="46352" relation="include">
        </childnode>
        <childnode refid="46353" relation="include">
        </childnode>
        <childnode refid="46354" relation="include">
        </childnode>
        <childnode refid="46355" relation="include">
        </childnode>
        <childnode refid="46375" relation="include">
        </childnode>
      </node>
      <node id="46346">
        <label>cstring</label>
      </node>
      <node id="46365">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="46354">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="46395">
        <label>mlpack/methods/randomized_svd/randomized_svd.hpp</label>
        <link refid="randomized__svd_8hpp"/>
        <childnode refid="46338" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1pca_1_1RandomizedSVDPolicy" prot="public">mlpack::pca::RandomizedSVDPolicy</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1pca">mlpack::pca</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Marcus Edel</para></simplesect>
Implementation of the randomized svd method for use in the Principal Components Analysis method.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="14"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_PCA_DECOMPOSITION_POLICIES_RANDOMIZED_SVD_METHOD_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_PCA_DECOMPOSITION_POLICIES_RANDOMIZED_SVD_METHOD_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="randomized__svd_8hpp" kindref="compound">mlpack/methods/randomized_svd/randomized_svd.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">pca<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classmlpack_1_1pca_1_1RandomizedSVDPolicy" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1pca_1_1RandomizedSVDPolicy" kindref="compound">RandomizedSVDPolicy</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38" refid="classmlpack_1_1pca_1_1RandomizedSVDPolicy_1a9d45e67639db6115370f474dd71acff4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1pca_1_1RandomizedSVDPolicy_1a9d45e67639db6115370f474dd71acff4" kindref="member">RandomizedSVDPolicy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iteratedPower<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations<sp/>=<sp/>2)<sp/>:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iteratedPower(iteratedPower),</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maxIterations(maxIterations)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classmlpack_1_1pca_1_1RandomizedSVDPolicy_1a596b042060783f8697e8f5a42b0fa20e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1pca_1_1RandomizedSVDPolicy_1a596b042060783f8697e8f5a42b0fa20e" kindref="member">Apply</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>centeredData,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>transformedData,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>eigVal,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>eigvec,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rank)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>matrix<sp/>will<sp/>store<sp/>the<sp/>right<sp/>singular<sp/>values;<sp/>we<sp/>do<sp/>not<sp/>need<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::mat<sp/>v;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>singular<sp/>value<sp/>decomposition<sp/>using<sp/>the<sp/>randomized<sp/>SVD<sp/>algorithm.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1svd_1_1RandomizedSVD" kindref="compound">svd::RandomizedSVD</ref><sp/>rsvd(iteratedPower,<sp/>maxIterations);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>rsvd.<ref refid="classmlpack_1_1svd_1_1RandomizedSVD_1ab1a789d5811597b03ad838edcfab055a" kindref="member">Apply</ref>(data,<sp/>eigvec,<sp/>eigVal,<sp/>v,<sp/>rank);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>must<sp/>square<sp/>the<sp/>singular<sp/>values<sp/>to<sp/>get<sp/>the<sp/>eigenvalues.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>addition<sp/>we<sp/>must<sp/>divide<sp/>by<sp/>the<sp/>number<sp/>of<sp/>points,<sp/>because<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>covariance<sp/>matrix<sp/>is<sp/>X<sp/>*<sp/>X&apos;<sp/>/<sp/>(N<sp/>-<sp/>1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>eigVal<sp/>%=<sp/>eigVal<sp/>/<sp/>(data.n_cols<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Project<sp/>the<sp/>samples<sp/>to<sp/>the<sp/>principals.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>transformedData<sp/>=<sp/>arma::trans(eigvec)<sp/>*<sp/>centeredData;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classmlpack_1_1pca_1_1RandomizedSVDPolicy_1aa8e59edf3732bcceec0a214f9d049488" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1pca_1_1RandomizedSVDPolicy_1aa8e59edf3732bcceec0a214f9d049488" kindref="member">IteratedPower</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iteratedPower;<sp/>}</highlight></codeline>
<codeline lineno="83" refid="classmlpack_1_1pca_1_1RandomizedSVDPolicy_1aa06eded3fc0ec2f6bae88acc0395da57" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1pca_1_1RandomizedSVDPolicy_1aa06eded3fc0ec2f6bae88acc0395da57" kindref="member">IteratedPower</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iteratedPower;<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classmlpack_1_1pca_1_1RandomizedSVDPolicy_1a420770944a5b0c7a852c4ec372c4a2d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1pca_1_1RandomizedSVDPolicy_1a420770944a5b0c7a852c4ec372c4a2d1" kindref="member">MaxIterations</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxIterations;<sp/>}</highlight></codeline>
<codeline lineno="88" refid="classmlpack_1_1pca_1_1RandomizedSVDPolicy_1acda675ab4ab86b95c92bc33bc391a61b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1pca_1_1RandomizedSVDPolicy_1acda675ab4ab86b95c92bc33bc391a61b" kindref="member">MaxIterations</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxIterations;<sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iteratedPower;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>pca</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/pca/decomposition_policies/randomized_svd_method.hpp"/>
  </compounddef>
</doxygen>
