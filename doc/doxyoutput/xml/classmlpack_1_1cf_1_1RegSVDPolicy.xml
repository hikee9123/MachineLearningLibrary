<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1cf_1_1RegSVDPolicy" kind="class" language="C++" prot="public">
    <compoundname>mlpack::cf::RegSVDPolicy</compoundname>
    <includes refid="regularized__svd__method_8hpp" local="no">regularized_svd_method.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1cf_1_1RegSVDPolicy_1a590978e16dd331580d3a4537db5a0cdc" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat h</definition>
        <argsstring></argsstring>
        <name>h</name>
        <briefdescription>
<para>User matrix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" line="168" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1cf_1_1RegSVDPolicy_1adb3fa2e38847b23885acf3833f28538e" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t maxIterations</definition>
        <argsstring></argsstring>
        <name>maxIterations</name>
        <briefdescription>
<para>Locally stored number of iterations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" line="164" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1cf_1_1RegSVDPolicy_1a7a37e4c12ab38eb5c688d3ba8714054f" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat w</definition>
        <argsstring></argsstring>
        <name>w</name>
        <briefdescription>
<para>Item matrix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" line="166" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1cf_1_1RegSVDPolicy_1ac1d53ce600cf622fd3961ed3b3e69dbb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>RegSVDPolicy</definition>
        <argsstring>(const size_t maxIterations=10)</argsstring>
        <name>RegSVDPolicy</name>
        <param>
          <type>const size_t</type>
          <declname>maxIterations</declname>
          <defval>10</defval>
        </param>
        <briefdescription>
<para>Use regularized SVD method to perform collaborative filtering. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>maxIterations</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of iterations for the power method (Default: 2). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" line="50" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" bodystart="50" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1RegSVDPolicy_1a3b3962a80d1217a799cfab110b487cea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Apply</definition>
        <argsstring>(const arma::mat &amp;data, const arma::sp_mat &amp;, const size_t rank, const size_t maxIterations, const double, const bool)</argsstring>
        <name>Apply</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const arma::sp_mat &amp;</type>
        </param>
        <param>
          <type>const size_t</type>
          <declname>rank</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>maxIterations</declname>
        </param>
        <param>
          <type>const double</type>
        </param>
        <param>
          <type>const bool</type>
        </param>
        <briefdescription>
<para>Apply Collaborative Filtering to the provided data set using the regularized SVD. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data matrix: dense matrix (coordinate lists) or sparse matrix(cleaned). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(cleanedData) item user table in form of sparse matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rank</parametername>
</parameternamelist>
<parameterdescription>
<para>Rank parameter for matrix factorization. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxIterations</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of iterations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(minResidue) Residue required to terminate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(mit) Whether to terminate only when maxIterations is reached. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" line="68" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" bodystart="68" bodyend="78"/>
        <references refid="classmlpack_1_1svd_1_1RegularizedSVD_1a2a573625e4555fd5afc38af3529e07ec">RegularizedSVD&lt; OptimizerType &gt;::Apply</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1RegSVDPolicy_1a35bca7a6e09f4fb35b9945a9368711e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename NeighborSearchPolicy</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void GetNeighborhood</definition>
        <argsstring>(const arma::Col&lt; size_t &gt; &amp;users, const size_t numUsersForSimilarity, arma::Mat&lt; size_t &gt; &amp;neighborhood, arma::mat &amp;similarities) const</argsstring>
        <name>GetNeighborhood</name>
        <param>
          <type>const arma::Col&lt; size_t &gt; &amp;</type>
          <declname>users</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>numUsersForSimilarity</declname>
        </param>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>neighborhood</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>similarities</declname>
        </param>
        <briefdescription>
<para>Get the neighborhood and corresponding similarities for a set of users. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NeighborSearchPolicy</parametername>
</parameternamelist>
<parameterdescription>
<para>The policy to perform neighbor search.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>users</parametername>
</parameternamelist>
<parameterdescription>
<para>Users whose neighborhood is to be computed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numUsersForSimilarity</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of neighbors returned for each user. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>neighborhood</parametername>
</parameternamelist>
<parameterdescription>
<para>Neighbors represented by user IDs. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>similarities</parametername>
</parameternamelist>
<parameterdescription>
<para>Similarity between each user and each of its neighbors. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" line="116" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" bodystart="116" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1RegSVDPolicy_1a0c3e16d73c8b25b8934cbc36ac161619" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double GetRating</definition>
        <argsstring>(const size_t user, const size_t item) const</argsstring>
        <name>GetRating</name>
        <param>
          <type>const size_t</type>
          <declname>user</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Return predicted rating given user ID and item ID. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>User ID. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>item</parametername>
</parameternamelist>
<parameterdescription>
<para>Item ID. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" line="86" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" bodystart="86" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1RegSVDPolicy_1ae5dc3895f0294bf054cb2ea58084a426" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GetRatingOfUser</definition>
        <argsstring>(const size_t user, arma::vec &amp;rating) const</argsstring>
        <name>GetRatingOfUser</name>
        <param>
          <type>const size_t</type>
          <declname>user</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>rating</declname>
        </param>
        <briefdescription>
<para>Get predicted ratings for a user. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>User ID. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rating</parametername>
</parameternamelist>
<parameterdescription>
<para>Resulting rating vector. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" line="98" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1RegSVDPolicy_1a71e6a6119b9efde17f4112c6d82d9233" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::mat &amp;</type>
        <definition>const arma::mat&amp; H</definition>
        <argsstring>() const</argsstring>
        <name>H</name>
        <briefdescription>
<para>Get the User Matrix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" line="145" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1RegSVDPolicy_1a420770944a5b0c7a852c4ec372c4a2d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t MaxIterations</definition>
        <argsstring>() const</argsstring>
        <name>MaxIterations</name>
        <briefdescription>
<para>Get the number of iterations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" line="148" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" bodystart="148" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1RegSVDPolicy_1acda675ab4ab86b95c92bc33bc391a61b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t &amp;</type>
        <definition>size_t&amp; MaxIterations</definition>
        <argsstring>()</argsstring>
        <name>MaxIterations</name>
        <briefdescription>
<para>Modify the number of iterations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" line="150" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1RegSVDPolicy_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" line="156" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" bodystart="156" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1RegSVDPolicy_1a0f733dde66e23287758de984b5151e36" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::mat &amp;</type>
        <definition>const arma::mat&amp; W</definition>
        <argsstring>() const</argsstring>
        <name>W</name>
        <briefdescription>
<para>Get the Item Matrix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" line="143" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" bodystart="143" bodyend="143"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implementation of the Regularized SVD policy to act as a wrapper when accessing Regularized SVD from within <ref refid="classmlpack_1_1cf_1_1CFType" kindref="compound">CFType</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>An example of how to use <ref refid="classmlpack_1_1cf_1_1RegSVDPolicy" kindref="compound">RegSVDPolicy</ref> in CF is shown below:</para><para><programlisting><codeline><highlight class="normal">extern<sp/>arma::mat<sp/>data;<sp/>//<sp/>data<sp/>is<sp/>a<sp/>(user,<sp/>item,<sp/>rating)<sp/>table.</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Users<sp/>for<sp/>whom<sp/>recommendations<sp/>are<sp/>generated.</highlight></codeline>
<codeline><highlight class="normal">extern<sp/>arma::Col&lt;size_t&gt;<sp/>users;</highlight></codeline>
<codeline><highlight class="normal">arma::Mat&lt;size_t&gt;<sp/>recommendations;<sp/>//<sp/>Resulting<sp/>recommendations.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">CFType&lt;RegSVDPolicy&gt;<sp/>cf(data);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Generate<sp/>10<sp/>recommendations<sp/>for<sp/>all<sp/>users.</highlight></codeline>
<codeline><highlight class="normal">cf.GetRecommendations(10,<sp/>recommendations);</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" line="42" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp" bodystart="41" bodyend="169"/>
    <listofallmembers>
      <member refid="classmlpack_1_1cf_1_1RegSVDPolicy_1a3b3962a80d1217a799cfab110b487cea" prot="public" virt="non-virtual"><scope>mlpack::cf::RegSVDPolicy</scope><name>Apply</name></member>
      <member refid="classmlpack_1_1cf_1_1RegSVDPolicy_1a35bca7a6e09f4fb35b9945a9368711e4" prot="public" virt="non-virtual"><scope>mlpack::cf::RegSVDPolicy</scope><name>GetNeighborhood</name></member>
      <member refid="classmlpack_1_1cf_1_1RegSVDPolicy_1a0c3e16d73c8b25b8934cbc36ac161619" prot="public" virt="non-virtual"><scope>mlpack::cf::RegSVDPolicy</scope><name>GetRating</name></member>
      <member refid="classmlpack_1_1cf_1_1RegSVDPolicy_1ae5dc3895f0294bf054cb2ea58084a426" prot="public" virt="non-virtual"><scope>mlpack::cf::RegSVDPolicy</scope><name>GetRatingOfUser</name></member>
      <member refid="classmlpack_1_1cf_1_1RegSVDPolicy_1a590978e16dd331580d3a4537db5a0cdc" prot="private" virt="non-virtual"><scope>mlpack::cf::RegSVDPolicy</scope><name>h</name></member>
      <member refid="classmlpack_1_1cf_1_1RegSVDPolicy_1a71e6a6119b9efde17f4112c6d82d9233" prot="public" virt="non-virtual"><scope>mlpack::cf::RegSVDPolicy</scope><name>H</name></member>
      <member refid="classmlpack_1_1cf_1_1RegSVDPolicy_1a420770944a5b0c7a852c4ec372c4a2d1" prot="public" virt="non-virtual"><scope>mlpack::cf::RegSVDPolicy</scope><name>MaxIterations</name></member>
      <member refid="classmlpack_1_1cf_1_1RegSVDPolicy_1acda675ab4ab86b95c92bc33bc391a61b" prot="public" virt="non-virtual"><scope>mlpack::cf::RegSVDPolicy</scope><name>MaxIterations</name></member>
      <member refid="classmlpack_1_1cf_1_1RegSVDPolicy_1adb3fa2e38847b23885acf3833f28538e" prot="private" virt="non-virtual"><scope>mlpack::cf::RegSVDPolicy</scope><name>maxIterations</name></member>
      <member refid="classmlpack_1_1cf_1_1RegSVDPolicy_1ac1d53ce600cf622fd3961ed3b3e69dbb" prot="public" virt="non-virtual"><scope>mlpack::cf::RegSVDPolicy</scope><name>RegSVDPolicy</name></member>
      <member refid="classmlpack_1_1cf_1_1RegSVDPolicy_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::cf::RegSVDPolicy</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1cf_1_1RegSVDPolicy_1a0f733dde66e23287758de984b5151e36" prot="public" virt="non-virtual"><scope>mlpack::cf::RegSVDPolicy</scope><name>W</name></member>
      <member refid="classmlpack_1_1cf_1_1RegSVDPolicy_1a7a37e4c12ab38eb5c688d3ba8714054f" prot="private" virt="non-virtual"><scope>mlpack::cf::RegSVDPolicy</scope><name>w</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
