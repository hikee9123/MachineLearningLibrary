<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sparse__autoencoder_8hpp" kind="file" language="C++">
    <compoundname>sparse_autoencoder.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="no">ensmallen.hpp</includes>
    <includes refid="sparse__autoencoder__function_8hpp" local="yes">sparse_autoencoder_function.hpp</includes>
    <includes local="yes">sparse_autoencoder_impl.hpp</includes>
    <incdepgraph>
      <node id="57778">
        <label>list</label>
      </node>
      <node id="57775">
        <label>atomic</label>
      </node>
      <node id="57765">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="57741">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="57777">
        <label>iomanip</label>
      </node>
      <node id="57750">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="57751" relation="include">
        </childnode>
        <childnode refid="57753" relation="include">
        </childnode>
      </node>
      <node id="57733">
        <label>cstdint</label>
      </node>
      <node id="57742">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="57749">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="57772">
        <label>arma_config.hpp</label>
      </node>
      <node id="57762">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="57729">
        <label>cmath</label>
      </node>
      <node id="57748">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="57737">
        <label>stdexcept</label>
      </node>
      <node id="57757">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="57742" relation="include">
        </childnode>
        <childnode refid="57744" relation="include">
        </childnode>
        <childnode refid="57745" relation="include">
        </childnode>
        <childnode refid="57743" relation="include">
        </childnode>
      </node>
      <node id="57781">
        <label>string</label>
      </node>
      <node id="57769">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="57770" relation="include">
        </childnode>
        <childnode refid="57736" relation="include">
        </childnode>
      </node>
      <node id="57779">
        <label>map</label>
      </node>
      <node id="57731">
        <label>cfloat</label>
      </node>
      <node id="57761">
        <label>boost/variant.hpp</label>
      </node>
      <node id="57783">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="57745">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="57768">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="57769" relation="include">
        </childnode>
        <childnode refid="57745" relation="include">
        </childnode>
        <childnode refid="57752" relation="include">
        </childnode>
        <childnode refid="57770" relation="include">
        </childnode>
      </node>
      <node id="57758">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="57756">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="57742" relation="include">
        </childnode>
        <childnode refid="57744" relation="include">
        </childnode>
        <childnode refid="57745" relation="include">
        </childnode>
        <childnode refid="57743" relation="include">
        </childnode>
      </node>
      <node id="57759">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="57742" relation="include">
        </childnode>
        <childnode refid="57744" relation="include">
        </childnode>
        <childnode refid="57745" relation="include">
        </childnode>
        <childnode refid="57743" relation="include">
        </childnode>
      </node>
      <node id="57747">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="57767">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="57743" relation="include">
        </childnode>
        <childnode refid="57744" relation="include">
        </childnode>
        <childnode refid="57745" relation="include">
        </childnode>
        <childnode refid="57755" relation="include">
        </childnode>
        <childnode refid="57764" relation="include">
        </childnode>
      </node>
      <node id="57771">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="57772" relation="include">
        </childnode>
      </node>
      <node id="57773">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="57728">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="57729" relation="include">
        </childnode>
        <childnode refid="57730" relation="include">
        </childnode>
        <childnode refid="57731" relation="include">
        </childnode>
        <childnode refid="57732" relation="include">
        </childnode>
        <childnode refid="57733" relation="include">
        </childnode>
        <childnode refid="57734" relation="include">
        </childnode>
        <childnode refid="57735" relation="include">
        </childnode>
        <childnode refid="57736" relation="include">
        </childnode>
        <childnode refid="57737" relation="include">
        </childnode>
        <childnode refid="57738" relation="include">
        </childnode>
        <childnode refid="57739" relation="include">
        </childnode>
        <childnode refid="57740" relation="include">
        </childnode>
        <childnode refid="57741" relation="include">
        </childnode>
        <childnode refid="57742" relation="include">
        </childnode>
        <childnode refid="57743" relation="include">
        </childnode>
        <childnode refid="57744" relation="include">
        </childnode>
        <childnode refid="57745" relation="include">
        </childnode>
        <childnode refid="57746" relation="include">
        </childnode>
        <childnode refid="57747" relation="include">
        </childnode>
        <childnode refid="57748" relation="include">
        </childnode>
        <childnode refid="57749" relation="include">
        </childnode>
        <childnode refid="57750" relation="include">
        </childnode>
        <childnode refid="57754" relation="include">
        </childnode>
        <childnode refid="57755" relation="include">
        </childnode>
        <childnode refid="57756" relation="include">
        </childnode>
        <childnode refid="57757" relation="include">
        </childnode>
        <childnode refid="57758" relation="include">
        </childnode>
        <childnode refid="57759" relation="include">
        </childnode>
        <childnode refid="57760" relation="include">
        </childnode>
        <childnode refid="57766" relation="include">
        </childnode>
        <childnode refid="57767" relation="include">
        </childnode>
        <childnode refid="57764" relation="include">
        </childnode>
        <childnode refid="57768" relation="include">
        </childnode>
        <childnode refid="57771" relation="include">
        </childnode>
        <childnode refid="57773" relation="include">
        </childnode>
        <childnode refid="57774" relation="include">
        </childnode>
        <childnode refid="57783" relation="include">
        </childnode>
        <childnode refid="57784" relation="include">
        </childnode>
      </node>
      <node id="57734">
        <label>cstdio</label>
      </node>
      <node id="57738">
        <label>tuple</label>
      </node>
      <node id="57743">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="57760">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="57743" relation="include">
        </childnode>
        <childnode refid="57744" relation="include">
        </childnode>
        <childnode refid="57745" relation="include">
        </childnode>
        <childnode refid="57747" relation="include">
        </childnode>
        <childnode refid="57761" relation="include">
        </childnode>
        <childnode refid="57762" relation="include">
        </childnode>
        <childnode refid="57763" relation="include">
        </childnode>
        <childnode refid="57764" relation="include">
        </childnode>
      </node>
      <node id="57739">
        <label>utility</label>
      </node>
      <node id="57763">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="57754">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="57751">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="57752" relation="include">
        </childnode>
      </node>
      <node id="57774">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="57775" relation="include">
        </childnode>
        <childnode refid="57776" relation="include">
        </childnode>
        <childnode refid="57777" relation="include">
        </childnode>
        <childnode refid="57778" relation="include">
        </childnode>
        <childnode refid="57779" relation="include">
        </childnode>
        <childnode refid="57780" relation="include">
        </childnode>
        <childnode refid="57781" relation="include">
        </childnode>
        <childnode refid="57782" relation="include">
        </childnode>
      </node>
      <node id="57752">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="57766">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="57764" relation="include">
        </childnode>
        <childnode refid="57760" relation="include">
        </childnode>
        <childnode refid="57767" relation="include">
        </childnode>
      </node>
      <node id="57735">
        <label>cstdlib</label>
      </node>
      <node id="57730">
        <label>cctype</label>
      </node>
      <node id="57787">
        <label>sparse_autoencoder_impl.hpp</label>
      </node>
      <node id="57786">
        <label>sparse_autoencoder_function.hpp</label>
        <link refid="sparse__autoencoder__function_8hpp"/>
        <childnode refid="57728" relation="include">
        </childnode>
      </node>
      <node id="57753">
        <label>unordered_map</label>
      </node>
      <node id="57732">
        <label>climits</label>
      </node>
      <node id="57780">
        <label>mutex</label>
      </node>
      <node id="57776">
        <label>chrono</label>
      </node>
      <node id="57784">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="57782">
        <label>thread</label>
      </node>
      <node id="57727">
        <label>/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp</label>
        <link refid="sparse__autoencoder_8hpp"/>
        <childnode refid="57728" relation="include">
        </childnode>
        <childnode refid="57785" relation="include">
        </childnode>
        <childnode refid="57786" relation="include">
        </childnode>
        <childnode refid="57787" relation="include">
        </childnode>
      </node>
      <node id="57770">
        <label>type_traits</label>
      </node>
      <node id="57746">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="57740">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="57764">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="57742" relation="include">
        </childnode>
        <childnode refid="57743" relation="include">
        </childnode>
        <childnode refid="57744" relation="include">
        </childnode>
        <childnode refid="57745" relation="include">
        </childnode>
        <childnode refid="57765" relation="include">
        </childnode>
      </node>
      <node id="57736">
        <label>cstring</label>
      </node>
      <node id="57755">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="57785">
        <label>ensmallen.hpp</label>
      </node>
      <node id="57744">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1nn_1_1SparseAutoencoder" prot="public">mlpack::nn::SparseAutoencoder</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1nn">mlpack::nn</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Siddharth Agrawal</para></simplesect>
An implementation of sparse autoencoders.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_SPARSE_AUTOENCODER_SPARSE_AUTOENCODER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_SPARSE_AUTOENCODER_SPARSE_AUTOENCODER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ensmallen.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sparse__autoencoder__function_8hpp" kindref="compound">sparse_autoencoder_function.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">nn<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classmlpack_1_1nn_1_1SparseAutoencoder" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1nn_1_1SparseAutoencoder" kindref="compound">SparseAutoencoder</ref></highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OptimizerType<sp/>=<sp/>ens::L_BFGS&gt;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a5fbf00d7a7ca616f6128c15d72dac06f" kindref="member">SparseAutoencoder</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>visibleSize,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hiddenSize,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda<sp/>=<sp/>0.0001,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beta<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rho<sp/>=<sp/>0.01,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OptimizerType<sp/>optimizer<sp/>=<sp/>OptimizerType());</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OptimizerType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>CallbackTypes&gt;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a5fbf00d7a7ca616f6128c15d72dac06f" kindref="member">SparseAutoencoder</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>visibleSize,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hiddenSize,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beta,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rho<sp/>,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OptimizerType<sp/>optimizer,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CallbackTypes&amp;&amp;...<sp/>callbacks);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1nn_1_1SparseAutoencoder_1ad16d07cc1fe0b0df569ab3c0ca0562fb" kindref="member">GetNewFeatures</ref>(arma::mat&amp;<sp/>data,<sp/>arma::mat&amp;<sp/>features);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a78a48b3c359a36dbc1d6936d7c8ba276" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a78a48b3c359a36dbc1d6936d7c8ba276" kindref="member">Sigmoid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>x,<sp/>arma::mat&amp;<sp/>output)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="136"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>(1.0<sp/>/<sp/>(1<sp/>+<sp/>arma::exp(-x)));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a56ba0c1d534d55c931e725914b00a100" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a56ba0c1d534d55c931e725914b00a100" kindref="member">VisibleSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>visible)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;visibleSize<sp/>=<sp/>visible;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a3cea635d43096bb8cd925c74dcdd1d48" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a3cea635d43096bb8cd925c74dcdd1d48" kindref="member">VisibleSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="148"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visibleSize;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="classmlpack_1_1nn_1_1SparseAutoencoder_1aef6f7e6478c5268a8762768f2bed7cf3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1nn_1_1SparseAutoencoder_1aef6f7e6478c5268a8762768f2bed7cf3" kindref="member">HiddenSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hidden)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;hiddenSize<sp/>=<sp/>hidden;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a820e775a98d21ef0d06283a445e0813a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a820e775a98d21ef0d06283a445e0813a" kindref="member">HiddenSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="160"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hiddenSize;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classmlpack_1_1nn_1_1SparseAutoencoder_1af476ed1916ad9b39eaddd7e7ac108f4b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1nn_1_1SparseAutoencoder_1af476ed1916ad9b39eaddd7e7ac108f4b" kindref="member">Lambda</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>l)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;lambda<sp/>=<sp/>l;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a53535041275cedd0ec3de67ca032aa94" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a53535041275cedd0ec3de67ca032aa94" kindref="member">Lambda</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="172"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lambda;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="classmlpack_1_1nn_1_1SparseAutoencoder_1ac48f9c3723fbeb5d97e8382b706bb20d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1nn_1_1SparseAutoencoder_1ac48f9c3723fbeb5d97e8382b706bb20d" kindref="member">Beta</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;beta<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="classmlpack_1_1nn_1_1SparseAutoencoder_1ad1b9206255af52171cb88dfb7c326576" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1nn_1_1SparseAutoencoder_1ad1b9206255af52171cb88dfb7c326576" kindref="member">Beta</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="184"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>beta;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a97ac05cf618f1f137a4aa8fcd4e48539" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a97ac05cf618f1f137a4aa8fcd4e48539" kindref="member">Rho</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;rho<sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a309719b378c0bb1962982a8162e58e84" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a309719b378c0bb1962982a8162e58e84" kindref="member">Rho</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="196"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rho;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>arma::mat<sp/>parameters;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>visibleSize;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hiddenSize;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beta;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rho;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">};</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sparse_autoencoder_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp"/>
  </compounddef>
</doxygen>
