<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="random__acol__init_8hpp" kind="file" language="C++">
    <compoundname>random_acol_init.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="random_8hpp" local="no">mlpack/core/math/random.hpp</includes>
    <includedby refid="amf_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/amf/amf.hpp</includedby>
    <incdepgraph>
      <node id="23497">
        <label>list</label>
      </node>
      <node id="23494">
        <label>atomic</label>
      </node>
      <node id="23484">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="23460">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="23496">
        <label>iomanip</label>
      </node>
      <node id="23469">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="23470" relation="include">
        </childnode>
        <childnode refid="23472" relation="include">
        </childnode>
      </node>
      <node id="23452">
        <label>cstdint</label>
      </node>
      <node id="23461">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="23468">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="23505">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="23491">
        <label>arma_config.hpp</label>
      </node>
      <node id="23481">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="23448">
        <label>cmath</label>
      </node>
      <node id="23467">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="23456">
        <label>stdexcept</label>
      </node>
      <node id="23476">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="23461" relation="include">
        </childnode>
        <childnode refid="23463" relation="include">
        </childnode>
        <childnode refid="23464" relation="include">
        </childnode>
        <childnode refid="23462" relation="include">
        </childnode>
      </node>
      <node id="23500">
        <label>string</label>
      </node>
      <node id="23488">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="23489" relation="include">
        </childnode>
        <childnode refid="23455" relation="include">
        </childnode>
      </node>
      <node id="23498">
        <label>map</label>
      </node>
      <node id="23450">
        <label>cfloat</label>
      </node>
      <node id="23480">
        <label>boost/variant.hpp</label>
      </node>
      <node id="23502">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="23464">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="23487">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="23488" relation="include">
        </childnode>
        <childnode refid="23464" relation="include">
        </childnode>
        <childnode refid="23471" relation="include">
        </childnode>
        <childnode refid="23489" relation="include">
        </childnode>
      </node>
      <node id="23477">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="23475">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="23461" relation="include">
        </childnode>
        <childnode refid="23463" relation="include">
        </childnode>
        <childnode refid="23464" relation="include">
        </childnode>
        <childnode refid="23462" relation="include">
        </childnode>
      </node>
      <node id="23478">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="23461" relation="include">
        </childnode>
        <childnode refid="23463" relation="include">
        </childnode>
        <childnode refid="23464" relation="include">
        </childnode>
        <childnode refid="23462" relation="include">
        </childnode>
      </node>
      <node id="23466">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="23486">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="23462" relation="include">
        </childnode>
        <childnode refid="23463" relation="include">
        </childnode>
        <childnode refid="23464" relation="include">
        </childnode>
        <childnode refid="23474" relation="include">
        </childnode>
        <childnode refid="23483" relation="include">
        </childnode>
      </node>
      <node id="23490">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="23491" relation="include">
        </childnode>
      </node>
      <node id="23492">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="23447">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="23448" relation="include">
        </childnode>
        <childnode refid="23449" relation="include">
        </childnode>
        <childnode refid="23450" relation="include">
        </childnode>
        <childnode refid="23451" relation="include">
        </childnode>
        <childnode refid="23452" relation="include">
        </childnode>
        <childnode refid="23453" relation="include">
        </childnode>
        <childnode refid="23454" relation="include">
        </childnode>
        <childnode refid="23455" relation="include">
        </childnode>
        <childnode refid="23456" relation="include">
        </childnode>
        <childnode refid="23457" relation="include">
        </childnode>
        <childnode refid="23458" relation="include">
        </childnode>
        <childnode refid="23459" relation="include">
        </childnode>
        <childnode refid="23460" relation="include">
        </childnode>
        <childnode refid="23461" relation="include">
        </childnode>
        <childnode refid="23462" relation="include">
        </childnode>
        <childnode refid="23463" relation="include">
        </childnode>
        <childnode refid="23464" relation="include">
        </childnode>
        <childnode refid="23465" relation="include">
        </childnode>
        <childnode refid="23466" relation="include">
        </childnode>
        <childnode refid="23467" relation="include">
        </childnode>
        <childnode refid="23468" relation="include">
        </childnode>
        <childnode refid="23469" relation="include">
        </childnode>
        <childnode refid="23473" relation="include">
        </childnode>
        <childnode refid="23474" relation="include">
        </childnode>
        <childnode refid="23475" relation="include">
        </childnode>
        <childnode refid="23476" relation="include">
        </childnode>
        <childnode refid="23477" relation="include">
        </childnode>
        <childnode refid="23478" relation="include">
        </childnode>
        <childnode refid="23479" relation="include">
        </childnode>
        <childnode refid="23485" relation="include">
        </childnode>
        <childnode refid="23486" relation="include">
        </childnode>
        <childnode refid="23483" relation="include">
        </childnode>
        <childnode refid="23487" relation="include">
        </childnode>
        <childnode refid="23490" relation="include">
        </childnode>
        <childnode refid="23492" relation="include">
        </childnode>
        <childnode refid="23493" relation="include">
        </childnode>
        <childnode refid="23502" relation="include">
        </childnode>
        <childnode refid="23503" relation="include">
        </childnode>
      </node>
      <node id="23506">
        <label>random</label>
      </node>
      <node id="23453">
        <label>cstdio</label>
      </node>
      <node id="23457">
        <label>tuple</label>
      </node>
      <node id="23462">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="23479">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="23462" relation="include">
        </childnode>
        <childnode refid="23463" relation="include">
        </childnode>
        <childnode refid="23464" relation="include">
        </childnode>
        <childnode refid="23466" relation="include">
        </childnode>
        <childnode refid="23480" relation="include">
        </childnode>
        <childnode refid="23481" relation="include">
        </childnode>
        <childnode refid="23482" relation="include">
        </childnode>
        <childnode refid="23483" relation="include">
        </childnode>
      </node>
      <node id="23504">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="23447" relation="include">
        </childnode>
        <childnode refid="23505" relation="include">
        </childnode>
        <childnode refid="23506" relation="include">
        </childnode>
      </node>
      <node id="23458">
        <label>utility</label>
      </node>
      <node id="23482">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="23473">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="23470">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="23471" relation="include">
        </childnode>
      </node>
      <node id="23493">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="23494" relation="include">
        </childnode>
        <childnode refid="23495" relation="include">
        </childnode>
        <childnode refid="23496" relation="include">
        </childnode>
        <childnode refid="23497" relation="include">
        </childnode>
        <childnode refid="23498" relation="include">
        </childnode>
        <childnode refid="23499" relation="include">
        </childnode>
        <childnode refid="23500" relation="include">
        </childnode>
        <childnode refid="23501" relation="include">
        </childnode>
      </node>
      <node id="23471">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="23485">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="23483" relation="include">
        </childnode>
        <childnode refid="23479" relation="include">
        </childnode>
        <childnode refid="23486" relation="include">
        </childnode>
      </node>
      <node id="23454">
        <label>cstdlib</label>
      </node>
      <node id="23449">
        <label>cctype</label>
      </node>
      <node id="23472">
        <label>unordered_map</label>
      </node>
      <node id="23451">
        <label>climits</label>
      </node>
      <node id="23499">
        <label>mutex</label>
      </node>
      <node id="23495">
        <label>chrono</label>
      </node>
      <node id="23503">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="23501">
        <label>thread</label>
      </node>
      <node id="23489">
        <label>type_traits</label>
      </node>
      <node id="23446">
        <label>/home/aakash/mlpack/src/mlpack/methods/amf/init_rules/random_acol_init.hpp</label>
        <link refid="random__acol__init_8hpp"/>
        <childnode refid="23447" relation="include">
        </childnode>
        <childnode refid="23504" relation="include">
        </childnode>
      </node>
      <node id="23465">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="23459">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="23483">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="23461" relation="include">
        </childnode>
        <childnode refid="23462" relation="include">
        </childnode>
        <childnode refid="23463" relation="include">
        </childnode>
        <childnode refid="23464" relation="include">
        </childnode>
        <childnode refid="23484" relation="include">
        </childnode>
      </node>
      <node id="23455">
        <label>cstring</label>
      </node>
      <node id="23474">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="23463">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="23508">
        <label>/home/aakash/mlpack/src/mlpack/methods/amf/amf.hpp</label>
        <link refid="amf_8hpp"/>
        <childnode refid="23509" relation="include">
        </childnode>
        <childnode refid="23517" relation="include">
        </childnode>
        <childnode refid="23518" relation="include">
        </childnode>
        <childnode refid="23519" relation="include">
        </childnode>
        <childnode refid="23520" relation="include">
        </childnode>
      </node>
      <node id="23512">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp</label>
        <link refid="cf__model_8hpp"/>
      </node>
      <node id="23514">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp</label>
        <link refid="regularized__svd__method_8hpp"/>
      </node>
      <node id="23511">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/bias_svd_method.hpp</label>
        <link refid="bias__svd__method_8hpp"/>
      </node>
      <node id="23509">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf.hpp</label>
        <link refid="cf_8hpp"/>
        <childnode refid="23510" relation="include">
        </childnode>
        <childnode refid="23512" relation="include">
        </childnode>
        <childnode refid="23513" relation="include">
        </childnode>
        <childnode refid="23515" relation="include">
        </childnode>
      </node>
      <node id="23515">
        <label>/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp</label>
        <link refid="svdplusplus_8hpp"/>
        <childnode refid="23516" relation="include">
        </childnode>
      </node>
      <node id="23520">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svd_incomplete_method.hpp</label>
        <link refid="svd__incomplete__method_8hpp"/>
      </node>
      <node id="23517">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/batch_svd_method.hpp</label>
        <link refid="batch__svd__method_8hpp"/>
      </node>
      <node id="23510">
        <label>/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp</label>
        <link refid="bias__svd_8hpp"/>
        <childnode refid="23511" relation="include">
        </childnode>
      </node>
      <node id="23516">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svdplusplus_method.hpp</label>
        <link refid="svdplusplus__method_8hpp"/>
      </node>
      <node id="23513">
        <label>/home/aakash/mlpack/src/mlpack/methods/regularized_svd/regularized_svd.hpp</label>
        <link refid="regularized__svd_8hpp"/>
        <childnode refid="23514" relation="include">
        </childnode>
      </node>
      <node id="23507">
        <label>/home/aakash/mlpack/src/mlpack/methods/amf/init_rules/random_acol_init.hpp</label>
        <link refid="random__acol__init_8hpp"/>
        <childnode refid="23508" relation="include">
        </childnode>
      </node>
      <node id="23519">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svd_complete_method.hpp</label>
        <link refid="svd__complete__method_8hpp"/>
      </node>
      <node id="23518">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/nmf_method.hpp</label>
        <link refid="nmf__method_8hpp"/>
        <childnode refid="23509" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1amf_1_1RandomAcolInitialization" prot="public">mlpack::amf::RandomAcolInitialization</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1amf">mlpack::amf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Mohan Rajendran</para></simplesect>
Initialization rule for Alternating Matrix Factorization.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_LMF_RANDOM_ACOL_INIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_LMF_RANDOM_ACOL_INIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="random_8hpp" kindref="compound">mlpack/core/math/random.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">amf<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>columnsToAverage<sp/>=<sp/>5&gt;</highlight></codeline>
<codeline lineno="44" refid="classmlpack_1_1amf_1_1RandomAcolInitialization" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1amf_1_1RandomAcolInitialization" kindref="compound">RandomAcolInitialization</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>constructor<sp/>required<sp/>for<sp/>the<sp/>InitializeRule<sp/>template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classmlpack_1_1amf_1_1RandomAcolInitialization_1ae167200b856b43c6d791f40eec362d21" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1amf_1_1RandomAcolInitialization_1ae167200b856b43c6d791f40eec362d21" kindref="member">RandomAcolInitialization</ref>()</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="52" refid="classmlpack_1_1amf_1_1RandomAcolInitialization_1a02a3610958f42b7dbef8bd5063ceaee7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1RandomAcolInitialization_1a02a3610958f42b7dbef8bd5063ceaee7" kindref="member">Initialize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>V,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>W,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>H)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>V.n_rows;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>V.n_cols;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(columnsToAverage<sp/>&gt;<sp/>m)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Log::Warn<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>random<sp/>columns<sp/>(columnsToAverage)<sp/>is<sp/>more<sp/>than<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;the<sp/>number<sp/>of<sp/>columns<sp/>available<sp/>in<sp/>the<sp/>V<sp/>matrix;<sp/>weird<sp/>results<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;may<sp/>ensue!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>W.zeros(n,<sp/>r);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>W<sp/>matrix<sp/>with<sp/>random<sp/>columns.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>r;<sp/>col++)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>randCol<sp/>=<sp/>0;<sp/>randCol<sp/>&lt;<sp/>columnsToAverage;<sp/>randCol++)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>.col()<sp/>does<sp/>not<sp/>work<sp/>in<sp/>this<sp/>case,<sp/>as<sp/>of<sp/>Armadillo<sp/>3.920.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W.unsafe_col(col)<sp/>+=<sp/>V.col(<ref refid="namespacemlpack_1_1math_1aad090ac225728d74c1b66bcf52f3ab95" kindref="member">math::RandInt</ref>(0,<sp/>m));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>divide<sp/>by<sp/>p.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>W<sp/>/=<sp/>columnsToAverage;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>H<sp/>to<sp/>random<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>H.randu(r,<sp/>m);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="88" refid="classmlpack_1_1amf_1_1RandomAcolInitialization_1aa2ccb5a0533a6ba0abe6dfc1f98fbafb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1RandomAcolInitialization_1aa2ccb5a0533a6ba0abe6dfc1f98fbafb" kindref="member">serialize</ref>(Archive&amp;<sp/></highlight><highlight class="comment">/*<sp/>ar<sp/>*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal">};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>amf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/amf/init_rules/random_acol_init.hpp"/>
  </compounddef>
</doxygen>
