<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="x__tree__split_8hpp" kind="file" language="C++">
    <compoundname>x_tree_split.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="yes">x_tree_split_impl.hpp</includes>
    <incdepgraph>
      <node id="17887">
        <label>list</label>
      </node>
      <node id="17884">
        <label>atomic</label>
      </node>
      <node id="17874">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="17850">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="17886">
        <label>iomanip</label>
      </node>
      <node id="17859">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="17860" relation="include">
        </childnode>
        <childnode refid="17862" relation="include">
        </childnode>
      </node>
      <node id="17842">
        <label>cstdint</label>
      </node>
      <node id="17851">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="17858">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="17881">
        <label>arma_config.hpp</label>
      </node>
      <node id="17871">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="17838">
        <label>cmath</label>
      </node>
      <node id="17857">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="17846">
        <label>stdexcept</label>
      </node>
      <node id="17866">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="17851" relation="include">
        </childnode>
        <childnode refid="17853" relation="include">
        </childnode>
        <childnode refid="17854" relation="include">
        </childnode>
        <childnode refid="17852" relation="include">
        </childnode>
      </node>
      <node id="17890">
        <label>string</label>
      </node>
      <node id="17878">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="17879" relation="include">
        </childnode>
        <childnode refid="17845" relation="include">
        </childnode>
      </node>
      <node id="17888">
        <label>map</label>
      </node>
      <node id="17840">
        <label>cfloat</label>
      </node>
      <node id="17870">
        <label>boost/variant.hpp</label>
      </node>
      <node id="17892">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="17854">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="17877">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="17878" relation="include">
        </childnode>
        <childnode refid="17854" relation="include">
        </childnode>
        <childnode refid="17861" relation="include">
        </childnode>
        <childnode refid="17879" relation="include">
        </childnode>
      </node>
      <node id="17867">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="17865">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="17851" relation="include">
        </childnode>
        <childnode refid="17853" relation="include">
        </childnode>
        <childnode refid="17854" relation="include">
        </childnode>
        <childnode refid="17852" relation="include">
        </childnode>
      </node>
      <node id="17868">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="17851" relation="include">
        </childnode>
        <childnode refid="17853" relation="include">
        </childnode>
        <childnode refid="17854" relation="include">
        </childnode>
        <childnode refid="17852" relation="include">
        </childnode>
      </node>
      <node id="17856">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="17876">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="17852" relation="include">
        </childnode>
        <childnode refid="17853" relation="include">
        </childnode>
        <childnode refid="17854" relation="include">
        </childnode>
        <childnode refid="17864" relation="include">
        </childnode>
        <childnode refid="17873" relation="include">
        </childnode>
      </node>
      <node id="17880">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="17881" relation="include">
        </childnode>
      </node>
      <node id="17882">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="17837">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="17838" relation="include">
        </childnode>
        <childnode refid="17839" relation="include">
        </childnode>
        <childnode refid="17840" relation="include">
        </childnode>
        <childnode refid="17841" relation="include">
        </childnode>
        <childnode refid="17842" relation="include">
        </childnode>
        <childnode refid="17843" relation="include">
        </childnode>
        <childnode refid="17844" relation="include">
        </childnode>
        <childnode refid="17845" relation="include">
        </childnode>
        <childnode refid="17846" relation="include">
        </childnode>
        <childnode refid="17847" relation="include">
        </childnode>
        <childnode refid="17848" relation="include">
        </childnode>
        <childnode refid="17849" relation="include">
        </childnode>
        <childnode refid="17850" relation="include">
        </childnode>
        <childnode refid="17851" relation="include">
        </childnode>
        <childnode refid="17852" relation="include">
        </childnode>
        <childnode refid="17853" relation="include">
        </childnode>
        <childnode refid="17854" relation="include">
        </childnode>
        <childnode refid="17855" relation="include">
        </childnode>
        <childnode refid="17856" relation="include">
        </childnode>
        <childnode refid="17857" relation="include">
        </childnode>
        <childnode refid="17858" relation="include">
        </childnode>
        <childnode refid="17859" relation="include">
        </childnode>
        <childnode refid="17863" relation="include">
        </childnode>
        <childnode refid="17864" relation="include">
        </childnode>
        <childnode refid="17865" relation="include">
        </childnode>
        <childnode refid="17866" relation="include">
        </childnode>
        <childnode refid="17867" relation="include">
        </childnode>
        <childnode refid="17868" relation="include">
        </childnode>
        <childnode refid="17869" relation="include">
        </childnode>
        <childnode refid="17875" relation="include">
        </childnode>
        <childnode refid="17876" relation="include">
        </childnode>
        <childnode refid="17873" relation="include">
        </childnode>
        <childnode refid="17877" relation="include">
        </childnode>
        <childnode refid="17880" relation="include">
        </childnode>
        <childnode refid="17882" relation="include">
        </childnode>
        <childnode refid="17883" relation="include">
        </childnode>
        <childnode refid="17892" relation="include">
        </childnode>
        <childnode refid="17893" relation="include">
        </childnode>
      </node>
      <node id="17843">
        <label>cstdio</label>
      </node>
      <node id="17847">
        <label>tuple</label>
      </node>
      <node id="17852">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="17894">
        <label>x_tree_split_impl.hpp</label>
      </node>
      <node id="17869">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="17852" relation="include">
        </childnode>
        <childnode refid="17853" relation="include">
        </childnode>
        <childnode refid="17854" relation="include">
        </childnode>
        <childnode refid="17856" relation="include">
        </childnode>
        <childnode refid="17870" relation="include">
        </childnode>
        <childnode refid="17871" relation="include">
        </childnode>
        <childnode refid="17872" relation="include">
        </childnode>
        <childnode refid="17873" relation="include">
        </childnode>
      </node>
      <node id="17848">
        <label>utility</label>
      </node>
      <node id="17872">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="17863">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="17860">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="17861" relation="include">
        </childnode>
      </node>
      <node id="17883">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="17884" relation="include">
        </childnode>
        <childnode refid="17885" relation="include">
        </childnode>
        <childnode refid="17886" relation="include">
        </childnode>
        <childnode refid="17887" relation="include">
        </childnode>
        <childnode refid="17888" relation="include">
        </childnode>
        <childnode refid="17889" relation="include">
        </childnode>
        <childnode refid="17890" relation="include">
        </childnode>
        <childnode refid="17891" relation="include">
        </childnode>
      </node>
      <node id="17861">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="17875">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="17873" relation="include">
        </childnode>
        <childnode refid="17869" relation="include">
        </childnode>
        <childnode refid="17876" relation="include">
        </childnode>
      </node>
      <node id="17836">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_split.hpp</label>
        <link refid="x__tree__split_8hpp"/>
        <childnode refid="17837" relation="include">
        </childnode>
        <childnode refid="17894" relation="include">
        </childnode>
      </node>
      <node id="17844">
        <label>cstdlib</label>
      </node>
      <node id="17839">
        <label>cctype</label>
      </node>
      <node id="17862">
        <label>unordered_map</label>
      </node>
      <node id="17841">
        <label>climits</label>
      </node>
      <node id="17889">
        <label>mutex</label>
      </node>
      <node id="17885">
        <label>chrono</label>
      </node>
      <node id="17893">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="17891">
        <label>thread</label>
      </node>
      <node id="17879">
        <label>type_traits</label>
      </node>
      <node id="17855">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="17849">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="17873">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="17851" relation="include">
        </childnode>
        <childnode refid="17852" relation="include">
        </childnode>
        <childnode refid="17853" relation="include">
        </childnode>
        <childnode refid="17854" relation="include">
        </childnode>
        <childnode refid="17874" relation="include">
        </childnode>
      </node>
      <node id="17845">
        <label>cstring</label>
      </node>
      <node id="17864">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="17853">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1tree_1_1XTreeSplit" prot="public">mlpack::tree::XTreeSplit</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1tree">mlpack::tree</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Andrew Wells</para></simplesect>
Definition of the XTreeSplit class, a class that splits the nodes of an X tree, starting at a leaf node and moving upwards if necessary.</para><para>This is known to have a bug: see #368.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="15"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_TREE_RECTANGLE_TREE_X_TREE_SPLIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_TREE_RECTANGLE_TREE_X_TREE_SPLIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tree<sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="namespacemlpack_1_1tree_1a23057f6f52ed3b029f53aacbc1fcec85" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1tree_1a23057f6f52ed3b029f53aacbc1fcec85" kindref="member">MAX_OVERLAP</ref><sp/>=<sp/>0.2;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classmlpack_1_1tree_1_1XTreeSplit" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1tree_1_1XTreeSplit" kindref="compound">XTreeSplit</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1XTreeSplit_1af73652d9536a1715364bbb0e4a9ba04e" kindref="member">SplitLeafNode</ref>(TreeType<sp/>*tree,<sp/>std::vector&lt;bool&gt;&amp;<sp/>relevels);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1XTreeSplit_1a73ff1eaa94449d763847fff1f537922f" kindref="member">SplitNonLeafNode</ref>(TreeType<sp/>*tree,<sp/>std::vector&lt;bool&gt;&amp;<sp/>relevels);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertNodeIntoTree(TreeType*<sp/>destTree,<sp/>TreeType*<sp/>srcNode);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ElemType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SecondType&gt;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>PairComp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;ElemType,<sp/>SecondType&gt;&amp;<sp/>p1,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;ElemType,<sp/>SecondType&gt;&amp;<sp/>p2)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p1.first<sp/>&lt;<sp/>p2.first;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;x_tree_split_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_split.hpp"/>
  </compounddef>
</doxygen>
