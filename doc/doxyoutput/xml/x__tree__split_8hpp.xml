<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="x__tree__split_8hpp" kind="file" language="C++">
    <compoundname>x_tree_split.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="yes">x_tree_split_impl.hpp</includes>
    <incdepgraph>
      <node id="18072">
        <label>list</label>
      </node>
      <node id="18069">
        <label>atomic</label>
      </node>
      <node id="18059">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="18035">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="18071">
        <label>iomanip</label>
      </node>
      <node id="18044">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="18045" relation="include">
        </childnode>
        <childnode refid="18047" relation="include">
        </childnode>
      </node>
      <node id="18027">
        <label>cstdint</label>
      </node>
      <node id="18036">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="18043">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="18066">
        <label>arma_config.hpp</label>
      </node>
      <node id="18056">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="18023">
        <label>cmath</label>
      </node>
      <node id="18042">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="18031">
        <label>stdexcept</label>
      </node>
      <node id="18051">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="18036" relation="include">
        </childnode>
        <childnode refid="18038" relation="include">
        </childnode>
        <childnode refid="18039" relation="include">
        </childnode>
        <childnode refid="18037" relation="include">
        </childnode>
      </node>
      <node id="18075">
        <label>string</label>
      </node>
      <node id="18063">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="18064" relation="include">
        </childnode>
        <childnode refid="18030" relation="include">
        </childnode>
      </node>
      <node id="18073">
        <label>map</label>
      </node>
      <node id="18025">
        <label>cfloat</label>
      </node>
      <node id="18055">
        <label>boost/variant.hpp</label>
      </node>
      <node id="18077">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="18039">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="18062">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="18063" relation="include">
        </childnode>
        <childnode refid="18039" relation="include">
        </childnode>
        <childnode refid="18046" relation="include">
        </childnode>
        <childnode refid="18064" relation="include">
        </childnode>
      </node>
      <node id="18052">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="18050">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="18036" relation="include">
        </childnode>
        <childnode refid="18038" relation="include">
        </childnode>
        <childnode refid="18039" relation="include">
        </childnode>
        <childnode refid="18037" relation="include">
        </childnode>
      </node>
      <node id="18053">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="18036" relation="include">
        </childnode>
        <childnode refid="18038" relation="include">
        </childnode>
        <childnode refid="18039" relation="include">
        </childnode>
        <childnode refid="18037" relation="include">
        </childnode>
      </node>
      <node id="18041">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="18061">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="18037" relation="include">
        </childnode>
        <childnode refid="18038" relation="include">
        </childnode>
        <childnode refid="18039" relation="include">
        </childnode>
        <childnode refid="18049" relation="include">
        </childnode>
        <childnode refid="18058" relation="include">
        </childnode>
      </node>
      <node id="18065">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="18066" relation="include">
        </childnode>
      </node>
      <node id="18067">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="18022">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="18023" relation="include">
        </childnode>
        <childnode refid="18024" relation="include">
        </childnode>
        <childnode refid="18025" relation="include">
        </childnode>
        <childnode refid="18026" relation="include">
        </childnode>
        <childnode refid="18027" relation="include">
        </childnode>
        <childnode refid="18028" relation="include">
        </childnode>
        <childnode refid="18029" relation="include">
        </childnode>
        <childnode refid="18030" relation="include">
        </childnode>
        <childnode refid="18031" relation="include">
        </childnode>
        <childnode refid="18032" relation="include">
        </childnode>
        <childnode refid="18033" relation="include">
        </childnode>
        <childnode refid="18034" relation="include">
        </childnode>
        <childnode refid="18035" relation="include">
        </childnode>
        <childnode refid="18036" relation="include">
        </childnode>
        <childnode refid="18037" relation="include">
        </childnode>
        <childnode refid="18038" relation="include">
        </childnode>
        <childnode refid="18039" relation="include">
        </childnode>
        <childnode refid="18040" relation="include">
        </childnode>
        <childnode refid="18041" relation="include">
        </childnode>
        <childnode refid="18042" relation="include">
        </childnode>
        <childnode refid="18043" relation="include">
        </childnode>
        <childnode refid="18044" relation="include">
        </childnode>
        <childnode refid="18048" relation="include">
        </childnode>
        <childnode refid="18049" relation="include">
        </childnode>
        <childnode refid="18050" relation="include">
        </childnode>
        <childnode refid="18051" relation="include">
        </childnode>
        <childnode refid="18052" relation="include">
        </childnode>
        <childnode refid="18053" relation="include">
        </childnode>
        <childnode refid="18054" relation="include">
        </childnode>
        <childnode refid="18060" relation="include">
        </childnode>
        <childnode refid="18061" relation="include">
        </childnode>
        <childnode refid="18058" relation="include">
        </childnode>
        <childnode refid="18062" relation="include">
        </childnode>
        <childnode refid="18065" relation="include">
        </childnode>
        <childnode refid="18067" relation="include">
        </childnode>
        <childnode refid="18068" relation="include">
        </childnode>
        <childnode refid="18077" relation="include">
        </childnode>
        <childnode refid="18078" relation="include">
        </childnode>
      </node>
      <node id="18028">
        <label>cstdio</label>
      </node>
      <node id="18032">
        <label>tuple</label>
      </node>
      <node id="18037">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="18079">
        <label>x_tree_split_impl.hpp</label>
      </node>
      <node id="18054">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="18037" relation="include">
        </childnode>
        <childnode refid="18038" relation="include">
        </childnode>
        <childnode refid="18039" relation="include">
        </childnode>
        <childnode refid="18041" relation="include">
        </childnode>
        <childnode refid="18055" relation="include">
        </childnode>
        <childnode refid="18056" relation="include">
        </childnode>
        <childnode refid="18057" relation="include">
        </childnode>
        <childnode refid="18058" relation="include">
        </childnode>
      </node>
      <node id="18033">
        <label>utility</label>
      </node>
      <node id="18057">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="18048">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="18045">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="18046" relation="include">
        </childnode>
      </node>
      <node id="18068">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="18069" relation="include">
        </childnode>
        <childnode refid="18070" relation="include">
        </childnode>
        <childnode refid="18071" relation="include">
        </childnode>
        <childnode refid="18072" relation="include">
        </childnode>
        <childnode refid="18073" relation="include">
        </childnode>
        <childnode refid="18074" relation="include">
        </childnode>
        <childnode refid="18075" relation="include">
        </childnode>
        <childnode refid="18076" relation="include">
        </childnode>
      </node>
      <node id="18046">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="18060">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="18058" relation="include">
        </childnode>
        <childnode refid="18054" relation="include">
        </childnode>
        <childnode refid="18061" relation="include">
        </childnode>
      </node>
      <node id="18021">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_split.hpp</label>
        <link refid="x__tree__split_8hpp"/>
        <childnode refid="18022" relation="include">
        </childnode>
        <childnode refid="18079" relation="include">
        </childnode>
      </node>
      <node id="18029">
        <label>cstdlib</label>
      </node>
      <node id="18024">
        <label>cctype</label>
      </node>
      <node id="18047">
        <label>unordered_map</label>
      </node>
      <node id="18026">
        <label>climits</label>
      </node>
      <node id="18074">
        <label>mutex</label>
      </node>
      <node id="18070">
        <label>chrono</label>
      </node>
      <node id="18078">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="18076">
        <label>thread</label>
      </node>
      <node id="18064">
        <label>type_traits</label>
      </node>
      <node id="18040">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="18034">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="18058">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="18036" relation="include">
        </childnode>
        <childnode refid="18037" relation="include">
        </childnode>
        <childnode refid="18038" relation="include">
        </childnode>
        <childnode refid="18039" relation="include">
        </childnode>
        <childnode refid="18059" relation="include">
        </childnode>
      </node>
      <node id="18030">
        <label>cstring</label>
      </node>
      <node id="18049">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="18038">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1tree_1_1XTreeSplit" prot="public">mlpack::tree::XTreeSplit</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1tree">mlpack::tree</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Andrew Wells</para></simplesect>
Definition of the XTreeSplit class, a class that splits the nodes of an X tree, starting at a leaf node and moving upwards if necessary.</para><para>This is known to have a bug: see #368.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="15"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_TREE_RECTANGLE_TREE_X_TREE_SPLIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_TREE_RECTANGLE_TREE_X_TREE_SPLIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tree<sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="namespacemlpack_1_1tree_1a23057f6f52ed3b029f53aacbc1fcec85" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1tree_1a23057f6f52ed3b029f53aacbc1fcec85" kindref="member">MAX_OVERLAP</ref><sp/>=<sp/>0.2;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classmlpack_1_1tree_1_1XTreeSplit" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1tree_1_1XTreeSplit" kindref="compound">XTreeSplit</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1XTreeSplit_1af73652d9536a1715364bbb0e4a9ba04e" kindref="member">SplitLeafNode</ref>(TreeType<sp/>*tree,<sp/>std::vector&lt;bool&gt;&amp;<sp/>relevels);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1XTreeSplit_1a73ff1eaa94449d763847fff1f537922f" kindref="member">SplitNonLeafNode</ref>(TreeType<sp/>*tree,<sp/>std::vector&lt;bool&gt;&amp;<sp/>relevels);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertNodeIntoTree(TreeType*<sp/>destTree,<sp/>TreeType*<sp/>srcNode);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ElemType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SecondType&gt;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>PairComp(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;ElemType,<sp/>SecondType&gt;&amp;<sp/>p1,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;ElemType,<sp/>SecondType&gt;&amp;<sp/>p2)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p1.first<sp/>&lt;<sp/>p2.first;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;x_tree_split_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_split.hpp"/>
  </compounddef>
</doxygen>
