<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation" kind="class" language="C++" prot="public">
    <compoundname>mlpack::tree::XTreeAuxiliaryInformation</compoundname>
    <includes refid="x__tree__auxiliary__information_8hpp" local="no">x_tree_auxiliary_information.hpp</includes>
    <innerclass refid="structmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1_1SplitHistoryStruct" prot="public">mlpack::tree::XTreeAuxiliaryInformation::SplitHistoryStruct</innerclass>
    <templateparamlist>
      <param>
        <type>typename TreeType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a5da7db17c4277f34395a3cec9a9b06c9" prot="public" static="no">
        <type>struct <ref refid="structmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1_1SplitHistoryStruct" kindref="compound">mlpack::tree::XTreeAuxiliaryInformation::SplitHistoryStruct</ref></type>
        <definition>typedef struct mlpack::tree::XTreeAuxiliaryInformation::SplitHistoryStruct  SplitHistoryStruct</definition>
        <argsstring></argsstring>
        <name>SplitHistoryStruct</name>
        <briefdescription>
<para>The X tree requires that the tree records it&apos;s &quot;split history&quot;. </para>        </briefdescription>
        <detaileddescription>
<para>To make this easy, we use the following structure. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" line="205" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a93ce739c5837d832aa5a32948e93d16e" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t normalNodeMaxNumChildren</definition>
        <argsstring></argsstring>
        <name>normalNodeMaxNumChildren</name>
        <briefdescription>
<para>The max number of child nodes a non-leaf normal node can have. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" line="209" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1ac2a547c8b509797ad8005493d14a8d62" prot="private" static="no" mutable="no">
        <type><ref refid="structmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1_1SplitHistoryStruct" kindref="compound">SplitHistoryStruct</ref></type>
        <definition>SplitHistoryStruct splitHistory</definition>
        <argsstring></argsstring>
        <name>splitHistory</name>
        <briefdescription>
<para>A struct to store the &quot;split history&quot; for X trees. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" line="211" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" bodystart="211" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a447af4206e6531d05a33c781605df5a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>XTreeAuxiliaryInformation</definition>
        <argsstring>()</argsstring>
        <name>XTreeAuxiliaryInformation</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" line="28" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1ac3c8313c6ccc921ddaebb5a27c9874fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>XTreeAuxiliaryInformation</definition>
        <argsstring>(const TreeType *node)</argsstring>
        <name>XTreeAuxiliaryInformation</name>
        <param>
          <type>const TreeType *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Construct this with the specified node. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node that stores this auxiliary information. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" line="38" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" bodystart="38" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a885b27a78236f6feea431a7eb365777d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>XTreeAuxiliaryInformation</definition>
        <argsstring>(const XTreeAuxiliaryInformation &amp;other, TreeType *=NULL, bool=true)</argsstring>
        <name>XTreeAuxiliaryInformation</name>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation" kindref="compound">XTreeAuxiliaryInformation</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>TreeType *</type>
          <defval>NULL</defval>
        </param>
        <param>
          <type>bool</type>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Create an auxiliary information object by copying from another object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Another auxiliary information object from which the information will be copied. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(tree) The node that holds the auxiliary information. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(deepCopy) If false, the new object uses the same memory (not used here). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" line="54" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" bodystart="54" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a5e9948e2da6e3bc0ab99f0d10a2f4b44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>XTreeAuxiliaryInformation</definition>
        <argsstring>(XTreeAuxiliaryInformation &amp;&amp;other)</argsstring>
        <name>XTreeAuxiliaryInformation</name>
        <param>
          <type><ref refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation" kindref="compound">XTreeAuxiliaryInformation</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Create an auxiliary information object by moving from the other node. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The object from which the information will be moved. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" line="79" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" bodystart="79" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a351a1390fe22a0466044a786ac810799" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool HandleNodeInsertion</definition>
        <argsstring>(TreeType *, TreeType *, bool)</argsstring>
        <name>HandleNodeInsertion</name>
        <param>
          <type>TreeType *</type>
        </param>
        <param>
          <type>TreeType *</type>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
<para>Some tree types require to save some properties at the insertion process. </para>        </briefdescription>
        <detaileddescription>
<para>This method allows the auxiliary information the option of manipulating the tree in order to perform the insertion process. If the auxiliary information does that, then the method should return true; if the method returns false the <ref refid="namespacemlpack_1_1tree_1_1RectangleTree" kindref="compound">RectangleTree</ref> performs its default behavior.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(node) The node in which the nodeToInsert is being inserted. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(nodeToInsert) The node being inserted. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(insertionLevel) The level of the tree at which the nodeToInsert should be inserted. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" line="113" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" bodystart="113" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a559b369ceed572ded92e741de7ec0ad6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool HandleNodeRemoval</definition>
        <argsstring>(TreeType *, const size_t)</argsstring>
        <name>HandleNodeRemoval</name>
        <param>
          <type>TreeType *</type>
        </param>
        <param>
          <type>const size_t</type>
        </param>
        <briefdescription>
<para>Some tree types require to save some properties at the deletion process. </para>        </briefdescription>
        <detaileddescription>
<para>This method allows the auxiliary information the option of manipulating the tree in order to perform the deletion process. If the auxiliary information does that, then the method should return true; if the method returns false the <ref refid="namespacemlpack_1_1tree_1_1RectangleTree" kindref="compound">RectangleTree</ref> performs its default behavior. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(node) The node from which the node is being deleted. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(nodeIndex) The local index of the node being deleted. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" line="143" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a2a0b51ff5e8b14372750e4554a2155c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool HandlePointDeletion</definition>
        <argsstring>(TreeType *, const size_t)</argsstring>
        <name>HandlePointDeletion</name>
        <param>
          <type>TreeType *</type>
        </param>
        <param>
          <type>const size_t</type>
        </param>
        <briefdescription>
<para>Some tree types require to save some properties at the deletion process. </para>        </briefdescription>
        <detaileddescription>
<para>This method allows the auxiliary information the option of manipulating the tree in order to perform the deletion process. If the auxiliary information does that, then the method should return true; if the method returns false the <ref refid="namespacemlpack_1_1tree_1_1RectangleTree" kindref="compound">RectangleTree</ref> performs its default behavior. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(node) The node from which the point is being deleted. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(localIndex) The local index of the point being deleted. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" line="129" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1af0332e7aa289d540dc2bfb89687d87f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool HandlePointInsertion</definition>
        <argsstring>(TreeType *, const size_t)</argsstring>
        <name>HandlePointInsertion</name>
        <param>
          <type>TreeType *</type>
        </param>
        <param>
          <type>const size_t</type>
        </param>
        <briefdescription>
<para>Some tree types require to save some properties at the insertion process. </para>        </briefdescription>
        <detaileddescription>
<para>This method allows the auxiliary information the option of manipulating the tree in order to perform the insertion process. If the auxiliary information does that, then the method should return true; if the method returns false the <ref refid="namespacemlpack_1_1tree_1_1RectangleTree" kindref="compound">RectangleTree</ref> performs its default behavior.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(node) The node in which the point is being inserted. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(point) The global number of the point being inserted. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" line="96" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a9a2e15604b4dca6e21285ad8d0053602" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t NormalNodeMaxNumChildren</definition>
        <argsstring>() const</argsstring>
        <name>NormalNodeMaxNumChildren</name>
        <briefdescription>
<para>Return the maximum number of a normal node&apos;s children. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" line="215" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" bodystart="215" bodyend="215"/>
        <referencedby refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a61b7dcbdeb22a94c36b1e7bec5218d9c" compoundref="x__tree__auxiliary__information_8hpp" startline="66" endline="72">XTreeAuxiliaryInformation&lt; TreeType &gt;::operator=</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a9e3991283a62a37519fc173b68f1772a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t &amp;</type>
        <definition>size_t&amp; NormalNodeMaxNumChildren</definition>
        <argsstring>()</argsstring>
        <name>NormalNodeMaxNumChildren</name>
        <briefdescription>
<para>Modify the maximum number of a normal node&apos;s children. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" line="217" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" bodystart="217" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a8dbe26c4727e347359f1da279659f0cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NullifyData</definition>
        <argsstring>()</argsstring>
        <name>NullifyData</name>
        <briefdescription>
<para>Nullify the auxiliary information in order to prevent an invalid free. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" line="162" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" bodystart="162" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a61b7dcbdeb22a94c36b1e7bec5218d9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation" kindref="compound">XTreeAuxiliaryInformation</ref> &amp;</type>
        <definition>XTreeAuxiliaryInformation&amp; operator=</definition>
        <argsstring>(const XTreeAuxiliaryInformation &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation" kindref="compound">XTreeAuxiliaryInformation</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy the auxiliary information object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The node from which the information will be copied. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" line="66" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" bodystart="66" bodyend="72"/>
        <references refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a9a2e15604b4dca6e21285ad8d0053602" compoundref="x__tree__auxiliary__information_8hpp" startline="215" endline="215">XTreeAuxiliaryInformation&lt; TreeType &gt;::NormalNodeMaxNumChildren</references>
        <references refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1ab0e40d0a7c59a7aea65725e14b79faff" compoundref="x__tree__auxiliary__information_8hpp" startline="219" endline="219">XTreeAuxiliaryInformation&lt; TreeType &gt;::SplitHistory</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" line="227" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" bodystart="227" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1ab0e40d0a7c59a7aea65725e14b79faff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1_1SplitHistoryStruct" kindref="compound">SplitHistoryStruct</ref> &amp;</type>
        <definition>const SplitHistoryStruct&amp; SplitHistory</definition>
        <argsstring>() const</argsstring>
        <name>SplitHistory</name>
        <briefdescription>
<para>Return the split history of the node associated with this object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" line="219" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" bodystart="219" bodyend="219"/>
        <referencedby refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a61b7dcbdeb22a94c36b1e7bec5218d9c" compoundref="x__tree__auxiliary__information_8hpp" startline="66" endline="72">XTreeAuxiliaryInformation&lt; TreeType &gt;::operator=</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1af3461799d0e7576bb28f597b20a97d63" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1_1SplitHistoryStruct" kindref="compound">SplitHistoryStruct</ref> &amp;</type>
        <definition>SplitHistoryStruct&amp; SplitHistory</definition>
        <argsstring>()</argsstring>
        <name>SplitHistory</name>
        <briefdescription>
<para>Modify the split history of the node associated with this object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" line="221" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" bodystart="221" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a2278181aedc87de10e09f467c794ef5e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool UpdateAuxiliaryInfo</definition>
        <argsstring>(TreeType *)</argsstring>
        <name>UpdateAuxiliaryInfo</name>
        <param>
          <type>TreeType *</type>
        </param>
        <briefdescription>
<para>Some tree types require to propagate the information upward. </para>        </briefdescription>
        <detaileddescription>
<para>This method should return false if this is not the case. If true is returned, the update will be propagated upward. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(node) The node in which the auxiliary information being update. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" line="154" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" bodystart="154" bodyend="157"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation" kindref="compound">XTreeAuxiliaryInformation</ref> class provides information specific to X trees for each node in a <ref refid="namespacemlpack_1_1tree_1_1RectangleTree" kindref="compound">RectangleTree</ref>. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" line="25" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/x_tree_auxiliary_information.hpp" bodystart="24" bodyend="232"/>
    <listofallmembers>
      <member refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a351a1390fe22a0466044a786ac810799" prot="public" virt="non-virtual"><scope>mlpack::tree::XTreeAuxiliaryInformation</scope><name>HandleNodeInsertion</name></member>
      <member refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a559b369ceed572ded92e741de7ec0ad6" prot="public" virt="non-virtual"><scope>mlpack::tree::XTreeAuxiliaryInformation</scope><name>HandleNodeRemoval</name></member>
      <member refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a2a0b51ff5e8b14372750e4554a2155c7" prot="public" virt="non-virtual"><scope>mlpack::tree::XTreeAuxiliaryInformation</scope><name>HandlePointDeletion</name></member>
      <member refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1af0332e7aa289d540dc2bfb89687d87f1" prot="public" virt="non-virtual"><scope>mlpack::tree::XTreeAuxiliaryInformation</scope><name>HandlePointInsertion</name></member>
      <member refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a9a2e15604b4dca6e21285ad8d0053602" prot="public" virt="non-virtual"><scope>mlpack::tree::XTreeAuxiliaryInformation</scope><name>NormalNodeMaxNumChildren</name></member>
      <member refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a9e3991283a62a37519fc173b68f1772a" prot="public" virt="non-virtual"><scope>mlpack::tree::XTreeAuxiliaryInformation</scope><name>NormalNodeMaxNumChildren</name></member>
      <member refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a93ce739c5837d832aa5a32948e93d16e" prot="private" virt="non-virtual"><scope>mlpack::tree::XTreeAuxiliaryInformation</scope><name>normalNodeMaxNumChildren</name></member>
      <member refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a8dbe26c4727e347359f1da279659f0cd" prot="public" virt="non-virtual"><scope>mlpack::tree::XTreeAuxiliaryInformation</scope><name>NullifyData</name></member>
      <member refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a61b7dcbdeb22a94c36b1e7bec5218d9c" prot="public" virt="non-virtual"><scope>mlpack::tree::XTreeAuxiliaryInformation</scope><name>operator=</name></member>
      <member refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::tree::XTreeAuxiliaryInformation</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1ab0e40d0a7c59a7aea65725e14b79faff" prot="public" virt="non-virtual"><scope>mlpack::tree::XTreeAuxiliaryInformation</scope><name>SplitHistory</name></member>
      <member refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1af3461799d0e7576bb28f597b20a97d63" prot="public" virt="non-virtual"><scope>mlpack::tree::XTreeAuxiliaryInformation</scope><name>SplitHistory</name></member>
      <member refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1ac2a547c8b509797ad8005493d14a8d62" prot="private" virt="non-virtual"><scope>mlpack::tree::XTreeAuxiliaryInformation</scope><name>splitHistory</name></member>
      <member refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a5da7db17c4277f34395a3cec9a9b06c9" prot="public" virt="non-virtual"><scope>mlpack::tree::XTreeAuxiliaryInformation</scope><name>SplitHistoryStruct</name></member>
      <member refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a2278181aedc87de10e09f467c794ef5e" prot="public" virt="non-virtual"><scope>mlpack::tree::XTreeAuxiliaryInformation</scope><name>UpdateAuxiliaryInfo</name></member>
      <member refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a447af4206e6531d05a33c781605df5a6" prot="public" virt="non-virtual"><scope>mlpack::tree::XTreeAuxiliaryInformation</scope><name>XTreeAuxiliaryInformation</name></member>
      <member refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1ac3c8313c6ccc921ddaebb5a27c9874fb" prot="public" virt="non-virtual"><scope>mlpack::tree::XTreeAuxiliaryInformation</scope><name>XTreeAuxiliaryInformation</name></member>
      <member refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a885b27a78236f6feea431a7eb365777d" prot="public" virt="non-virtual"><scope>mlpack::tree::XTreeAuxiliaryInformation</scope><name>XTreeAuxiliaryInformation</name></member>
      <member refid="classmlpack_1_1tree_1_1XTreeAuxiliaryInformation_1a5e9948e2da6e3bc0ab99f0d10a2f4b44" prot="public" virt="non-virtual"><scope>mlpack::tree::XTreeAuxiliaryInformation</scope><name>XTreeAuxiliaryInformation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
