<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="listwise__deletion_8hpp" kind="file" language="C++">
    <compoundname>listwise_deletion.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <incdepgraph>
      <node id="7577">
        <label>list</label>
      </node>
      <node id="7574">
        <label>atomic</label>
      </node>
      <node id="7564">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="7540">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="7576">
        <label>iomanip</label>
      </node>
      <node id="7549">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="7550" relation="include">
        </childnode>
        <childnode refid="7552" relation="include">
        </childnode>
      </node>
      <node id="7532">
        <label>cstdint</label>
      </node>
      <node id="7541">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="7548">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="7571">
        <label>arma_config.hpp</label>
      </node>
      <node id="7561">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="7528">
        <label>cmath</label>
      </node>
      <node id="7547">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="7536">
        <label>stdexcept</label>
      </node>
      <node id="7556">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="7541" relation="include">
        </childnode>
        <childnode refid="7543" relation="include">
        </childnode>
        <childnode refid="7544" relation="include">
        </childnode>
        <childnode refid="7542" relation="include">
        </childnode>
      </node>
      <node id="7580">
        <label>string</label>
      </node>
      <node id="7568">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="7569" relation="include">
        </childnode>
        <childnode refid="7535" relation="include">
        </childnode>
      </node>
      <node id="7578">
        <label>map</label>
      </node>
      <node id="7530">
        <label>cfloat</label>
      </node>
      <node id="7560">
        <label>boost/variant.hpp</label>
      </node>
      <node id="7582">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="7544">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="7567">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="7568" relation="include">
        </childnode>
        <childnode refid="7544" relation="include">
        </childnode>
        <childnode refid="7551" relation="include">
        </childnode>
        <childnode refid="7569" relation="include">
        </childnode>
      </node>
      <node id="7557">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="7555">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="7541" relation="include">
        </childnode>
        <childnode refid="7543" relation="include">
        </childnode>
        <childnode refid="7544" relation="include">
        </childnode>
        <childnode refid="7542" relation="include">
        </childnode>
      </node>
      <node id="7558">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="7541" relation="include">
        </childnode>
        <childnode refid="7543" relation="include">
        </childnode>
        <childnode refid="7544" relation="include">
        </childnode>
        <childnode refid="7542" relation="include">
        </childnode>
      </node>
      <node id="7546">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="7566">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="7542" relation="include">
        </childnode>
        <childnode refid="7543" relation="include">
        </childnode>
        <childnode refid="7544" relation="include">
        </childnode>
        <childnode refid="7554" relation="include">
        </childnode>
        <childnode refid="7563" relation="include">
        </childnode>
      </node>
      <node id="7570">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="7571" relation="include">
        </childnode>
      </node>
      <node id="7572">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="7527">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="7528" relation="include">
        </childnode>
        <childnode refid="7529" relation="include">
        </childnode>
        <childnode refid="7530" relation="include">
        </childnode>
        <childnode refid="7531" relation="include">
        </childnode>
        <childnode refid="7532" relation="include">
        </childnode>
        <childnode refid="7533" relation="include">
        </childnode>
        <childnode refid="7534" relation="include">
        </childnode>
        <childnode refid="7535" relation="include">
        </childnode>
        <childnode refid="7536" relation="include">
        </childnode>
        <childnode refid="7537" relation="include">
        </childnode>
        <childnode refid="7538" relation="include">
        </childnode>
        <childnode refid="7539" relation="include">
        </childnode>
        <childnode refid="7540" relation="include">
        </childnode>
        <childnode refid="7541" relation="include">
        </childnode>
        <childnode refid="7542" relation="include">
        </childnode>
        <childnode refid="7543" relation="include">
        </childnode>
        <childnode refid="7544" relation="include">
        </childnode>
        <childnode refid="7545" relation="include">
        </childnode>
        <childnode refid="7546" relation="include">
        </childnode>
        <childnode refid="7547" relation="include">
        </childnode>
        <childnode refid="7548" relation="include">
        </childnode>
        <childnode refid="7549" relation="include">
        </childnode>
        <childnode refid="7553" relation="include">
        </childnode>
        <childnode refid="7554" relation="include">
        </childnode>
        <childnode refid="7555" relation="include">
        </childnode>
        <childnode refid="7556" relation="include">
        </childnode>
        <childnode refid="7557" relation="include">
        </childnode>
        <childnode refid="7558" relation="include">
        </childnode>
        <childnode refid="7559" relation="include">
        </childnode>
        <childnode refid="7565" relation="include">
        </childnode>
        <childnode refid="7566" relation="include">
        </childnode>
        <childnode refid="7563" relation="include">
        </childnode>
        <childnode refid="7567" relation="include">
        </childnode>
        <childnode refid="7570" relation="include">
        </childnode>
        <childnode refid="7572" relation="include">
        </childnode>
        <childnode refid="7573" relation="include">
        </childnode>
        <childnode refid="7582" relation="include">
        </childnode>
        <childnode refid="7583" relation="include">
        </childnode>
      </node>
      <node id="7533">
        <label>cstdio</label>
      </node>
      <node id="7537">
        <label>tuple</label>
      </node>
      <node id="7542">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="7559">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="7542" relation="include">
        </childnode>
        <childnode refid="7543" relation="include">
        </childnode>
        <childnode refid="7544" relation="include">
        </childnode>
        <childnode refid="7546" relation="include">
        </childnode>
        <childnode refid="7560" relation="include">
        </childnode>
        <childnode refid="7561" relation="include">
        </childnode>
        <childnode refid="7562" relation="include">
        </childnode>
        <childnode refid="7563" relation="include">
        </childnode>
      </node>
      <node id="7526">
        <label>/home/aakash/mlpack/src/mlpack/core/data/imputation_methods/listwise_deletion.hpp</label>
        <link refid="listwise__deletion_8hpp"/>
        <childnode refid="7527" relation="include">
        </childnode>
      </node>
      <node id="7538">
        <label>utility</label>
      </node>
      <node id="7562">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="7553">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="7550">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="7551" relation="include">
        </childnode>
      </node>
      <node id="7573">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="7574" relation="include">
        </childnode>
        <childnode refid="7575" relation="include">
        </childnode>
        <childnode refid="7576" relation="include">
        </childnode>
        <childnode refid="7577" relation="include">
        </childnode>
        <childnode refid="7578" relation="include">
        </childnode>
        <childnode refid="7579" relation="include">
        </childnode>
        <childnode refid="7580" relation="include">
        </childnode>
        <childnode refid="7581" relation="include">
        </childnode>
      </node>
      <node id="7551">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="7565">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="7563" relation="include">
        </childnode>
        <childnode refid="7559" relation="include">
        </childnode>
        <childnode refid="7566" relation="include">
        </childnode>
      </node>
      <node id="7534">
        <label>cstdlib</label>
      </node>
      <node id="7529">
        <label>cctype</label>
      </node>
      <node id="7552">
        <label>unordered_map</label>
      </node>
      <node id="7531">
        <label>climits</label>
      </node>
      <node id="7579">
        <label>mutex</label>
      </node>
      <node id="7575">
        <label>chrono</label>
      </node>
      <node id="7583">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="7581">
        <label>thread</label>
      </node>
      <node id="7569">
        <label>type_traits</label>
      </node>
      <node id="7545">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="7539">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="7563">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="7541" relation="include">
        </childnode>
        <childnode refid="7542" relation="include">
        </childnode>
        <childnode refid="7543" relation="include">
        </childnode>
        <childnode refid="7544" relation="include">
        </childnode>
        <childnode refid="7564" relation="include">
        </childnode>
      </node>
      <node id="7535">
        <label>cstring</label>
      </node>
      <node id="7554">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="7543">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1data_1_1ListwiseDeletion" prot="public">mlpack::data::ListwiseDeletion</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1data">mlpack::data</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Keon Kim</para></simplesect>
Definition and Implementation of the empty ListwiseDeletion class.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_DATA_IMPUTE_STRATEGIES_LISTWISE_DELETION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_DATA_IMPUTE_STRATEGIES_LISTWISE_DELETION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">data<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="25" refid="classmlpack_1_1data_1_1ListwiseDeletion" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1data_1_1ListwiseDeletion" kindref="compound">ListwiseDeletion</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37" refid="classmlpack_1_1data_1_1ListwiseDeletion_1a94b8353ed4d68b10e2dd59d5e7dc15ca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1ListwiseDeletion_1a94b8353ed4d68b10e2dd59d5e7dc15ca" kindref="member">Impute</ref>(arma::Mat&lt;T&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>mappedValue,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimension,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>columnMajor<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;arma::uword&gt;<sp/>colsToKeep;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(columnMajor)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>input.n_cols;<sp/>++i)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(input(dimension,<sp/>i)<sp/>==<sp/>mappedValue<sp/>||</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::isnan(input(dimension,<sp/>i))))</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colsToKeep.push_back(i);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>input<sp/>=<sp/>input.cols(arma::uvec(colsToKeep));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>input.n_rows;<sp/>++i)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(input(i,<sp/>dimension)<sp/>==<sp/>mappedValue<sp/>||</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::isnan(input(i,<sp/>dimension))))</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colsToKeep.push_back(i);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>input<sp/>=<sp/>input.rows(arma::uvec(colsToKeep));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>ListwiseDeletion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/data/imputation_methods/listwise_deletion.hpp"/>
  </compounddef>
</doxygen>
