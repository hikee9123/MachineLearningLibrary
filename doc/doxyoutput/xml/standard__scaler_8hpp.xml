<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="standard__scaler_8hpp" kind="file" language="C++">
    <compoundname>standard_scaler.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includedby refid="scaling__model_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/preprocess/scaling_model.hpp</includedby>
    <incdepgraph>
      <node id="9132">
        <label>list</label>
      </node>
      <node id="9129">
        <label>atomic</label>
      </node>
      <node id="9119">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="9095">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="9131">
        <label>iomanip</label>
      </node>
      <node id="9081">
        <label>/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/standard_scaler.hpp</label>
        <link refid="standard__scaler_8hpp"/>
        <childnode refid="9082" relation="include">
        </childnode>
      </node>
      <node id="9104">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="9105" relation="include">
        </childnode>
        <childnode refid="9107" relation="include">
        </childnode>
      </node>
      <node id="9087">
        <label>cstdint</label>
      </node>
      <node id="9096">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="9103">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="9126">
        <label>arma_config.hpp</label>
      </node>
      <node id="9116">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="9083">
        <label>cmath</label>
      </node>
      <node id="9102">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="9091">
        <label>stdexcept</label>
      </node>
      <node id="9111">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="9096" relation="include">
        </childnode>
        <childnode refid="9098" relation="include">
        </childnode>
        <childnode refid="9099" relation="include">
        </childnode>
        <childnode refid="9097" relation="include">
        </childnode>
      </node>
      <node id="9135">
        <label>string</label>
      </node>
      <node id="9123">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="9124" relation="include">
        </childnode>
        <childnode refid="9090" relation="include">
        </childnode>
      </node>
      <node id="9133">
        <label>map</label>
      </node>
      <node id="9085">
        <label>cfloat</label>
      </node>
      <node id="9115">
        <label>boost/variant.hpp</label>
      </node>
      <node id="9137">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="9099">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="9122">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="9123" relation="include">
        </childnode>
        <childnode refid="9099" relation="include">
        </childnode>
        <childnode refid="9106" relation="include">
        </childnode>
        <childnode refid="9124" relation="include">
        </childnode>
      </node>
      <node id="9112">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="9110">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="9096" relation="include">
        </childnode>
        <childnode refid="9098" relation="include">
        </childnode>
        <childnode refid="9099" relation="include">
        </childnode>
        <childnode refid="9097" relation="include">
        </childnode>
      </node>
      <node id="9113">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="9096" relation="include">
        </childnode>
        <childnode refid="9098" relation="include">
        </childnode>
        <childnode refid="9099" relation="include">
        </childnode>
        <childnode refid="9097" relation="include">
        </childnode>
      </node>
      <node id="9101">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="9121">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="9097" relation="include">
        </childnode>
        <childnode refid="9098" relation="include">
        </childnode>
        <childnode refid="9099" relation="include">
        </childnode>
        <childnode refid="9109" relation="include">
        </childnode>
        <childnode refid="9118" relation="include">
        </childnode>
      </node>
      <node id="9125">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="9126" relation="include">
        </childnode>
      </node>
      <node id="9127">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="9082">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="9083" relation="include">
        </childnode>
        <childnode refid="9084" relation="include">
        </childnode>
        <childnode refid="9085" relation="include">
        </childnode>
        <childnode refid="9086" relation="include">
        </childnode>
        <childnode refid="9087" relation="include">
        </childnode>
        <childnode refid="9088" relation="include">
        </childnode>
        <childnode refid="9089" relation="include">
        </childnode>
        <childnode refid="9090" relation="include">
        </childnode>
        <childnode refid="9091" relation="include">
        </childnode>
        <childnode refid="9092" relation="include">
        </childnode>
        <childnode refid="9093" relation="include">
        </childnode>
        <childnode refid="9094" relation="include">
        </childnode>
        <childnode refid="9095" relation="include">
        </childnode>
        <childnode refid="9096" relation="include">
        </childnode>
        <childnode refid="9097" relation="include">
        </childnode>
        <childnode refid="9098" relation="include">
        </childnode>
        <childnode refid="9099" relation="include">
        </childnode>
        <childnode refid="9100" relation="include">
        </childnode>
        <childnode refid="9101" relation="include">
        </childnode>
        <childnode refid="9102" relation="include">
        </childnode>
        <childnode refid="9103" relation="include">
        </childnode>
        <childnode refid="9104" relation="include">
        </childnode>
        <childnode refid="9108" relation="include">
        </childnode>
        <childnode refid="9109" relation="include">
        </childnode>
        <childnode refid="9110" relation="include">
        </childnode>
        <childnode refid="9111" relation="include">
        </childnode>
        <childnode refid="9112" relation="include">
        </childnode>
        <childnode refid="9113" relation="include">
        </childnode>
        <childnode refid="9114" relation="include">
        </childnode>
        <childnode refid="9120" relation="include">
        </childnode>
        <childnode refid="9121" relation="include">
        </childnode>
        <childnode refid="9118" relation="include">
        </childnode>
        <childnode refid="9122" relation="include">
        </childnode>
        <childnode refid="9125" relation="include">
        </childnode>
        <childnode refid="9127" relation="include">
        </childnode>
        <childnode refid="9128" relation="include">
        </childnode>
        <childnode refid="9137" relation="include">
        </childnode>
        <childnode refid="9138" relation="include">
        </childnode>
      </node>
      <node id="9088">
        <label>cstdio</label>
      </node>
      <node id="9092">
        <label>tuple</label>
      </node>
      <node id="9097">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="9114">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="9097" relation="include">
        </childnode>
        <childnode refid="9098" relation="include">
        </childnode>
        <childnode refid="9099" relation="include">
        </childnode>
        <childnode refid="9101" relation="include">
        </childnode>
        <childnode refid="9115" relation="include">
        </childnode>
        <childnode refid="9116" relation="include">
        </childnode>
        <childnode refid="9117" relation="include">
        </childnode>
        <childnode refid="9118" relation="include">
        </childnode>
      </node>
      <node id="9093">
        <label>utility</label>
      </node>
      <node id="9117">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="9108">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="9105">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="9106" relation="include">
        </childnode>
      </node>
      <node id="9128">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="9129" relation="include">
        </childnode>
        <childnode refid="9130" relation="include">
        </childnode>
        <childnode refid="9131" relation="include">
        </childnode>
        <childnode refid="9132" relation="include">
        </childnode>
        <childnode refid="9133" relation="include">
        </childnode>
        <childnode refid="9134" relation="include">
        </childnode>
        <childnode refid="9135" relation="include">
        </childnode>
        <childnode refid="9136" relation="include">
        </childnode>
      </node>
      <node id="9106">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="9120">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="9118" relation="include">
        </childnode>
        <childnode refid="9114" relation="include">
        </childnode>
        <childnode refid="9121" relation="include">
        </childnode>
      </node>
      <node id="9089">
        <label>cstdlib</label>
      </node>
      <node id="9084">
        <label>cctype</label>
      </node>
      <node id="9107">
        <label>unordered_map</label>
      </node>
      <node id="9086">
        <label>climits</label>
      </node>
      <node id="9134">
        <label>mutex</label>
      </node>
      <node id="9130">
        <label>chrono</label>
      </node>
      <node id="9138">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="9136">
        <label>thread</label>
      </node>
      <node id="9124">
        <label>type_traits</label>
      </node>
      <node id="9100">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="9094">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="9118">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="9096" relation="include">
        </childnode>
        <childnode refid="9097" relation="include">
        </childnode>
        <childnode refid="9098" relation="include">
        </childnode>
        <childnode refid="9099" relation="include">
        </childnode>
        <childnode refid="9119" relation="include">
        </childnode>
      </node>
      <node id="9090">
        <label>cstring</label>
      </node>
      <node id="9109">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="9098">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="9139">
        <label>/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/standard_scaler.hpp</label>
        <link refid="standard__scaler_8hpp"/>
        <childnode refid="9140" relation="include">
        </childnode>
      </node>
      <node id="9140">
        <label>/home/aakash/mlpack/src/mlpack/methods/preprocess/scaling_model.hpp</label>
        <link refid="scaling__model_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1data_1_1StandardScaler" prot="public">mlpack::data::StandardScaler</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1data">mlpack::data</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Jeffin Sam</para></simplesect>
StandardScaler class to scale features.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_DATA_STANDARD_SCALE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_DATA_STANDARD_SCALE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">data<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classmlpack_1_1data_1_1StandardScaler" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1data_1_1StandardScaler" kindref="compound">StandardScaler</ref></highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="56" refid="classmlpack_1_1data_1_1StandardScaler_1a0b68c1a39a21e56e10f5b9250b056244" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1StandardScaler_1a0b68c1a39a21e56e10f5b9250b056244" kindref="member">Fit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>input)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>itemMean<sp/>=<sp/>arma::mean(input,<sp/>1);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>itemStdDev<sp/>=<sp/>arma::stddev(input,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>zeros<sp/>in<sp/>scale<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>itemStdDev.for_each([](arma::vec::elem_type&amp;<sp/>val)<sp/>{<sp/>val<sp/>=</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(val<sp/>==<sp/>0)<sp/>?<sp/>1<sp/>:<sp/>val;<sp/>});</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="72" refid="classmlpack_1_1data_1_1StandardScaler_1a7bc470a1e097f5b0aaf2396691432b3f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1StandardScaler_1a7bc470a1e097f5b0aaf2396691432b3f" kindref="member">Transform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>input,<sp/>MatType&amp;<sp/>output)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itemMean.is_empty()<sp/>||<sp/>itemStdDev.is_empty())</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Call<sp/>Fit()<sp/>before<sp/>Transform(),<sp/>please&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>refer<sp/>to<sp/>the<sp/>documentation.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>output.copy_size(input);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>(input.each_col()<sp/>-<sp/>itemMean).each_col()<sp/>/<sp/>itemStdDev;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="90" refid="classmlpack_1_1data_1_1StandardScaler_1afb0e67c6fbf5a527f63469bbbf07066c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1StandardScaler_1afb0e67c6fbf5a527f63469bbbf07066c" kindref="member">InverseTransform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>input,<sp/>MatType&amp;<sp/>output)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>output.copy_size(input);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>(input.each_col()<sp/>%<sp/>itemStdDev).each_col()<sp/>+<sp/>itemMean;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classmlpack_1_1data_1_1StandardScaler_1a95996a797e721bc9acc0c9a5d697fdcf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/><ref refid="classmlpack_1_1data_1_1StandardScaler_1a95996a797e721bc9acc0c9a5d697fdcf" kindref="member">ItemMean</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itemMean;<sp/>}</highlight></codeline>
<codeline lineno="99" refid="classmlpack_1_1data_1_1StandardScaler_1ae87a954fbaec076dbe0ca5c0f286ba09" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/><ref refid="classmlpack_1_1data_1_1StandardScaler_1ae87a954fbaec076dbe0ca5c0f286ba09" kindref="member">ItemStdDev</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itemStdDev;<sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="102" refid="classmlpack_1_1data_1_1StandardScaler_1a65cba07328997659bec80b9879b15a51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1StandardScaler_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(itemMean));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(itemStdDev));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Vector<sp/>which<sp/>holds<sp/>mean<sp/>of<sp/>each<sp/>feature.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>arma::vec<sp/>itemMean;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Vector<sp/>which<sp/>holds<sp/>standard<sp/>devation<sp/>of<sp/>each<sp/>feature.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>arma::vec<sp/>itemStdDev;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>StandardScaler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/standard_scaler.hpp"/>
  </compounddef>
</doxygen>
