<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1tree_1_1BinaryNumericSplit" kind="class" language="C++" prot="public">
    <compoundname>mlpack::tree::BinaryNumericSplit</compoundname>
    <includes refid="binary__numeric__split_8hpp" local="no">binary_numeric_split.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename FitnessFunction</type>
      </param>
      <param>
        <type>typename ObservationType</type>
        <defval>double</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmlpack_1_1tree_1_1BinaryNumericSplit_1aef8eaa3db891d05ca25d008e036b316f" prot="public" static="no">
        <type><ref refid="classmlpack_1_1tree_1_1BinaryNumericSplitInfo" kindref="compound">BinaryNumericSplitInfo</ref>&lt; ObservationType &gt;</type>
        <definition>typedef BinaryNumericSplitInfo&lt;ObservationType&gt; SplitInfo</definition>
        <argsstring></argsstring>
        <name>SplitInfo</name>
        <briefdescription>
<para>The splitting information required by the <ref refid="classmlpack_1_1tree_1_1BinaryNumericSplit" kindref="compound">BinaryNumericSplit</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp" line="51" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1BinaryNumericSplit_1a972ac133b507ec0561259b88cc66ebb7" prot="private" static="no" mutable="no">
        <type>ObservationType</type>
        <definition>ObservationType bestSplit</definition>
        <argsstring></argsstring>
        <name>bestSplit</name>
        <briefdescription>
<para>A cached best split point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp" line="120" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1BinaryNumericSplit_1a613bcba7892e1a1034529b1c6e0e7a54" prot="private" static="no" mutable="no">
        <type>arma::Col&lt; size_t &gt;</type>
        <definition>arma::Col&lt;size_t&gt; classCounts</definition>
        <argsstring></argsstring>
        <name>classCounts</name>
        <briefdescription>
<para>The classes we have seen so far (for majority calculations). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp" line="117" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1BinaryNumericSplit_1aeaedd66b76acf91222c4caeb988401da" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool isAccurate</definition>
        <argsstring></argsstring>
        <name>isAccurate</name>
        <briefdescription>
<para>If true, the cached best split point is accurate (that is, we have not seen any more samples since we calculated it). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp" line="123" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1BinaryNumericSplit_1a524469f35d32959c252081aa98be9883" prot="private" static="no" mutable="no">
        <type>std::multimap&lt; ObservationType, size_t &gt;</type>
        <definition>std::multimap&lt;ObservationType, size_t&gt; sortedElements</definition>
        <argsstring></argsstring>
        <name>sortedElements</name>
        <briefdescription>
<para>The elements seen so far, in sorted order. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp" line="115" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1BinaryNumericSplit_1a29e8da5da497548c3aea17d8ec3b48f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BinaryNumericSplit</definition>
        <argsstring>(const size_t numClasses=0)</argsstring>
        <name>BinaryNumericSplit</name>
        <param>
          <type>const size_t</type>
          <declname>numClasses</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Create the <ref refid="classmlpack_1_1tree_1_1BinaryNumericSplit" kindref="compound">BinaryNumericSplit</ref> object with the given number of classes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numClasses</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of classes in dataset. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1BinaryNumericSplit_1ab1c109310ed5928ebc08b4e121ddda30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BinaryNumericSplit</definition>
        <argsstring>(const size_t numClasses, const BinaryNumericSplit &amp;other)</argsstring>
        <name>BinaryNumericSplit</name>
        <param>
          <type>const size_t</type>
          <declname>numClasses</declname>
        </param>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1BinaryNumericSplit" kindref="compound">BinaryNumericSplit</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Create the <ref refid="classmlpack_1_1tree_1_1BinaryNumericSplit" kindref="compound">BinaryNumericSplit</ref> object with the given number of classes, using information from the given other split for other parameters. </para>        </briefdescription>
        <detaileddescription>
<para>In this case, there are no other parameters, but this function is required by the <ref refid="classmlpack_1_1tree_1_1HoeffdingTree" kindref="compound">HoeffdingTree</ref> class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1BinaryNumericSplit_1afe419c8ff831af9ea91047e3de487609" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EvaluateFitnessFunction</definition>
        <argsstring>(double &amp;bestFitness, double &amp;secondBestFitness)</argsstring>
        <name>EvaluateFitnessFunction</name>
        <param>
          <type>double &amp;</type>
          <declname>bestFitness</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>secondBestFitness</declname>
        </param>
        <briefdescription>
<para>Given the points seen so far, evaluate the fitness function, returning the best possible gain of a binary split. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this takes O(n) time, where n is the number of points seen so far. So this may not exactly be fast...</para><para>The best possible split will be stored in bestFitness, and the second best possible split will be stored in secondBestFitness.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bestFitness</parametername>
</parameternamelist>
<parameterdescription>
<para>Fitness function value for best possible split. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>secondBestFitness</parametername>
</parameternamelist>
<parameterdescription>
<para>Fitness function value for second best possible split. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1BinaryNumericSplit_1a2fbf818eb68075c92655a22904b7ee1a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t MajorityClass</definition>
        <argsstring>() const</argsstring>
        <name>MajorityClass</name>
        <briefdescription>
<para>The majority class of the points seen so far. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp" line="105" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1a1f7ec083be66d58a3e02e12956bf005e" compoundref="binary__numeric__split_8hpp" startline="93" endline="93">BinaryNumericSplit&lt; FitnessFunction, ObservationType &gt;::NumChildren</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1BinaryNumericSplit_1a68e5f5a4d8c6194482a83440619be83b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double MajorityProbability</definition>
        <argsstring>() const</argsstring>
        <name>MajorityProbability</name>
        <briefdescription>
<para>The probability of the majority class given the points seen so far. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp" line="107" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1a1f7ec083be66d58a3e02e12956bf005e" compoundref="binary__numeric__split_8hpp" startline="93" endline="93">BinaryNumericSplit&lt; FitnessFunction, ObservationType &gt;::NumChildren</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1BinaryNumericSplit_1a1f7ec083be66d58a3e02e12956bf005e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t NumChildren</definition>
        <argsstring>() const</argsstring>
        <name>NumChildren</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp" line="93" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp" bodystart="93" bodyend="93"/>
        <references refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1a2fbf818eb68075c92655a22904b7ee1a">BinaryNumericSplit&lt; FitnessFunction, ObservationType &gt;::MajorityClass</references>
        <references refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1a68e5f5a4d8c6194482a83440619be83b">BinaryNumericSplit&lt; FitnessFunction, ObservationType &gt;::MajorityProbability</references>
        <references refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1a65cba07328997659bec80b9879b15a51">BinaryNumericSplit&lt; FitnessFunction, ObservationType &gt;::serialize</references>
        <references refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1a12faa9838c740b8383130fee17c108b6">BinaryNumericSplit&lt; FitnessFunction, ObservationType &gt;::Split</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1BinaryNumericSplit_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp" line="111" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1a1f7ec083be66d58a3e02e12956bf005e" compoundref="binary__numeric__split_8hpp" startline="93" endline="93">BinaryNumericSplit&lt; FitnessFunction, ObservationType &gt;::NumChildren</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1BinaryNumericSplit_1a12faa9838c740b8383130fee17c108b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Split</definition>
        <argsstring>(arma::Col&lt; size_t &gt; &amp;childMajorities, SplitInfo &amp;splitInfo)</argsstring>
        <name>Split</name>
        <param>
          <type>arma::Col&lt; size_t &gt; &amp;</type>
          <declname>childMajorities</declname>
        </param>
        <param>
          <type><ref refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1aef8eaa3db891d05ca25d008e036b316f" kindref="member">SplitInfo</ref> &amp;</type>
          <declname>splitInfo</declname>
        </param>
        <briefdescription>
<para>Given that a split should happen, return the majority classes of the (two) children and an initialized SplitInfo object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>childMajorities</parametername>
</parameternamelist>
<parameterdescription>
<para>Majority classes of the children after the split. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>splitInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>Split information. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp" line="102" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1a1f7ec083be66d58a3e02e12956bf005e" compoundref="binary__numeric__split_8hpp" startline="93" endline="93">BinaryNumericSplit&lt; FitnessFunction, ObservationType &gt;::NumChildren</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1BinaryNumericSplit_1a4c204ab8547c9493c8c3cca15131e9c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Train</definition>
        <argsstring>(ObservationType value, const size_t label)</argsstring>
        <name>Train</name>
        <param>
          <type>ObservationType</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>label</declname>
        </param>
        <briefdescription>
<para>Train on the given value with the given label. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to train on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>label</parametername>
</parameternamelist>
<parameterdescription>
<para>The label to train on. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp" line="74" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classmlpack_1_1tree_1_1BinaryNumericSplit" kindref="compound">BinaryNumericSplit</ref> class implements the numeric feature splitting strategy devised by Gama, Rocha, and Medas in the following paper: </para>    </briefdescription>
    <detaileddescription>
<para><programlisting><codeline><highlight class="normal">@inproceedings{gama2003accurate,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>title={Accurate<sp/>Decision<sp/>Trees<sp/>for<sp/>Mining<sp/>High-Speed<sp/>Data<sp/>Streams},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>author={Gama,<sp/>J.<sp/>and<sp/>Rocha,<sp/>R.<sp/>and<sp/>Medas,<sp/>P.},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>year={2003},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>booktitle={Proceedings<sp/>of<sp/>the<sp/>Ninth<sp/>ACM<sp/>SIGKDD<sp/>International<sp/>Conference<sp/>on</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Knowledge<sp/>Discovery<sp/>and<sp/>Data<sp/>Mining<sp/>(KDD<sp/>&apos;03)},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>pages={523--528}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para>This splitting procedure builds a binary tree on points it has seen so far, and then <ref refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1afe419c8ff831af9ea91047e3de487609" kindref="member">EvaluateFitnessFunction()</ref> returns the best possible split in O(n) time, where n is the number of samples seen so far. Every split with this split type returns only two splits (greater than or equal to the split point, and less than the split point). The <ref refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1a4c204ab8547c9493c8c3cca15131e9c5" kindref="member">Train()</ref> function should take O(1) time.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>FitnessFunction</parametername>
</parameternamelist>
<parameterdescription>
<para>Fitness function to use for calculating gain. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ObservationType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of observation used by this dimension. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp" line="48" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp" bodystart="47" bodyend="124"/>
    <listofallmembers>
      <member refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1a972ac133b507ec0561259b88cc66ebb7" prot="private" virt="non-virtual"><scope>mlpack::tree::BinaryNumericSplit</scope><name>bestSplit</name></member>
      <member refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1a29e8da5da497548c3aea17d8ec3b48f9" prot="public" virt="non-virtual"><scope>mlpack::tree::BinaryNumericSplit</scope><name>BinaryNumericSplit</name></member>
      <member refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1ab1c109310ed5928ebc08b4e121ddda30" prot="public" virt="non-virtual"><scope>mlpack::tree::BinaryNumericSplit</scope><name>BinaryNumericSplit</name></member>
      <member refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1a613bcba7892e1a1034529b1c6e0e7a54" prot="private" virt="non-virtual"><scope>mlpack::tree::BinaryNumericSplit</scope><name>classCounts</name></member>
      <member refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1afe419c8ff831af9ea91047e3de487609" prot="public" virt="non-virtual"><scope>mlpack::tree::BinaryNumericSplit</scope><name>EvaluateFitnessFunction</name></member>
      <member refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1aeaedd66b76acf91222c4caeb988401da" prot="private" virt="non-virtual"><scope>mlpack::tree::BinaryNumericSplit</scope><name>isAccurate</name></member>
      <member refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1a2fbf818eb68075c92655a22904b7ee1a" prot="public" virt="non-virtual"><scope>mlpack::tree::BinaryNumericSplit</scope><name>MajorityClass</name></member>
      <member refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1a68e5f5a4d8c6194482a83440619be83b" prot="public" virt="non-virtual"><scope>mlpack::tree::BinaryNumericSplit</scope><name>MajorityProbability</name></member>
      <member refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1a1f7ec083be66d58a3e02e12956bf005e" prot="public" virt="non-virtual"><scope>mlpack::tree::BinaryNumericSplit</scope><name>NumChildren</name></member>
      <member refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::tree::BinaryNumericSplit</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1a524469f35d32959c252081aa98be9883" prot="private" virt="non-virtual"><scope>mlpack::tree::BinaryNumericSplit</scope><name>sortedElements</name></member>
      <member refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1a12faa9838c740b8383130fee17c108b6" prot="public" virt="non-virtual"><scope>mlpack::tree::BinaryNumericSplit</scope><name>Split</name></member>
      <member refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1aef8eaa3db891d05ca25d008e036b316f" prot="public" virt="non-virtual"><scope>mlpack::tree::BinaryNumericSplit</scope><name>SplitInfo</name></member>
      <member refid="classmlpack_1_1tree_1_1BinaryNumericSplit_1a4c204ab8547c9493c8c3cca15131e9c5" prot="public" virt="non-virtual"><scope>mlpack::tree::BinaryNumericSplit</scope><name>Train</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
