<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="svd__wrapper_8hpp" kind="file" language="C++">
    <compoundname>svd_wrapper.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="yes">svd_wrapper_impl.hpp</includes>
    <incdepgraph>
      <node id="47806">
        <label>list</label>
      </node>
      <node id="47803">
        <label>atomic</label>
      </node>
      <node id="47793">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="47769">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="47805">
        <label>iomanip</label>
      </node>
      <node id="47778">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="47779" relation="include">
        </childnode>
        <childnode refid="47781" relation="include">
        </childnode>
      </node>
      <node id="47761">
        <label>cstdint</label>
      </node>
      <node id="47770">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="47777">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="47800">
        <label>arma_config.hpp</label>
      </node>
      <node id="47790">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="47757">
        <label>cmath</label>
      </node>
      <node id="47776">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="47765">
        <label>stdexcept</label>
      </node>
      <node id="47785">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="47770" relation="include">
        </childnode>
        <childnode refid="47772" relation="include">
        </childnode>
        <childnode refid="47773" relation="include">
        </childnode>
        <childnode refid="47771" relation="include">
        </childnode>
      </node>
      <node id="47809">
        <label>string</label>
      </node>
      <node id="47797">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="47798" relation="include">
        </childnode>
        <childnode refid="47764" relation="include">
        </childnode>
      </node>
      <node id="47807">
        <label>map</label>
      </node>
      <node id="47759">
        <label>cfloat</label>
      </node>
      <node id="47789">
        <label>boost/variant.hpp</label>
      </node>
      <node id="47811">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="47773">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="47796">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="47797" relation="include">
        </childnode>
        <childnode refid="47773" relation="include">
        </childnode>
        <childnode refid="47780" relation="include">
        </childnode>
        <childnode refid="47798" relation="include">
        </childnode>
      </node>
      <node id="47786">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="47755">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/svd_wrapper.hpp</label>
        <link refid="svd__wrapper_8hpp"/>
        <childnode refid="47756" relation="include">
        </childnode>
        <childnode refid="47813" relation="include">
        </childnode>
      </node>
      <node id="47784">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="47770" relation="include">
        </childnode>
        <childnode refid="47772" relation="include">
        </childnode>
        <childnode refid="47773" relation="include">
        </childnode>
        <childnode refid="47771" relation="include">
        </childnode>
      </node>
      <node id="47787">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="47770" relation="include">
        </childnode>
        <childnode refid="47772" relation="include">
        </childnode>
        <childnode refid="47773" relation="include">
        </childnode>
        <childnode refid="47771" relation="include">
        </childnode>
      </node>
      <node id="47775">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="47795">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="47771" relation="include">
        </childnode>
        <childnode refid="47772" relation="include">
        </childnode>
        <childnode refid="47773" relation="include">
        </childnode>
        <childnode refid="47783" relation="include">
        </childnode>
        <childnode refid="47792" relation="include">
        </childnode>
      </node>
      <node id="47799">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="47800" relation="include">
        </childnode>
      </node>
      <node id="47801">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="47756">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="47757" relation="include">
        </childnode>
        <childnode refid="47758" relation="include">
        </childnode>
        <childnode refid="47759" relation="include">
        </childnode>
        <childnode refid="47760" relation="include">
        </childnode>
        <childnode refid="47761" relation="include">
        </childnode>
        <childnode refid="47762" relation="include">
        </childnode>
        <childnode refid="47763" relation="include">
        </childnode>
        <childnode refid="47764" relation="include">
        </childnode>
        <childnode refid="47765" relation="include">
        </childnode>
        <childnode refid="47766" relation="include">
        </childnode>
        <childnode refid="47767" relation="include">
        </childnode>
        <childnode refid="47768" relation="include">
        </childnode>
        <childnode refid="47769" relation="include">
        </childnode>
        <childnode refid="47770" relation="include">
        </childnode>
        <childnode refid="47771" relation="include">
        </childnode>
        <childnode refid="47772" relation="include">
        </childnode>
        <childnode refid="47773" relation="include">
        </childnode>
        <childnode refid="47774" relation="include">
        </childnode>
        <childnode refid="47775" relation="include">
        </childnode>
        <childnode refid="47776" relation="include">
        </childnode>
        <childnode refid="47777" relation="include">
        </childnode>
        <childnode refid="47778" relation="include">
        </childnode>
        <childnode refid="47782" relation="include">
        </childnode>
        <childnode refid="47783" relation="include">
        </childnode>
        <childnode refid="47784" relation="include">
        </childnode>
        <childnode refid="47785" relation="include">
        </childnode>
        <childnode refid="47786" relation="include">
        </childnode>
        <childnode refid="47787" relation="include">
        </childnode>
        <childnode refid="47788" relation="include">
        </childnode>
        <childnode refid="47794" relation="include">
        </childnode>
        <childnode refid="47795" relation="include">
        </childnode>
        <childnode refid="47792" relation="include">
        </childnode>
        <childnode refid="47796" relation="include">
        </childnode>
        <childnode refid="47799" relation="include">
        </childnode>
        <childnode refid="47801" relation="include">
        </childnode>
        <childnode refid="47802" relation="include">
        </childnode>
        <childnode refid="47811" relation="include">
        </childnode>
        <childnode refid="47812" relation="include">
        </childnode>
      </node>
      <node id="47762">
        <label>cstdio</label>
      </node>
      <node id="47766">
        <label>tuple</label>
      </node>
      <node id="47771">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="47788">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="47771" relation="include">
        </childnode>
        <childnode refid="47772" relation="include">
        </childnode>
        <childnode refid="47773" relation="include">
        </childnode>
        <childnode refid="47775" relation="include">
        </childnode>
        <childnode refid="47789" relation="include">
        </childnode>
        <childnode refid="47790" relation="include">
        </childnode>
        <childnode refid="47791" relation="include">
        </childnode>
        <childnode refid="47792" relation="include">
        </childnode>
      </node>
      <node id="47767">
        <label>utility</label>
      </node>
      <node id="47791">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="47782">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="47779">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="47780" relation="include">
        </childnode>
      </node>
      <node id="47802">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="47803" relation="include">
        </childnode>
        <childnode refid="47804" relation="include">
        </childnode>
        <childnode refid="47805" relation="include">
        </childnode>
        <childnode refid="47806" relation="include">
        </childnode>
        <childnode refid="47807" relation="include">
        </childnode>
        <childnode refid="47808" relation="include">
        </childnode>
        <childnode refid="47809" relation="include">
        </childnode>
        <childnode refid="47810" relation="include">
        </childnode>
      </node>
      <node id="47780">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="47794">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="47792" relation="include">
        </childnode>
        <childnode refid="47788" relation="include">
        </childnode>
        <childnode refid="47795" relation="include">
        </childnode>
      </node>
      <node id="47763">
        <label>cstdlib</label>
      </node>
      <node id="47758">
        <label>cctype</label>
      </node>
      <node id="47813">
        <label>svd_wrapper_impl.hpp</label>
      </node>
      <node id="47781">
        <label>unordered_map</label>
      </node>
      <node id="47760">
        <label>climits</label>
      </node>
      <node id="47808">
        <label>mutex</label>
      </node>
      <node id="47804">
        <label>chrono</label>
      </node>
      <node id="47812">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="47810">
        <label>thread</label>
      </node>
      <node id="47798">
        <label>type_traits</label>
      </node>
      <node id="47774">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="47768">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="47792">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="47770" relation="include">
        </childnode>
        <childnode refid="47771" relation="include">
        </childnode>
        <childnode refid="47772" relation="include">
        </childnode>
        <childnode refid="47773" relation="include">
        </childnode>
        <childnode refid="47793" relation="include">
        </childnode>
      </node>
      <node id="47764">
        <label>cstring</label>
      </node>
      <node id="47783">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="47772">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1cf_1_1DummyClass" prot="public">mlpack::cf::DummyClass</innerclass>
    <innerclass refid="classmlpack_1_1cf_1_1SVDWrapper" prot="public">mlpack::cf::SVDWrapper</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1cf">mlpack::cf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Sumedh Ghaisas</para></simplesect>
Wrapper class for SVD factorizers used for Collaborative Filtering.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_SVDWRAPPER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_SVDWRAPPER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cf</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classmlpack_1_1cf_1_1DummyClass" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1cf_1_1DummyClass" kindref="compound">DummyClass</ref><sp/>{};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Factorizer<sp/>=<sp/>DummyClass&gt;</highlight></codeline>
<codeline lineno="40" refid="classmlpack_1_1cf_1_1SVDWrapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1cf_1_1SVDWrapper" kindref="compound">SVDWrapper</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>empty<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classmlpack_1_1cf_1_1SVDWrapper_1a062f6d1d0cbae52c35ee6cdc7c0e12e2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1cf_1_1SVDWrapper_1a062f6d1d0cbae52c35ee6cdc7c0e12e2" kindref="member">SVDWrapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Factorizer&amp;<sp/>factorizer<sp/>=<sp/>Factorizer())<sp/>:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>factorizer(factorizer)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>to<sp/>do<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Apply(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>V,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>W,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>sigma,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>H)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Apply(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>V,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>W,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>H)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>Factorizer<sp/>factorizer;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>SVDWrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="namespacemlpack_1_1cf_1ac51532acca405aa7f171aca756d776f2" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1SVDWrapper" kindref="compound">SVDWrapper&lt;DummyClass&gt;</ref><sp/><ref refid="namespacemlpack_1_1cf_1ac51532acca405aa7f171aca756d776f2" kindref="member">ArmaSVDFactorizer</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor">#include<sp/>&quot;svd_wrapper_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/cf/svd_wrapper.hpp"/>
  </compounddef>
</doxygen>
