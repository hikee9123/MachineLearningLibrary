<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="regularized__svd__method_8hpp" kind="file" language="C++">
    <compoundname>regularized_svd_method.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="regularized__svd_8hpp" local="no">mlpack/methods/regularized_svd/regularized_svd.hpp</includes>
    <incdepgraph>
      <node id="46448">
        <label>list</label>
      </node>
      <node id="46504">
        <label>breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="46496">
        <label>binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46493" relation="include">
        </childnode>
        <childnode refid="46497" relation="include">
        </childnode>
      </node>
      <node id="46506">
        <label>binary_space_tree/traits.hpp</label>
        <link refid="binary__space__tree_2traits_8hpp"/>
        <childnode refid="46507" relation="include">
        </childnode>
        <childnode refid="46468" relation="include">
        </childnode>
      </node>
      <node id="46445">
        <label>atomic</label>
      </node>
      <node id="46435">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="46411">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="46447">
        <label>iomanip</label>
      </node>
      <node id="46503">
        <label>queue</label>
      </node>
      <node id="46517">
        <label>typedef.hpp</label>
        <link refid="methods_2neighbor__search_2typedef_8hpp"/>
        <childnode refid="46458" relation="include">
        </childnode>
        <childnode refid="46463" relation="include">
        </childnode>
        <childnode refid="46511" relation="include">
        </childnode>
        <childnode refid="46518" relation="include">
        </childnode>
      </node>
      <node id="46513">
        <label>neighbor_search_rules.hpp</label>
        <link refid="neighbor__search__rules_8hpp"/>
        <childnode refid="46514" relation="include">
        </childnode>
        <childnode refid="46503" relation="include">
        </childnode>
        <childnode refid="46515" relation="include">
        </childnode>
      </node>
      <node id="46465">
        <label>bound_traits.hpp</label>
        <link refid="bound__traits_8hpp"/>
      </node>
      <node id="46478">
        <label>binary_space_tree/mean_split.hpp</label>
        <link refid="mean__split_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46476" relation="include">
        </childnode>
        <childnode refid="46479" relation="include">
        </childnode>
      </node>
      <node id="46464">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="46509">
        <label>mlpack/core/tree/rectangle_tree.hpp</label>
      </node>
      <node id="46520">
        <label>mlpack/methods/amf/amf.hpp</label>
        <link refid="amf_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46521" relation="include">
        </childnode>
        <childnode refid="46522" relation="include">
        </childnode>
        <childnode refid="46523" relation="include">
        </childnode>
        <childnode refid="46524" relation="include">
        </childnode>
        <childnode refid="46525" relation="include">
        </childnode>
        <childnode refid="46526" relation="include">
        </childnode>
        <childnode refid="46527" relation="include">
        </childnode>
        <childnode refid="46528" relation="include">
        </childnode>
        <childnode refid="46529" relation="include">
        </childnode>
        <childnode refid="46530" relation="include">
        </childnode>
      </node>
      <node id="46420">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="46421" relation="include">
        </childnode>
        <childnode refid="46423" relation="include">
        </childnode>
      </node>
      <node id="46403">
        <label>cstdint</label>
      </node>
      <node id="46412">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="46419">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="46505">
        <label>binary_space_tree/breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="46512">
        <label>nearest_neighbor_sort_impl.hpp</label>
      </node>
      <node id="46397">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp</label>
        <link refid="regularized__svd__method_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46455" relation="include">
        </childnode>
      </node>
      <node id="46482">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="46479">
        <label>mean_split_impl.hpp</label>
      </node>
      <node id="46442">
        <label>arma_config.hpp</label>
      </node>
      <node id="46470">
        <label>hollow_ball_bound.hpp</label>
        <link refid="hollow__ball__bound_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46463" relation="include">
        </childnode>
        <childnode refid="46465" relation="include">
        </childnode>
        <childnode refid="46471" relation="include">
        </childnode>
      </node>
      <node id="46494">
        <label>../statistic.hpp</label>
        <link refid="statistic_8hpp"/>
      </node>
      <node id="46540">
        <label>regularized_svd_function_impl.hpp</label>
      </node>
      <node id="46510">
        <label>neighbor_search_stat.hpp</label>
        <link refid="neighbor__search__stat_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
      </node>
      <node id="46489">
        <label>lin_alg_impl.hpp</label>
      </node>
      <node id="46539">
        <label>regularized_svd_function.hpp</label>
        <link refid="regularized__svd__function_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46456" relation="include">
        </childnode>
        <childnode refid="46540" relation="include">
        </childnode>
      </node>
      <node id="46432">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="46399">
        <label>cmath</label>
      </node>
      <node id="46461">
        <label>bounds.hpp</label>
        <link refid="bounds_8hpp"/>
        <childnode refid="46462" relation="include">
        </childnode>
        <childnode refid="46463" relation="include">
        </childnode>
        <childnode refid="46465" relation="include">
        </childnode>
        <childnode refid="46466" relation="include">
        </childnode>
        <childnode refid="46468" relation="include">
        </childnode>
        <childnode refid="46470" relation="include">
        </childnode>
        <childnode refid="46472" relation="include">
        </childnode>
      </node>
      <node id="46418">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="46407">
        <label>stdexcept</label>
      </node>
      <node id="46499">
        <label>binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46493" relation="include">
        </childnode>
        <childnode refid="46500" relation="include">
        </childnode>
      </node>
      <node id="46427">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="46412" relation="include">
        </childnode>
        <childnode refid="46414" relation="include">
        </childnode>
        <childnode refid="46415" relation="include">
        </childnode>
        <childnode refid="46413" relation="include">
        </childnode>
      </node>
      <node id="46462">
        <label>mlpack/core/math/range.hpp</label>
      </node>
      <node id="46451">
        <label>string</label>
      </node>
      <node id="46485">
        <label>binary_space_tree/rp_tree_max_split.hpp</label>
        <link refid="rp__tree__max__split_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46476" relation="include">
        </childnode>
        <childnode refid="46486" relation="include">
        </childnode>
      </node>
      <node id="46477">
        <label>midpoint_split_impl.hpp</label>
      </node>
      <node id="46439">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="46440" relation="include">
        </childnode>
        <childnode refid="46406" relation="include">
        </childnode>
      </node>
      <node id="46457">
        <label>mlpack/methods/cf/cf.hpp</label>
        <link refid="cf_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46458" relation="include">
        </childnode>
        <childnode refid="46520" relation="include">
        </childnode>
        <childnode refid="46522" relation="include">
        </childnode>
        <childnode refid="46528" relation="include">
        </childnode>
        <childnode refid="46531" relation="include">
        </childnode>
        <childnode refid="46532" relation="include">
        </childnode>
        <childnode refid="46534" relation="include">
        </childnode>
        <childnode refid="46535" relation="include">
        </childnode>
        <childnode refid="46536" relation="include">
        </childnode>
        <childnode refid="46449" relation="include">
        </childnode>
        <childnode refid="46537" relation="include">
        </childnode>
        <childnode refid="46538" relation="include">
        </childnode>
      </node>
      <node id="46449">
        <label>map</label>
      </node>
      <node id="46500">
        <label>dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="46488">
        <label>mlpack/core/math/lin_alg.hpp</label>
        <link refid="lin__alg_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46489" relation="include">
        </childnode>
      </node>
      <node id="46401">
        <label>cfloat</label>
      </node>
      <node id="46531">
        <label>mlpack/methods/cf/normalization/no_normalization.hpp</label>
        <link refid="no__normalization_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
      </node>
      <node id="46431">
        <label>boost/variant.hpp</label>
      </node>
      <node id="46453">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="46415">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="46438">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="46439" relation="include">
        </childnode>
        <childnode refid="46415" relation="include">
        </childnode>
        <childnode refid="46422" relation="include">
        </childnode>
        <childnode refid="46440" relation="include">
        </childnode>
      </node>
      <node id="46428">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="46426">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="46412" relation="include">
        </childnode>
        <childnode refid="46414" relation="include">
        </childnode>
        <childnode refid="46415" relation="include">
        </childnode>
        <childnode refid="46413" relation="include">
        </childnode>
      </node>
      <node id="46429">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="46412" relation="include">
        </childnode>
        <childnode refid="46414" relation="include">
        </childnode>
        <childnode refid="46415" relation="include">
        </childnode>
        <childnode refid="46413" relation="include">
        </childnode>
      </node>
      <node id="46495">
        <label>binary_space_tree_impl.hpp</label>
      </node>
      <node id="46417">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="46530">
        <label>amf_impl.hpp</label>
      </node>
      <node id="46437">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="46413" relation="include">
        </childnode>
        <childnode refid="46414" relation="include">
        </childnode>
        <childnode refid="46415" relation="include">
        </childnode>
        <childnode refid="46425" relation="include">
        </childnode>
        <childnode refid="46434" relation="include">
        </childnode>
      </node>
      <node id="46441">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="46442" relation="include">
        </childnode>
      </node>
      <node id="46501">
        <label>binary_space_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="46515">
        <label>neighbor_search_rules_impl.hpp</label>
      </node>
      <node id="46443">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="46398">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="46399" relation="include">
        </childnode>
        <childnode refid="46400" relation="include">
        </childnode>
        <childnode refid="46401" relation="include">
        </childnode>
        <childnode refid="46402" relation="include">
        </childnode>
        <childnode refid="46403" relation="include">
        </childnode>
        <childnode refid="46404" relation="include">
        </childnode>
        <childnode refid="46405" relation="include">
        </childnode>
        <childnode refid="46406" relation="include">
        </childnode>
        <childnode refid="46407" relation="include">
        </childnode>
        <childnode refid="46408" relation="include">
        </childnode>
        <childnode refid="46409" relation="include">
        </childnode>
        <childnode refid="46410" relation="include">
        </childnode>
        <childnode refid="46411" relation="include">
        </childnode>
        <childnode refid="46412" relation="include">
        </childnode>
        <childnode refid="46413" relation="include">
        </childnode>
        <childnode refid="46414" relation="include">
        </childnode>
        <childnode refid="46415" relation="include">
        </childnode>
        <childnode refid="46416" relation="include">
        </childnode>
        <childnode refid="46417" relation="include">
        </childnode>
        <childnode refid="46418" relation="include">
        </childnode>
        <childnode refid="46419" relation="include">
        </childnode>
        <childnode refid="46420" relation="include">
        </childnode>
        <childnode refid="46424" relation="include">
        </childnode>
        <childnode refid="46425" relation="include">
        </childnode>
        <childnode refid="46426" relation="include">
        </childnode>
        <childnode refid="46427" relation="include">
        </childnode>
        <childnode refid="46428" relation="include">
        </childnode>
        <childnode refid="46429" relation="include">
        </childnode>
        <childnode refid="46430" relation="include">
        </childnode>
        <childnode refid="46436" relation="include">
        </childnode>
        <childnode refid="46437" relation="include">
        </childnode>
        <childnode refid="46434" relation="include">
        </childnode>
        <childnode refid="46438" relation="include">
        </childnode>
        <childnode refid="46441" relation="include">
        </childnode>
        <childnode refid="46443" relation="include">
        </childnode>
        <childnode refid="46444" relation="include">
        </childnode>
        <childnode refid="46453" relation="include">
        </childnode>
        <childnode refid="46454" relation="include">
        </childnode>
      </node>
      <node id="46497">
        <label>single_tree_traverser_impl.hpp</label>
      </node>
      <node id="46519">
        <label>furthest_neighbor_sort_impl.hpp</label>
      </node>
      <node id="46475">
        <label>binary_space_tree/midpoint_split.hpp</label>
        <link refid="midpoint__split_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46476" relation="include">
        </childnode>
        <childnode refid="46477" relation="include">
        </childnode>
      </node>
      <node id="46483">
        <label>random</label>
      </node>
      <node id="46469">
        <label>ballbound_impl.hpp</label>
      </node>
      <node id="46498">
        <label>binary_space_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="46523">
        <label>mlpack/methods/amf/update_rules/svd_batch_learning.hpp</label>
        <link refid="svd__batch__learning_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
      </node>
      <node id="46404">
        <label>cstdio</label>
      </node>
      <node id="46534">
        <label>mlpack/methods/cf/neighbor_search_policies/lmetric_search.hpp</label>
        <link refid="lmetric__search_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46458" relation="include">
        </childnode>
        <childnode refid="46463" relation="include">
        </childnode>
      </node>
      <node id="46473">
        <label>address.hpp</label>
        <link refid="address_8hpp"/>
      </node>
      <node id="46507">
        <label>mlpack/core/tree/tree_traits.hpp</label>
        <link refid="tree__traits_8hpp"/>
      </node>
      <node id="46521">
        <label>mlpack/methods/amf/update_rules/nmf_mult_dist.hpp</label>
        <link refid="nmf__mult__dist_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
      </node>
      <node id="46408">
        <label>tuple</label>
      </node>
      <node id="46413">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="46491">
        <label>binary_space_tree/ub_tree_split.hpp</label>
        <link refid="ub__tree__split_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46473" relation="include">
        </childnode>
        <childnode refid="46492" relation="include">
        </childnode>
      </node>
      <node id="46430">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="46413" relation="include">
        </childnode>
        <childnode refid="46414" relation="include">
        </childnode>
        <childnode refid="46415" relation="include">
        </childnode>
        <childnode refid="46417" relation="include">
        </childnode>
        <childnode refid="46431" relation="include">
        </childnode>
        <childnode refid="46432" relation="include">
        </childnode>
        <childnode refid="46433" relation="include">
        </childnode>
        <childnode refid="46434" relation="include">
        </childnode>
      </node>
      <node id="46493">
        <label>binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46494" relation="include">
        </childnode>
        <childnode refid="46475" relation="include">
        </childnode>
        <childnode refid="46495" relation="include">
        </childnode>
        <childnode refid="46460" relation="include">
        </childnode>
      </node>
      <node id="46466">
        <label>hrectbound.hpp</label>
        <link refid="hrectbound_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46462" relation="include">
        </childnode>
        <childnode refid="46463" relation="include">
        </childnode>
        <childnode refid="46465" relation="include">
        </childnode>
        <childnode refid="46467" relation="include">
        </childnode>
      </node>
      <node id="46459">
        <label>vector</label>
      </node>
      <node id="46490">
        <label>rp_tree_mean_split_impl.hpp</label>
      </node>
      <node id="46541">
        <label>regularized_svd_impl.hpp</label>
      </node>
      <node id="46481">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46482" relation="include">
        </childnode>
        <childnode refid="46483" relation="include">
        </childnode>
      </node>
      <node id="46529">
        <label>mlpack/methods/amf/termination_policies/simple_tolerance_termination.hpp</label>
        <link refid="simple__tolerance__termination_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
      </node>
      <node id="46409">
        <label>utility</label>
      </node>
      <node id="46433">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="46424">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="46460">
        <label>mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46461" relation="include">
        </childnode>
        <childnode refid="46475" relation="include">
        </childnode>
        <childnode refid="46478" relation="include">
        </childnode>
        <childnode refid="46480" relation="include">
        </childnode>
        <childnode refid="46485" relation="include">
        </childnode>
        <childnode refid="46487" relation="include">
        </childnode>
        <childnode refid="46491" relation="include">
        </childnode>
        <childnode refid="46493" relation="include">
        </childnode>
        <childnode refid="46496" relation="include">
        </childnode>
        <childnode refid="46498" relation="include">
        </childnode>
        <childnode refid="46499" relation="include">
        </childnode>
        <childnode refid="46501" relation="include">
        </childnode>
        <childnode refid="46502" relation="include">
        </childnode>
        <childnode refid="46505" relation="include">
        </childnode>
        <childnode refid="46506" relation="include">
        </childnode>
        <childnode refid="46508" relation="include">
        </childnode>
      </node>
      <node id="46526">
        <label>mlpack/methods/amf/init_rules/random_init.hpp</label>
        <link refid="amf_2init__rules_2random__init_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
      </node>
      <node id="46511">
        <label>sort_policies/nearest_neighbor_sort.hpp</label>
        <link refid="nearest__neighbor__sort_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46512" relation="include">
        </childnode>
      </node>
      <node id="46455">
        <label>mlpack/methods/regularized_svd/regularized_svd.hpp</label>
        <link refid="regularized__svd_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46456" relation="include">
        </childnode>
        <childnode refid="46457" relation="include">
        </childnode>
        <childnode refid="46539" relation="include">
        </childnode>
        <childnode refid="46541" relation="include">
        </childnode>
      </node>
      <node id="46421">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="46422" relation="include">
        </childnode>
      </node>
      <node id="46444">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="46445" relation="include">
        </childnode>
        <childnode refid="46446" relation="include">
        </childnode>
        <childnode refid="46447" relation="include">
        </childnode>
        <childnode refid="46448" relation="include">
        </childnode>
        <childnode refid="46449" relation="include">
        </childnode>
        <childnode refid="46450" relation="include">
        </childnode>
        <childnode refid="46451" relation="include">
        </childnode>
        <childnode refid="46452" relation="include">
        </childnode>
      </node>
      <node id="46422">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="46458">
        <label>mlpack/methods/neighbor_search/neighbor_search.hpp</label>
        <link refid="neighbor__search_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46459" relation="include">
        </childnode>
        <childnode refid="46451" relation="include">
        </childnode>
        <childnode refid="46460" relation="include">
        </childnode>
        <childnode refid="46509" relation="include">
        </childnode>
        <childnode refid="46493" relation="include">
        </childnode>
        <childnode refid="46510" relation="include">
        </childnode>
        <childnode refid="46511" relation="include">
        </childnode>
        <childnode refid="46513" relation="include">
        </childnode>
        <childnode refid="46516" relation="include">
        </childnode>
        <childnode refid="46517" relation="include">
        </childnode>
      </node>
      <node id="46436">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="46434" relation="include">
        </childnode>
        <childnode refid="46430" relation="include">
        </childnode>
        <childnode refid="46437" relation="include">
        </childnode>
      </node>
      <node id="46405">
        <label>cstdlib</label>
      </node>
      <node id="46525">
        <label>mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp</label>
        <link refid="svd__complete__incremental__learning_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
      </node>
      <node id="46516">
        <label>neighbor_search_impl.hpp</label>
      </node>
      <node id="46400">
        <label>cctype</label>
      </node>
      <node id="46537">
        <label>iostream</label>
      </node>
      <node id="46538">
        <label>cf_impl.hpp</label>
      </node>
      <node id="46518">
        <label>sort_policies/furthest_neighbor_sort.hpp</label>
        <link refid="furthest__neighbor__sort_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46519" relation="include">
        </childnode>
      </node>
      <node id="46522">
        <label>mlpack/methods/amf/update_rules/nmf_als.hpp</label>
        <link refid="nmf__als_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
      </node>
      <node id="46423">
        <label>unordered_map</label>
      </node>
      <node id="46402">
        <label>climits</label>
      </node>
      <node id="46450">
        <label>mutex</label>
      </node>
      <node id="46535">
        <label>mlpack/methods/cf/interpolation_policies/average_interpolation.hpp</label>
        <link refid="average__interpolation_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
      </node>
      <node id="46446">
        <label>chrono</label>
      </node>
      <node id="46514">
        <label>mlpack/core/tree/traversal_info.hpp</label>
        <link refid="traversal__info_8hpp"/>
      </node>
      <node id="46467">
        <label>hrectbound_impl.hpp</label>
      </node>
      <node id="46454">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="46487">
        <label>binary_space_tree/rp_tree_mean_split.hpp</label>
        <link refid="rp__tree__mean__split_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46485" relation="include">
        </childnode>
        <childnode refid="46476" relation="include">
        </childnode>
        <childnode refid="46488" relation="include">
        </childnode>
        <childnode refid="46490" relation="include">
        </childnode>
      </node>
      <node id="46484">
        <label>vantage_point_split_impl.hpp</label>
      </node>
      <node id="46452">
        <label>thread</label>
      </node>
      <node id="46468">
        <label>ballbound.hpp</label>
        <link refid="ballbound_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46463" relation="include">
        </childnode>
        <childnode refid="46465" relation="include">
        </childnode>
        <childnode refid="46469" relation="include">
        </childnode>
      </node>
      <node id="46524">
        <label>mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp</label>
        <link refid="svd__incomplete__incremental__learning_8hpp"/>
      </node>
      <node id="46486">
        <label>rp_tree_max_split_impl.hpp</label>
      </node>
      <node id="46476">
        <label>mlpack/core/tree/perform_split.hpp</label>
        <link refid="perform__split_8hpp"/>
      </node>
      <node id="46533">
        <label>mlpack/methods/amf/termination_policies/max_iteration_termination.hpp</label>
        <link refid="max__iteration__termination_8hpp"/>
      </node>
      <node id="46528">
        <label>mlpack/methods/amf/termination_policies/simple_residue_termination.hpp</label>
        <link refid="simple__residue__termination_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
      </node>
      <node id="46440">
        <label>type_traits</label>
      </node>
      <node id="46527">
        <label>mlpack/methods/amf/init_rules/random_acol_init.hpp</label>
        <link refid="random__acol__init_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46481" relation="include">
        </childnode>
      </node>
      <node id="46536">
        <label>set</label>
      </node>
      <node id="46502">
        <label>binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46503" relation="include">
        </childnode>
        <childnode refid="46460" relation="include">
        </childnode>
        <childnode refid="46504" relation="include">
        </childnode>
      </node>
      <node id="46416">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="46508">
        <label>binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="46460" relation="include">
        </childnode>
      </node>
      <node id="46410">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="46434">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="46412" relation="include">
        </childnode>
        <childnode refid="46413" relation="include">
        </childnode>
        <childnode refid="46414" relation="include">
        </childnode>
        <childnode refid="46415" relation="include">
        </childnode>
        <childnode refid="46435" relation="include">
        </childnode>
      </node>
      <node id="46471">
        <label>hollow_ball_bound_impl.hpp</label>
      </node>
      <node id="46406">
        <label>cstring</label>
      </node>
      <node id="46425">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="46474">
        <label>cellbound_impl.hpp</label>
      </node>
      <node id="46492">
        <label>ub_tree_split_impl.hpp</label>
      </node>
      <node id="46472">
        <label>cellbound.hpp</label>
        <link refid="cellbound_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46462" relation="include">
        </childnode>
        <childnode refid="46463" relation="include">
        </childnode>
        <childnode refid="46465" relation="include">
        </childnode>
        <childnode refid="46473" relation="include">
        </childnode>
        <childnode refid="46474" relation="include">
        </childnode>
      </node>
      <node id="46456">
        <label>ensmallen.hpp</label>
      </node>
      <node id="46414">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="46463">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46464" relation="include">
        </childnode>
      </node>
      <node id="46480">
        <label>binary_space_tree/vantage_point_split.hpp</label>
        <link refid="vantage__point__split_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46476" relation="include">
        </childnode>
        <childnode refid="46481" relation="include">
        </childnode>
        <childnode refid="46484" relation="include">
        </childnode>
      </node>
      <node id="46532">
        <label>mlpack/methods/cf/decomposition_policies/nmf_method.hpp</label>
        <link refid="nmf__method_8hpp"/>
        <childnode refid="46398" relation="include">
        </childnode>
        <childnode refid="46520" relation="include">
        </childnode>
        <childnode refid="46522" relation="include">
        </childnode>
        <childnode refid="46533" relation="include">
        </childnode>
        <childnode refid="46528" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1cf_1_1RegSVDPolicy" prot="public">mlpack::cf::RegSVDPolicy</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1cf">mlpack::cf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Haritha Nair</para></simplesect>
Implementation of the regularized svd method for use in the Collaborative Filtering.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="14"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_CF_DECOMPOSITION_POLICIES_REGULARIZED_SVD_METHOD_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_CF_DECOMPOSITION_POLICIES_REGULARIZED_SVD_METHOD_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="regularized__svd_8hpp" kindref="compound">mlpack/methods/regularized_svd/regularized_svd.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cf<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classmlpack_1_1cf_1_1RegSVDPolicy" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1cf_1_1RegSVDPolicy" kindref="compound">RegSVDPolicy</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50" refid="classmlpack_1_1cf_1_1RegSVDPolicy_1ac1d53ce600cf622fd3961ed3b3e69dbb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1cf_1_1RegSVDPolicy_1ac1d53ce600cf622fd3961ed3b3e69dbb" kindref="member">RegSVDPolicy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations<sp/>=<sp/>10)<sp/>:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maxIterations(maxIterations)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classmlpack_1_1cf_1_1RegSVDPolicy_1a3b3962a80d1217a799cfab110b487cea" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1RegSVDPolicy_1a3b3962a80d1217a799cfab110b487cea" kindref="member">Apply</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::sp_mat&amp;<sp/></highlight><highlight class="comment">/*<sp/>cleanedData<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rank,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>minResidue<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>mit<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>singular<sp/>value<sp/>decomposition<sp/>using<sp/>the<sp/>regularized<sp/>SVD<sp/>algorithm.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1svd_1_1RegularizedSVD" kindref="compound">svd::RegularizedSVD&lt;&gt;</ref><sp/>regsvd(maxIterations);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>regsvd.<ref refid="classmlpack_1_1svd_1_1RegularizedSVD_1a2a573625e4555fd5afc38af3529e07ec" kindref="member">Apply</ref>(data,<sp/>rank,<sp/>w,<sp/>h);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classmlpack_1_1cf_1_1RegSVDPolicy_1a0c3e16d73c8b25b8934cbc36ac161619" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1RegSVDPolicy_1a0c3e16d73c8b25b8934cbc36ac161619" kindref="member">GetRating</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>user,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>item)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="87"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rating<sp/>=<sp/>arma::as_scalar(w.row(item)<sp/>*<sp/>h.col(user));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rating;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classmlpack_1_1cf_1_1RegSVDPolicy_1ae5dc3895f0294bf054cb2ea58084a426" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1RegSVDPolicy_1ae5dc3895f0294bf054cb2ea58084a426" kindref="member">GetRatingOfUser</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>user,<sp/>arma::vec&amp;<sp/>rating)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="99"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>rating<sp/>=<sp/>w<sp/>*<sp/>h.col(user);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NeighborSearchPolicy&gt;</highlight></codeline>
<codeline lineno="116" refid="classmlpack_1_1cf_1_1RegSVDPolicy_1a35bca7a6e09f4fb35b9945a9368711e4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1RegSVDPolicy_1a35bca7a6e09f4fb35b9945a9368711e4" kindref="member">GetNeighborhood</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Col&lt;size_t&gt;&amp;<sp/>users,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numUsersForSimilarity,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;size_t&gt;&amp;<sp/>neighborhood,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>similarities)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="120"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>want<sp/>to<sp/>avoid<sp/>calculating<sp/>the<sp/>full<sp/>rating<sp/>matrix,<sp/>so<sp/>we<sp/>will<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nearest<sp/>neighbor<sp/>search<sp/>only<sp/>on<sp/>the<sp/>H<sp/>matrix,<sp/>using<sp/>the<sp/>observation<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>rating<sp/>matrix<sp/>X<sp/>=<sp/>W*H,<sp/>then<sp/>d(X.col(i),<sp/>X.col(j))<sp/>=<sp/>d(W<sp/>H.col(i),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>W<sp/>H.col(j)).<sp/><sp/>This<sp/>can<sp/>be<sp/>seen<sp/>as<sp/>nearest<sp/>neighbor<sp/>search<sp/>on<sp/>the<sp/>H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>matrix<sp/>with<sp/>the<sp/>Mahalanobis<sp/>distance<sp/>where<sp/>M^{-1}<sp/>=<sp/>W^T<sp/>W.<sp/><sp/>So,<sp/>we&apos;ll</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decompose<sp/>M^{-1}<sp/>=<sp/>L<sp/>L^T<sp/>(the<sp/>Cholesky<sp/>decomposition),<sp/>and<sp/>then<sp/>multiply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>H<sp/>by<sp/>L^T.<sp/>Then<sp/>we<sp/>can<sp/>perform<sp/>nearest<sp/>neighbor<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::mat<sp/>l<sp/>=<sp/>arma::chol(w.t()<sp/>*<sp/>w);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::mat<sp/>stretchedH<sp/>=<sp/>l<sp/>*<sp/>h;<sp/></highlight><highlight class="comment">//<sp/>Due<sp/>to<sp/>the<sp/>Armadillo<sp/>API,<sp/>l<sp/>is<sp/>L^T.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporarily<sp/>store<sp/>feature<sp/>vector<sp/>of<sp/>queried<sp/>users.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::mat<sp/>query(stretchedH.n_rows,<sp/>users.n_elem);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>feature<sp/>vectors<sp/>of<sp/>queried<sp/>users.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>users.n_elem;<sp/>++i)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>query.col(i)<sp/>=<sp/>stretchedH.col(users(i));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>NeighborSearchPolicy<sp/>neighborSearch(stretchedH);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>neighborSearch.Search(</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>query,<sp/>numUsersForSimilarity,<sp/>neighborhood,<sp/>similarities);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classmlpack_1_1cf_1_1RegSVDPolicy_1a0f733dde66e23287758de984b5151e36" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/><ref refid="classmlpack_1_1cf_1_1RegSVDPolicy_1a0f733dde66e23287758de984b5151e36" kindref="member">W</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w;<sp/>}</highlight></codeline>
<codeline lineno="145" refid="classmlpack_1_1cf_1_1RegSVDPolicy_1a71e6a6119b9efde17f4112c6d82d9233" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/><ref refid="classmlpack_1_1cf_1_1RegSVDPolicy_1a71e6a6119b9efde17f4112c6d82d9233" kindref="member">H</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h;<sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="classmlpack_1_1cf_1_1RegSVDPolicy_1a420770944a5b0c7a852c4ec372c4a2d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1RegSVDPolicy_1a420770944a5b0c7a852c4ec372c4a2d1" kindref="member">MaxIterations</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxIterations;<sp/>}</highlight></codeline>
<codeline lineno="150" refid="classmlpack_1_1cf_1_1RegSVDPolicy_1acda675ab4ab86b95c92bc33bc391a61b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1cf_1_1RegSVDPolicy_1acda675ab4ab86b95c92bc33bc391a61b" kindref="member">MaxIterations</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxIterations;<sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="156" refid="classmlpack_1_1cf_1_1RegSVDPolicy_1a65cba07328997659bec80b9879b15a51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1RegSVDPolicy_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(w));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(h));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>arma::mat<sp/>w;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>arma::mat<sp/>h;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">};</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp"/>
  </compounddef>
</doxygen>
