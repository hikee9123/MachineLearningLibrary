<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="merge__init_8hpp" kind="file" language="C++">
    <compoundname>merge_init.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <incdepgraph>
      <node id="23438">
        <label>list</label>
      </node>
      <node id="23435">
        <label>atomic</label>
      </node>
      <node id="23425">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="23401">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="23437">
        <label>iomanip</label>
      </node>
      <node id="23387">
        <label>/home/aakash/mlpack/src/mlpack/methods/amf/init_rules/merge_init.hpp</label>
        <link refid="merge__init_8hpp"/>
        <childnode refid="23388" relation="include">
        </childnode>
      </node>
      <node id="23410">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="23411" relation="include">
        </childnode>
        <childnode refid="23413" relation="include">
        </childnode>
      </node>
      <node id="23393">
        <label>cstdint</label>
      </node>
      <node id="23402">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="23409">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="23432">
        <label>arma_config.hpp</label>
      </node>
      <node id="23422">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="23389">
        <label>cmath</label>
      </node>
      <node id="23408">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="23397">
        <label>stdexcept</label>
      </node>
      <node id="23417">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="23402" relation="include">
        </childnode>
        <childnode refid="23404" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
        <childnode refid="23403" relation="include">
        </childnode>
      </node>
      <node id="23441">
        <label>string</label>
      </node>
      <node id="23429">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="23430" relation="include">
        </childnode>
        <childnode refid="23396" relation="include">
        </childnode>
      </node>
      <node id="23439">
        <label>map</label>
      </node>
      <node id="23391">
        <label>cfloat</label>
      </node>
      <node id="23421">
        <label>boost/variant.hpp</label>
      </node>
      <node id="23443">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="23405">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="23428">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="23429" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
        <childnode refid="23412" relation="include">
        </childnode>
        <childnode refid="23430" relation="include">
        </childnode>
      </node>
      <node id="23418">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="23416">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="23402" relation="include">
        </childnode>
        <childnode refid="23404" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
        <childnode refid="23403" relation="include">
        </childnode>
      </node>
      <node id="23419">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="23402" relation="include">
        </childnode>
        <childnode refid="23404" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
        <childnode refid="23403" relation="include">
        </childnode>
      </node>
      <node id="23407">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="23427">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="23403" relation="include">
        </childnode>
        <childnode refid="23404" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
        <childnode refid="23415" relation="include">
        </childnode>
        <childnode refid="23424" relation="include">
        </childnode>
      </node>
      <node id="23431">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="23432" relation="include">
        </childnode>
      </node>
      <node id="23433">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="23388">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="23389" relation="include">
        </childnode>
        <childnode refid="23390" relation="include">
        </childnode>
        <childnode refid="23391" relation="include">
        </childnode>
        <childnode refid="23392" relation="include">
        </childnode>
        <childnode refid="23393" relation="include">
        </childnode>
        <childnode refid="23394" relation="include">
        </childnode>
        <childnode refid="23395" relation="include">
        </childnode>
        <childnode refid="23396" relation="include">
        </childnode>
        <childnode refid="23397" relation="include">
        </childnode>
        <childnode refid="23398" relation="include">
        </childnode>
        <childnode refid="23399" relation="include">
        </childnode>
        <childnode refid="23400" relation="include">
        </childnode>
        <childnode refid="23401" relation="include">
        </childnode>
        <childnode refid="23402" relation="include">
        </childnode>
        <childnode refid="23403" relation="include">
        </childnode>
        <childnode refid="23404" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
        <childnode refid="23406" relation="include">
        </childnode>
        <childnode refid="23407" relation="include">
        </childnode>
        <childnode refid="23408" relation="include">
        </childnode>
        <childnode refid="23409" relation="include">
        </childnode>
        <childnode refid="23410" relation="include">
        </childnode>
        <childnode refid="23414" relation="include">
        </childnode>
        <childnode refid="23415" relation="include">
        </childnode>
        <childnode refid="23416" relation="include">
        </childnode>
        <childnode refid="23417" relation="include">
        </childnode>
        <childnode refid="23418" relation="include">
        </childnode>
        <childnode refid="23419" relation="include">
        </childnode>
        <childnode refid="23420" relation="include">
        </childnode>
        <childnode refid="23426" relation="include">
        </childnode>
        <childnode refid="23427" relation="include">
        </childnode>
        <childnode refid="23424" relation="include">
        </childnode>
        <childnode refid="23428" relation="include">
        </childnode>
        <childnode refid="23431" relation="include">
        </childnode>
        <childnode refid="23433" relation="include">
        </childnode>
        <childnode refid="23434" relation="include">
        </childnode>
        <childnode refid="23443" relation="include">
        </childnode>
        <childnode refid="23444" relation="include">
        </childnode>
      </node>
      <node id="23394">
        <label>cstdio</label>
      </node>
      <node id="23398">
        <label>tuple</label>
      </node>
      <node id="23403">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="23420">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="23403" relation="include">
        </childnode>
        <childnode refid="23404" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
        <childnode refid="23407" relation="include">
        </childnode>
        <childnode refid="23421" relation="include">
        </childnode>
        <childnode refid="23422" relation="include">
        </childnode>
        <childnode refid="23423" relation="include">
        </childnode>
        <childnode refid="23424" relation="include">
        </childnode>
      </node>
      <node id="23399">
        <label>utility</label>
      </node>
      <node id="23423">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="23414">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="23411">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="23412" relation="include">
        </childnode>
      </node>
      <node id="23434">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="23435" relation="include">
        </childnode>
        <childnode refid="23436" relation="include">
        </childnode>
        <childnode refid="23437" relation="include">
        </childnode>
        <childnode refid="23438" relation="include">
        </childnode>
        <childnode refid="23439" relation="include">
        </childnode>
        <childnode refid="23440" relation="include">
        </childnode>
        <childnode refid="23441" relation="include">
        </childnode>
        <childnode refid="23442" relation="include">
        </childnode>
      </node>
      <node id="23412">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="23426">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="23424" relation="include">
        </childnode>
        <childnode refid="23420" relation="include">
        </childnode>
        <childnode refid="23427" relation="include">
        </childnode>
      </node>
      <node id="23395">
        <label>cstdlib</label>
      </node>
      <node id="23390">
        <label>cctype</label>
      </node>
      <node id="23413">
        <label>unordered_map</label>
      </node>
      <node id="23392">
        <label>climits</label>
      </node>
      <node id="23440">
        <label>mutex</label>
      </node>
      <node id="23436">
        <label>chrono</label>
      </node>
      <node id="23444">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="23442">
        <label>thread</label>
      </node>
      <node id="23430">
        <label>type_traits</label>
      </node>
      <node id="23406">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="23400">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="23424">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="23402" relation="include">
        </childnode>
        <childnode refid="23403" relation="include">
        </childnode>
        <childnode refid="23404" relation="include">
        </childnode>
        <childnode refid="23405" relation="include">
        </childnode>
        <childnode refid="23425" relation="include">
        </childnode>
      </node>
      <node id="23396">
        <label>cstring</label>
      </node>
      <node id="23415">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="23404">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1amf_1_1MergeInitialization" prot="public">mlpack::amf::MergeInitialization</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1amf">mlpack::amf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ziyang Jiang</para></simplesect>
Initialization rule for alternating matrix factorization (AMF). This simple initialization is performed by assigning a given matrix to W or H and a random matrix to another one.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="14"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_AMF_MERGE_INIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_AMF_MERGE_INIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">amf<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WInitializationRuleType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>HInitializationRuleType&gt;</highlight></codeline>
<codeline lineno="27" refid="classmlpack_1_1amf_1_1MergeInitialization" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1amf_1_1MergeInitialization" kindref="compound">MergeInitialization</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>constructor<sp/>required<sp/>for<sp/>the<sp/>InitializeRule<sp/>template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classmlpack_1_1amf_1_1MergeInitialization_1ad5795a973773fbf91796bb0c8d068234" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1amf_1_1MergeInitialization_1ad5795a973773fbf91796bb0c8d068234" kindref="member">MergeInitialization</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>MergeInitialization<sp/>object<sp/>with<sp/>existing<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rules.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classmlpack_1_1amf_1_1MergeInitialization_1a473ad003397f9089eb97f20c5b9b0973" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1amf_1_1MergeInitialization_1a473ad003397f9089eb97f20c5b9b0973" kindref="member">MergeInitialization</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>WInitializationRuleType&amp;<sp/>wInitRule,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HInitializationRuleType&amp;<sp/>hInitRule)<sp/>:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wInitializationRule(wInitRule),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hInitializationRule(hInitRule)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="50" refid="classmlpack_1_1amf_1_1MergeInitialization_1af7816b2608658041cf35befb4c3946b9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1MergeInitialization_1af7816b2608658041cf35befb4c3946b9" kindref="member">Initialize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>V,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>W,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>H)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>wInitializationRule.InitializeOne(V,<sp/>r,<sp/>W);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>hInitializationRule.InitializeOne(V,<sp/>r,<sp/>H,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialization<sp/>rule<sp/>for<sp/>W<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>WInitializationRuleType<sp/>wInitializationRule;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialization<sp/>rule<sp/>for<sp/>H<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>HInitializationRuleType<sp/>hInitializationRule;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>amf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/amf/init_rules/merge_init.hpp"/>
  </compounddef>
</doxygen>
