<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="ub__tree__split_8hpp" kind="file" language="C++">
    <compoundname>ub_tree_split.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="address_8hpp" local="yes">../address.hpp</includes>
    <includes local="yes">ub_tree_split_impl.hpp</includes>
    <includedby refid="binary__space__tree_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree.hpp</includedby>
    <incdepgraph>
      <node id="16030">
        <label>list</label>
      </node>
      <node id="16027">
        <label>atomic</label>
      </node>
      <node id="16017">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="15993">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="16029">
        <label>iomanip</label>
      </node>
      <node id="16002">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="16003" relation="include">
        </childnode>
        <childnode refid="16005" relation="include">
        </childnode>
      </node>
      <node id="15985">
        <label>cstdint</label>
      </node>
      <node id="15994">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="16001">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="16024">
        <label>arma_config.hpp</label>
      </node>
      <node id="16014">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="15981">
        <label>cmath</label>
      </node>
      <node id="16000">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="15989">
        <label>stdexcept</label>
      </node>
      <node id="16009">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="15994" relation="include">
        </childnode>
        <childnode refid="15996" relation="include">
        </childnode>
        <childnode refid="15997" relation="include">
        </childnode>
        <childnode refid="15995" relation="include">
        </childnode>
      </node>
      <node id="16033">
        <label>string</label>
      </node>
      <node id="16021">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="16022" relation="include">
        </childnode>
        <childnode refid="15988" relation="include">
        </childnode>
      </node>
      <node id="16031">
        <label>map</label>
      </node>
      <node id="15983">
        <label>cfloat</label>
      </node>
      <node id="16013">
        <label>boost/variant.hpp</label>
      </node>
      <node id="16035">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="15997">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="16020">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="16021" relation="include">
        </childnode>
        <childnode refid="15997" relation="include">
        </childnode>
        <childnode refid="16004" relation="include">
        </childnode>
        <childnode refid="16022" relation="include">
        </childnode>
      </node>
      <node id="16010">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="16008">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="15994" relation="include">
        </childnode>
        <childnode refid="15996" relation="include">
        </childnode>
        <childnode refid="15997" relation="include">
        </childnode>
        <childnode refid="15995" relation="include">
        </childnode>
      </node>
      <node id="16011">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="15994" relation="include">
        </childnode>
        <childnode refid="15996" relation="include">
        </childnode>
        <childnode refid="15997" relation="include">
        </childnode>
        <childnode refid="15995" relation="include">
        </childnode>
      </node>
      <node id="15999">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="16019">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="15995" relation="include">
        </childnode>
        <childnode refid="15996" relation="include">
        </childnode>
        <childnode refid="15997" relation="include">
        </childnode>
        <childnode refid="16007" relation="include">
        </childnode>
        <childnode refid="16016" relation="include">
        </childnode>
      </node>
      <node id="16023">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="16024" relation="include">
        </childnode>
      </node>
      <node id="16025">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="15980">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="15981" relation="include">
        </childnode>
        <childnode refid="15982" relation="include">
        </childnode>
        <childnode refid="15983" relation="include">
        </childnode>
        <childnode refid="15984" relation="include">
        </childnode>
        <childnode refid="15985" relation="include">
        </childnode>
        <childnode refid="15986" relation="include">
        </childnode>
        <childnode refid="15987" relation="include">
        </childnode>
        <childnode refid="15988" relation="include">
        </childnode>
        <childnode refid="15989" relation="include">
        </childnode>
        <childnode refid="15990" relation="include">
        </childnode>
        <childnode refid="15991" relation="include">
        </childnode>
        <childnode refid="15992" relation="include">
        </childnode>
        <childnode refid="15993" relation="include">
        </childnode>
        <childnode refid="15994" relation="include">
        </childnode>
        <childnode refid="15995" relation="include">
        </childnode>
        <childnode refid="15996" relation="include">
        </childnode>
        <childnode refid="15997" relation="include">
        </childnode>
        <childnode refid="15998" relation="include">
        </childnode>
        <childnode refid="15999" relation="include">
        </childnode>
        <childnode refid="16000" relation="include">
        </childnode>
        <childnode refid="16001" relation="include">
        </childnode>
        <childnode refid="16002" relation="include">
        </childnode>
        <childnode refid="16006" relation="include">
        </childnode>
        <childnode refid="16007" relation="include">
        </childnode>
        <childnode refid="16008" relation="include">
        </childnode>
        <childnode refid="16009" relation="include">
        </childnode>
        <childnode refid="16010" relation="include">
        </childnode>
        <childnode refid="16011" relation="include">
        </childnode>
        <childnode refid="16012" relation="include">
        </childnode>
        <childnode refid="16018" relation="include">
        </childnode>
        <childnode refid="16019" relation="include">
        </childnode>
        <childnode refid="16016" relation="include">
        </childnode>
        <childnode refid="16020" relation="include">
        </childnode>
        <childnode refid="16023" relation="include">
        </childnode>
        <childnode refid="16025" relation="include">
        </childnode>
        <childnode refid="16026" relation="include">
        </childnode>
        <childnode refid="16035" relation="include">
        </childnode>
        <childnode refid="16036" relation="include">
        </childnode>
      </node>
      <node id="15986">
        <label>cstdio</label>
      </node>
      <node id="16037">
        <label>../address.hpp</label>
        <link refid="address_8hpp"/>
      </node>
      <node id="15990">
        <label>tuple</label>
      </node>
      <node id="15995">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="15979">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/ub_tree_split.hpp</label>
        <link refid="ub__tree__split_8hpp"/>
        <childnode refid="15980" relation="include">
        </childnode>
        <childnode refid="16037" relation="include">
        </childnode>
        <childnode refid="16038" relation="include">
        </childnode>
      </node>
      <node id="16012">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="15995" relation="include">
        </childnode>
        <childnode refid="15996" relation="include">
        </childnode>
        <childnode refid="15997" relation="include">
        </childnode>
        <childnode refid="15999" relation="include">
        </childnode>
        <childnode refid="16013" relation="include">
        </childnode>
        <childnode refid="16014" relation="include">
        </childnode>
        <childnode refid="16015" relation="include">
        </childnode>
        <childnode refid="16016" relation="include">
        </childnode>
      </node>
      <node id="15991">
        <label>utility</label>
      </node>
      <node id="16015">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="16006">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="16003">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="16004" relation="include">
        </childnode>
      </node>
      <node id="16026">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="16027" relation="include">
        </childnode>
        <childnode refid="16028" relation="include">
        </childnode>
        <childnode refid="16029" relation="include">
        </childnode>
        <childnode refid="16030" relation="include">
        </childnode>
        <childnode refid="16031" relation="include">
        </childnode>
        <childnode refid="16032" relation="include">
        </childnode>
        <childnode refid="16033" relation="include">
        </childnode>
        <childnode refid="16034" relation="include">
        </childnode>
      </node>
      <node id="16004">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="16018">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="16016" relation="include">
        </childnode>
        <childnode refid="16012" relation="include">
        </childnode>
        <childnode refid="16019" relation="include">
        </childnode>
      </node>
      <node id="15987">
        <label>cstdlib</label>
      </node>
      <node id="15982">
        <label>cctype</label>
      </node>
      <node id="16005">
        <label>unordered_map</label>
      </node>
      <node id="15984">
        <label>climits</label>
      </node>
      <node id="16032">
        <label>mutex</label>
      </node>
      <node id="16028">
        <label>chrono</label>
      </node>
      <node id="16036">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="16034">
        <label>thread</label>
      </node>
      <node id="16022">
        <label>type_traits</label>
      </node>
      <node id="15998">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="15992">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="16016">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="15994" relation="include">
        </childnode>
        <childnode refid="15995" relation="include">
        </childnode>
        <childnode refid="15996" relation="include">
        </childnode>
        <childnode refid="15997" relation="include">
        </childnode>
        <childnode refid="16017" relation="include">
        </childnode>
      </node>
      <node id="15988">
        <label>cstring</label>
      </node>
      <node id="16007">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="16038">
        <label>ub_tree_split_impl.hpp</label>
      </node>
      <node id="15996">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="16042">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="16040" relation="include">
        </childnode>
      </node>
      <node id="16075">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/pelleg_moore_kmeans.hpp</label>
        <link refid="pelleg__moore__kmeans_8hpp"/>
      </node>
      <node id="16058">
        <label>/home/aakash/mlpack/src/mlpack/methods/lmnn/lmnn_function.hpp</label>
        <link refid="lmnn__function_8hpp"/>
        <childnode refid="16059" relation="include">
        </childnode>
      </node>
      <node id="16076">
        <label>/home/aakash/mlpack/src/mlpack/methods/range_search/range_search.hpp</label>
        <link refid="range__search_8hpp"/>
        <childnode refid="16077" relation="include">
        </childnode>
        <childnode refid="16078" relation="include">
        </childnode>
      </node>
      <node id="16060">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/typedef.hpp</label>
        <link refid="methods_2neighbor__search_2typedef_8hpp"/>
        <childnode refid="16044" relation="include">
        </childnode>
      </node>
      <node id="16048">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp</label>
        <link refid="cf__model_8hpp"/>
      </node>
      <node id="16050">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp</label>
        <link refid="regularized__svd__method_8hpp"/>
      </node>
      <node id="16043">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="16040" relation="include">
        </childnode>
      </node>
      <node id="16047">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/bias_svd_method.hpp</label>
        <link refid="bias__svd__method_8hpp"/>
      </node>
      <node id="16045">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf.hpp</label>
        <link refid="cf_8hpp"/>
        <childnode refid="16046" relation="include">
        </childnode>
        <childnode refid="16048" relation="include">
        </childnode>
        <childnode refid="16049" relation="include">
        </childnode>
        <childnode refid="16051" relation="include">
        </childnode>
      </node>
      <node id="16053">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/cosine_search.hpp</label>
        <link refid="cosine__search_8hpp"/>
      </node>
      <node id="16082">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_typedef.hpp</label>
        <link refid="ra__typedef_8hpp"/>
        <childnode refid="16081" relation="include">
        </childnode>
      </node>
      <node id="16077">
        <label>/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp</label>
        <link refid="dbscan_8hpp"/>
      </node>
      <node id="16071">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/gmm.hpp</label>
        <link refid="gmm_8hpp"/>
        <childnode refid="16070" relation="include">
        </childnode>
      </node>
      <node id="16079">
        <label>/home/aakash/mlpack/src/mlpack/tests/main_tests/range_search_utils.hpp</label>
        <link refid="range__search__utils_8hpp"/>
      </node>
      <node id="16056">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/dual_tree_kmeans.hpp</label>
        <link refid="dual__tree__kmeans_8hpp"/>
      </node>
      <node id="16051">
        <label>/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp</label>
        <link refid="svdplusplus_8hpp"/>
        <childnode refid="16052" relation="include">
        </childnode>
      </node>
      <node id="16069">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp</label>
        <link refid="diagonal__gmm_8hpp"/>
        <childnode refid="16070" relation="include">
        </childnode>
      </node>
      <node id="16061">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp</label>
        <link refid="ns__model_8hpp"/>
      </node>
      <node id="16081">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_search.hpp</label>
        <link refid="ra__search_8hpp"/>
        <childnode refid="16080" relation="include">
        </childnode>
        <childnode refid="16082" relation="include">
        </childnode>
      </node>
      <node id="16074">
        <label>/home/aakash/mlpack/src/mlpack/methods/nystroem_method/nystroem_method.hpp</label>
        <link refid="nystroem__method_2nystroem__method_8hpp"/>
        <childnode refid="16073" relation="include">
        </childnode>
      </node>
      <node id="16057">
        <label>/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp</label>
        <link refid="constraints_8hpp"/>
        <childnode refid="16058" relation="include">
        </childnode>
      </node>
      <node id="16054">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/lmetric_search.hpp</label>
        <link refid="lmetric__search_8hpp"/>
        <childnode refid="16045" relation="include">
        </childnode>
      </node>
      <node id="16059">
        <label>/home/aakash/mlpack/src/mlpack/methods/lmnn/lmnn.hpp</label>
        <link refid="lmnn_8hpp"/>
      </node>
      <node id="16046">
        <label>/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp</label>
        <link refid="bias__svd_8hpp"/>
        <childnode refid="16047" relation="include">
        </childnode>
      </node>
      <node id="16039">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/ub_tree_split.hpp</label>
        <link refid="ub__tree__split_8hpp"/>
        <childnode refid="16040" relation="include">
        </childnode>
      </node>
      <node id="16041">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="16040" relation="include">
        </childnode>
        <childnode refid="16042" relation="include">
        </childnode>
        <childnode refid="16043" relation="include">
        </childnode>
        <childnode refid="16044" relation="include">
        </childnode>
      </node>
      <node id="16080">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp</label>
        <link refid="ra__model_8hpp"/>
      </node>
      <node id="16068">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/em_fit.hpp</label>
        <link refid="em__fit_8hpp"/>
        <childnode refid="16069" relation="include">
        </childnode>
        <childnode refid="16071" relation="include">
        </childnode>
      </node>
      <node id="16066">
        <label>/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp</label>
        <link refid="kde__model_8hpp"/>
      </node>
      <node id="16040">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="16041" relation="include">
        </childnode>
        <childnode refid="16062" relation="include">
        </childnode>
        <childnode refid="16063" relation="include">
        </childnode>
        <childnode refid="16064" relation="include">
        </childnode>
        <childnode refid="16065" relation="include">
        </childnode>
        <childnode refid="16066" relation="include">
        </childnode>
        <childnode refid="16056" relation="include">
        </childnode>
        <childnode refid="16067" relation="include">
        </childnode>
        <childnode refid="16075" relation="include">
        </childnode>
        <childnode refid="16044" relation="include">
        </childnode>
        <childnode refid="16061" relation="include">
        </childnode>
        <childnode refid="16076" relation="include">
        </childnode>
        <childnode refid="16078" relation="include">
        </childnode>
        <childnode refid="16080" relation="include">
        </childnode>
        <childnode refid="16081" relation="include">
        </childnode>
        <childnode refid="16083" relation="include">
        </childnode>
      </node>
      <node id="16052">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svdplusplus_method.hpp</label>
        <link refid="svdplusplus__method_8hpp"/>
      </node>
      <node id="16049">
        <label>/home/aakash/mlpack/src/mlpack/methods/regularized_svd/regularized_svd.hpp</label>
        <link refid="regularized__svd_8hpp"/>
        <childnode refid="16050" relation="include">
        </childnode>
      </node>
      <node id="16083">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_query_stat.hpp</label>
        <link refid="ra__query__stat_8hpp"/>
        <childnode refid="16081" relation="include">
        </childnode>
      </node>
      <node id="16044">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search.hpp</label>
        <link refid="neighbor__search_8hpp"/>
        <childnode refid="16045" relation="include">
        </childnode>
        <childnode refid="16053" relation="include">
        </childnode>
        <childnode refid="16054" relation="include">
        </childnode>
        <childnode refid="16055" relation="include">
        </childnode>
        <childnode refid="16056" relation="include">
        </childnode>
        <childnode refid="16057" relation="include">
        </childnode>
        <childnode refid="16060" relation="include">
        </childnode>
        <childnode refid="16061" relation="include">
        </childnode>
      </node>
      <node id="16078">
        <label>/home/aakash/mlpack/src/mlpack/methods/range_search/rs_model.hpp</label>
        <link refid="rs__model_8hpp"/>
        <childnode refid="16079" relation="include">
        </childnode>
      </node>
      <node id="16065">
        <label>/home/aakash/mlpack/src/mlpack/methods/kde/kde.hpp</label>
        <link refid="kde_8hpp"/>
        <childnode refid="16066" relation="include">
        </childnode>
      </node>
      <node id="16055">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/pearson_search.hpp</label>
        <link refid="pearson__search_8hpp"/>
      </node>
      <node id="16067">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/kmeans.hpp</label>
        <link refid="kmeans_8hpp"/>
        <childnode refid="16068" relation="include">
        </childnode>
        <childnode refid="16072" relation="include">
        </childnode>
      </node>
      <node id="16064">
        <label>/home/aakash/mlpack/src/mlpack/methods/emst/dtb.hpp</label>
        <link refid="dtb_8hpp"/>
      </node>
      <node id="16072">
        <label>/home/aakash/mlpack/src/mlpack/methods/nystroem_method/kmeans_selection.hpp</label>
        <link refid="kmeans__selection_8hpp"/>
        <childnode refid="16073" relation="include">
        </childnode>
        <childnode refid="16074" relation="include">
        </childnode>
      </node>
      <node id="16070">
        <label>/home/aakash/mlpack/src/mlpack/methods/hmm/hmm_model.hpp</label>
        <link refid="hmm__model_8hpp"/>
      </node>
      <node id="16073">
        <label>/home/aakash/mlpack/src/mlpack/methods/kernel_pca/kernel_rules/nystroem_method.hpp</label>
        <link refid="kernel__pca_2kernel__rules_2nystroem__method_8hpp"/>
      </node>
      <node id="16062">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="16040" relation="include">
        </childnode>
      </node>
      <node id="16063">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="16040" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1tree_1_1UBTreeSplit" prot="public">mlpack::tree::UBTreeSplit</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1tree">mlpack::tree</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Mikhail Lozhnikov</para></simplesect>
Definition of UBTreeSplit, a class that splits the space according to the median address of points contained in the node.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_TREE_BINARY_SPACE_TREE_UB_TREE_SPLIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_TREE_BINARY_SPACE_TREE_UB_TREE_SPLIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../address.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tree<sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BoundType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType<sp/>=<sp/>arma::mat&gt;</highlight></codeline>
<codeline lineno="29" refid="classmlpack_1_1tree_1_1UBTreeSplit" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1tree_1_1UBTreeSplit" kindref="compound">UBTreeSplit</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::conditional&lt;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType::elem_type)<sp/>*<sp/>CHAR_BIT<sp/>&lt;=<sp/>32,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t&gt;::type<sp/>AddressElemType;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SplitInfo</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;arma::Col&lt;AddressElemType&gt;,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&gt;&gt;*<sp/>addresses;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SplitNode(BoundType&amp;<sp/>bound,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>begin,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplitInfo&amp;<sp/><sp/>splitInfo);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1tree_1_1split_1ae701f1590f5c0fb8ddea4af189f3ee8a" kindref="member">PerformSplit</ref>(MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>begin,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SplitInfo&amp;<sp/>splitInfo);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1tree_1_1split_1ae701f1590f5c0fb8ddea4af189f3ee8a" kindref="member">PerformSplit</ref>(MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>begin,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SplitInfo&amp;<sp/>splitInfo,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;size_t&gt;&amp;<sp/>oldFromNew);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>std::vector&lt;std::pair&lt;arma::Col&lt;AddressElemType&gt;,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&gt;&gt;<sp/>addresses;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InitializeAddresses(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ComparePair(</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;arma::Col&lt;AddressElemType&gt;,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&gt;&amp;<sp/>p1,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;arma::Col&lt;AddressElemType&gt;,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&gt;&amp;<sp/>p2)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1bound_1_1addr_1ad39b49870fa074ad011a4d4c0ee93665" kindref="member">bound::addr::CompareAddresses</ref>(p1.first,<sp/>p2.first)<sp/>&lt;<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal">};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ub_tree_split_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/ub_tree_split.hpp"/>
  </compounddef>
</doxygen>
