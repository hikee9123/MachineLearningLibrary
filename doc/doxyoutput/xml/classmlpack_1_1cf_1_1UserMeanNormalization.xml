<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1cf_1_1UserMeanNormalization" kind="class" language="C++" prot="public">
    <compoundname>mlpack::cf::UserMeanNormalization</compoundname>
    <includes refid="user__mean__normalization_8hpp" local="no">user_mean_normalization.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1cf_1_1UserMeanNormalization_1a7c351e6be8581450376010a1e1734038" prot="private" static="no" mutable="no">
        <type>arma::vec</type>
        <definition>arma::vec userMean</definition>
        <argsstring></argsstring>
        <name>userMean</name>
        <briefdescription>
<para>User mean. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/normalization/user_mean_normalization.hpp" line="169" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/normalization/user_mean_normalization.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1cf_1_1UserMeanNormalization_1a95ff6b23a42843c747deb50c32825344" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UserMeanNormalization</definition>
        <argsstring>()</argsstring>
        <name>UserMeanNormalization</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/normalization/user_mean_normalization.hpp" line="43" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/normalization/user_mean_normalization.hpp" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1UserMeanNormalization_1abf21cefd8cf5cdc776b4dc9cf8eac372" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Denormalize</definition>
        <argsstring>(const size_t user, const size_t, const double rating) const</argsstring>
        <name>Denormalize</name>
        <param>
          <type>const size_t</type>
          <declname>user</declname>
        </param>
        <param>
          <type>const size_t</type>
        </param>
        <param>
          <type>const double</type>
          <declname>rating</declname>
        </param>
        <briefdescription>
<para>Denormalize computed rating by adding user mean. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>User ID. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(item) Item ID. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rating</parametername>
</parameternamelist>
<parameterdescription>
<para>Computed rating before denormalization. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/normalization/user_mean_normalization.hpp" line="130" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/normalization/user_mean_normalization.hpp" bodystart="130" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1UserMeanNormalization_1a93926452083f79197edc30f83476a40d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Denormalize</definition>
        <argsstring>(const arma::Mat&lt; size_t &gt; &amp;combinations, arma::vec &amp;predictions) const</argsstring>
        <name>Denormalize</name>
        <param>
          <type>const arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>combinations</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>predictions</declname>
        </param>
        <briefdescription>
<para>Denormalize computed rating by adding user mean. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>combinations</parametername>
</parameternamelist>
<parameterdescription>
<para>User/Item combinations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>predictions</parametername>
</parameternamelist>
<parameterdescription>
<para>Predicted ratings for each user/item combination. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/normalization/user_mean_normalization.hpp" line="143" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/normalization/user_mean_normalization.hpp" bodystart="143" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1UserMeanNormalization_1a6db5f5d76cbd055347cecd9ca90eea86" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::vec &amp;</type>
        <definition>const arma::vec&amp; Mean</definition>
        <argsstring>() const</argsstring>
        <name>Mean</name>
        <briefdescription>
<para>Return user mean. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/normalization/user_mean_normalization.hpp" line="156" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/normalization/user_mean_normalization.hpp" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1UserMeanNormalization_1a87410cc06d847eef46d0dfdb137c6be7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Normalize</definition>
        <argsstring>(arma::mat &amp;data)</argsstring>
        <name>Normalize</name>
        <param>
          <type>arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Normalize the data by subtracting user mean from each of existing ratings. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset in the form of coordinate list. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/normalization/user_mean_normalization.hpp" line="50" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/normalization/user_mean_normalization.hpp" bodystart="50" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1UserMeanNormalization_1a9656a2fd4841da15cf4b13ab57aa8000" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Normalize</definition>
        <argsstring>(arma::sp_mat &amp;cleanedData)</argsstring>
        <name>Normalize</name>
        <param>
          <type>arma::sp_mat &amp;</type>
          <declname>cleanedData</declname>
        </param>
        <briefdescription>
<para>Normalize the data by subtracting user mean from each of existing rating. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cleanedData</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data as a sparse matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/normalization/user_mean_normalization.hpp" line="90" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/normalization/user_mean_normalization.hpp" bodystart="90" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1UserMeanNormalization_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/normalization/user_mean_normalization.hpp" line="162" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/normalization/user_mean_normalization.hpp" bodystart="162" bodyend="165"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This normalization class performs user mean normalization on raw ratings. </para>    </briefdescription>
    <detaileddescription>
<para>An example of how to use <ref refid="classmlpack_1_1cf_1_1UserMeanNormalization" kindref="compound">UserMeanNormalization</ref> in CF is shown below:</para><para><programlisting><codeline><highlight class="normal">extern<sp/>arma::mat<sp/>data;<sp/>//<sp/>data<sp/>is<sp/>a<sp/>(user,<sp/>item,<sp/>rating)<sp/>table.</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Users<sp/>for<sp/>whom<sp/>recommendations<sp/>are<sp/>generated.</highlight></codeline>
<codeline><highlight class="normal">extern<sp/>arma::Col&lt;size_t&gt;<sp/>users;</highlight></codeline>
<codeline><highlight class="normal">arma::Mat&lt;size_t&gt;<sp/>recommendations;<sp/>//<sp/>Resulting<sp/>recommendations.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Use<sp/>UserMeanNormalization<sp/>as<sp/>normalization<sp/>method.</highlight></codeline>
<codeline><highlight class="normal">CFType&lt;NMFPolicy,<sp/>UserMeanNormalization&gt;<sp/>cf(data);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Generate<sp/>10<sp/>recommendations<sp/>for<sp/>all<sp/>users.</highlight></codeline>
<codeline><highlight class="normal">cf.GetRecommendations(10,<sp/>recommendations);</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/cf/normalization/user_mean_normalization.hpp" line="40" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/normalization/user_mean_normalization.hpp" bodystart="39" bodyend="170"/>
    <listofallmembers>
      <member refid="classmlpack_1_1cf_1_1UserMeanNormalization_1abf21cefd8cf5cdc776b4dc9cf8eac372" prot="public" virt="non-virtual"><scope>mlpack::cf::UserMeanNormalization</scope><name>Denormalize</name></member>
      <member refid="classmlpack_1_1cf_1_1UserMeanNormalization_1a93926452083f79197edc30f83476a40d" prot="public" virt="non-virtual"><scope>mlpack::cf::UserMeanNormalization</scope><name>Denormalize</name></member>
      <member refid="classmlpack_1_1cf_1_1UserMeanNormalization_1a6db5f5d76cbd055347cecd9ca90eea86" prot="public" virt="non-virtual"><scope>mlpack::cf::UserMeanNormalization</scope><name>Mean</name></member>
      <member refid="classmlpack_1_1cf_1_1UserMeanNormalization_1a87410cc06d847eef46d0dfdb137c6be7" prot="public" virt="non-virtual"><scope>mlpack::cf::UserMeanNormalization</scope><name>Normalize</name></member>
      <member refid="classmlpack_1_1cf_1_1UserMeanNormalization_1a9656a2fd4841da15cf4b13ab57aa8000" prot="public" virt="non-virtual"><scope>mlpack::cf::UserMeanNormalization</scope><name>Normalize</name></member>
      <member refid="classmlpack_1_1cf_1_1UserMeanNormalization_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::cf::UserMeanNormalization</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1cf_1_1UserMeanNormalization_1a7c351e6be8581450376010a1e1734038" prot="private" virt="non-virtual"><scope>mlpack::cf::UserMeanNormalization</scope><name>userMean</name></member>
      <member refid="classmlpack_1_1cf_1_1UserMeanNormalization_1a95ff6b23a42843c747deb50c32825344" prot="public" virt="non-virtual"><scope>mlpack::cf::UserMeanNormalization</scope><name>UserMeanNormalization</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
