<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="svdplusplus__method_8hpp" kind="file" language="C++">
    <compoundname>svdplusplus_method.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="svdplusplus_8hpp" local="no">mlpack/methods/svdplusplus/svdplusplus.hpp</includes>
    <incdepgraph>
      <node id="46742">
        <label>list</label>
      </node>
      <node id="46797">
        <label>breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="46789">
        <label>binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46786" relation="include">
        </childnode>
        <childnode refid="46790" relation="include">
        </childnode>
      </node>
      <node id="46799">
        <label>binary_space_tree/traits.hpp</label>
        <link refid="binary__space__tree_2traits_8hpp"/>
        <childnode refid="46800" relation="include">
        </childnode>
        <childnode refid="46761" relation="include">
        </childnode>
      </node>
      <node id="46739">
        <label>atomic</label>
      </node>
      <node id="46729">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="46705">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="46741">
        <label>iomanip</label>
      </node>
      <node id="46796">
        <label>queue</label>
      </node>
      <node id="46810">
        <label>typedef.hpp</label>
        <link refid="methods_2neighbor__search_2typedef_8hpp"/>
        <childnode refid="46751" relation="include">
        </childnode>
        <childnode refid="46756" relation="include">
        </childnode>
        <childnode refid="46804" relation="include">
        </childnode>
        <childnode refid="46811" relation="include">
        </childnode>
      </node>
      <node id="46806">
        <label>neighbor_search_rules.hpp</label>
        <link refid="neighbor__search__rules_8hpp"/>
        <childnode refid="46807" relation="include">
        </childnode>
        <childnode refid="46796" relation="include">
        </childnode>
        <childnode refid="46808" relation="include">
        </childnode>
      </node>
      <node id="46758">
        <label>bound_traits.hpp</label>
        <link refid="bound__traits_8hpp"/>
      </node>
      <node id="46771">
        <label>binary_space_tree/mean_split.hpp</label>
        <link refid="mean__split_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46769" relation="include">
        </childnode>
        <childnode refid="46772" relation="include">
        </childnode>
      </node>
      <node id="46757">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="46802">
        <label>mlpack/core/tree/rectangle_tree.hpp</label>
      </node>
      <node id="46813">
        <label>mlpack/methods/amf/amf.hpp</label>
        <link refid="amf_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46814" relation="include">
        </childnode>
        <childnode refid="46815" relation="include">
        </childnode>
        <childnode refid="46816" relation="include">
        </childnode>
        <childnode refid="46817" relation="include">
        </childnode>
        <childnode refid="46818" relation="include">
        </childnode>
        <childnode refid="46819" relation="include">
        </childnode>
        <childnode refid="46820" relation="include">
        </childnode>
        <childnode refid="46821" relation="include">
        </childnode>
        <childnode refid="46822" relation="include">
        </childnode>
        <childnode refid="46823" relation="include">
        </childnode>
      </node>
      <node id="46714">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="46715" relation="include">
        </childnode>
        <childnode refid="46717" relation="include">
        </childnode>
      </node>
      <node id="46697">
        <label>cstdint</label>
      </node>
      <node id="46706">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="46713">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="46798">
        <label>binary_space_tree/breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="46833">
        <label>svdplusplus_function.hpp</label>
        <link refid="svdplusplus__function_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46832" relation="include">
        </childnode>
        <childnode refid="46834" relation="include">
        </childnode>
      </node>
      <node id="46805">
        <label>nearest_neighbor_sort_impl.hpp</label>
      </node>
      <node id="46775">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="46772">
        <label>mean_split_impl.hpp</label>
      </node>
      <node id="46736">
        <label>arma_config.hpp</label>
      </node>
      <node id="46763">
        <label>hollow_ball_bound.hpp</label>
        <link refid="hollow__ball__bound_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46756" relation="include">
        </childnode>
        <childnode refid="46758" relation="include">
        </childnode>
        <childnode refid="46764" relation="include">
        </childnode>
      </node>
      <node id="46787">
        <label>../statistic.hpp</label>
        <link refid="statistic_8hpp"/>
      </node>
      <node id="46803">
        <label>neighbor_search_stat.hpp</label>
        <link refid="neighbor__search__stat_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
      </node>
      <node id="46782">
        <label>lin_alg_impl.hpp</label>
      </node>
      <node id="46726">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="46693">
        <label>cmath</label>
      </node>
      <node id="46754">
        <label>bounds.hpp</label>
        <link refid="bounds_8hpp"/>
        <childnode refid="46755" relation="include">
        </childnode>
        <childnode refid="46756" relation="include">
        </childnode>
        <childnode refid="46758" relation="include">
        </childnode>
        <childnode refid="46759" relation="include">
        </childnode>
        <childnode refid="46761" relation="include">
        </childnode>
        <childnode refid="46763" relation="include">
        </childnode>
        <childnode refid="46765" relation="include">
        </childnode>
      </node>
      <node id="46712">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="46701">
        <label>stdexcept</label>
      </node>
      <node id="46792">
        <label>binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46786" relation="include">
        </childnode>
        <childnode refid="46793" relation="include">
        </childnode>
      </node>
      <node id="46721">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46709" relation="include">
        </childnode>
        <childnode refid="46707" relation="include">
        </childnode>
      </node>
      <node id="46755">
        <label>mlpack/core/math/range.hpp</label>
      </node>
      <node id="46745">
        <label>string</label>
      </node>
      <node id="46778">
        <label>binary_space_tree/rp_tree_max_split.hpp</label>
        <link refid="rp__tree__max__split_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46769" relation="include">
        </childnode>
        <childnode refid="46779" relation="include">
        </childnode>
      </node>
      <node id="46770">
        <label>midpoint_split_impl.hpp</label>
      </node>
      <node id="46733">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="46734" relation="include">
        </childnode>
        <childnode refid="46700" relation="include">
        </childnode>
      </node>
      <node id="46750">
        <label>mlpack/methods/cf/cf.hpp</label>
        <link refid="cf_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46751" relation="include">
        </childnode>
        <childnode refid="46813" relation="include">
        </childnode>
        <childnode refid="46815" relation="include">
        </childnode>
        <childnode refid="46821" relation="include">
        </childnode>
        <childnode refid="46824" relation="include">
        </childnode>
        <childnode refid="46825" relation="include">
        </childnode>
        <childnode refid="46827" relation="include">
        </childnode>
        <childnode refid="46828" relation="include">
        </childnode>
        <childnode refid="46829" relation="include">
        </childnode>
        <childnode refid="46743" relation="include">
        </childnode>
        <childnode refid="46830" relation="include">
        </childnode>
        <childnode refid="46831" relation="include">
        </childnode>
      </node>
      <node id="46743">
        <label>map</label>
      </node>
      <node id="46793">
        <label>dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="46781">
        <label>mlpack/core/math/lin_alg.hpp</label>
        <link refid="lin__alg_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46782" relation="include">
        </childnode>
      </node>
      <node id="46695">
        <label>cfloat</label>
      </node>
      <node id="46824">
        <label>mlpack/methods/cf/normalization/no_normalization.hpp</label>
        <link refid="no__normalization_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
      </node>
      <node id="46725">
        <label>boost/variant.hpp</label>
      </node>
      <node id="46747">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="46709">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="46732">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="46733" relation="include">
        </childnode>
        <childnode refid="46709" relation="include">
        </childnode>
        <childnode refid="46716" relation="include">
        </childnode>
        <childnode refid="46734" relation="include">
        </childnode>
      </node>
      <node id="46749">
        <label>mlpack/methods/svdplusplus/svdplusplus.hpp</label>
        <link refid="svdplusplus_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46750" relation="include">
        </childnode>
        <childnode refid="46832" relation="include">
        </childnode>
        <childnode refid="46833" relation="include">
        </childnode>
        <childnode refid="46835" relation="include">
        </childnode>
      </node>
      <node id="46722">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="46720">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46709" relation="include">
        </childnode>
        <childnode refid="46707" relation="include">
        </childnode>
      </node>
      <node id="46723">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46709" relation="include">
        </childnode>
        <childnode refid="46707" relation="include">
        </childnode>
      </node>
      <node id="46788">
        <label>binary_space_tree_impl.hpp</label>
      </node>
      <node id="46711">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="46823">
        <label>amf_impl.hpp</label>
      </node>
      <node id="46731">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="46707" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46709" relation="include">
        </childnode>
        <childnode refid="46719" relation="include">
        </childnode>
        <childnode refid="46728" relation="include">
        </childnode>
      </node>
      <node id="46735">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="46736" relation="include">
        </childnode>
      </node>
      <node id="46794">
        <label>binary_space_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="46808">
        <label>neighbor_search_rules_impl.hpp</label>
      </node>
      <node id="46737">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="46692">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="46693" relation="include">
        </childnode>
        <childnode refid="46694" relation="include">
        </childnode>
        <childnode refid="46695" relation="include">
        </childnode>
        <childnode refid="46696" relation="include">
        </childnode>
        <childnode refid="46697" relation="include">
        </childnode>
        <childnode refid="46698" relation="include">
        </childnode>
        <childnode refid="46699" relation="include">
        </childnode>
        <childnode refid="46700" relation="include">
        </childnode>
        <childnode refid="46701" relation="include">
        </childnode>
        <childnode refid="46702" relation="include">
        </childnode>
        <childnode refid="46703" relation="include">
        </childnode>
        <childnode refid="46704" relation="include">
        </childnode>
        <childnode refid="46705" relation="include">
        </childnode>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46707" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46709" relation="include">
        </childnode>
        <childnode refid="46710" relation="include">
        </childnode>
        <childnode refid="46711" relation="include">
        </childnode>
        <childnode refid="46712" relation="include">
        </childnode>
        <childnode refid="46713" relation="include">
        </childnode>
        <childnode refid="46714" relation="include">
        </childnode>
        <childnode refid="46718" relation="include">
        </childnode>
        <childnode refid="46719" relation="include">
        </childnode>
        <childnode refid="46720" relation="include">
        </childnode>
        <childnode refid="46721" relation="include">
        </childnode>
        <childnode refid="46722" relation="include">
        </childnode>
        <childnode refid="46723" relation="include">
        </childnode>
        <childnode refid="46724" relation="include">
        </childnode>
        <childnode refid="46730" relation="include">
        </childnode>
        <childnode refid="46731" relation="include">
        </childnode>
        <childnode refid="46728" relation="include">
        </childnode>
        <childnode refid="46732" relation="include">
        </childnode>
        <childnode refid="46735" relation="include">
        </childnode>
        <childnode refid="46737" relation="include">
        </childnode>
        <childnode refid="46738" relation="include">
        </childnode>
        <childnode refid="46747" relation="include">
        </childnode>
        <childnode refid="46748" relation="include">
        </childnode>
      </node>
      <node id="46790">
        <label>single_tree_traverser_impl.hpp</label>
      </node>
      <node id="46812">
        <label>furthest_neighbor_sort_impl.hpp</label>
      </node>
      <node id="46768">
        <label>binary_space_tree/midpoint_split.hpp</label>
        <link refid="midpoint__split_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46769" relation="include">
        </childnode>
        <childnode refid="46770" relation="include">
        </childnode>
      </node>
      <node id="46776">
        <label>random</label>
      </node>
      <node id="46762">
        <label>ballbound_impl.hpp</label>
      </node>
      <node id="46791">
        <label>binary_space_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="46816">
        <label>mlpack/methods/amf/update_rules/svd_batch_learning.hpp</label>
        <link refid="svd__batch__learning_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
      </node>
      <node id="46698">
        <label>cstdio</label>
      </node>
      <node id="46827">
        <label>mlpack/methods/cf/neighbor_search_policies/lmetric_search.hpp</label>
        <link refid="lmetric__search_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46751" relation="include">
        </childnode>
        <childnode refid="46756" relation="include">
        </childnode>
      </node>
      <node id="46766">
        <label>address.hpp</label>
        <link refid="address_8hpp"/>
      </node>
      <node id="46800">
        <label>mlpack/core/tree/tree_traits.hpp</label>
        <link refid="tree__traits_8hpp"/>
      </node>
      <node id="46814">
        <label>mlpack/methods/amf/update_rules/nmf_mult_dist.hpp</label>
        <link refid="nmf__mult__dist_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
      </node>
      <node id="46702">
        <label>tuple</label>
      </node>
      <node id="46707">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="46784">
        <label>binary_space_tree/ub_tree_split.hpp</label>
        <link refid="ub__tree__split_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46766" relation="include">
        </childnode>
        <childnode refid="46785" relation="include">
        </childnode>
      </node>
      <node id="46724">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="46707" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46709" relation="include">
        </childnode>
        <childnode refid="46711" relation="include">
        </childnode>
        <childnode refid="46725" relation="include">
        </childnode>
        <childnode refid="46726" relation="include">
        </childnode>
        <childnode refid="46727" relation="include">
        </childnode>
        <childnode refid="46728" relation="include">
        </childnode>
      </node>
      <node id="46786">
        <label>binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46787" relation="include">
        </childnode>
        <childnode refid="46768" relation="include">
        </childnode>
        <childnode refid="46788" relation="include">
        </childnode>
        <childnode refid="46753" relation="include">
        </childnode>
      </node>
      <node id="46759">
        <label>hrectbound.hpp</label>
        <link refid="hrectbound_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46755" relation="include">
        </childnode>
        <childnode refid="46756" relation="include">
        </childnode>
        <childnode refid="46758" relation="include">
        </childnode>
        <childnode refid="46760" relation="include">
        </childnode>
      </node>
      <node id="46752">
        <label>vector</label>
      </node>
      <node id="46783">
        <label>rp_tree_mean_split_impl.hpp</label>
      </node>
      <node id="46774">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46775" relation="include">
        </childnode>
        <childnode refid="46776" relation="include">
        </childnode>
      </node>
      <node id="46822">
        <label>mlpack/methods/amf/termination_policies/simple_tolerance_termination.hpp</label>
        <link refid="simple__tolerance__termination_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
      </node>
      <node id="46703">
        <label>utility</label>
      </node>
      <node id="46727">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="46718">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="46753">
        <label>mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46754" relation="include">
        </childnode>
        <childnode refid="46768" relation="include">
        </childnode>
        <childnode refid="46771" relation="include">
        </childnode>
        <childnode refid="46773" relation="include">
        </childnode>
        <childnode refid="46778" relation="include">
        </childnode>
        <childnode refid="46780" relation="include">
        </childnode>
        <childnode refid="46784" relation="include">
        </childnode>
        <childnode refid="46786" relation="include">
        </childnode>
        <childnode refid="46789" relation="include">
        </childnode>
        <childnode refid="46791" relation="include">
        </childnode>
        <childnode refid="46792" relation="include">
        </childnode>
        <childnode refid="46794" relation="include">
        </childnode>
        <childnode refid="46795" relation="include">
        </childnode>
        <childnode refid="46798" relation="include">
        </childnode>
        <childnode refid="46799" relation="include">
        </childnode>
        <childnode refid="46801" relation="include">
        </childnode>
      </node>
      <node id="46819">
        <label>mlpack/methods/amf/init_rules/random_init.hpp</label>
        <link refid="amf_2init__rules_2random__init_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
      </node>
      <node id="46804">
        <label>sort_policies/nearest_neighbor_sort.hpp</label>
        <link refid="nearest__neighbor__sort_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46805" relation="include">
        </childnode>
      </node>
      <node id="46715">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="46716" relation="include">
        </childnode>
      </node>
      <node id="46691">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svdplusplus_method.hpp</label>
        <link refid="svdplusplus__method_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46749" relation="include">
        </childnode>
      </node>
      <node id="46738">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="46739" relation="include">
        </childnode>
        <childnode refid="46740" relation="include">
        </childnode>
        <childnode refid="46741" relation="include">
        </childnode>
        <childnode refid="46742" relation="include">
        </childnode>
        <childnode refid="46743" relation="include">
        </childnode>
        <childnode refid="46744" relation="include">
        </childnode>
        <childnode refid="46745" relation="include">
        </childnode>
        <childnode refid="46746" relation="include">
        </childnode>
      </node>
      <node id="46834">
        <label>svdplusplus_function_impl.hpp</label>
      </node>
      <node id="46716">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="46751">
        <label>mlpack/methods/neighbor_search/neighbor_search.hpp</label>
        <link refid="neighbor__search_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46752" relation="include">
        </childnode>
        <childnode refid="46745" relation="include">
        </childnode>
        <childnode refid="46753" relation="include">
        </childnode>
        <childnode refid="46802" relation="include">
        </childnode>
        <childnode refid="46786" relation="include">
        </childnode>
        <childnode refid="46803" relation="include">
        </childnode>
        <childnode refid="46804" relation="include">
        </childnode>
        <childnode refid="46806" relation="include">
        </childnode>
        <childnode refid="46809" relation="include">
        </childnode>
        <childnode refid="46810" relation="include">
        </childnode>
      </node>
      <node id="46730">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="46728" relation="include">
        </childnode>
        <childnode refid="46724" relation="include">
        </childnode>
        <childnode refid="46731" relation="include">
        </childnode>
      </node>
      <node id="46699">
        <label>cstdlib</label>
      </node>
      <node id="46818">
        <label>mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp</label>
        <link refid="svd__complete__incremental__learning_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
      </node>
      <node id="46809">
        <label>neighbor_search_impl.hpp</label>
      </node>
      <node id="46694">
        <label>cctype</label>
      </node>
      <node id="46830">
        <label>iostream</label>
      </node>
      <node id="46831">
        <label>cf_impl.hpp</label>
      </node>
      <node id="46811">
        <label>sort_policies/furthest_neighbor_sort.hpp</label>
        <link refid="furthest__neighbor__sort_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46812" relation="include">
        </childnode>
      </node>
      <node id="46815">
        <label>mlpack/methods/amf/update_rules/nmf_als.hpp</label>
        <link refid="nmf__als_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
      </node>
      <node id="46717">
        <label>unordered_map</label>
      </node>
      <node id="46696">
        <label>climits</label>
      </node>
      <node id="46744">
        <label>mutex</label>
      </node>
      <node id="46828">
        <label>mlpack/methods/cf/interpolation_policies/average_interpolation.hpp</label>
        <link refid="average__interpolation_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
      </node>
      <node id="46740">
        <label>chrono</label>
      </node>
      <node id="46807">
        <label>mlpack/core/tree/traversal_info.hpp</label>
        <link refid="traversal__info_8hpp"/>
      </node>
      <node id="46760">
        <label>hrectbound_impl.hpp</label>
      </node>
      <node id="46748">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="46780">
        <label>binary_space_tree/rp_tree_mean_split.hpp</label>
        <link refid="rp__tree__mean__split_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46778" relation="include">
        </childnode>
        <childnode refid="46769" relation="include">
        </childnode>
        <childnode refid="46781" relation="include">
        </childnode>
        <childnode refid="46783" relation="include">
        </childnode>
      </node>
      <node id="46777">
        <label>vantage_point_split_impl.hpp</label>
      </node>
      <node id="46746">
        <label>thread</label>
      </node>
      <node id="46761">
        <label>ballbound.hpp</label>
        <link refid="ballbound_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46756" relation="include">
        </childnode>
        <childnode refid="46758" relation="include">
        </childnode>
        <childnode refid="46762" relation="include">
        </childnode>
      </node>
      <node id="46817">
        <label>mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp</label>
        <link refid="svd__incomplete__incremental__learning_8hpp"/>
      </node>
      <node id="46779">
        <label>rp_tree_max_split_impl.hpp</label>
      </node>
      <node id="46769">
        <label>mlpack/core/tree/perform_split.hpp</label>
        <link refid="perform__split_8hpp"/>
      </node>
      <node id="46826">
        <label>mlpack/methods/amf/termination_policies/max_iteration_termination.hpp</label>
        <link refid="max__iteration__termination_8hpp"/>
      </node>
      <node id="46821">
        <label>mlpack/methods/amf/termination_policies/simple_residue_termination.hpp</label>
        <link refid="simple__residue__termination_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
      </node>
      <node id="46734">
        <label>type_traits</label>
      </node>
      <node id="46820">
        <label>mlpack/methods/amf/init_rules/random_acol_init.hpp</label>
        <link refid="random__acol__init_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46774" relation="include">
        </childnode>
      </node>
      <node id="46829">
        <label>set</label>
      </node>
      <node id="46795">
        <label>binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46796" relation="include">
        </childnode>
        <childnode refid="46753" relation="include">
        </childnode>
        <childnode refid="46797" relation="include">
        </childnode>
      </node>
      <node id="46710">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="46801">
        <label>binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="46753" relation="include">
        </childnode>
      </node>
      <node id="46704">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="46728">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="46706" relation="include">
        </childnode>
        <childnode refid="46707" relation="include">
        </childnode>
        <childnode refid="46708" relation="include">
        </childnode>
        <childnode refid="46709" relation="include">
        </childnode>
        <childnode refid="46729" relation="include">
        </childnode>
      </node>
      <node id="46764">
        <label>hollow_ball_bound_impl.hpp</label>
      </node>
      <node id="46835">
        <label>svdplusplus_impl.hpp</label>
      </node>
      <node id="46700">
        <label>cstring</label>
      </node>
      <node id="46719">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="46767">
        <label>cellbound_impl.hpp</label>
      </node>
      <node id="46785">
        <label>ub_tree_split_impl.hpp</label>
      </node>
      <node id="46765">
        <label>cellbound.hpp</label>
        <link refid="cellbound_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46755" relation="include">
        </childnode>
        <childnode refid="46756" relation="include">
        </childnode>
        <childnode refid="46758" relation="include">
        </childnode>
        <childnode refid="46766" relation="include">
        </childnode>
        <childnode refid="46767" relation="include">
        </childnode>
      </node>
      <node id="46832">
        <label>ensmallen.hpp</label>
      </node>
      <node id="46708">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="46756">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46757" relation="include">
        </childnode>
      </node>
      <node id="46773">
        <label>binary_space_tree/vantage_point_split.hpp</label>
        <link refid="vantage__point__split_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46769" relation="include">
        </childnode>
        <childnode refid="46774" relation="include">
        </childnode>
        <childnode refid="46777" relation="include">
        </childnode>
      </node>
      <node id="46825">
        <label>mlpack/methods/cf/decomposition_policies/nmf_method.hpp</label>
        <link refid="nmf__method_8hpp"/>
        <childnode refid="46692" relation="include">
        </childnode>
        <childnode refid="46813" relation="include">
        </childnode>
        <childnode refid="46815" relation="include">
        </childnode>
        <childnode refid="46826" relation="include">
        </childnode>
        <childnode refid="46821" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy" prot="public">mlpack::cf::SVDPlusPlusPolicy</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1cf">mlpack::cf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Wenhao Huang</para></simplesect>
Implementation of the svdplusplus method for use in the Collaborative Filtering.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="14"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_CF_DECOMPOSITION_POLICIES_SVDPLUSPLUS_METHOD_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_CF_DECOMPOSITION_POLICIES_SVDPLUSPLUS_METHOD_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="svdplusplus_8hpp" kindref="compound">mlpack/methods/svdplusplus/svdplusplus.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cf<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy" kindref="compound">SVDPlusPlusPolicy</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51" refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a828ff4b7ce3c577349b909921c279be0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a828ff4b7ce3c577349b909921c279be0" kindref="member">SVDPlusPlusPolicy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations<sp/>=<sp/>10,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha<sp/>=<sp/>0.001,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda<sp/>=<sp/>0.1)<sp/>:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maxIterations(maxIterations),</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alpha(alpha),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lambda(lambda)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a3b3962a80d1217a799cfab110b487cea" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a3b3962a80d1217a799cfab110b487cea" kindref="member">Apply</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::sp_mat&amp;<sp/></highlight><highlight class="comment">/*<sp/>cleanedData<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rank,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>minResidue<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>mit<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1svd_1_1SVDPlusPlus" kindref="compound">svd::SVDPlusPlus&lt;&gt;</ref><sp/>svdpp(maxIterations,<sp/>alpha,<sp/>lambda);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>implicit<sp/>data<sp/>in<sp/>the<sp/>form<sp/>of<sp/>sparse<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::mat<sp/>implicitDenseData<sp/>=<sp/>data.submat(0,<sp/>0,<sp/>1,<sp/>data.n_cols<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>svdpp.<ref refid="classmlpack_1_1svd_1_1SVDPlusPlus_1ac693882f80e29d39f18dd080e00a9403" kindref="member">CleanData</ref>(implicitDenseData,<sp/>implicitData,<sp/>data);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>decomposition<sp/>using<sp/>the<sp/>svdplusplus<sp/>algorithm.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>svdpp.<ref refid="classmlpack_1_1svd_1_1SVDPlusPlus_1af419d2631d74927653807942b3c5fa97" kindref="member">Apply</ref>(data,<sp/>implicitDenseData,<sp/>rank,<sp/>w,<sp/>h,<sp/>p,<sp/>q,<sp/>y);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a0c3e16d73c8b25b8934cbc36ac161619" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a0c3e16d73c8b25b8934cbc36ac161619" kindref="member">GetRating</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>user,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>item)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="97"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>through<sp/>each<sp/>item<sp/>which<sp/>the<sp/>user<sp/>interacted<sp/>with<sp/>to<sp/>calculate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>user<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::vec<sp/>userVec(h.n_rows,<sp/>arma::fill::zeros);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::sp_mat::const_iterator<sp/>it<sp/>=<sp/>implicitData.begin_col(user);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::sp_mat::const_iterator<sp/>it_end<sp/>=<sp/>implicitData.end_col(user);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>implicitCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>it<sp/>!=<sp/>it_end;<sp/>++it)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>userVec<sp/>+=<sp/>y.col(it.row());</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>implicitCount<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(implicitCount<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>userVec<sp/>/=<sp/>std::sqrt(implicitCount);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>userVec<sp/>+=<sp/>h.col(user);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rating<sp/>=</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::as_scalar(w.row(item)<sp/>*<sp/>userVec)<sp/>+<sp/>p(item)<sp/>+<sp/>q(user);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rating;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1ae5dc3895f0294bf054cb2ea58084a426" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1ae5dc3895f0294bf054cb2ea58084a426" kindref="member">GetRatingOfUser</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>user,<sp/>arma::vec&amp;<sp/>rating)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="125"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>through<sp/>each<sp/>item<sp/>which<sp/>the<sp/>user<sp/>interacted<sp/>with<sp/>to<sp/>calculate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>user<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::vec<sp/>userVec(h.n_rows,<sp/>arma::fill::zeros);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::sp_mat::const_iterator<sp/>it<sp/>=<sp/>implicitData.begin_col(user);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::sp_mat::const_iterator<sp/>it_end<sp/>=<sp/>implicitData.end_col(user);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>implicitCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>it<sp/>!=<sp/>it_end;<sp/>++it)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>userVec<sp/>+=<sp/>y.col(it.row());</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>implicitCount<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(implicitCount<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>userVec<sp/>/=<sp/>std::sqrt(implicitCount);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>userVec<sp/>+=<sp/>h.col(user);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>rating<sp/>=<sp/>w<sp/>*<sp/>userVec<sp/>+<sp/>p<sp/>+<sp/>q(user);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NeighborSearchPolicy&gt;</highlight></codeline>
<codeline lineno="157" refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a35bca7a6e09f4fb35b9945a9368711e4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a35bca7a6e09f4fb35b9945a9368711e4" kindref="member">GetNeighborhood</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Col&lt;size_t&gt;&amp;<sp/>users,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numUsersForSimilarity,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;size_t&gt;&amp;<sp/>neighborhood,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>similarities)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="161"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>User<sp/>latent<sp/>vectors<sp/>(matrix<sp/>H)<sp/>are<sp/>used<sp/>for<sp/>neighbor<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporarily<sp/>store<sp/>feature<sp/>vector<sp/>of<sp/>queried<sp/>users.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::mat<sp/>query(h.n_rows,<sp/>users.n_elem);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>feature<sp/>vectors<sp/>of<sp/>queried<sp/>users.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>users.n_elem;<sp/>++i)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>query.col(i)<sp/>=<sp/>h.col(users(i));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>NeighborSearchPolicy<sp/>neighborSearch(h);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>neighborSearch.Search(</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>query,<sp/>numUsersForSimilarity,<sp/>neighborhood,<sp/>similarities);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a0f733dde66e23287758de984b5151e36" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/><ref refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a0f733dde66e23287758de984b5151e36" kindref="member">W</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w;<sp/>}</highlight></codeline>
<codeline lineno="177" refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a71e6a6119b9efde17f4112c6d82d9233" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/><ref refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a71e6a6119b9efde17f4112c6d82d9233" kindref="member">H</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h;<sp/>}</highlight></codeline>
<codeline lineno="179" refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a833b773328ccaf79c06f39e4fb12a993" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/><ref refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a833b773328ccaf79c06f39e4fb12a993" kindref="member">Q</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>q;<sp/>}</highlight></codeline>
<codeline lineno="181" refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1ae9a18ef885ed4222645dad9b7b15c3ef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/><ref refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1ae9a18ef885ed4222645dad9b7b15c3ef" kindref="member">P</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;<sp/>}</highlight></codeline>
<codeline lineno="183" refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a2a770e600ba5b7c4254d77de31d4ae10" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/><ref refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a2a770e600ba5b7c4254d77de31d4ae10" kindref="member">Y</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y;<sp/>}</highlight></codeline>
<codeline lineno="185" refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1abf7dc5942d64c22eec66a6d52d4c45b3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::sp_mat&amp;<sp/><ref refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1abf7dc5942d64c22eec66a6d52d4c45b3" kindref="member">ImplicitData</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>implicitData;<sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a420770944a5b0c7a852c4ec372c4a2d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a420770944a5b0c7a852c4ec372c4a2d1" kindref="member">MaxIterations</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxIterations;<sp/>}</highlight></codeline>
<codeline lineno="190" refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1acda675ab4ab86b95c92bc33bc391a61b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1acda675ab4ab86b95c92bc33bc391a61b" kindref="member">MaxIterations</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxIterations;<sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a500ecd077d5cc5fdbf6ceb095d8de9e1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a500ecd077d5cc5fdbf6ceb095d8de9e1" kindref="member">Alpha</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>alpha;<sp/>}</highlight></codeline>
<codeline lineno="195" refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1acbb0e4747a3a307bee88bad71e5eeaf1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1acbb0e4747a3a307bee88bad71e5eeaf1" kindref="member">Alpha</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>alpha;<sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a53535041275cedd0ec3de67ca032aa94" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a53535041275cedd0ec3de67ca032aa94" kindref="member">Lambda</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lambda;<sp/>}</highlight></codeline>
<codeline lineno="200" refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1aaf66629b989a326453647f42443c6a0c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1aaf66629b989a326453647f42443c6a0c" kindref="member">Lambda</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lambda;<sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="206" refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a65cba07328997659bec80b9879b15a51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(maxIterations));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(alpha));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(lambda));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(w));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(h));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(p));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(q));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(y));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(implicitData));</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>arma::mat<sp/>w;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>arma::mat<sp/>h;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>arma::vec<sp/>p;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>arma::vec<sp/>q;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>arma::mat<sp/>y;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>arma::sp_mat<sp/>implicitData;</highlight></codeline>
<codeline lineno="238"><highlight class="normal">};</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svdplusplus_method.hpp"/>
  </compounddef>
</doxygen>
