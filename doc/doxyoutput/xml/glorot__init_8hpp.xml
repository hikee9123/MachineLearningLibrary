<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="glorot__init_8hpp" kind="file" language="C++">
    <compoundname>glorot_init.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="ann_2init__rules_2random__init_8hpp" local="yes">random_init.hpp</includes>
    <includes refid="gaussian__init_8hpp" local="yes">gaussian_init.hpp</includes>
    <includedby refid="multihead__attention_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/ann/layer/multihead_attention.hpp</includedby>
    <incdepgraph>
      <node id="28716">
        <label>list</label>
      </node>
      <node id="28713">
        <label>atomic</label>
      </node>
      <node id="28703">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="28679">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="28715">
        <label>iomanip</label>
      </node>
      <node id="28688">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="28689" relation="include">
        </childnode>
        <childnode refid="28691" relation="include">
        </childnode>
      </node>
      <node id="28665">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/init_rules/glorot_init.hpp</label>
        <link refid="glorot__init_8hpp"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28723" relation="include">
        </childnode>
        <childnode refid="28724" relation="include">
        </childnode>
      </node>
      <node id="28671">
        <label>cstdint</label>
      </node>
      <node id="28680">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="28687">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="28726">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="28710">
        <label>arma_config.hpp</label>
      </node>
      <node id="28700">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="28667">
        <label>cmath</label>
      </node>
      <node id="28686">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="28675">
        <label>stdexcept</label>
      </node>
      <node id="28695">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="28680" relation="include">
        </childnode>
        <childnode refid="28682" relation="include">
        </childnode>
        <childnode refid="28683" relation="include">
        </childnode>
        <childnode refid="28681" relation="include">
        </childnode>
      </node>
      <node id="28719">
        <label>string</label>
      </node>
      <node id="28707">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="28708" relation="include">
        </childnode>
        <childnode refid="28674" relation="include">
        </childnode>
      </node>
      <node id="28717">
        <label>map</label>
      </node>
      <node id="28669">
        <label>cfloat</label>
      </node>
      <node id="28699">
        <label>boost/variant.hpp</label>
      </node>
      <node id="28721">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="28683">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="28706">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="28707" relation="include">
        </childnode>
        <childnode refid="28683" relation="include">
        </childnode>
        <childnode refid="28690" relation="include">
        </childnode>
        <childnode refid="28708" relation="include">
        </childnode>
      </node>
      <node id="28723">
        <label>random_init.hpp</label>
        <link refid="ann_2init__rules_2random__init_8hpp"/>
        <childnode refid="28666" relation="include">
        </childnode>
      </node>
      <node id="28696">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="28694">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="28680" relation="include">
        </childnode>
        <childnode refid="28682" relation="include">
        </childnode>
        <childnode refid="28683" relation="include">
        </childnode>
        <childnode refid="28681" relation="include">
        </childnode>
      </node>
      <node id="28697">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="28680" relation="include">
        </childnode>
        <childnode refid="28682" relation="include">
        </childnode>
        <childnode refid="28683" relation="include">
        </childnode>
        <childnode refid="28681" relation="include">
        </childnode>
      </node>
      <node id="28685">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="28705">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="28681" relation="include">
        </childnode>
        <childnode refid="28682" relation="include">
        </childnode>
        <childnode refid="28683" relation="include">
        </childnode>
        <childnode refid="28693" relation="include">
        </childnode>
        <childnode refid="28702" relation="include">
        </childnode>
      </node>
      <node id="28709">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="28710" relation="include">
        </childnode>
      </node>
      <node id="28711">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="28666">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="28667" relation="include">
        </childnode>
        <childnode refid="28668" relation="include">
        </childnode>
        <childnode refid="28669" relation="include">
        </childnode>
        <childnode refid="28670" relation="include">
        </childnode>
        <childnode refid="28671" relation="include">
        </childnode>
        <childnode refid="28672" relation="include">
        </childnode>
        <childnode refid="28673" relation="include">
        </childnode>
        <childnode refid="28674" relation="include">
        </childnode>
        <childnode refid="28675" relation="include">
        </childnode>
        <childnode refid="28676" relation="include">
        </childnode>
        <childnode refid="28677" relation="include">
        </childnode>
        <childnode refid="28678" relation="include">
        </childnode>
        <childnode refid="28679" relation="include">
        </childnode>
        <childnode refid="28680" relation="include">
        </childnode>
        <childnode refid="28681" relation="include">
        </childnode>
        <childnode refid="28682" relation="include">
        </childnode>
        <childnode refid="28683" relation="include">
        </childnode>
        <childnode refid="28684" relation="include">
        </childnode>
        <childnode refid="28685" relation="include">
        </childnode>
        <childnode refid="28686" relation="include">
        </childnode>
        <childnode refid="28687" relation="include">
        </childnode>
        <childnode refid="28688" relation="include">
        </childnode>
        <childnode refid="28692" relation="include">
        </childnode>
        <childnode refid="28693" relation="include">
        </childnode>
        <childnode refid="28694" relation="include">
        </childnode>
        <childnode refid="28695" relation="include">
        </childnode>
        <childnode refid="28696" relation="include">
        </childnode>
        <childnode refid="28697" relation="include">
        </childnode>
        <childnode refid="28698" relation="include">
        </childnode>
        <childnode refid="28704" relation="include">
        </childnode>
        <childnode refid="28705" relation="include">
        </childnode>
        <childnode refid="28702" relation="include">
        </childnode>
        <childnode refid="28706" relation="include">
        </childnode>
        <childnode refid="28709" relation="include">
        </childnode>
        <childnode refid="28711" relation="include">
        </childnode>
        <childnode refid="28712" relation="include">
        </childnode>
        <childnode refid="28721" relation="include">
        </childnode>
        <childnode refid="28722" relation="include">
        </childnode>
      </node>
      <node id="28727">
        <label>random</label>
      </node>
      <node id="28672">
        <label>cstdio</label>
      </node>
      <node id="28676">
        <label>tuple</label>
      </node>
      <node id="28681">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="28698">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="28681" relation="include">
        </childnode>
        <childnode refid="28682" relation="include">
        </childnode>
        <childnode refid="28683" relation="include">
        </childnode>
        <childnode refid="28685" relation="include">
        </childnode>
        <childnode refid="28699" relation="include">
        </childnode>
        <childnode refid="28700" relation="include">
        </childnode>
        <childnode refid="28701" relation="include">
        </childnode>
        <childnode refid="28702" relation="include">
        </childnode>
      </node>
      <node id="28724">
        <label>gaussian_init.hpp</label>
        <link refid="gaussian__init_8hpp"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28725" relation="include">
        </childnode>
      </node>
      <node id="28725">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="28666" relation="include">
        </childnode>
        <childnode refid="28726" relation="include">
        </childnode>
        <childnode refid="28727" relation="include">
        </childnode>
      </node>
      <node id="28677">
        <label>utility</label>
      </node>
      <node id="28701">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="28692">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="28689">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="28690" relation="include">
        </childnode>
      </node>
      <node id="28712">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="28713" relation="include">
        </childnode>
        <childnode refid="28714" relation="include">
        </childnode>
        <childnode refid="28715" relation="include">
        </childnode>
        <childnode refid="28716" relation="include">
        </childnode>
        <childnode refid="28717" relation="include">
        </childnode>
        <childnode refid="28718" relation="include">
        </childnode>
        <childnode refid="28719" relation="include">
        </childnode>
        <childnode refid="28720" relation="include">
        </childnode>
      </node>
      <node id="28690">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="28704">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="28702" relation="include">
        </childnode>
        <childnode refid="28698" relation="include">
        </childnode>
        <childnode refid="28705" relation="include">
        </childnode>
      </node>
      <node id="28673">
        <label>cstdlib</label>
      </node>
      <node id="28668">
        <label>cctype</label>
      </node>
      <node id="28691">
        <label>unordered_map</label>
      </node>
      <node id="28670">
        <label>climits</label>
      </node>
      <node id="28718">
        <label>mutex</label>
      </node>
      <node id="28714">
        <label>chrono</label>
      </node>
      <node id="28722">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="28720">
        <label>thread</label>
      </node>
      <node id="28708">
        <label>type_traits</label>
      </node>
      <node id="28684">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="28678">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="28702">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="28680" relation="include">
        </childnode>
        <childnode refid="28681" relation="include">
        </childnode>
        <childnode refid="28682" relation="include">
        </childnode>
        <childnode refid="28683" relation="include">
        </childnode>
        <childnode refid="28703" relation="include">
        </childnode>
      </node>
      <node id="28674">
        <label>cstring</label>
      </node>
      <node id="28693">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="28682">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="28771">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/radial_basis_function.hpp</label>
        <link refid="radial__basis__function_8hpp"/>
        <childnode refid="28730" relation="include">
        </childnode>
      </node>
      <node id="28778">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/parameters_visitor.hpp</label>
        <link refid="parameters__visitor_8hpp"/>
        <childnode refid="28779" relation="include">
        </childnode>
      </node>
      <node id="28750">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_merge.hpp</label>
        <link refid="multiply__merge_8hpp"/>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
      <node id="28745">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/gru.hpp</label>
        <link refid="gru_8hpp"/>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
      <node id="28744">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/sequential.hpp</label>
        <link refid="sequential_8hpp"/>
        <childnode refid="28739" relation="include">
        </childnode>
        <childnode refid="28745" relation="include">
        </childnode>
        <childnode refid="28746" relation="include">
        </childnode>
        <childnode refid="28747" relation="include">
        </childnode>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
      <node id="28728">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/init_rules/glorot_init.hpp</label>
        <link refid="glorot__init_8hpp"/>
        <childnode refid="28729" relation="include">
        </childnode>
      </node>
      <node id="28776">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/gradient_zero_visitor.hpp</label>
        <link refid="gradient__zero__visitor_8hpp"/>
      </node>
      <node id="28764">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/glimpse.hpp</label>
        <link refid="glimpse_8hpp"/>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
      <node id="28760">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/convolution.hpp</label>
        <link refid="convolution_8hpp"/>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
      <node id="28740">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="28732" relation="include">
        </childnode>
        <childnode refid="28733" relation="include">
        </childnode>
        <childnode refid="28741" relation="include">
        </childnode>
        <childnode refid="28742" relation="include">
        </childnode>
        <childnode refid="28735" relation="include">
        </childnode>
        <childnode refid="28736" relation="include">
        </childnode>
        <childnode refid="28737" relation="include">
        </childnode>
        <childnode refid="28743" relation="include">
        </childnode>
      </node>
      <node id="28747">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/recurrent.hpp</label>
        <link refid="recurrent_8hpp"/>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
      <node id="28754">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/output_parameter_visitor.hpp</label>
        <link refid="output__parameter__visitor_8hpp"/>
        <childnode refid="28732" relation="include">
        </childnode>
        <childnode refid="28733" relation="include">
        </childnode>
        <childnode refid="28734" relation="include">
        </childnode>
        <childnode refid="28738" relation="include">
        </childnode>
        <childnode refid="28749" relation="include">
        </childnode>
        <childnode refid="28744" relation="include">
        </childnode>
        <childnode refid="28745" relation="include">
        </childnode>
        <childnode refid="28748" relation="include">
        </childnode>
        <childnode refid="28750" relation="include">
        </childnode>
        <childnode refid="28746" relation="include">
        </childnode>
        <childnode refid="28747" relation="include">
        </childnode>
        <childnode refid="28751" relation="include">
        </childnode>
        <childnode refid="28742" relation="include">
        </childnode>
      </node>
      <node id="28780">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/reset_cell_visitor.hpp</label>
        <link refid="reset__cell__visitor_8hpp"/>
      </node>
      <node id="28774">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/forward_visitor.hpp</label>
        <link refid="forward__visitor_8hpp"/>
      </node>
      <node id="28766">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/linear3d.hpp</label>
        <link refid="linear3d_8hpp"/>
        <childnode refid="28730" relation="include">
        </childnode>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
      <node id="28742">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/rnn.hpp</label>
        <link refid="rnn_8hpp"/>
      </node>
      <node id="28735">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/categorical_dqn.hpp</label>
        <link refid="categorical__dqn_8hpp"/>
      </node>
      <node id="28757">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/adaptive_mean_pooling.hpp</label>
        <link refid="adaptive__mean__pooling_8hpp"/>
        <childnode refid="28730" relation="include">
        </childnode>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
      <node id="28770">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/vr_class_reward.hpp</label>
        <link refid="vr__class__reward_8hpp"/>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
      <node id="28772">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/add_visitor.hpp</label>
        <link refid="add__visitor_8hpp"/>
      </node>
      <node id="28775">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/gradient_visitor.hpp</label>
        <link refid="gradient__visitor_8hpp"/>
      </node>
      <node id="28731">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/delete_visitor.hpp</label>
        <link refid="delete__visitor_8hpp"/>
        <childnode refid="28732" relation="include">
        </childnode>
        <childnode refid="28733" relation="include">
        </childnode>
        <childnode refid="28738" relation="include">
        </childnode>
        <childnode refid="28749" relation="include">
        </childnode>
        <childnode refid="28744" relation="include">
        </childnode>
        <childnode refid="28748" relation="include">
        </childnode>
        <childnode refid="28750" relation="include">
        </childnode>
        <childnode refid="28747" relation="include">
        </childnode>
        <childnode refid="28751" relation="include">
        </childnode>
        <childnode refid="28742" relation="include">
        </childnode>
      </node>
      <node id="28751">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/weight_norm.hpp</label>
        <link refid="weight__norm_8hpp"/>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
      <node id="28768">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/reparametrization.hpp</label>
        <link refid="reparametrization_8hpp"/>
        <childnode refid="28730" relation="include">
        </childnode>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
      <node id="28763">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/util/check_input_shape.hpp</label>
        <link refid="check__input__shape_8hpp"/>
      </node>
      <node id="28769">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/transposed_convolution.hpp</label>
        <link refid="transposed__convolution_8hpp"/>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
      <node id="28729">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/multihead_attention.hpp</label>
        <link refid="multihead__attention_8hpp"/>
        <childnode refid="28730" relation="include">
        </childnode>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
      <node id="28730">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/layer_types.hpp</label>
        <link refid="layer__types_8hpp"/>
        <childnode refid="28731" relation="include">
        </childnode>
        <childnode refid="28752" relation="include">
        </childnode>
        <childnode refid="28753" relation="include">
        </childnode>
        <childnode refid="28754" relation="include">
        </childnode>
        <childnode refid="28755" relation="include">
        </childnode>
        <childnode refid="28732" relation="include">
        </childnode>
        <childnode refid="28733" relation="include">
        </childnode>
        <childnode refid="28756" relation="include">
        </childnode>
        <childnode refid="28757" relation="include">
        </childnode>
        <childnode refid="28738" relation="include">
        </childnode>
        <childnode refid="28758" relation="include">
        </childnode>
        <childnode refid="28749" relation="include">
        </childnode>
        <childnode refid="28759" relation="include">
        </childnode>
        <childnode refid="28760" relation="include">
        </childnode>
        <childnode refid="28739" relation="include">
        </childnode>
        <childnode refid="28761" relation="include">
        </childnode>
        <childnode refid="28762" relation="include">
        </childnode>
        <childnode refid="28744" relation="include">
        </childnode>
        <childnode refid="28764" relation="include">
        </childnode>
        <childnode refid="28745" relation="include">
        </childnode>
        <childnode refid="28748" relation="include">
        </childnode>
        <childnode refid="28740" relation="include">
        </childnode>
        <childnode refid="28765" relation="include">
        </childnode>
        <childnode refid="28766" relation="include">
        </childnode>
        <childnode refid="28767" relation="include">
        </childnode>
        <childnode refid="28750" relation="include">
        </childnode>
        <childnode refid="28746" relation="include">
        </childnode>
        <childnode refid="28747" relation="include">
        </childnode>
        <childnode refid="28768" relation="include">
        </childnode>
        <childnode refid="28769" relation="include">
        </childnode>
        <childnode refid="28770" relation="include">
        </childnode>
        <childnode refid="28751" relation="include">
        </childnode>
        <childnode refid="28771" relation="include">
        </childnode>
        <childnode refid="28741" relation="include">
        </childnode>
        <childnode refid="28742" relation="include">
        </childnode>
        <childnode refid="28772" relation="include">
        </childnode>
        <childnode refid="28773" relation="include">
        </childnode>
        <childnode refid="28774" relation="include">
        </childnode>
        <childnode refid="28775" relation="include">
        </childnode>
        <childnode refid="28776" relation="include">
        </childnode>
        <childnode refid="28777" relation="include">
        </childnode>
        <childnode refid="28778" relation="include">
        </childnode>
        <childnode refid="28780" relation="include">
        </childnode>
      </node>
      <node id="28755">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/init_rules/network_init.hpp</label>
        <link refid="network__init_8hpp"/>
        <childnode refid="28732" relation="include">
        </childnode>
        <childnode refid="28733" relation="include">
        </childnode>
        <childnode refid="28742" relation="include">
        </childnode>
      </node>
      <node id="28738">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/add_merge.hpp</label>
        <link refid="add__merge_8hpp"/>
        <childnode refid="28739" relation="include">
        </childnode>
        <childnode refid="28744" relation="include">
        </childnode>
        <childnode refid="28745" relation="include">
        </childnode>
        <childnode refid="28748" relation="include">
        </childnode>
        <childnode refid="28740" relation="include">
        </childnode>
        <childnode refid="28746" relation="include">
        </childnode>
        <childnode refid="28747" relation="include">
        </childnode>
      </node>
      <node id="28765">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/linear_no_bias.hpp</label>
        <link refid="linear__no__bias_8hpp"/>
        <childnode refid="28730" relation="include">
        </childnode>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
      <node id="28732">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/brnn.hpp</label>
        <link refid="brnn_8hpp"/>
      </node>
      <node id="28741">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer_names.hpp</label>
        <link refid="layer__names_8hpp"/>
      </node>
      <node id="28779">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/sac.hpp</label>
        <link refid="sac_8hpp"/>
      </node>
      <node id="28743">
        <label>/home/aakash/mlpack/src/mlpack/tests/custom_layer.hpp</label>
        <link refid="custom__layer_8hpp"/>
      </node>
      <node id="28762">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/input_shape_visitor.hpp</label>
        <link refid="input__shape__visitor_8hpp"/>
        <childnode refid="28744" relation="include">
        </childnode>
        <childnode refid="28747" relation="include">
        </childnode>
        <childnode refid="28763" relation="include">
        </childnode>
      </node>
      <node id="28746">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/recurrent_attention.hpp</label>
        <link refid="recurrent__attention_8hpp"/>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
      <node id="28761">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/linear.hpp</label>
        <link refid="linear_8hpp"/>
        <childnode refid="28739" relation="include">
        </childnode>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
      <node id="28749">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/concat.hpp</label>
        <link refid="concat_8hpp"/>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
      <node id="28767">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/minibatch_discrimination.hpp</label>
        <link refid="minibatch__discrimination_8hpp"/>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
      <node id="28733">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp</label>
        <link refid="ffn_8hpp"/>
        <childnode refid="28734" relation="include">
        </childnode>
        <childnode refid="28735" relation="include">
        </childnode>
        <childnode refid="28736" relation="include">
        </childnode>
        <childnode refid="28737" relation="include">
        </childnode>
      </node>
      <node id="28736">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp</label>
        <link refid="dueling__dqn_8hpp"/>
      </node>
      <node id="28759">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/concat_performance.hpp</label>
        <link refid="concat__performance_8hpp"/>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
      <node id="28739">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/dropconnect.hpp</label>
        <link refid="dropconnect_8hpp"/>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
      <node id="28753">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/copy_visitor.hpp</label>
        <link refid="copy__visitor_8hpp"/>
        <childnode refid="28732" relation="include">
        </childnode>
        <childnode refid="28733" relation="include">
        </childnode>
        <childnode refid="28744" relation="include">
        </childnode>
        <childnode refid="28747" relation="include">
        </childnode>
      </node>
      <node id="28752">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/delta_visitor.hpp</label>
        <link refid="delta__visitor_8hpp"/>
        <childnode refid="28732" relation="include">
        </childnode>
        <childnode refid="28733" relation="include">
        </childnode>
        <childnode refid="28738" relation="include">
        </childnode>
        <childnode refid="28749" relation="include">
        </childnode>
        <childnode refid="28744" relation="include">
        </childnode>
        <childnode refid="28745" relation="include">
        </childnode>
        <childnode refid="28748" relation="include">
        </childnode>
        <childnode refid="28750" relation="include">
        </childnode>
        <childnode refid="28746" relation="include">
        </childnode>
        <childnode refid="28747" relation="include">
        </childnode>
        <childnode refid="28751" relation="include">
        </childnode>
        <childnode refid="28742" relation="include">
        </childnode>
      </node>
      <node id="28734">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp</label>
        <link refid="gan_8hpp"/>
      </node>
      <node id="28758">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/atrous_convolution.hpp</label>
        <link refid="atrous__convolution_8hpp"/>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
      <node id="28773">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/backward_visitor.hpp</label>
        <link refid="backward__visitor_8hpp"/>
      </node>
      <node id="28737">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/simple_dqn.hpp</label>
        <link refid="simple__dqn_8hpp"/>
      </node>
      <node id="28777">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/parameters_set_visitor.hpp</label>
        <link refid="parameters__set__visitor_8hpp"/>
      </node>
      <node id="28756">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/adaptive_max_pooling.hpp</label>
        <link refid="adaptive__max__pooling_8hpp"/>
        <childnode refid="28730" relation="include">
        </childnode>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
      <node id="28748">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/highway.hpp</label>
        <link refid="highway_8hpp"/>
        <childnode refid="28740" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1ann_1_1GlorotInitializationType" prot="public">mlpack::ann::GlorotInitializationType</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1ann">mlpack::ann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Prabhat Sharma</para></simplesect>
Definition and implementation of the Glorot initialization method. This initialization rule initialize the weights to maintain activation variances and back-propagated gradients variance as one moves up or down the network.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="14"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_ANN_INIT_RULES_GLOROT_INIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_ANN_INIT_RULES_GLOROT_INIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ann_2init__rules_2random__init_8hpp" kindref="compound">random_init.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gaussian__init_8hpp" kindref="compound">gaussian_init.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack_1_1math" kindref="compound">mlpack::math</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ann<sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Uniform<sp/>=<sp/>true&gt;</highlight></codeline>
<codeline lineno="55" refid="classmlpack_1_1ann_1_1GlorotInitializationType" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1ann_1_1GlorotInitializationType" kindref="compound">GlorotInitializationType</ref></highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61" refid="classmlpack_1_1ann_1_1GlorotInitializationType_1a31ca952a1516a5e8013efef9faa0d0e6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1ann_1_1GlorotInitializationType_1a31ca952a1516a5e8013efef9faa0d0e6" kindref="member">GlorotInitializationType</ref>()</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>to<sp/>do<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Initialize(arma::Mat&lt;eT&gt;&amp;<sp/>W,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Initialize(arma::Mat&lt;eT&gt;&amp;<sp/>W);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Initialize(arma::Cube&lt;eT&gt;&amp;<sp/>W,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slices);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Initialize(arma::Cube&lt;eT&gt;&amp;<sp/>W);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>GlorotInitializationType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="113" refid="classmlpack_1_1ann_1_1GlorotInitializationType_1a8a614fcc8aeff6f47c9f608762411e2a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1GlorotInitializationType" kindref="compound">GlorotInitializationType&lt;false&gt;::Initialize</ref>(arma::Mat&lt;eT&gt;&amp;<sp/>W,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(W.is_empty())</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>W.set_size(rows,<sp/>cols);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>var<sp/>=<sp/>2.0<sp/>/<sp/>double(rows<sp/>+<sp/>cols);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1ann_1_1GaussianInitialization" kindref="compound">GaussianInitialization</ref><sp/>normalInit(0.0,<sp/>var);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>normalInit.<ref refid="classmlpack_1_1ann_1_1GaussianInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" kindref="member">Initialize</ref>(W,<sp/>rows,<sp/>cols);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="127" refid="classmlpack_1_1ann_1_1GlorotInitializationType_1a24da1718009511401802942918bd3261" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1GlorotInitializationType" kindref="compound">GlorotInitializationType&lt;false&gt;::Initialize</ref>(arma::Mat&lt;eT&gt;&amp;<sp/>W)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(W.is_empty())</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>Log::Fatal<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>initialize<sp/>and<sp/>empty<sp/>matrix.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>var<sp/>=<sp/>2.0<sp/>/<sp/>double(W.n_rows<sp/>+<sp/>W.n_cols);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1ann_1_1GaussianInitialization" kindref="compound">GaussianInitialization</ref><sp/>normalInit(0.0,<sp/>var);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>normalInit.<ref refid="classmlpack_1_1ann_1_1GaussianInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" kindref="member">Initialize</ref>(W);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="139" refid="classmlpack_1_1ann_1_1GlorotInitializationType_1a8a614fcc8aeff6f47c9f608762411e2a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1GlorotInitializationType" kindref="compound">GlorotInitializationType&lt;true&gt;::Initialize</ref>(arma::Mat&lt;eT&gt;&amp;<sp/>W,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(W.is_empty())</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>W.set_size(rows,<sp/>cols);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Limit<sp/>of<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>sqrt(6)<sp/>/<sp/>sqrt(rows<sp/>+<sp/>cols);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1ann_1_1RandomInitialization" kindref="compound">RandomInitialization</ref><sp/>randomInit(-a,<sp/>a);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>randomInit.<ref refid="classmlpack_1_1ann_1_1RandomInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" kindref="member">Initialize</ref>(W,<sp/>rows,<sp/>cols);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="154" refid="classmlpack_1_1ann_1_1GlorotInitializationType_1a24da1718009511401802942918bd3261" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1GlorotInitializationType" kindref="compound">GlorotInitializationType&lt;true&gt;::Initialize</ref>(arma::Mat&lt;eT&gt;&amp;<sp/>W)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(W.is_empty())</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>Log::Fatal<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>initialize<sp/>an<sp/>empty<sp/>matrix.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Limit<sp/>of<sp/>distribution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>sqrt(6)<sp/>/<sp/>sqrt(W.n_rows<sp/>+<sp/>W.n_cols);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1ann_1_1RandomInitialization" kindref="compound">RandomInitialization</ref><sp/>randomInit(-a,<sp/>a);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>randomInit.<ref refid="classmlpack_1_1ann_1_1RandomInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" kindref="member">Initialize</ref>(W);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Uniform&gt;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="167" refid="classmlpack_1_1ann_1_1GlorotInitializationType_1a40a2b6466bdba0f6aab4eb92b6e65934" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1GlorotInitializationType" kindref="compound">GlorotInitializationType&lt;Uniform&gt;::Initialize</ref>(arma::Cube&lt;eT&gt;&amp;<sp/>W,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slices)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(W.is_empty())</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>W.set_size(rows,<sp/>cols,<sp/>slices);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>slices;<sp/>++i)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>Initialize(W.slice(i),<sp/>rows,<sp/>cols);</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Uniform&gt;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="181" refid="classmlpack_1_1ann_1_1GlorotInitializationType_1ae2f3e6d570824a160b687ff9f734f83c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1GlorotInitializationType" kindref="compound">GlorotInitializationType&lt;Uniform&gt;::Initialize</ref>(arma::Cube&lt;eT&gt;&amp;<sp/>W)</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(W.is_empty())</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>Log::Fatal<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>initialize<sp/>an<sp/>empty<sp/>matrix.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>W.n_slices;<sp/>++i)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>Initialize(W.slice(i));</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convenience<sp/>typedefs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="namespacemlpack_1_1ann_1a4f99a527ad82262756bb7e3785e8201a" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1GlorotInitializationType" kindref="compound">XavierInitialization</ref><sp/>=<sp/><ref refid="classmlpack_1_1ann_1_1GlorotInitializationType" kindref="compound">GlorotInitializationType&lt;true&gt;</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="namespacemlpack_1_1ann_1a003150a66fa8a2cc2a3650e2384a1dfc" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1GlorotInitializationType" kindref="compound">GlorotInitialization</ref><sp/>=<sp/><ref refid="classmlpack_1_1ann_1_1GlorotInitializationType" kindref="compound">GlorotInitializationType&lt;false&gt;</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Uses<sp/>normal<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/init_rules/glorot_init.hpp"/>
  </compounddef>
</doxygen>
