<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="r__tree__split_8hpp" kind="file" language="C++">
    <compoundname>r_tree_split.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="yes">r_tree_split_impl.hpp</includes>
    <incdepgraph>
      <node id="18010">
        <label>list</label>
      </node>
      <node id="18007">
        <label>atomic</label>
      </node>
      <node id="17997">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="17973">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="18009">
        <label>iomanip</label>
      </node>
      <node id="18017">
        <label>r_tree_split_impl.hpp</label>
      </node>
      <node id="17959">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/r_tree_split.hpp</label>
        <link refid="r__tree__split_8hpp"/>
        <childnode refid="17960" relation="include">
        </childnode>
        <childnode refid="18017" relation="include">
        </childnode>
      </node>
      <node id="17982">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="17983" relation="include">
        </childnode>
        <childnode refid="17985" relation="include">
        </childnode>
      </node>
      <node id="17965">
        <label>cstdint</label>
      </node>
      <node id="17974">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="17981">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="18004">
        <label>arma_config.hpp</label>
      </node>
      <node id="17994">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="17961">
        <label>cmath</label>
      </node>
      <node id="17980">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="17969">
        <label>stdexcept</label>
      </node>
      <node id="17989">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="17974" relation="include">
        </childnode>
        <childnode refid="17976" relation="include">
        </childnode>
        <childnode refid="17977" relation="include">
        </childnode>
        <childnode refid="17975" relation="include">
        </childnode>
      </node>
      <node id="18013">
        <label>string</label>
      </node>
      <node id="18001">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="18002" relation="include">
        </childnode>
        <childnode refid="17968" relation="include">
        </childnode>
      </node>
      <node id="18011">
        <label>map</label>
      </node>
      <node id="17963">
        <label>cfloat</label>
      </node>
      <node id="17993">
        <label>boost/variant.hpp</label>
      </node>
      <node id="18015">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="17977">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="18000">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="18001" relation="include">
        </childnode>
        <childnode refid="17977" relation="include">
        </childnode>
        <childnode refid="17984" relation="include">
        </childnode>
        <childnode refid="18002" relation="include">
        </childnode>
      </node>
      <node id="17990">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="17988">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="17974" relation="include">
        </childnode>
        <childnode refid="17976" relation="include">
        </childnode>
        <childnode refid="17977" relation="include">
        </childnode>
        <childnode refid="17975" relation="include">
        </childnode>
      </node>
      <node id="17991">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="17974" relation="include">
        </childnode>
        <childnode refid="17976" relation="include">
        </childnode>
        <childnode refid="17977" relation="include">
        </childnode>
        <childnode refid="17975" relation="include">
        </childnode>
      </node>
      <node id="17979">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="17999">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="17975" relation="include">
        </childnode>
        <childnode refid="17976" relation="include">
        </childnode>
        <childnode refid="17977" relation="include">
        </childnode>
        <childnode refid="17987" relation="include">
        </childnode>
        <childnode refid="17996" relation="include">
        </childnode>
      </node>
      <node id="18003">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="18004" relation="include">
        </childnode>
      </node>
      <node id="18005">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="17960">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="17961" relation="include">
        </childnode>
        <childnode refid="17962" relation="include">
        </childnode>
        <childnode refid="17963" relation="include">
        </childnode>
        <childnode refid="17964" relation="include">
        </childnode>
        <childnode refid="17965" relation="include">
        </childnode>
        <childnode refid="17966" relation="include">
        </childnode>
        <childnode refid="17967" relation="include">
        </childnode>
        <childnode refid="17968" relation="include">
        </childnode>
        <childnode refid="17969" relation="include">
        </childnode>
        <childnode refid="17970" relation="include">
        </childnode>
        <childnode refid="17971" relation="include">
        </childnode>
        <childnode refid="17972" relation="include">
        </childnode>
        <childnode refid="17973" relation="include">
        </childnode>
        <childnode refid="17974" relation="include">
        </childnode>
        <childnode refid="17975" relation="include">
        </childnode>
        <childnode refid="17976" relation="include">
        </childnode>
        <childnode refid="17977" relation="include">
        </childnode>
        <childnode refid="17978" relation="include">
        </childnode>
        <childnode refid="17979" relation="include">
        </childnode>
        <childnode refid="17980" relation="include">
        </childnode>
        <childnode refid="17981" relation="include">
        </childnode>
        <childnode refid="17982" relation="include">
        </childnode>
        <childnode refid="17986" relation="include">
        </childnode>
        <childnode refid="17987" relation="include">
        </childnode>
        <childnode refid="17988" relation="include">
        </childnode>
        <childnode refid="17989" relation="include">
        </childnode>
        <childnode refid="17990" relation="include">
        </childnode>
        <childnode refid="17991" relation="include">
        </childnode>
        <childnode refid="17992" relation="include">
        </childnode>
        <childnode refid="17998" relation="include">
        </childnode>
        <childnode refid="17999" relation="include">
        </childnode>
        <childnode refid="17996" relation="include">
        </childnode>
        <childnode refid="18000" relation="include">
        </childnode>
        <childnode refid="18003" relation="include">
        </childnode>
        <childnode refid="18005" relation="include">
        </childnode>
        <childnode refid="18006" relation="include">
        </childnode>
        <childnode refid="18015" relation="include">
        </childnode>
        <childnode refid="18016" relation="include">
        </childnode>
      </node>
      <node id="17966">
        <label>cstdio</label>
      </node>
      <node id="17970">
        <label>tuple</label>
      </node>
      <node id="17975">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="17992">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="17975" relation="include">
        </childnode>
        <childnode refid="17976" relation="include">
        </childnode>
        <childnode refid="17977" relation="include">
        </childnode>
        <childnode refid="17979" relation="include">
        </childnode>
        <childnode refid="17993" relation="include">
        </childnode>
        <childnode refid="17994" relation="include">
        </childnode>
        <childnode refid="17995" relation="include">
        </childnode>
        <childnode refid="17996" relation="include">
        </childnode>
      </node>
      <node id="17971">
        <label>utility</label>
      </node>
      <node id="17995">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="17986">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="17983">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="17984" relation="include">
        </childnode>
      </node>
      <node id="18006">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="18007" relation="include">
        </childnode>
        <childnode refid="18008" relation="include">
        </childnode>
        <childnode refid="18009" relation="include">
        </childnode>
        <childnode refid="18010" relation="include">
        </childnode>
        <childnode refid="18011" relation="include">
        </childnode>
        <childnode refid="18012" relation="include">
        </childnode>
        <childnode refid="18013" relation="include">
        </childnode>
        <childnode refid="18014" relation="include">
        </childnode>
      </node>
      <node id="17984">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="17998">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="17996" relation="include">
        </childnode>
        <childnode refid="17992" relation="include">
        </childnode>
        <childnode refid="17999" relation="include">
        </childnode>
      </node>
      <node id="17967">
        <label>cstdlib</label>
      </node>
      <node id="17962">
        <label>cctype</label>
      </node>
      <node id="17985">
        <label>unordered_map</label>
      </node>
      <node id="17964">
        <label>climits</label>
      </node>
      <node id="18012">
        <label>mutex</label>
      </node>
      <node id="18008">
        <label>chrono</label>
      </node>
      <node id="18016">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="18014">
        <label>thread</label>
      </node>
      <node id="18002">
        <label>type_traits</label>
      </node>
      <node id="17978">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="17972">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="17996">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="17974" relation="include">
        </childnode>
        <childnode refid="17975" relation="include">
        </childnode>
        <childnode refid="17976" relation="include">
        </childnode>
        <childnode refid="17977" relation="include">
        </childnode>
        <childnode refid="17997" relation="include">
        </childnode>
      </node>
      <node id="17968">
        <label>cstring</label>
      </node>
      <node id="17987">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="17976">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1tree_1_1RTreeSplit" prot="public">mlpack::tree::RTreeSplit</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1tree">mlpack::tree</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Andrew Wells</para></simplesect>
Definition of the RTreeSplit class, a class that splits the nodes of an R tree, starting at a leaf node and moving upwards if necessary.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_TREE_RECTANGLE_TREE_R_TREE_SPLIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_TREE_RECTANGLE_TREE_R_TREE_SPLIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tree<sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classmlpack_1_1tree_1_1RTreeSplit" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1tree_1_1RTreeSplit" kindref="compound">RTreeSplit</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1RTreeSplit_1af73652d9536a1715364bbb0e4a9ba04e" kindref="member">SplitLeafNode</ref>(TreeType<sp/>*tree,<sp/>std::vector&lt;bool&gt;&amp;<sp/>relevels);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1RTreeSplit_1a73ff1eaa94449d763847fff1f537922f" kindref="member">SplitNonLeafNode</ref>(TreeType<sp/>*tree,<sp/>std::vector&lt;bool&gt;&amp;<sp/>relevels);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetPointSeeds(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TreeType<sp/>*tree,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>j);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetBoundSeeds(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TreeType<sp/>*tree,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>j);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AssignPointDestNode(TreeType*<sp/>oldTree,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TreeType*<sp/>treeOne,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TreeType*<sp/>treeTwo,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intI,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intJ);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AssignNodeDestNode(TreeType*<sp/>oldTree,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TreeType*<sp/>treeOne,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TreeType*<sp/>treeTwo,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intI,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intJ);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertNodeIntoTree(TreeType*<sp/>destTree,<sp/>TreeType*<sp/>srcNode);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;r_tree_split_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/r_tree_split.hpp"/>
  </compounddef>
</doxygen>
