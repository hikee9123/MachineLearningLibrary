<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="he__init_8hpp" kind="file" language="C++">
    <compoundname>he_init.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="random_8hpp" local="no">mlpack/core/math/random.hpp</includes>
    <incdepgraph>
      <node id="28832">
        <label>list</label>
      </node>
      <node id="28829">
        <label>atomic</label>
      </node>
      <node id="28819">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="28795">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="28831">
        <label>iomanip</label>
      </node>
      <node id="28804">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="28805" relation="include">
        </childnode>
        <childnode refid="28807" relation="include">
        </childnode>
      </node>
      <node id="28787">
        <label>cstdint</label>
      </node>
      <node id="28796">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="28803">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="28840">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="28826">
        <label>arma_config.hpp</label>
      </node>
      <node id="28816">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="28783">
        <label>cmath</label>
      </node>
      <node id="28802">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="28791">
        <label>stdexcept</label>
      </node>
      <node id="28811">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="28796" relation="include">
        </childnode>
        <childnode refid="28798" relation="include">
        </childnode>
        <childnode refid="28799" relation="include">
        </childnode>
        <childnode refid="28797" relation="include">
        </childnode>
      </node>
      <node id="28835">
        <label>string</label>
      </node>
      <node id="28823">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="28824" relation="include">
        </childnode>
        <childnode refid="28790" relation="include">
        </childnode>
      </node>
      <node id="28833">
        <label>map</label>
      </node>
      <node id="28785">
        <label>cfloat</label>
      </node>
      <node id="28815">
        <label>boost/variant.hpp</label>
      </node>
      <node id="28837">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="28799">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="28822">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="28823" relation="include">
        </childnode>
        <childnode refid="28799" relation="include">
        </childnode>
        <childnode refid="28806" relation="include">
        </childnode>
        <childnode refid="28824" relation="include">
        </childnode>
      </node>
      <node id="28812">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="28810">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="28796" relation="include">
        </childnode>
        <childnode refid="28798" relation="include">
        </childnode>
        <childnode refid="28799" relation="include">
        </childnode>
        <childnode refid="28797" relation="include">
        </childnode>
      </node>
      <node id="28813">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="28796" relation="include">
        </childnode>
        <childnode refid="28798" relation="include">
        </childnode>
        <childnode refid="28799" relation="include">
        </childnode>
        <childnode refid="28797" relation="include">
        </childnode>
      </node>
      <node id="28801">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="28821">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="28797" relation="include">
        </childnode>
        <childnode refid="28798" relation="include">
        </childnode>
        <childnode refid="28799" relation="include">
        </childnode>
        <childnode refid="28809" relation="include">
        </childnode>
        <childnode refid="28818" relation="include">
        </childnode>
      </node>
      <node id="28825">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="28826" relation="include">
        </childnode>
      </node>
      <node id="28827">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="28782">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="28783" relation="include">
        </childnode>
        <childnode refid="28784" relation="include">
        </childnode>
        <childnode refid="28785" relation="include">
        </childnode>
        <childnode refid="28786" relation="include">
        </childnode>
        <childnode refid="28787" relation="include">
        </childnode>
        <childnode refid="28788" relation="include">
        </childnode>
        <childnode refid="28789" relation="include">
        </childnode>
        <childnode refid="28790" relation="include">
        </childnode>
        <childnode refid="28791" relation="include">
        </childnode>
        <childnode refid="28792" relation="include">
        </childnode>
        <childnode refid="28793" relation="include">
        </childnode>
        <childnode refid="28794" relation="include">
        </childnode>
        <childnode refid="28795" relation="include">
        </childnode>
        <childnode refid="28796" relation="include">
        </childnode>
        <childnode refid="28797" relation="include">
        </childnode>
        <childnode refid="28798" relation="include">
        </childnode>
        <childnode refid="28799" relation="include">
        </childnode>
        <childnode refid="28800" relation="include">
        </childnode>
        <childnode refid="28801" relation="include">
        </childnode>
        <childnode refid="28802" relation="include">
        </childnode>
        <childnode refid="28803" relation="include">
        </childnode>
        <childnode refid="28804" relation="include">
        </childnode>
        <childnode refid="28808" relation="include">
        </childnode>
        <childnode refid="28809" relation="include">
        </childnode>
        <childnode refid="28810" relation="include">
        </childnode>
        <childnode refid="28811" relation="include">
        </childnode>
        <childnode refid="28812" relation="include">
        </childnode>
        <childnode refid="28813" relation="include">
        </childnode>
        <childnode refid="28814" relation="include">
        </childnode>
        <childnode refid="28820" relation="include">
        </childnode>
        <childnode refid="28821" relation="include">
        </childnode>
        <childnode refid="28818" relation="include">
        </childnode>
        <childnode refid="28822" relation="include">
        </childnode>
        <childnode refid="28825" relation="include">
        </childnode>
        <childnode refid="28827" relation="include">
        </childnode>
        <childnode refid="28828" relation="include">
        </childnode>
        <childnode refid="28837" relation="include">
        </childnode>
        <childnode refid="28838" relation="include">
        </childnode>
      </node>
      <node id="28841">
        <label>random</label>
      </node>
      <node id="28788">
        <label>cstdio</label>
      </node>
      <node id="28792">
        <label>tuple</label>
      </node>
      <node id="28797">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="28814">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="28797" relation="include">
        </childnode>
        <childnode refid="28798" relation="include">
        </childnode>
        <childnode refid="28799" relation="include">
        </childnode>
        <childnode refid="28801" relation="include">
        </childnode>
        <childnode refid="28815" relation="include">
        </childnode>
        <childnode refid="28816" relation="include">
        </childnode>
        <childnode refid="28817" relation="include">
        </childnode>
        <childnode refid="28818" relation="include">
        </childnode>
      </node>
      <node id="28839">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="28782" relation="include">
        </childnode>
        <childnode refid="28840" relation="include">
        </childnode>
        <childnode refid="28841" relation="include">
        </childnode>
      </node>
      <node id="28793">
        <label>utility</label>
      </node>
      <node id="28817">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="28808">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="28805">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="28806" relation="include">
        </childnode>
      </node>
      <node id="28828">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="28829" relation="include">
        </childnode>
        <childnode refid="28830" relation="include">
        </childnode>
        <childnode refid="28831" relation="include">
        </childnode>
        <childnode refid="28832" relation="include">
        </childnode>
        <childnode refid="28833" relation="include">
        </childnode>
        <childnode refid="28834" relation="include">
        </childnode>
        <childnode refid="28835" relation="include">
        </childnode>
        <childnode refid="28836" relation="include">
        </childnode>
      </node>
      <node id="28806">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="28820">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="28818" relation="include">
        </childnode>
        <childnode refid="28814" relation="include">
        </childnode>
        <childnode refid="28821" relation="include">
        </childnode>
      </node>
      <node id="28789">
        <label>cstdlib</label>
      </node>
      <node id="28784">
        <label>cctype</label>
      </node>
      <node id="28807">
        <label>unordered_map</label>
      </node>
      <node id="28786">
        <label>climits</label>
      </node>
      <node id="28834">
        <label>mutex</label>
      </node>
      <node id="28781">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/init_rules/he_init.hpp</label>
        <link refid="he__init_8hpp"/>
        <childnode refid="28782" relation="include">
        </childnode>
        <childnode refid="28839" relation="include">
        </childnode>
      </node>
      <node id="28830">
        <label>chrono</label>
      </node>
      <node id="28838">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="28836">
        <label>thread</label>
      </node>
      <node id="28824">
        <label>type_traits</label>
      </node>
      <node id="28800">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="28794">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="28818">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="28796" relation="include">
        </childnode>
        <childnode refid="28797" relation="include">
        </childnode>
        <childnode refid="28798" relation="include">
        </childnode>
        <childnode refid="28799" relation="include">
        </childnode>
        <childnode refid="28819" relation="include">
        </childnode>
      </node>
      <node id="28790">
        <label>cstring</label>
      </node>
      <node id="28809">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="28798">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1ann_1_1HeInitialization" prot="public">mlpack::ann::HeInitialization</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1ann">mlpack::ann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Dakshit Agrawal </para></simplesect>
<simplesect kind="author"><para>Prabhat Sharma</para></simplesect>
Intialization rule given by He et. al. for neural networks. The He initialization initializes weights of the neural network to better suit the rectified activation units.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="16"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_ANN_INIT_RULES_HE_INIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_ANN_INIT_RULES_HE_INIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="random_8hpp" kindref="compound">mlpack/core/math/random.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ann<sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classmlpack_1_1ann_1_1HeInitialization" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1ann_1_1HeInitialization" kindref="compound">HeInitialization</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51" refid="classmlpack_1_1ann_1_1HeInitialization_1a1e4da3c5a82b0c0aacc4f4505bcdccd0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1ann_1_1HeInitialization_1a1e4da3c5a82b0c0aacc4f4505bcdccd0" kindref="member">HeInitialization</ref>()</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>to<sp/>do<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="65" refid="classmlpack_1_1ann_1_1HeInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1HeInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" kindref="member">Initialize</ref>(arma::Mat&lt;eT&gt;&amp;<sp/>W,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>He<sp/>initialization<sp/>rule<sp/>says<sp/>to<sp/>initialize<sp/>weights<sp/>with<sp/>random</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>values<sp/>taken<sp/>from<sp/>a<sp/>gaussian<sp/>distribution<sp/>with<sp/>mean<sp/>=<sp/>0<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>standard<sp/>deviation<sp/>=<sp/>sqrt(2/rows),<sp/>i.e.<sp/>variance<sp/>=<sp/>(2/rows).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>variance<sp/>=<sp/>2.0<sp/>/<sp/>(double)<sp/>rows;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(W.is_empty())</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>W.set_size(rows,<sp/>cols);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Multipling<sp/>a<sp/>random<sp/>variable<sp/>X<sp/>with<sp/>variance<sp/>V(X)<sp/>by<sp/>some<sp/>factor<sp/>c,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>the<sp/>variance<sp/>V(cX)<sp/>=<sp/>(c^2)<sp/>*<sp/>V(X).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>W.imbue(<sp/>[&amp;]()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(variance)<sp/>*<sp/>arma::randn();<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="87" refid="classmlpack_1_1ann_1_1HeInitialization_1af2d770912321b8b9ca7b03ab98f735c0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1HeInitialization_1af2d770912321b8b9ca7b03ab98f735c0" kindref="member">Initialize</ref>(arma::Mat&lt;eT&gt;&amp;<sp/>W)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>He<sp/>initialization<sp/>rule<sp/>says<sp/>to<sp/>initialize<sp/>weights<sp/>with<sp/>random</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>values<sp/>taken<sp/>from<sp/>a<sp/>gaussian<sp/>distribution<sp/>with<sp/>mean<sp/>=<sp/>0<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>standard<sp/>deviation<sp/>=<sp/>sqrt(2<sp/>/<sp/>rows),<sp/>i.e.<sp/>variance<sp/>=<sp/>(2<sp/>/<sp/>rows).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>variance<sp/>=<sp/>2.0<sp/>/<sp/>(double)<sp/>W.n_rows;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(W.is_empty())</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Log::Fatal<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>initialize<sp/>an<sp/>empty<sp/>matrix.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Multipling<sp/>a<sp/>random<sp/>variable<sp/>X<sp/>with<sp/>variance<sp/>V(X)<sp/>by<sp/>some<sp/>factor<sp/>c,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>the<sp/>variance<sp/>V(cX)<sp/>=<sp/>(c^2)<sp/>*<sp/>V(X).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>W.imbue(<sp/>[&amp;]()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(variance)<sp/>*<sp/>arma::randn();<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="112" refid="classmlpack_1_1ann_1_1HeInitialization_1a40a2b6466bdba0f6aab4eb92b6e65934" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1HeInitialization_1a40a2b6466bdba0f6aab4eb92b6e65934" kindref="member">Initialize</ref>(arma::Cube&lt;eT&gt;<sp/>&amp;<sp/>W,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slices)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(W.is_empty())</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>W.set_size(rows,<sp/>cols,<sp/>slices);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>slices;<sp/>++i)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1HeInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" kindref="member">Initialize</ref>(W.slice(i),<sp/>rows,<sp/>cols);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="131" refid="classmlpack_1_1ann_1_1HeInitialization_1ae2f3e6d570824a160b687ff9f734f83c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1HeInitialization_1ae2f3e6d570824a160b687ff9f734f83c" kindref="member">Initialize</ref>(arma::Cube&lt;eT&gt;<sp/>&amp;<sp/>W)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(W.is_empty())</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Log::Fatal<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>initialize<sp/>an<sp/>empty<sp/>matrix&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>W.n_slices;<sp/>++i)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1HeInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" kindref="member">Initialize</ref>(W.slice(i));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>HeInitialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/init_rules/he_init.hpp"/>
  </compounddef>
</doxygen>
