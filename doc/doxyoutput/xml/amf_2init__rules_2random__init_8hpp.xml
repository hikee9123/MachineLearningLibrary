<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="amf_2init__rules_2random__init_8hpp" kind="file" language="C++">
    <compoundname>random_init.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includedby refid="amf_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/amf/amf.hpp</includedby>
    <incdepgraph>
      <node id="23572">
        <label>list</label>
      </node>
      <node id="23569">
        <label>atomic</label>
      </node>
      <node id="23559">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="23535">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="23571">
        <label>iomanip</label>
      </node>
      <node id="23544">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="23545" relation="include">
        </childnode>
        <childnode refid="23547" relation="include">
        </childnode>
      </node>
      <node id="23527">
        <label>cstdint</label>
      </node>
      <node id="23536">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="23543">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="23566">
        <label>arma_config.hpp</label>
      </node>
      <node id="23556">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="23523">
        <label>cmath</label>
      </node>
      <node id="23542">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="23531">
        <label>stdexcept</label>
      </node>
      <node id="23551">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="23536" relation="include">
        </childnode>
        <childnode refid="23538" relation="include">
        </childnode>
        <childnode refid="23539" relation="include">
        </childnode>
        <childnode refid="23537" relation="include">
        </childnode>
      </node>
      <node id="23575">
        <label>string</label>
      </node>
      <node id="23563">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="23564" relation="include">
        </childnode>
        <childnode refid="23530" relation="include">
        </childnode>
      </node>
      <node id="23573">
        <label>map</label>
      </node>
      <node id="23525">
        <label>cfloat</label>
      </node>
      <node id="23555">
        <label>boost/variant.hpp</label>
      </node>
      <node id="23577">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="23539">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="23562">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="23563" relation="include">
        </childnode>
        <childnode refid="23539" relation="include">
        </childnode>
        <childnode refid="23546" relation="include">
        </childnode>
        <childnode refid="23564" relation="include">
        </childnode>
      </node>
      <node id="23552">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="23550">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="23536" relation="include">
        </childnode>
        <childnode refid="23538" relation="include">
        </childnode>
        <childnode refid="23539" relation="include">
        </childnode>
        <childnode refid="23537" relation="include">
        </childnode>
      </node>
      <node id="23553">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="23536" relation="include">
        </childnode>
        <childnode refid="23538" relation="include">
        </childnode>
        <childnode refid="23539" relation="include">
        </childnode>
        <childnode refid="23537" relation="include">
        </childnode>
      </node>
      <node id="23541">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="23561">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="23537" relation="include">
        </childnode>
        <childnode refid="23538" relation="include">
        </childnode>
        <childnode refid="23539" relation="include">
        </childnode>
        <childnode refid="23549" relation="include">
        </childnode>
        <childnode refid="23558" relation="include">
        </childnode>
      </node>
      <node id="23565">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="23566" relation="include">
        </childnode>
      </node>
      <node id="23567">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="23522">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="23523" relation="include">
        </childnode>
        <childnode refid="23524" relation="include">
        </childnode>
        <childnode refid="23525" relation="include">
        </childnode>
        <childnode refid="23526" relation="include">
        </childnode>
        <childnode refid="23527" relation="include">
        </childnode>
        <childnode refid="23528" relation="include">
        </childnode>
        <childnode refid="23529" relation="include">
        </childnode>
        <childnode refid="23530" relation="include">
        </childnode>
        <childnode refid="23531" relation="include">
        </childnode>
        <childnode refid="23532" relation="include">
        </childnode>
        <childnode refid="23533" relation="include">
        </childnode>
        <childnode refid="23534" relation="include">
        </childnode>
        <childnode refid="23535" relation="include">
        </childnode>
        <childnode refid="23536" relation="include">
        </childnode>
        <childnode refid="23537" relation="include">
        </childnode>
        <childnode refid="23538" relation="include">
        </childnode>
        <childnode refid="23539" relation="include">
        </childnode>
        <childnode refid="23540" relation="include">
        </childnode>
        <childnode refid="23541" relation="include">
        </childnode>
        <childnode refid="23542" relation="include">
        </childnode>
        <childnode refid="23543" relation="include">
        </childnode>
        <childnode refid="23544" relation="include">
        </childnode>
        <childnode refid="23548" relation="include">
        </childnode>
        <childnode refid="23549" relation="include">
        </childnode>
        <childnode refid="23550" relation="include">
        </childnode>
        <childnode refid="23551" relation="include">
        </childnode>
        <childnode refid="23552" relation="include">
        </childnode>
        <childnode refid="23553" relation="include">
        </childnode>
        <childnode refid="23554" relation="include">
        </childnode>
        <childnode refid="23560" relation="include">
        </childnode>
        <childnode refid="23561" relation="include">
        </childnode>
        <childnode refid="23558" relation="include">
        </childnode>
        <childnode refid="23562" relation="include">
        </childnode>
        <childnode refid="23565" relation="include">
        </childnode>
        <childnode refid="23567" relation="include">
        </childnode>
        <childnode refid="23568" relation="include">
        </childnode>
        <childnode refid="23577" relation="include">
        </childnode>
        <childnode refid="23578" relation="include">
        </childnode>
      </node>
      <node id="23528">
        <label>cstdio</label>
      </node>
      <node id="23532">
        <label>tuple</label>
      </node>
      <node id="23537">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="23554">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="23537" relation="include">
        </childnode>
        <childnode refid="23538" relation="include">
        </childnode>
        <childnode refid="23539" relation="include">
        </childnode>
        <childnode refid="23541" relation="include">
        </childnode>
        <childnode refid="23555" relation="include">
        </childnode>
        <childnode refid="23556" relation="include">
        </childnode>
        <childnode refid="23557" relation="include">
        </childnode>
        <childnode refid="23558" relation="include">
        </childnode>
      </node>
      <node id="23533">
        <label>utility</label>
      </node>
      <node id="23557">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="23548">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="23521">
        <label>/home/aakash/mlpack/src/mlpack/methods/amf/init_rules/random_init.hpp</label>
        <link refid="amf_2init__rules_2random__init_8hpp"/>
        <childnode refid="23522" relation="include">
        </childnode>
      </node>
      <node id="23545">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="23546" relation="include">
        </childnode>
      </node>
      <node id="23568">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="23569" relation="include">
        </childnode>
        <childnode refid="23570" relation="include">
        </childnode>
        <childnode refid="23571" relation="include">
        </childnode>
        <childnode refid="23572" relation="include">
        </childnode>
        <childnode refid="23573" relation="include">
        </childnode>
        <childnode refid="23574" relation="include">
        </childnode>
        <childnode refid="23575" relation="include">
        </childnode>
        <childnode refid="23576" relation="include">
        </childnode>
      </node>
      <node id="23546">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="23560">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="23558" relation="include">
        </childnode>
        <childnode refid="23554" relation="include">
        </childnode>
        <childnode refid="23561" relation="include">
        </childnode>
      </node>
      <node id="23529">
        <label>cstdlib</label>
      </node>
      <node id="23524">
        <label>cctype</label>
      </node>
      <node id="23547">
        <label>unordered_map</label>
      </node>
      <node id="23526">
        <label>climits</label>
      </node>
      <node id="23574">
        <label>mutex</label>
      </node>
      <node id="23570">
        <label>chrono</label>
      </node>
      <node id="23578">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="23576">
        <label>thread</label>
      </node>
      <node id="23564">
        <label>type_traits</label>
      </node>
      <node id="23540">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="23534">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="23558">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="23536" relation="include">
        </childnode>
        <childnode refid="23537" relation="include">
        </childnode>
        <childnode refid="23538" relation="include">
        </childnode>
        <childnode refid="23539" relation="include">
        </childnode>
        <childnode refid="23559" relation="include">
        </childnode>
      </node>
      <node id="23530">
        <label>cstring</label>
      </node>
      <node id="23549">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="23538">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="23580">
        <label>/home/aakash/mlpack/src/mlpack/methods/amf/amf.hpp</label>
        <link refid="amf_8hpp"/>
        <childnode refid="23581" relation="include">
        </childnode>
        <childnode refid="23589" relation="include">
        </childnode>
        <childnode refid="23590" relation="include">
        </childnode>
        <childnode refid="23591" relation="include">
        </childnode>
        <childnode refid="23592" relation="include">
        </childnode>
      </node>
      <node id="23584">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp</label>
        <link refid="cf__model_8hpp"/>
      </node>
      <node id="23586">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp</label>
        <link refid="regularized__svd__method_8hpp"/>
      </node>
      <node id="23583">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/bias_svd_method.hpp</label>
        <link refid="bias__svd__method_8hpp"/>
      </node>
      <node id="23581">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf.hpp</label>
        <link refid="cf_8hpp"/>
        <childnode refid="23582" relation="include">
        </childnode>
        <childnode refid="23584" relation="include">
        </childnode>
        <childnode refid="23585" relation="include">
        </childnode>
        <childnode refid="23587" relation="include">
        </childnode>
      </node>
      <node id="23587">
        <label>/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp</label>
        <link refid="svdplusplus_8hpp"/>
        <childnode refid="23588" relation="include">
        </childnode>
      </node>
      <node id="23592">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svd_incomplete_method.hpp</label>
        <link refid="svd__incomplete__method_8hpp"/>
      </node>
      <node id="23589">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/batch_svd_method.hpp</label>
        <link refid="batch__svd__method_8hpp"/>
      </node>
      <node id="23582">
        <label>/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp</label>
        <link refid="bias__svd_8hpp"/>
        <childnode refid="23583" relation="include">
        </childnode>
      </node>
      <node id="23579">
        <label>/home/aakash/mlpack/src/mlpack/methods/amf/init_rules/random_init.hpp</label>
        <link refid="amf_2init__rules_2random__init_8hpp"/>
        <childnode refid="23580" relation="include">
        </childnode>
      </node>
      <node id="23588">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svdplusplus_method.hpp</label>
        <link refid="svdplusplus__method_8hpp"/>
      </node>
      <node id="23585">
        <label>/home/aakash/mlpack/src/mlpack/methods/regularized_svd/regularized_svd.hpp</label>
        <link refid="regularized__svd_8hpp"/>
        <childnode refid="23586" relation="include">
        </childnode>
      </node>
      <node id="23591">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svd_complete_method.hpp</label>
        <link refid="svd__complete__method_8hpp"/>
      </node>
      <node id="23590">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/nmf_method.hpp</label>
        <link refid="nmf__method_8hpp"/>
        <childnode refid="23581" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1amf_1_1RandomInitialization" prot="public">mlpack::amf::RandomInitialization</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1amf">mlpack::amf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Mohan Rajendran</para></simplesect>
Initialization rule for alternating matrix factorization (AMF). This simple initialization is performed by assigning a random matrix to W and H.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_LMF_RANDOM_INIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_LMF_RANDOM_INIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">amf<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classmlpack_1_1amf_1_1RandomInitialization" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1amf_1_1RandomInitialization" kindref="compound">RandomInitialization</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>constructor<sp/>required<sp/>for<sp/>the<sp/>InitializeRule<sp/>template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classmlpack_1_1amf_1_1RandomInitialization_1a82f2c9d150d42175823128808690c25a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1amf_1_1RandomInitialization_1a82f2c9d150d42175823128808690c25a" kindref="member">RandomInitialization</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="40" refid="classmlpack_1_1amf_1_1RandomInitialization_1a02a3610958f42b7dbef8bd5063ceaee7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1RandomInitialization_1a02a3610958f42b7dbef8bd5063ceaee7" kindref="member">Initialize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>V,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>W,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>H)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>implementation<sp/>(left<sp/>in<sp/>the<sp/>header<sp/>file<sp/>due<sp/>to<sp/>its<sp/>simplicity).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>V.n_rows;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>V.n_cols;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>to<sp/>random<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>W.randu(n,<sp/>r);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>H.randu(r,<sp/>m);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="63" refid="classmlpack_1_1amf_1_1RandomInitialization_1ab36c483763ea43179dd94fac38e29f03" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1RandomInitialization_1ab36c483763ea43179dd94fac38e29f03" kindref="member">InitializeOne</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>V,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>M,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>whichMatrix<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>implementation<sp/>(left<sp/>in<sp/>the<sp/>header<sp/>file<sp/>due<sp/>to<sp/>its<sp/>simplicity).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>V.n_rows;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>V.n_cols;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>W<sp/>or<sp/>H<sp/>to<sp/>random<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(whichMatrix)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>M.randu(n,<sp/>r);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>M.randu(r,<sp/>m);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="85" refid="classmlpack_1_1amf_1_1RandomInitialization_1aa2ccb5a0533a6ba0abe6dfc1f98fbafb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1RandomInitialization_1aa2ccb5a0533a6ba0abe6dfc1f98fbafb" kindref="member">serialize</ref>(Archive&amp;<sp/></highlight><highlight class="comment">/*<sp/>ar<sp/>*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>amf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/amf/init_rules/random_init.hpp"/>
  </compounddef>
</doxygen>
