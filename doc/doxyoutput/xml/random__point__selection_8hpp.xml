<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="random__point__selection_8hpp" kind="file" language="C++">
    <compoundname>random_point_selection.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includedby refid="dbscan_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp</includedby>
    <incdepgraph>
      <node id="48104">
        <label>list</label>
      </node>
      <node id="48101">
        <label>atomic</label>
      </node>
      <node id="48091">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="48067">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="48103">
        <label>iomanip</label>
      </node>
      <node id="48076">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="48077" relation="include">
        </childnode>
        <childnode refid="48079" relation="include">
        </childnode>
      </node>
      <node id="48059">
        <label>cstdint</label>
      </node>
      <node id="48068">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="48075">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="48098">
        <label>arma_config.hpp</label>
      </node>
      <node id="48088">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="48055">
        <label>cmath</label>
      </node>
      <node id="48074">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="48063">
        <label>stdexcept</label>
      </node>
      <node id="48083">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="48068" relation="include">
        </childnode>
        <childnode refid="48070" relation="include">
        </childnode>
        <childnode refid="48071" relation="include">
        </childnode>
        <childnode refid="48069" relation="include">
        </childnode>
      </node>
      <node id="48107">
        <label>string</label>
      </node>
      <node id="48095">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="48096" relation="include">
        </childnode>
        <childnode refid="48062" relation="include">
        </childnode>
      </node>
      <node id="48105">
        <label>map</label>
      </node>
      <node id="48057">
        <label>cfloat</label>
      </node>
      <node id="48087">
        <label>boost/variant.hpp</label>
      </node>
      <node id="48109">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="48053">
        <label>/home/aakash/mlpack/src/mlpack/methods/dbscan/random_point_selection.hpp</label>
        <link refid="random__point__selection_8hpp"/>
        <childnode refid="48054" relation="include">
        </childnode>
      </node>
      <node id="48071">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="48094">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="48095" relation="include">
        </childnode>
        <childnode refid="48071" relation="include">
        </childnode>
        <childnode refid="48078" relation="include">
        </childnode>
        <childnode refid="48096" relation="include">
        </childnode>
      </node>
      <node id="48084">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="48082">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="48068" relation="include">
        </childnode>
        <childnode refid="48070" relation="include">
        </childnode>
        <childnode refid="48071" relation="include">
        </childnode>
        <childnode refid="48069" relation="include">
        </childnode>
      </node>
      <node id="48085">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="48068" relation="include">
        </childnode>
        <childnode refid="48070" relation="include">
        </childnode>
        <childnode refid="48071" relation="include">
        </childnode>
        <childnode refid="48069" relation="include">
        </childnode>
      </node>
      <node id="48073">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="48093">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="48069" relation="include">
        </childnode>
        <childnode refid="48070" relation="include">
        </childnode>
        <childnode refid="48071" relation="include">
        </childnode>
        <childnode refid="48081" relation="include">
        </childnode>
        <childnode refid="48090" relation="include">
        </childnode>
      </node>
      <node id="48097">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="48098" relation="include">
        </childnode>
      </node>
      <node id="48099">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="48054">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="48055" relation="include">
        </childnode>
        <childnode refid="48056" relation="include">
        </childnode>
        <childnode refid="48057" relation="include">
        </childnode>
        <childnode refid="48058" relation="include">
        </childnode>
        <childnode refid="48059" relation="include">
        </childnode>
        <childnode refid="48060" relation="include">
        </childnode>
        <childnode refid="48061" relation="include">
        </childnode>
        <childnode refid="48062" relation="include">
        </childnode>
        <childnode refid="48063" relation="include">
        </childnode>
        <childnode refid="48064" relation="include">
        </childnode>
        <childnode refid="48065" relation="include">
        </childnode>
        <childnode refid="48066" relation="include">
        </childnode>
        <childnode refid="48067" relation="include">
        </childnode>
        <childnode refid="48068" relation="include">
        </childnode>
        <childnode refid="48069" relation="include">
        </childnode>
        <childnode refid="48070" relation="include">
        </childnode>
        <childnode refid="48071" relation="include">
        </childnode>
        <childnode refid="48072" relation="include">
        </childnode>
        <childnode refid="48073" relation="include">
        </childnode>
        <childnode refid="48074" relation="include">
        </childnode>
        <childnode refid="48075" relation="include">
        </childnode>
        <childnode refid="48076" relation="include">
        </childnode>
        <childnode refid="48080" relation="include">
        </childnode>
        <childnode refid="48081" relation="include">
        </childnode>
        <childnode refid="48082" relation="include">
        </childnode>
        <childnode refid="48083" relation="include">
        </childnode>
        <childnode refid="48084" relation="include">
        </childnode>
        <childnode refid="48085" relation="include">
        </childnode>
        <childnode refid="48086" relation="include">
        </childnode>
        <childnode refid="48092" relation="include">
        </childnode>
        <childnode refid="48093" relation="include">
        </childnode>
        <childnode refid="48090" relation="include">
        </childnode>
        <childnode refid="48094" relation="include">
        </childnode>
        <childnode refid="48097" relation="include">
        </childnode>
        <childnode refid="48099" relation="include">
        </childnode>
        <childnode refid="48100" relation="include">
        </childnode>
        <childnode refid="48109" relation="include">
        </childnode>
        <childnode refid="48110" relation="include">
        </childnode>
      </node>
      <node id="48060">
        <label>cstdio</label>
      </node>
      <node id="48064">
        <label>tuple</label>
      </node>
      <node id="48069">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="48086">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="48069" relation="include">
        </childnode>
        <childnode refid="48070" relation="include">
        </childnode>
        <childnode refid="48071" relation="include">
        </childnode>
        <childnode refid="48073" relation="include">
        </childnode>
        <childnode refid="48087" relation="include">
        </childnode>
        <childnode refid="48088" relation="include">
        </childnode>
        <childnode refid="48089" relation="include">
        </childnode>
        <childnode refid="48090" relation="include">
        </childnode>
      </node>
      <node id="48065">
        <label>utility</label>
      </node>
      <node id="48089">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="48080">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="48077">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="48078" relation="include">
        </childnode>
      </node>
      <node id="48100">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="48101" relation="include">
        </childnode>
        <childnode refid="48102" relation="include">
        </childnode>
        <childnode refid="48103" relation="include">
        </childnode>
        <childnode refid="48104" relation="include">
        </childnode>
        <childnode refid="48105" relation="include">
        </childnode>
        <childnode refid="48106" relation="include">
        </childnode>
        <childnode refid="48107" relation="include">
        </childnode>
        <childnode refid="48108" relation="include">
        </childnode>
      </node>
      <node id="48078">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="48092">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="48090" relation="include">
        </childnode>
        <childnode refid="48086" relation="include">
        </childnode>
        <childnode refid="48093" relation="include">
        </childnode>
      </node>
      <node id="48061">
        <label>cstdlib</label>
      </node>
      <node id="48056">
        <label>cctype</label>
      </node>
      <node id="48079">
        <label>unordered_map</label>
      </node>
      <node id="48058">
        <label>climits</label>
      </node>
      <node id="48106">
        <label>mutex</label>
      </node>
      <node id="48102">
        <label>chrono</label>
      </node>
      <node id="48110">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="48108">
        <label>thread</label>
      </node>
      <node id="48096">
        <label>type_traits</label>
      </node>
      <node id="48072">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="48066">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="48090">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="48068" relation="include">
        </childnode>
        <childnode refid="48069" relation="include">
        </childnode>
        <childnode refid="48070" relation="include">
        </childnode>
        <childnode refid="48071" relation="include">
        </childnode>
        <childnode refid="48091" relation="include">
        </childnode>
      </node>
      <node id="48062">
        <label>cstring</label>
      </node>
      <node id="48081">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="48070">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="48112">
        <label>/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp</label>
        <link refid="dbscan_8hpp"/>
      </node>
      <node id="48111">
        <label>/home/aakash/mlpack/src/mlpack/methods/dbscan/random_point_selection.hpp</label>
        <link refid="random__point__selection_8hpp"/>
        <childnode refid="48112" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1dbscan_1_1RandomPointSelection" prot="public">mlpack::dbscan::RandomPointSelection</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1dbscan">mlpack::dbscan</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ryan Curtin</para></simplesect>
Randomly select the next point for DBSCAN.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_DBSCAN_RANDOM_POINT_SELECTION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_DBSCAN_RANDOM_POINT_SELECTION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">dbscan<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classmlpack_1_1dbscan_1_1RandomPointSelection" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1dbscan_1_1RandomPointSelection" kindref="compound">RandomPointSelection</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="33" refid="classmlpack_1_1dbscan_1_1RandomPointSelection_1a640a2e01689f58d88ac361757c7579c6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1dbscan_1_1RandomPointSelection_1a640a2e01689f58d88ac361757c7579c6" kindref="member">Select</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>point<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>length<sp/>of<sp/>the<sp/>unvisited<sp/>bitset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>data.n_cols;<sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>size<sp/>of<sp/>points.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unvisited.size()<sp/>!=<sp/>size)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unvisited.resize(size,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Resize<sp/>&amp;<sp/>Set<sp/>bitset<sp/>to<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>the<sp/>unvisited<sp/>points<sp/>and<sp/>generate<sp/>nth<sp/>index<sp/>randomly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max<sp/>=<sp/>std::count(unvisited.begin(),<sp/>unvisited.end(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/><ref refid="namespacemlpack_1_1math_1aad090ac225728d74c1b66bcf52f3ab95" kindref="member">math::RandInt</ref>(max);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>the<sp/>index&apos;th<sp/>unvisited<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>found<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>unvisited.size();<sp/>++i)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unvisited[i])</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++found;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found<sp/>&gt;<sp/>index)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unvisited[i].flip();<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>unvisited<sp/>point<sp/>to<sp/>visited<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Not<sp/>sure<sp/>if<sp/>it<sp/>is<sp/>possible<sp/>to<sp/>get<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Bitset<sp/>for<sp/>unvisited<sp/>points.<sp/>If<sp/>true,<sp/>mean<sp/>unvisited.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>std::vector&lt;bool&gt;<sp/>unvisited;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>dbscan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/dbscan/random_point_selection.hpp"/>
  </compounddef>
</doxygen>
