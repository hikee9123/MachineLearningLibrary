<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structmlpack_1_1cv_1_1SelectMethodForm" kind="struct" language="C++" prot="public">
    <compoundname>mlpack::cv::SelectMethodForm</compoundname>
    <includes refid="meta__info__extractor_8hpp" local="no">meta_info_extractor.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename MLAlgorithm</type>
      </param>
      <param>
        <type>template&lt; class, template&lt; class... &gt; class, size_t &gt; class...</type>
        <declname>HMFs</declname>
        <defname>HMFs</defname>
      </param>
    </templateparamlist>
    <briefdescription>
<para>A type function that selects a right method form. </para>    </briefdescription>
    <detaileddescription>
<para>As parameters it takes a machine learning algorithm, a set of HasMethodForm structs, and a set of method forms. Method forms are passed to the internal struct From. The result type can be accessed through the Type member of the From struct.</para><para>The implementation basically loops through all combinations of the HasMethodForm structs and the method forms. It stops when a right combination succeeds, or when there are no more combinations. </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/core/cv/meta_info_extractor.hpp" line="198" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/cv/meta_info_extractor.hpp" bodystart="198" bodyend="-1"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
