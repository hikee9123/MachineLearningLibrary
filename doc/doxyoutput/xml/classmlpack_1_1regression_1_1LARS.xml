<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1regression_1_1LARS" kind="class" language="C++" prot="public">
    <compoundname>mlpack::regression::LARS</compoundname>
    <includes refid="lars_8hpp" local="no">lars.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1regression_1_1LARS_1a7d4e4d71ce5bd7f00128570eafb35345" prot="private" static="no" mutable="no">
        <type>std::vector&lt; size_t &gt;</type>
        <definition>std::vector&lt;size_t&gt; activeSet</definition>
        <argsstring></argsstring>
        <name>activeSet</name>
        <briefdescription>
<para>Active set of dimensions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="344" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1regression_1_1LARS_1af649a76cc3fbb99ffb720a7315c387d1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; arma::vec &gt;</type>
        <definition>std::vector&lt;arma::vec&gt; betaPath</definition>
        <argsstring></argsstring>
        <name>betaPath</name>
        <briefdescription>
<para>Solution path. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="338" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1regression_1_1LARS_1ad713d660ec5c5c12e5a4e60f8900485f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool elasticNet</definition>
        <argsstring></argsstring>
        <name>elasticNet</name>
        <briefdescription>
<para>True if this is the elastic net problem. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="330" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1regression_1_1LARS_1a2c460de335626cd1a9ba4e4954198569" prot="private" static="no" mutable="no">
        <type>std::vector&lt; size_t &gt;</type>
        <definition>std::vector&lt;size_t&gt; ignoreSet</definition>
        <argsstring></argsstring>
        <name>ignoreSet</name>
        <briefdescription>
<para>Set of ignored variables (for dimensions in span{active set dimensions}). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="352" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1regression_1_1LARS_1ab7a72440674d657adf8293698f719dc1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; isActive</definition>
        <argsstring></argsstring>
        <name>isActive</name>
        <briefdescription>
<para>Active set membership indicator (for each dimension). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="347" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1regression_1_1LARS_1af51f9ae742eb2616922e15a8ce96d9f2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; isIgnored</definition>
        <argsstring></argsstring>
        <name>isIgnored</name>
        <briefdescription>
<para>Membership indicator for set of ignored variables. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="355" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1regression_1_1LARS_1ab43246964e91b737c5202793c9f337ed" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double lambda1</definition>
        <argsstring></argsstring>
        <name>lambda1</name>
        <briefdescription>
<para>Regularization parameter for l1 penalty. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="327" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1regression_1_1LARS_1afdbf7b2b51f4f367aed9590917976d9f" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double lambda2</definition>
        <argsstring></argsstring>
        <name>lambda2</name>
        <briefdescription>
<para>Regularization parameter for l2 penalty. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="332" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1regression_1_1LARS_1a063a0afd4ac4341c155e21ae4769dc07" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; lambdaPath</definition>
        <argsstring></argsstring>
        <name>lambdaPath</name>
        <briefdescription>
<para>Value of lambda_1 for each solution in solution path. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="341" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1regression_1_1LARS_1a45d84eb0dda96dfac9a138e4345af508" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool lasso</definition>
        <argsstring></argsstring>
        <name>lasso</name>
        <briefdescription>
<para>True if this is the LASSO problem. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="325" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1regression_1_1LARS_1a81cb4493a835b907cca5034dd4bc8b34" prot="private" static="no" mutable="no">
        <type>const arma::mat *</type>
        <definition>const arma::mat* matGram</definition>
        <argsstring></argsstring>
        <name>matGram</name>
        <briefdescription>
<para>Pointer to the Gram matrix we will use. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="316" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1regression_1_1LARS_1a6f86971bf96a8fe61597d2eed318aa19" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat matGramInternal</definition>
        <argsstring></argsstring>
        <name>matGramInternal</name>
        <briefdescription>
<para>Gram matrix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="313" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1regression_1_1LARS_1ab69e9b213af252b31fc9f2ed2cde811f" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat matUtriCholFactor</definition>
        <argsstring></argsstring>
        <name>matUtriCholFactor</name>
        <briefdescription>
<para>Upper triangular cholesky factor; initially 0x0 matrix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="319" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1regression_1_1LARS_1a97eab6d709b80585fe9e8a54b1e3da27" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tolerance</definition>
        <argsstring></argsstring>
        <name>tolerance</name>
        <briefdescription>
<para>Tolerance for main loop. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="335" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1regression_1_1LARS_1a0eb97096efeb5ed8ac747f95d672c001" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool useCholesky</definition>
        <argsstring></argsstring>
        <name>useCholesky</name>
        <briefdescription>
<para>Whether or not to use Cholesky decomposition when solving linear system. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="322" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="322" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a286c84aa2fd218969a77cc297985c482" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LARS</definition>
        <argsstring>(const bool useCholesky=false, const double lambda1=0.0, const double lambda2=0.0, const double tolerance=1e-16)</argsstring>
        <name>LARS</name>
        <param>
          <type>const bool</type>
          <declname>useCholesky</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>lambda1</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>lambda2</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>tolerance</declname>
          <defval>1e-16</defval>
        </param>
        <briefdescription>
<para>Set the parameters to <ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Both lambda1 and lambda2 default to 0.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>useCholesky</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not to use Cholesky decomposition when solving linear system (as opposed to using the full Gram matrix). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambda1</parametername>
</parameternamelist>
<parameterdescription>
<para>Regularization parameter for l1-norm penalty. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambda2</parametername>
</parameternamelist>
<parameterdescription>
<para>Regularization parameter for l2-norm penalty. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>Run until the maximum correlation of elements in (X^T y) is less than this. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a7d239923bcafc8aae2fe6920a5816936" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LARS</definition>
        <argsstring>(const bool useCholesky, const arma::mat &amp;gramMatrix, const double lambda1=0.0, const double lambda2=0.0, const double tolerance=1e-16)</argsstring>
        <name>LARS</name>
        <param>
          <type>const bool</type>
          <declname>useCholesky</declname>
        </param>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>gramMatrix</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>lambda1</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>lambda2</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>tolerance</declname>
          <defval>1e-16</defval>
        </param>
        <briefdescription>
<para>Set the parameters to <ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref>, and pass in a precalculated Gram matrix. </para>        </briefdescription>
        <detaileddescription>
<para>Both lambda1 and lambda2 default to 0.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>useCholesky</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not to use Cholesky decomposition when solving linear system (as opposed to using the full Gram matrix). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gramMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Gram matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambda1</parametername>
</parameternamelist>
<parameterdescription>
<para>Regularization parameter for l1-norm penalty. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambda2</parametername>
</parameternamelist>
<parameterdescription>
<para>Regularization parameter for l2-norm penalty. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>Run until the maximum correlation of elements in (X^T y) is less than this. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a70e31765ec8b1f41c244bc096f662e95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LARS</definition>
        <argsstring>(const arma::mat &amp;data, const arma::rowvec &amp;responses, const bool transposeData=true, const bool useCholesky=false, const double lambda1=0.0, const double lambda2=0.0, const double tolerance=1e-16)</argsstring>
        <name>LARS</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const arma::rowvec &amp;</type>
          <declname>responses</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>transposeData</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>useCholesky</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>lambda1</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>lambda2</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>tolerance</declname>
          <defval>1e-16</defval>
        </param>
        <briefdescription>
<para>Set the parameters to <ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref> and run training. </para>        </briefdescription>
        <detaileddescription>
<para>Both lambda1 and lambda2 are set by default to 0.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>responses</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of targets. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transposeData</parametername>
</parameternamelist>
<parameterdescription>
<para>Should be true if the input data is column-major and false otherwise. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useCholesky</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not to use Cholesky decomposition when solving linear system (as opposed to using the full Gram matrix). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambda1</parametername>
</parameternamelist>
<parameterdescription>
<para>Regularization parameter for l1-norm penalty. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambda2</parametername>
</parameternamelist>
<parameterdescription>
<para>Regularization parameter for l2-norm penalty. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>Run until the maximum correlation of elements in (X^T y) is less than this. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a063aa7d400bd5974d940d19299536b39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LARS</definition>
        <argsstring>(const arma::mat &amp;data, const arma::rowvec &amp;responses, const bool transposeData, const bool useCholesky, const arma::mat &amp;gramMatrix, const double lambda1=0.0, const double lambda2=0.0, const double tolerance=1e-16)</argsstring>
        <name>LARS</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const arma::rowvec &amp;</type>
          <declname>responses</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>transposeData</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>useCholesky</declname>
        </param>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>gramMatrix</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>lambda1</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>lambda2</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>tolerance</declname>
          <defval>1e-16</defval>
        </param>
        <briefdescription>
<para>Set the parameters to <ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref>, pass in a precalculated Gram matrix, and run training. </para>        </briefdescription>
        <detaileddescription>
<para>Both lambda1 and lambda2 are set by default to 0.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>responses</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of targets. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transposeData</parametername>
</parameternamelist>
<parameterdescription>
<para>Should be true if the input data is column-major and false otherwise. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useCholesky</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not to use Cholesky decomposition when solving linear system (as opposed to using the full Gram matrix). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gramMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Gram matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambda1</parametername>
</parameternamelist>
<parameterdescription>
<para>Regularization parameter for l1-norm penalty. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambda2</parametername>
</parameternamelist>
<parameterdescription>
<para>Regularization parameter for l2-norm penalty. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>Run until the maximum correlation of elements in (X^T y) is less than this. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a0cc9d048eafa5549851dfbad14e2034a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LARS</definition>
        <argsstring>(const LARS &amp;other)</argsstring>
        <name>LARS</name>
        <param>
          <type>const <ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Construct the <ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref> object by copying the given <ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref> object to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a7aa7ae2d7c44de23b571d63999228a80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LARS</definition>
        <argsstring>(LARS &amp;&amp;other)</argsstring>
        <name>LARS</name>
        <param>
          <type><ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Construct the <ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref> object by taking ownership of the given <ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref> object to take ownership of. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a1775b52aa7ab1b47251df16bfa84969a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; size_t &gt; &amp;</type>
        <definition>const std::vector&lt;size_t&gt;&amp; ActiveSet</definition>
        <argsstring>() const</argsstring>
        <name>ActiveSet</name>
        <briefdescription>
<para>Access the set of active dimensions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="273" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="273" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a853eded6fe21f0293d997b3bc7905857" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::vec &amp;</type>
        <definition>const arma::vec&amp; Beta</definition>
        <argsstring>() const</argsstring>
        <name>Beta</name>
        <briefdescription>
<para>Access the solution coefficients. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="280" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="280" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1ac597124267a151fc199119835fd4a520" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; arma::vec &gt; &amp;</type>
        <definition>const std::vector&lt;arma::vec&gt;&amp; BetaPath</definition>
        <argsstring>() const</argsstring>
        <name>BetaPath</name>
        <briefdescription>
<para>Access the set of coefficients after each iteration; the solution is the last element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="277" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="277" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a007f162efb479883303b4d0d2bacdcb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ComputeError</definition>
        <argsstring>(const arma::mat &amp;matX, const arma::rowvec &amp;y, const bool rowMajor=false)</argsstring>
        <name>ComputeError</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>matX</declname>
        </param>
        <param>
          <type>const arma::rowvec &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>rowMajor</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Compute cost error of the given data matrix using the currently-trained <ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref> model. </para>        </briefdescription>
        <detaileddescription>
<para>Only ||y-beta*X||2 is used to calculate cost error.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>matX</parametername>
</parameternamelist>
<parameterdescription>
<para>Column-major input data (or row-major input data if rowMajor = true). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>responses A vector of targets. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rowMajor</parametername>
</parameternamelist>
<parameterdescription>
<para>Should be true if the data points matrix is row-major and false otherwise. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The minimum cost error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="307" column="1"/>
        <referencedby refid="classmlpack_1_1regression_1_1LARS_1aa1cedc65d70665851c31a900685dc061" compoundref="lars_8hpp" startline="287" endline="287">LARS::MatUtriCholFactor</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a264615b0081adef98427420db074cd44" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Lambda1</definition>
        <argsstring>() const</argsstring>
        <name>Lambda1</name>
        <briefdescription>
<para>Get the L1 regularization coefficient. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="253" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="253" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a743296069b1e03a1bb2e7a466eb68022" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; Lambda1</definition>
        <argsstring>()</argsstring>
        <name>Lambda1</name>
        <briefdescription>
<para>Modify the L1 regularization coefficient. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="255" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="255" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1aae12d0e36b1a7fa52a155f9d3f7a50f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Lambda2</definition>
        <argsstring>() const</argsstring>
        <name>Lambda2</name>
        <briefdescription>
<para>Get the L2 regularization coefficient. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="258" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="258" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1adb32f19e01e1576af72865eb87978008" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; Lambda2</definition>
        <argsstring>()</argsstring>
        <name>Lambda2</name>
        <briefdescription>
<para>Modify the L2 regularization coefficient. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="260" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="260" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a1d857e3dd6d8bde441e0df7ce4d8fb62" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; double &gt; &amp;</type>
        <definition>const std::vector&lt;double&gt;&amp; LambdaPath</definition>
        <argsstring>() const</argsstring>
        <name>LambdaPath</name>
        <briefdescription>
<para>Access the set of values for lambda1 after each iteration; the solution is the last element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="284" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="284" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1aa1cedc65d70665851c31a900685dc061" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::mat &amp;</type>
        <definition>const arma::mat&amp; MatUtriCholFactor</definition>
        <argsstring>() const</argsstring>
        <name>MatUtriCholFactor</name>
        <briefdescription>
<para>Access the upper triangular cholesky factor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="287" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="287" bodyend="287"/>
        <references refid="classmlpack_1_1regression_1_1LARS_1a007f162efb479883303b4d0d2bacdcb4">LARS::ComputeError</references>
        <references refid="classmlpack_1_1regression_1_1LARS_1a65cba07328997659bec80b9879b15a51">LARS::serialize</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1ac19238b303d9bcb7b8adf9fde6bd2b80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref> &amp;</type>
        <definition>LARS&amp; operator=</definition>
        <argsstring>(const LARS &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy the given <ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref> object to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a24105afcc8594b088d865c2a7171e860" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref> &amp;</type>
        <definition>LARS&amp; operator=</definition>
        <argsstring>(LARS &amp;&amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Take ownership of the given <ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref> object to take ownership of. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1af2f52669db2906eea3d0a0cb28d9c62a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Predict</definition>
        <argsstring>(const arma::mat &amp;points, arma::rowvec &amp;predictions, const bool rowMajor=false) const</argsstring>
        <name>Predict</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>arma::rowvec &amp;</type>
          <declname>predictions</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>rowMajor</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Predict y_i for each data point in the given data matrix using the currently-trained <ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref> model. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>points</parametername>
</parameternamelist>
<parameterdescription>
<para>The data points to regress on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>predictions</parametername>
</parameternamelist>
<parameterdescription>
<para>y, which will contained calculated values on completion. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rowMajor</parametername>
</parameternamelist>
<parameterdescription>
<para>Should be true if the data points matrix is row-major and false otherwise. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="248" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the <ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref> model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="293" column="1"/>
        <referencedby refid="classmlpack_1_1regression_1_1LARS_1aa1cedc65d70665851c31a900685dc061" compoundref="lars_8hpp" startline="287" endline="287">LARS::MatUtriCholFactor</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a7b5af5c1a84c507cbaa7f999ea5a4fda" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Tolerance</definition>
        <argsstring>() const</argsstring>
        <name>Tolerance</name>
        <briefdescription>
<para>Get the tolerance for maximum correlation during training. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="268" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="268" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a3d9fac84af16250f5a3689692e8f2173" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; Tolerance</definition>
        <argsstring>()</argsstring>
        <name>Tolerance</name>
        <briefdescription>
<para>Modify the tolerance for maximum correlation during training. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="270" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="270" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a6d3b55be8a7673b24b91100d71f88b83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Train</definition>
        <argsstring>(const arma::mat &amp;data, const arma::rowvec &amp;responses, arma::vec &amp;beta, const bool transposeData=true)</argsstring>
        <name>Train</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const arma::rowvec &amp;</type>
          <declname>responses</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>transposeData</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Run <ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>The input matrix (like all mlpack matrices) should be column-major <ndash/> each column is an observation and each row is a dimension. However, because <ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref> is more efficient on a row-major matrix, this method will (internally) transpose the matrix. If this transposition is not necessary (i.e., you want to pass in a row-major matrix), pass &apos;false&apos; for the transposeData parameter.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Column-major input data (or row-major input data if rowMajor = true). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>responses</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of targets. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beta</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to store the solution (the coefficients) in. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transposeData</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to false if the data is row-major. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>minimum cost error(||y-beta*X||2 is used to calculate error). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a124534427646a88375731cb50e0adacc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Train</definition>
        <argsstring>(const arma::mat &amp;data, const arma::rowvec &amp;responses, const bool transposeData=true)</argsstring>
        <name>Train</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const arma::rowvec &amp;</type>
          <declname>responses</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>transposeData</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Run <ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>The input matrix (like all mlpack matrices) should be column-major <ndash/> each column is an observation and each row is a dimension. However, because <ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref> is more efficient on a row-major matrix, this method will (internally) transpose the matrix. If this transposition is not necessary (i.e., you want to pass in a row-major matrix), pass &apos;false&apos; for the transposeData parameter.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>responses</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of targets. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transposeData</parametername>
</parameternamelist>
<parameterdescription>
<para>Should be true if the input data is column-major and false otherwise. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>minimum cost error(||y-beta*X||2 is used to calculate error). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="235" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1aa21d10cf60278f295a5c651116c514e6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool UseCholesky</definition>
        <argsstring>() const</argsstring>
        <name>UseCholesky</name>
        <briefdescription>
<para>Get whether to use the Cholesky decomposition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="263" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="263" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1aa4ddb0b082478bd07cb7c8120571b403" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool &amp;</type>
        <definition>bool&amp; UseCholesky</definition>
        <argsstring>()</argsstring>
        <name>UseCholesky</name>
        <briefdescription>
<para>Modify whether to use the Cholesky decomposition. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="265" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="265" bodyend="265"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a20673b96c97974619873ff19b491d416" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Activate</definition>
        <argsstring>(const size_t varInd)</argsstring>
        <name>Activate</name>
        <param>
          <type>const size_t</type>
          <declname>varInd</declname>
        </param>
        <briefdescription>
<para>Add dimension varInd to active set. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>varInd</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimension to add to active set. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="369" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1aa73ce17a093491d7d24354b12299036e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CholeskyDelete</definition>
        <argsstring>(const size_t colToKill)</argsstring>
        <name>CholeskyDelete</name>
        <param>
          <type>const size_t</type>
          <declname>colToKill</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="394" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1af9c4e8ae2a195d62ac85bb3673ebab22" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CholeskyInsert</definition>
        <argsstring>(const arma::vec &amp;newX, const arma::mat &amp;X)</argsstring>
        <name>CholeskyInsert</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>newX</declname>
        </param>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>X</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="386" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a9a65e8e0b4d3a345639a34d20791599b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CholeskyInsert</definition>
        <argsstring>(double sqNormNewX, const arma::vec &amp;newGramCol)</argsstring>
        <name>CholeskyInsert</name>
        <param>
          <type>double</type>
          <declname>sqNormNewX</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>newGramCol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="388" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a62a5578fb7652d69cd2d99f885b6754d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ComputeYHatDirection</definition>
        <argsstring>(const arma::mat &amp;matX, const arma::vec &amp;betaDirection, arma::vec &amp;yHatDirection)</argsstring>
        <name>ComputeYHatDirection</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>matX</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>betaDirection</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>yHatDirection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="379" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a20de1903a6fde1639e972bc92a657c01" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Deactivate</definition>
        <argsstring>(const size_t activeVarInd)</argsstring>
        <name>Deactivate</name>
        <param>
          <type>const size_t</type>
          <declname>activeVarInd</declname>
        </param>
        <briefdescription>
<para>Remove activeVarInd&apos;th element from active set. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>activeVarInd</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of element to remove from active set. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="362" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a2d5a17e91180eb0d5d9de269a9572bb3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GivensRotate</definition>
        <argsstring>(const arma::vec::fixed&lt; 2 &gt; &amp;x, arma::vec::fixed&lt; 2 &gt; &amp;rotatedX, arma::mat &amp;G)</argsstring>
        <name>GivensRotate</name>
        <param>
          <type>const arma::vec::fixed&lt; 2 &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>arma::vec::fixed&lt; 2 &gt; &amp;</type>
          <declname>rotatedX</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>G</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="390" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1aa0655244e468622335f7fc0c3a3046ae" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ignore</definition>
        <argsstring>(const size_t varInd)</argsstring>
        <name>Ignore</name>
        <param>
          <type>const size_t</type>
          <declname>varInd</declname>
        </param>
        <briefdescription>
<para>Add dimension varInd to ignores set (never removed). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>varInd</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimension to add to ignores set. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="376" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LARS_1a18da91f457651f7d6968441fa30e3bc2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InterpolateBeta</definition>
        <argsstring>()</argsstring>
        <name>InterpolateBeta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="384" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An implementation of <ref refid="classmlpack_1_1regression_1_1LARS" kindref="compound">LARS</ref>, a stage-wise homotopy-based algorithm for l1-regularized linear regression (LASSO) and l1+l2 regularized linear regression (Elastic Net). </para>    </briefdescription>
    <detaileddescription>
<para>Let <formula id="154">$ X $</formula> be a matrix where each row is a point and each column is a dimension and let <formula id="37">$ y $</formula> be a vector of responses.</para><para>The Elastic Net problem is to solve</para><para><formula id="155">\[ \min_{\beta} 0.5 || X \beta - y ||_2^2 + \lambda_1 || \beta ||_1 + 0.5 \lambda_2 || \beta ||_2^2 \]</formula></para><para>where <formula id="147">$ \beta $</formula> is the vector of regression coefficients.</para><para>If <formula id="156">$ \lambda_1 &gt; 0 $</formula> and <formula id="157">$ \lambda_2 = 0 $</formula>, the problem is the LASSO. If <formula id="156">$ \lambda_1 &gt; 0 $</formula> and <formula id="158">$ \lambda_2 &gt; 0 $</formula>, the problem is the elastic net. If <formula id="159">$ \lambda_1 = 0 $</formula> and <formula id="158">$ \lambda_2 &gt; 0 $</formula>, the problem is ridge regression. If <formula id="159">$ \lambda_1 = 0 $</formula> and <formula id="157">$ \lambda_2 = 0 $</formula>, the problem is unregularized linear regression.</para><para>Note: This algorithm is not recommended for use (in terms of efficiency) when <formula id="160">$ \lambda_1 $</formula> = 0.</para><para>For more details, see the following papers:</para><para><programlisting><codeline><highlight class="normal">@article{efron2004least,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>title={Least<sp/>angle<sp/>regression},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>author={Efron,<sp/>B.<sp/>and<sp/>Hastie,<sp/>T.<sp/>and<sp/>Johnstone,<sp/>I.<sp/>and<sp/>Tibshirani,<sp/>R.},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>journal={The<sp/>Annals<sp/>of<sp/>statistics},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>volume={32},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>number={2},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>pages={407--499},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>year={2004},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>publisher={Institute<sp/>of<sp/>Mathematical<sp/>Statistics}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para><programlisting><codeline><highlight class="normal">@article{zou2005regularization,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>title={Regularization<sp/>and<sp/>variable<sp/>selection<sp/>via<sp/>the<sp/>elastic<sp/>net},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>author={Zou,<sp/>H.<sp/>and<sp/>Hastie,<sp/>T.},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>journal={Journal<sp/>of<sp/>the<sp/>Royal<sp/>Statistical<sp/>Society<sp/>Series<sp/>B},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>volume={67},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>number={2},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>pages={301--320},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>year={2005},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>publisher={Royal<sp/>Statistical<sp/>Society}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" line="90" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lars/lars.hpp" bodystart="89" bodyend="395"/>
    <listofallmembers>
      <member refid="classmlpack_1_1regression_1_1LARS_1a20673b96c97974619873ff19b491d416" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>Activate</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a7d4e4d71ce5bd7f00128570eafb35345" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>activeSet</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a1775b52aa7ab1b47251df16bfa84969a" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>ActiveSet</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a853eded6fe21f0293d997b3bc7905857" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>Beta</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1ac597124267a151fc199119835fd4a520" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>BetaPath</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1af649a76cc3fbb99ffb720a7315c387d1" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>betaPath</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1aa73ce17a093491d7d24354b12299036e" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>CholeskyDelete</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1af9c4e8ae2a195d62ac85bb3673ebab22" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>CholeskyInsert</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a9a65e8e0b4d3a345639a34d20791599b" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>CholeskyInsert</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a007f162efb479883303b4d0d2bacdcb4" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>ComputeError</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a62a5578fb7652d69cd2d99f885b6754d" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>ComputeYHatDirection</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a20de1903a6fde1639e972bc92a657c01" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>Deactivate</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1ad713d660ec5c5c12e5a4e60f8900485f" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>elasticNet</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a2d5a17e91180eb0d5d9de269a9572bb3" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>GivensRotate</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1aa0655244e468622335f7fc0c3a3046ae" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>Ignore</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a2c460de335626cd1a9ba4e4954198569" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>ignoreSet</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a18da91f457651f7d6968441fa30e3bc2" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>InterpolateBeta</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1ab7a72440674d657adf8293698f719dc1" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>isActive</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1af51f9ae742eb2616922e15a8ce96d9f2" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>isIgnored</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a264615b0081adef98427420db074cd44" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>Lambda1</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a743296069b1e03a1bb2e7a466eb68022" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>Lambda1</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1ab43246964e91b737c5202793c9f337ed" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>lambda1</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1afdbf7b2b51f4f367aed9590917976d9f" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>lambda2</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1aae12d0e36b1a7fa52a155f9d3f7a50f1" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>Lambda2</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1adb32f19e01e1576af72865eb87978008" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>Lambda2</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a1d857e3dd6d8bde441e0df7ce4d8fb62" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>LambdaPath</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a063a0afd4ac4341c155e21ae4769dc07" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>lambdaPath</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a286c84aa2fd218969a77cc297985c482" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>LARS</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a7d239923bcafc8aae2fe6920a5816936" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>LARS</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a70e31765ec8b1f41c244bc096f662e95" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>LARS</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a063aa7d400bd5974d940d19299536b39" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>LARS</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a0cc9d048eafa5549851dfbad14e2034a" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>LARS</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a7aa7ae2d7c44de23b571d63999228a80" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>LARS</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a45d84eb0dda96dfac9a138e4345af508" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>lasso</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a81cb4493a835b907cca5034dd4bc8b34" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>matGram</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a6f86971bf96a8fe61597d2eed318aa19" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>matGramInternal</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1aa1cedc65d70665851c31a900685dc061" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>MatUtriCholFactor</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1ab69e9b213af252b31fc9f2ed2cde811f" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>matUtriCholFactor</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1ac19238b303d9bcb7b8adf9fde6bd2b80" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>operator=</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a24105afcc8594b088d865c2a7171e860" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>operator=</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1af2f52669db2906eea3d0a0cb28d9c62a" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>Predict</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a97eab6d709b80585fe9e8a54b1e3da27" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>tolerance</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a7b5af5c1a84c507cbaa7f999ea5a4fda" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>Tolerance</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a3d9fac84af16250f5a3689692e8f2173" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>Tolerance</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a6d3b55be8a7673b24b91100d71f88b83" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>Train</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a124534427646a88375731cb50e0adacc" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>Train</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1aa21d10cf60278f295a5c651116c514e6" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>UseCholesky</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1aa4ddb0b082478bd07cb7c8120571b403" prot="public" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>UseCholesky</name></member>
      <member refid="classmlpack_1_1regression_1_1LARS_1a0eb97096efeb5ed8ac747f95d672c001" prot="private" virt="non-virtual"><scope>mlpack::regression::LARS</scope><name>useCholesky</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
