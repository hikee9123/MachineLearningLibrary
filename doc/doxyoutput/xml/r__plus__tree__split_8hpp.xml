<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="r__plus__tree__split_8hpp" kind="file" language="C++">
    <compoundname>r_plus_tree_split.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="yes">r_plus_tree_split_impl.hpp</includes>
    <incdepgraph>
      <node id="17768">
        <label>list</label>
      </node>
      <node id="17765">
        <label>atomic</label>
      </node>
      <node id="17755">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="17731">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="17767">
        <label>iomanip</label>
      </node>
      <node id="17740">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="17741" relation="include">
        </childnode>
        <childnode refid="17743" relation="include">
        </childnode>
      </node>
      <node id="17723">
        <label>cstdint</label>
      </node>
      <node id="17732">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="17739">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="17762">
        <label>arma_config.hpp</label>
      </node>
      <node id="17752">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="17719">
        <label>cmath</label>
      </node>
      <node id="17738">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="17727">
        <label>stdexcept</label>
      </node>
      <node id="17747">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="17732" relation="include">
        </childnode>
        <childnode refid="17734" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17733" relation="include">
        </childnode>
      </node>
      <node id="17771">
        <label>string</label>
      </node>
      <node id="17759">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="17760" relation="include">
        </childnode>
        <childnode refid="17726" relation="include">
        </childnode>
      </node>
      <node id="17769">
        <label>map</label>
      </node>
      <node id="17721">
        <label>cfloat</label>
      </node>
      <node id="17751">
        <label>boost/variant.hpp</label>
      </node>
      <node id="17773">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="17735">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="17758">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="17759" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17742" relation="include">
        </childnode>
        <childnode refid="17760" relation="include">
        </childnode>
      </node>
      <node id="17748">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="17746">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="17732" relation="include">
        </childnode>
        <childnode refid="17734" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17733" relation="include">
        </childnode>
      </node>
      <node id="17749">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="17732" relation="include">
        </childnode>
        <childnode refid="17734" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17733" relation="include">
        </childnode>
      </node>
      <node id="17737">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="17757">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="17733" relation="include">
        </childnode>
        <childnode refid="17734" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17745" relation="include">
        </childnode>
        <childnode refid="17754" relation="include">
        </childnode>
      </node>
      <node id="17761">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="17762" relation="include">
        </childnode>
      </node>
      <node id="17763">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="17718">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="17719" relation="include">
        </childnode>
        <childnode refid="17720" relation="include">
        </childnode>
        <childnode refid="17721" relation="include">
        </childnode>
        <childnode refid="17722" relation="include">
        </childnode>
        <childnode refid="17723" relation="include">
        </childnode>
        <childnode refid="17724" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17726" relation="include">
        </childnode>
        <childnode refid="17727" relation="include">
        </childnode>
        <childnode refid="17728" relation="include">
        </childnode>
        <childnode refid="17729" relation="include">
        </childnode>
        <childnode refid="17730" relation="include">
        </childnode>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17732" relation="include">
        </childnode>
        <childnode refid="17733" relation="include">
        </childnode>
        <childnode refid="17734" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17737" relation="include">
        </childnode>
        <childnode refid="17738" relation="include">
        </childnode>
        <childnode refid="17739" relation="include">
        </childnode>
        <childnode refid="17740" relation="include">
        </childnode>
        <childnode refid="17744" relation="include">
        </childnode>
        <childnode refid="17745" relation="include">
        </childnode>
        <childnode refid="17746" relation="include">
        </childnode>
        <childnode refid="17747" relation="include">
        </childnode>
        <childnode refid="17748" relation="include">
        </childnode>
        <childnode refid="17749" relation="include">
        </childnode>
        <childnode refid="17750" relation="include">
        </childnode>
        <childnode refid="17756" relation="include">
        </childnode>
        <childnode refid="17757" relation="include">
        </childnode>
        <childnode refid="17754" relation="include">
        </childnode>
        <childnode refid="17758" relation="include">
        </childnode>
        <childnode refid="17761" relation="include">
        </childnode>
        <childnode refid="17763" relation="include">
        </childnode>
        <childnode refid="17764" relation="include">
        </childnode>
        <childnode refid="17773" relation="include">
        </childnode>
        <childnode refid="17774" relation="include">
        </childnode>
      </node>
      <node id="17724">
        <label>cstdio</label>
      </node>
      <node id="17728">
        <label>tuple</label>
      </node>
      <node id="17733">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="17775">
        <label>r_plus_tree_split_impl.hpp</label>
      </node>
      <node id="17750">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="17733" relation="include">
        </childnode>
        <childnode refid="17734" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17737" relation="include">
        </childnode>
        <childnode refid="17751" relation="include">
        </childnode>
        <childnode refid="17752" relation="include">
        </childnode>
        <childnode refid="17753" relation="include">
        </childnode>
        <childnode refid="17754" relation="include">
        </childnode>
      </node>
      <node id="17729">
        <label>utility</label>
      </node>
      <node id="17753">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="17744">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="17741">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="17742" relation="include">
        </childnode>
      </node>
      <node id="17764">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="17765" relation="include">
        </childnode>
        <childnode refid="17766" relation="include">
        </childnode>
        <childnode refid="17767" relation="include">
        </childnode>
        <childnode refid="17768" relation="include">
        </childnode>
        <childnode refid="17769" relation="include">
        </childnode>
        <childnode refid="17770" relation="include">
        </childnode>
        <childnode refid="17771" relation="include">
        </childnode>
        <childnode refid="17772" relation="include">
        </childnode>
      </node>
      <node id="17742">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="17756">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="17754" relation="include">
        </childnode>
        <childnode refid="17750" relation="include">
        </childnode>
        <childnode refid="17757" relation="include">
        </childnode>
      </node>
      <node id="17725">
        <label>cstdlib</label>
      </node>
      <node id="17720">
        <label>cctype</label>
      </node>
      <node id="17717">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/r_plus_tree_split.hpp</label>
        <link refid="r__plus__tree__split_8hpp"/>
        <childnode refid="17718" relation="include">
        </childnode>
        <childnode refid="17775" relation="include">
        </childnode>
      </node>
      <node id="17743">
        <label>unordered_map</label>
      </node>
      <node id="17722">
        <label>climits</label>
      </node>
      <node id="17770">
        <label>mutex</label>
      </node>
      <node id="17766">
        <label>chrono</label>
      </node>
      <node id="17774">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="17772">
        <label>thread</label>
      </node>
      <node id="17760">
        <label>type_traits</label>
      </node>
      <node id="17736">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="17730">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="17754">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="17732" relation="include">
        </childnode>
        <childnode refid="17733" relation="include">
        </childnode>
        <childnode refid="17734" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17755" relation="include">
        </childnode>
      </node>
      <node id="17726">
        <label>cstring</label>
      </node>
      <node id="17745">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="17734">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1tree_1_1RPlusTreeSplit" prot="public">mlpack::tree::RPlusTreeSplit</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1tree">mlpack::tree</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Mikhail Lozhnikov</para></simplesect>
Definition of the RPlusTreeSplit class, a class that splits the nodes of an R+ (or R++) tree, starting at a leaf node and moving upwards if necessary.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_TREE_RECTANGLE_TREE_R_PLUS_TREE_SPLIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_TREE_RECTANGLE_TREE_R_PLUS_TREE_SPLIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tree<sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SplitPolicyType,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SweepType&gt;</highlight></codeline>
<codeline lineno="32" refid="classmlpack_1_1tree_1_1RPlusTreeSplit" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1tree_1_1RPlusTreeSplit" kindref="compound">RPlusTreeSplit</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35" refid="classmlpack_1_1tree_1_1RPlusTreeSplit_1a0b150bc0b3a177f0ca7f3c4ce2d551f9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>SplitPolicyType<sp/><ref refid="classmlpack_1_1tree_1_1RPlusTreeSplit_1a0b150bc0b3a177f0ca7f3c4ce2d551f9" kindref="member">SplitPolicy</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1RPlusTreeSplit_1af73652d9536a1715364bbb0e4a9ba04e" kindref="member">SplitLeafNode</ref>(TreeType*<sp/>tree,<sp/>std::vector&lt;bool&gt;&amp;<sp/>relevels);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1RPlusTreeSplit_1a73ff1eaa94449d763847fff1f537922f" kindref="member">SplitNonLeafNode</ref>(TreeType*<sp/>tree,<sp/>std::vector&lt;bool&gt;&amp;<sp/>relevels);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SplitLeafNodeAlongPartition(</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TreeType*<sp/>tree,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TreeType*<sp/>treeOne,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TreeType*<sp/>treeTwo,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cutAxis,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType::ElemType<sp/>cut);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SplitNonLeafNodeAlongPartition(</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TreeType*<sp/>tree,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TreeType*<sp/>treeOne,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TreeType*<sp/>treeTwo,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cutAxis,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType::ElemType<sp/>cut);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddFakeNodes(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TreeType*<sp/>tree,<sp/>TreeType*<sp/>emptyTree);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>PartitionNode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TreeType*<sp/>node,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>minCutAxis,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType::ElemType&amp;<sp/>minCut);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeType&gt;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertNodeIntoTree(TreeType*<sp/>destTree,<sp/>TreeType*<sp/>srcNode);</highlight></codeline>
<codeline lineno="126"><highlight class="normal">};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;r_plus_tree_split_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>MLPACK_CORE_TREE_RECTANGLE_TREE_R_PLUS_TREE_SPLIT_HPP</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/r_plus_tree_split.hpp"/>
  </compounddef>
</doxygen>
