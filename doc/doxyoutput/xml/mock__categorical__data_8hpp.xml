<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="mock__categorical__data_8hpp" kind="file" language="C++">
    <compoundname>mock_categorical_data.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="discrete__distribution_8hpp" local="no">mlpack/core/dists/discrete_distribution.hpp</includes>
    <incdepgraph>
      <node id="59668">
        <label>list</label>
      </node>
      <node id="59665">
        <label>atomic</label>
      </node>
      <node id="59655">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="59631">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="59667">
        <label>iomanip</label>
      </node>
      <node id="59640">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="59641" relation="include">
        </childnode>
        <childnode refid="59643" relation="include">
        </childnode>
      </node>
      <node id="59623">
        <label>cstdint</label>
      </node>
      <node id="59632">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="59639">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="59677">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="59662">
        <label>arma_config.hpp</label>
      </node>
      <node id="59652">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="59619">
        <label>cmath</label>
      </node>
      <node id="59638">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="59627">
        <label>stdexcept</label>
      </node>
      <node id="59647">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="59632" relation="include">
        </childnode>
        <childnode refid="59634" relation="include">
        </childnode>
        <childnode refid="59635" relation="include">
        </childnode>
        <childnode refid="59633" relation="include">
        </childnode>
      </node>
      <node id="59671">
        <label>string</label>
      </node>
      <node id="59659">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="59660" relation="include">
        </childnode>
        <childnode refid="59626" relation="include">
        </childnode>
      </node>
      <node id="59669">
        <label>map</label>
      </node>
      <node id="59621">
        <label>cfloat</label>
      </node>
      <node id="59651">
        <label>boost/variant.hpp</label>
      </node>
      <node id="59673">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="59635">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="59658">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="59659" relation="include">
        </childnode>
        <childnode refid="59635" relation="include">
        </childnode>
        <childnode refid="59642" relation="include">
        </childnode>
        <childnode refid="59660" relation="include">
        </childnode>
      </node>
      <node id="59648">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="59646">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="59632" relation="include">
        </childnode>
        <childnode refid="59634" relation="include">
        </childnode>
        <childnode refid="59635" relation="include">
        </childnode>
        <childnode refid="59633" relation="include">
        </childnode>
      </node>
      <node id="59649">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="59632" relation="include">
        </childnode>
        <childnode refid="59634" relation="include">
        </childnode>
        <childnode refid="59635" relation="include">
        </childnode>
        <childnode refid="59633" relation="include">
        </childnode>
      </node>
      <node id="59637">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="59657">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="59633" relation="include">
        </childnode>
        <childnode refid="59634" relation="include">
        </childnode>
        <childnode refid="59635" relation="include">
        </childnode>
        <childnode refid="59645" relation="include">
        </childnode>
        <childnode refid="59654" relation="include">
        </childnode>
      </node>
      <node id="59661">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="59662" relation="include">
        </childnode>
      </node>
      <node id="59663">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="59618">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="59619" relation="include">
        </childnode>
        <childnode refid="59620" relation="include">
        </childnode>
        <childnode refid="59621" relation="include">
        </childnode>
        <childnode refid="59622" relation="include">
        </childnode>
        <childnode refid="59623" relation="include">
        </childnode>
        <childnode refid="59624" relation="include">
        </childnode>
        <childnode refid="59625" relation="include">
        </childnode>
        <childnode refid="59626" relation="include">
        </childnode>
        <childnode refid="59627" relation="include">
        </childnode>
        <childnode refid="59628" relation="include">
        </childnode>
        <childnode refid="59629" relation="include">
        </childnode>
        <childnode refid="59630" relation="include">
        </childnode>
        <childnode refid="59631" relation="include">
        </childnode>
        <childnode refid="59632" relation="include">
        </childnode>
        <childnode refid="59633" relation="include">
        </childnode>
        <childnode refid="59634" relation="include">
        </childnode>
        <childnode refid="59635" relation="include">
        </childnode>
        <childnode refid="59636" relation="include">
        </childnode>
        <childnode refid="59637" relation="include">
        </childnode>
        <childnode refid="59638" relation="include">
        </childnode>
        <childnode refid="59639" relation="include">
        </childnode>
        <childnode refid="59640" relation="include">
        </childnode>
        <childnode refid="59644" relation="include">
        </childnode>
        <childnode refid="59645" relation="include">
        </childnode>
        <childnode refid="59646" relation="include">
        </childnode>
        <childnode refid="59647" relation="include">
        </childnode>
        <childnode refid="59648" relation="include">
        </childnode>
        <childnode refid="59649" relation="include">
        </childnode>
        <childnode refid="59650" relation="include">
        </childnode>
        <childnode refid="59656" relation="include">
        </childnode>
        <childnode refid="59657" relation="include">
        </childnode>
        <childnode refid="59654" relation="include">
        </childnode>
        <childnode refid="59658" relation="include">
        </childnode>
        <childnode refid="59661" relation="include">
        </childnode>
        <childnode refid="59663" relation="include">
        </childnode>
        <childnode refid="59664" relation="include">
        </childnode>
        <childnode refid="59673" relation="include">
        </childnode>
        <childnode refid="59674" relation="include">
        </childnode>
      </node>
      <node id="59678">
        <label>random</label>
      </node>
      <node id="59624">
        <label>cstdio</label>
      </node>
      <node id="59628">
        <label>tuple</label>
      </node>
      <node id="59633">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="59650">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="59633" relation="include">
        </childnode>
        <childnode refid="59634" relation="include">
        </childnode>
        <childnode refid="59635" relation="include">
        </childnode>
        <childnode refid="59637" relation="include">
        </childnode>
        <childnode refid="59651" relation="include">
        </childnode>
        <childnode refid="59652" relation="include">
        </childnode>
        <childnode refid="59653" relation="include">
        </childnode>
        <childnode refid="59654" relation="include">
        </childnode>
      </node>
      <node id="59676">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="59618" relation="include">
        </childnode>
        <childnode refid="59677" relation="include">
        </childnode>
        <childnode refid="59678" relation="include">
        </childnode>
      </node>
      <node id="59629">
        <label>utility</label>
      </node>
      <node id="59653">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="59644">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="59641">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="59642" relation="include">
        </childnode>
      </node>
      <node id="59617">
        <label>/home/aakash/mlpack/src/mlpack/tests/mock_categorical_data.hpp</label>
        <link refid="mock__categorical__data_8hpp"/>
        <childnode refid="59618" relation="include">
        </childnode>
        <childnode refid="59675" relation="include">
        </childnode>
      </node>
      <node id="59664">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="59665" relation="include">
        </childnode>
        <childnode refid="59666" relation="include">
        </childnode>
        <childnode refid="59667" relation="include">
        </childnode>
        <childnode refid="59668" relation="include">
        </childnode>
        <childnode refid="59669" relation="include">
        </childnode>
        <childnode refid="59670" relation="include">
        </childnode>
        <childnode refid="59671" relation="include">
        </childnode>
        <childnode refid="59672" relation="include">
        </childnode>
      </node>
      <node id="59642">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="59656">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="59654" relation="include">
        </childnode>
        <childnode refid="59650" relation="include">
        </childnode>
        <childnode refid="59657" relation="include">
        </childnode>
      </node>
      <node id="59625">
        <label>cstdlib</label>
      </node>
      <node id="59675">
        <label>mlpack/core/dists/discrete_distribution.hpp</label>
        <link refid="discrete__distribution_8hpp"/>
        <childnode refid="59618" relation="include">
        </childnode>
        <childnode refid="59663" relation="include">
        </childnode>
        <childnode refid="59676" relation="include">
        </childnode>
      </node>
      <node id="59620">
        <label>cctype</label>
      </node>
      <node id="59643">
        <label>unordered_map</label>
      </node>
      <node id="59622">
        <label>climits</label>
      </node>
      <node id="59670">
        <label>mutex</label>
      </node>
      <node id="59666">
        <label>chrono</label>
      </node>
      <node id="59674">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="59672">
        <label>thread</label>
      </node>
      <node id="59660">
        <label>type_traits</label>
      </node>
      <node id="59636">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="59630">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="59654">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="59632" relation="include">
        </childnode>
        <childnode refid="59633" relation="include">
        </childnode>
        <childnode refid="59634" relation="include">
        </childnode>
        <childnode refid="59635" relation="include">
        </childnode>
        <childnode refid="59655" relation="include">
        </childnode>
      </node>
      <node id="59626">
        <label>cstring</label>
      </node>
      <node id="59645">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="59634">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="mock__categorical__data_8hpp_1a93686590f9141a5c16d2cb8ff0eadde6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void MockCategoricalData</definition>
        <argsstring>(arma::mat &amp;d, arma::Row&lt; size_t &gt; &amp;l, mlpack::data::DatasetInfo &amp;datasetInfo)</argsstring>
        <name>MockCategoricalData</name>
        <param>
          <type>arma::mat &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>arma::Row&lt; size_t &gt; &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="namespacemlpack_1_1data_1aa243ad7e4d29363b858bbc92b732921d" kindref="member">mlpack::data::DatasetInfo</ref> &amp;</type>
          <declname>datasetInfo</declname>
        </param>
        <briefdescription>
<para>Create a mock categorical dataset for testing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/tests/mock_categorical_data.hpp" line="20" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/tests/mock_categorical_data.hpp" bodystart="20" bodyend="114"/>
        <references refid="namespacemlpack_1_1data_1aa7714fa0b7efc7b31cbda21da607c5b6a2992a7ab833605792145cd40762644c7" compoundref="datatype_8hpp" startline="27">mlpack::data::categorical</references>
        <references refid="prereqs_8hpp_1ae71449b1cc6e6250b91f539153a7a0d3" compoundref="prereqs_8hpp" startline="39">M_PI</references>
        <references refid="classmlpack_1_1data_1_1DatasetMapper_1aa262641cb3ba3a0b2583c37e2863ab49">DatasetMapper&lt; PolicyType, InputType &gt;::MapString</references>
        <references refid="namespacemlpack_1_1math_1a305db122ade561ba1fe874bd51e9797d" compoundref="random_8hpp" startline="83" endline="86">mlpack::math::Random</references>
        <references refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a2c6f8d5bb4eacf7de767d2172b320756">DiscreteDistribution::Random</references>
        <references refid="classmlpack_1_1data_1_1DatasetMapper_1af46c276f8b3c130454e23447bcb959e4">DatasetMapper&lt; PolicyType, InputType &gt;::Type</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Generate categorical dataset for tests. </para>    </briefdescription>
    <detaileddescription>
<para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="preprocessor">#ifndef<sp/>MLPACK_TESTS_MOCK_CATEGORICAL_DATA_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_TESTS_MOCK_CATEGORICAL_DATA_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="discrete__distribution_8hpp" kindref="compound">mlpack/core/dists/discrete_distribution.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="mock__categorical__data_8hpp_1a93686590f9141a5c16d2cb8ff0eadde6" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mock__categorical__data_8hpp_1a93686590f9141a5c16d2cb8ff0eadde6" kindref="member">MockCategoricalData</ref>(arma::mat&amp;<sp/>d,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Row&lt;size_t&gt;&amp;<sp/>l,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1data_1_1DatasetMapper" kindref="compound">mlpack::data::DatasetInfo</ref>&amp;<sp/>datasetInfo)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;ll<sp/>build<sp/>a<sp/>spiral<sp/>dataset<sp/>plus<sp/>two<sp/>noisy<sp/>categorical<sp/>features.<sp/><sp/>We<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>build<sp/>the<sp/>distributions<sp/>for<sp/>the<sp/>categorical<sp/>features<sp/>(they&apos;ll<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>discrete<sp/>distributions).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution" kindref="compound">mlpack::distribution::DiscreteDistribution</ref><sp/>c1[5];</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>distribution<sp/>will<sp/>be<sp/>automatically<sp/>normalized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>++i)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;arma::vec&gt;<sp/>probs;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>probs.push_back(arma::vec(4,<sp/>arma::fill::randu));</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>c1[i]<sp/>=<sp/><ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution" kindref="compound">mlpack::distribution::DiscreteDistribution</ref>(probs);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution" kindref="compound">mlpack::distribution::DiscreteDistribution</ref><sp/>c2[5];</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>++i)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;arma::vec&gt;<sp/>probs;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>probs.push_back(arma::vec(2,<sp/>arma::fill::randu));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>c2[i]<sp/>=<sp/><ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution" kindref="compound">mlpack::distribution::DiscreteDistribution</ref>(probs);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>arma::mat<sp/>spiralDataset(4,<sp/>4000);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>arma::Row&lt;size_t&gt;<sp/>labels(4000);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4000;<sp/>++i)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>circle<sp/>every<sp/>2000<sp/>samples.<sp/><sp/>Plus<sp/>some<sp/>noise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>magnitude<sp/>=<sp/>2.0<sp/>+<sp/>(double(i)<sp/>/<sp/>200.0)<sp/>+</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.5<sp/>*<sp/><ref refid="namespacemlpack_1_1math_1a305db122ade561ba1fe874bd51e9797d" kindref="member">mlpack::math::Random</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle<sp/>=<sp/>(i<sp/>%<sp/>200)<sp/>*<sp/>(2<sp/>*<sp/><ref refid="prereqs_8hpp_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>)<sp/>+<sp/><ref refid="namespacemlpack_1_1math_1a305db122ade561ba1fe874bd51e9797d" kindref="member">mlpack::math::Random</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>magnitude<sp/>*<sp/>cos(angle);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>magnitude<sp/>*<sp/>sin(angle);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>spiralDataset(0,<sp/>i)<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>spiralDataset(1,<sp/>i)<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>categorical<sp/>features<sp/>c1<sp/>and<sp/>c2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>800)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spiralDataset(2,<sp/>i)<sp/>=<sp/>c1[1].<ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a2c6f8d5bb4eacf7de767d2172b320756" kindref="member">Random</ref>()[0];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spiralDataset(3,<sp/>i)<sp/>=<sp/>c2[1].<ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a2c6f8d5bb4eacf7de767d2172b320756" kindref="member">Random</ref>()[0];</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>labels[i]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>1600)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spiralDataset(2,<sp/>i)<sp/>=<sp/>c1[3].<ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a2c6f8d5bb4eacf7de767d2172b320756" kindref="member">Random</ref>()[0];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spiralDataset(3,<sp/>i)<sp/>=<sp/>c2[3].<ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a2c6f8d5bb4eacf7de767d2172b320756" kindref="member">Random</ref>()[0];</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>labels[i]<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>2400)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spiralDataset(2,<sp/>i)<sp/>=<sp/>c1[2].<ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a2c6f8d5bb4eacf7de767d2172b320756" kindref="member">Random</ref>()[0];</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spiralDataset(3,<sp/>i)<sp/>=<sp/>c2[2].<ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a2c6f8d5bb4eacf7de767d2172b320756" kindref="member">Random</ref>()[0];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>labels[i]<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>3200)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spiralDataset(2,<sp/>i)<sp/>=<sp/>c1[0].<ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a2c6f8d5bb4eacf7de767d2172b320756" kindref="member">Random</ref>()[0];</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spiralDataset(3,<sp/>i)<sp/>=<sp/>c2[0].<ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a2c6f8d5bb4eacf7de767d2172b320756" kindref="member">Random</ref>()[0];</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>labels[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spiralDataset(2,<sp/>i)<sp/>=<sp/>c1[4].<ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a2c6f8d5bb4eacf7de767d2172b320756" kindref="member">Random</ref>()[0];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spiralDataset(3,<sp/>i)<sp/>=<sp/>c2[4].<ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a2c6f8d5bb4eacf7de767d2172b320756" kindref="member">Random</ref>()[0];</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>labels[i]<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>create<sp/>the<sp/>dataset<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>datasetInfo<sp/>=<sp/><ref refid="namespacemlpack_1_1data_1aa243ad7e4d29363b858bbc92b732921d" kindref="member">mlpack::data::DatasetInfo</ref>(4);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>datasetInfo.<ref refid="classmlpack_1_1data_1_1DatasetMapper_1af46c276f8b3c130454e23447bcb959e4" kindref="member">Type</ref>(2)<sp/>=<sp/><ref refid="namespacemlpack_1_1data_1aa7714fa0b7efc7b31cbda21da607c5b6a2992a7ab833605792145cd40762644c7" kindref="member">mlpack::data::Datatype::categorical</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>datasetInfo.<ref refid="classmlpack_1_1data_1_1DatasetMapper_1af46c276f8b3c130454e23447bcb959e4" kindref="member">Type</ref>(3)<sp/>=<sp/><ref refid="namespacemlpack_1_1data_1aa7714fa0b7efc7b31cbda21da607c5b6a2992a7ab833605792145cd40762644c7" kindref="member">mlpack::data::Datatype::categorical</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>mappings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>datasetInfo.<ref refid="classmlpack_1_1data_1_1DatasetMapper_1aa262641cb3ba3a0b2583c37e2863ab49" kindref="member">MapString</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>2);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>datasetInfo.<ref refid="classmlpack_1_1data_1_1DatasetMapper_1aa262641cb3ba3a0b2583c37e2863ab49" kindref="member">MapString</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>2);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>datasetInfo.<ref refid="classmlpack_1_1data_1_1DatasetMapper_1aa262641cb3ba3a0b2583c37e2863ab49" kindref="member">MapString</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">,<sp/>2);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>datasetInfo.<ref refid="classmlpack_1_1data_1_1DatasetMapper_1aa262641cb3ba3a0b2583c37e2863ab49" kindref="member">MapString</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;3&quot;</highlight><highlight class="normal">,<sp/>2);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>datasetInfo.<ref refid="classmlpack_1_1data_1_1DatasetMapper_1aa262641cb3ba3a0b2583c37e2863ab49" kindref="member">MapString</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/>3);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>datasetInfo.<ref refid="classmlpack_1_1data_1_1DatasetMapper_1aa262641cb3ba3a0b2583c37e2863ab49" kindref="member">MapString</ref>&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>3);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>shuffle<sp/>the<sp/>dataset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>arma::uvec<sp/>indices<sp/>=<sp/>arma::shuffle(arma::linspace&lt;arma::uvec&gt;(0,<sp/>3999,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>4000));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>d<sp/>=<sp/>arma::mat(4,<sp/>4000);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>l<sp/>=<sp/>arma::Row&lt;size_t&gt;(4000);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4000;<sp/>++i)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>d.col(i)<sp/>=<sp/>spiralDataset.col(indices[i]);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>l[i]<sp/>=<sp/>labels[indices[i]];</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/tests/mock_categorical_data.hpp"/>
  </compounddef>
</doxygen>
