<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1tree_1_1HilbertRTreeSplit" kind="class" language="C++" prot="public">
    <compoundname>mlpack::tree::HilbertRTreeSplit</compoundname>
    <includes refid="hilbert__r__tree__split_8hpp" local="no">hilbert_r_tree_split.hpp</includes>
    <templateparamlist>
      <param>
        <type>size_t</type>
        <declname>splitOrder</declname>
        <defname>splitOrder</defname>
        <defval>2</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1HilbertRTreeSplit_1af73652d9536a1715364bbb0e4a9ba04e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TreeType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void SplitLeafNode</definition>
        <argsstring>(TreeType *tree, std::vector&lt; bool &gt; &amp;relevels)</argsstring>
        <name>SplitLeafNode</name>
        <param>
          <type>TreeType *</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>std::vector&lt; bool &gt; &amp;</type>
          <declname>relevels</declname>
        </param>
        <briefdescription>
<para>Split a leaf node using the &quot;default&quot; algorithm. </para>        </briefdescription>
        <detaileddescription>
<para>If necessary, this split will propagate upwards through the tree.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>The node that is being split. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>relevels</parametername>
</parameternamelist>
<parameterdescription>
<para>Not used. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_split.hpp" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1HilbertRTreeSplit_1a73ff1eaa94449d763847fff1f537922f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TreeType</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool SplitNonLeafNode</definition>
        <argsstring>(TreeType *tree, std::vector&lt; bool &gt; &amp;relevels)</argsstring>
        <name>SplitNonLeafNode</name>
        <param>
          <type>TreeType *</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>std::vector&lt; bool &gt; &amp;</type>
          <declname>relevels</declname>
        </param>
        <briefdescription>
<para>Split a non-leaf node using the &quot;default&quot; algorithm. </para>        </briefdescription>
        <detaileddescription>
<para>If this is a root node, the tree increases in depth.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>The node that is being split. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>relevels</parametername>
</parameternamelist>
<parameterdescription>
<para>Not used. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_split.hpp" line="50" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1HilbertRTreeSplit_1a6c93920e3104f9ab32a923ca24819a51" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TreeType</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool FindCooperatingSiblings</definition>
        <argsstring>(TreeType *parent, const size_t iTree, size_t &amp;firstSibling, size_t &amp;lastSibling)</argsstring>
        <name>FindCooperatingSiblings</name>
        <param>
          <type>TreeType *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>iTree</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>firstSibling</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>lastSibling</declname>
        </param>
        <briefdescription>
<para>Try to find splitOrder cooperating siblings in order to redistribute their children evenly. </para>        </briefdescription>
        <detaileddescription>
<para>Returns true on success.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent of of the overflowing node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iTree</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of the overflowing node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>firstSibling</parametername>
</parameternamelist>
<parameterdescription>
<para>The first cooperating sibling. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lastSibling</parametername>
</parameternamelist>
<parameterdescription>
<para>The last cooperating sibling. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_split.hpp" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1HilbertRTreeSplit_1a366b12879b000f6a42796871a2b81765" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TreeType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void RedistributeNodesEvenly</definition>
        <argsstring>(const TreeType *parent, const size_t firstSibling, const size_t lastSibling)</argsstring>
        <name>RedistributeNodesEvenly</name>
        <param>
          <type>const TreeType *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>firstSibling</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>lastSibling</declname>
        </param>
        <briefdescription>
<para>Redistribute the children of the cooperating siblings evenly among them. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent of of the overflowing node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>firstSibling</parametername>
</parameternamelist>
<parameterdescription>
<para>The first cooperating sibling. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lastSibling</parametername>
</parameternamelist>
<parameterdescription>
<para>The last cooperating sibling. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_split.hpp" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1HilbertRTreeSplit_1afa9e9d3ac0393fa4a375272778e73c0c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TreeType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void RedistributePointsEvenly</definition>
        <argsstring>(TreeType *parent, const size_t firstSibling, const size_t lastSibling)</argsstring>
        <name>RedistributePointsEvenly</name>
        <param>
          <type>TreeType *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>firstSibling</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>lastSibling</declname>
        </param>
        <briefdescription>
<para>Redistribute the points of the cooperating siblings evenly among them. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent of of the overflowing node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>firstSibling</parametername>
</parameternamelist>
<parameterdescription>
<para>The first cooperating sibling. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lastSibling</parametername>
</parameternamelist>
<parameterdescription>
<para>The last cooperating sibling. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_split.hpp" line="88" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The splitting procedure for the Hilbert R tree. </para>    </briefdescription>
    <detaileddescription>
<para>The template parameter splitOrder is the order of the splitting policy. The Hilbert R tree splits a node on overflow, turning splitOrder nodes into (splitOrder + 1) nodes.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>splitOrder</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of nodes to split. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_split.hpp" line="30" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_split.hpp" bodystart="29" bodyend="91"/>
    <listofallmembers>
      <member refid="classmlpack_1_1tree_1_1HilbertRTreeSplit_1a6c93920e3104f9ab32a923ca24819a51" prot="private" virt="non-virtual"><scope>mlpack::tree::HilbertRTreeSplit</scope><name>FindCooperatingSiblings</name></member>
      <member refid="classmlpack_1_1tree_1_1HilbertRTreeSplit_1a366b12879b000f6a42796871a2b81765" prot="private" virt="non-virtual"><scope>mlpack::tree::HilbertRTreeSplit</scope><name>RedistributeNodesEvenly</name></member>
      <member refid="classmlpack_1_1tree_1_1HilbertRTreeSplit_1afa9e9d3ac0393fa4a375272778e73c0c" prot="private" virt="non-virtual"><scope>mlpack::tree::HilbertRTreeSplit</scope><name>RedistributePointsEvenly</name></member>
      <member refid="classmlpack_1_1tree_1_1HilbertRTreeSplit_1af73652d9536a1715364bbb0e4a9ba04e" prot="public" virt="non-virtual"><scope>mlpack::tree::HilbertRTreeSplit</scope><name>SplitLeafNode</name></member>
      <member refid="classmlpack_1_1tree_1_1HilbertRTreeSplit_1a73ff1eaa94449d763847fff1f537922f" prot="public" virt="non-virtual"><scope>mlpack::tree::HilbertRTreeSplit</scope><name>SplitNonLeafNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
