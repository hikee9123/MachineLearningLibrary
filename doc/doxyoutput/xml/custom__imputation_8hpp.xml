<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="custom__imputation_8hpp" kind="file" language="C++">
    <compoundname>custom_imputation.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <incdepgraph>
      <node id="7382">
        <label>list</label>
      </node>
      <node id="7379">
        <label>atomic</label>
      </node>
      <node id="7369">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="7345">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="7381">
        <label>iomanip</label>
      </node>
      <node id="7354">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="7355" relation="include">
        </childnode>
        <childnode refid="7357" relation="include">
        </childnode>
      </node>
      <node id="7337">
        <label>cstdint</label>
      </node>
      <node id="7346">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="7353">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="7376">
        <label>arma_config.hpp</label>
      </node>
      <node id="7366">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="7333">
        <label>cmath</label>
      </node>
      <node id="7352">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="7341">
        <label>stdexcept</label>
      </node>
      <node id="7361">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="7346" relation="include">
        </childnode>
        <childnode refid="7348" relation="include">
        </childnode>
        <childnode refid="7349" relation="include">
        </childnode>
        <childnode refid="7347" relation="include">
        </childnode>
      </node>
      <node id="7385">
        <label>string</label>
      </node>
      <node id="7373">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="7374" relation="include">
        </childnode>
        <childnode refid="7340" relation="include">
        </childnode>
      </node>
      <node id="7383">
        <label>map</label>
      </node>
      <node id="7335">
        <label>cfloat</label>
      </node>
      <node id="7365">
        <label>boost/variant.hpp</label>
      </node>
      <node id="7387">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="7349">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="7372">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="7373" relation="include">
        </childnode>
        <childnode refid="7349" relation="include">
        </childnode>
        <childnode refid="7356" relation="include">
        </childnode>
        <childnode refid="7374" relation="include">
        </childnode>
      </node>
      <node id="7362">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="7360">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="7346" relation="include">
        </childnode>
        <childnode refid="7348" relation="include">
        </childnode>
        <childnode refid="7349" relation="include">
        </childnode>
        <childnode refid="7347" relation="include">
        </childnode>
      </node>
      <node id="7363">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="7346" relation="include">
        </childnode>
        <childnode refid="7348" relation="include">
        </childnode>
        <childnode refid="7349" relation="include">
        </childnode>
        <childnode refid="7347" relation="include">
        </childnode>
      </node>
      <node id="7351">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="7371">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="7347" relation="include">
        </childnode>
        <childnode refid="7348" relation="include">
        </childnode>
        <childnode refid="7349" relation="include">
        </childnode>
        <childnode refid="7359" relation="include">
        </childnode>
        <childnode refid="7368" relation="include">
        </childnode>
      </node>
      <node id="7375">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="7376" relation="include">
        </childnode>
      </node>
      <node id="7377">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="7332">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="7333" relation="include">
        </childnode>
        <childnode refid="7334" relation="include">
        </childnode>
        <childnode refid="7335" relation="include">
        </childnode>
        <childnode refid="7336" relation="include">
        </childnode>
        <childnode refid="7337" relation="include">
        </childnode>
        <childnode refid="7338" relation="include">
        </childnode>
        <childnode refid="7339" relation="include">
        </childnode>
        <childnode refid="7340" relation="include">
        </childnode>
        <childnode refid="7341" relation="include">
        </childnode>
        <childnode refid="7342" relation="include">
        </childnode>
        <childnode refid="7343" relation="include">
        </childnode>
        <childnode refid="7344" relation="include">
        </childnode>
        <childnode refid="7345" relation="include">
        </childnode>
        <childnode refid="7346" relation="include">
        </childnode>
        <childnode refid="7347" relation="include">
        </childnode>
        <childnode refid="7348" relation="include">
        </childnode>
        <childnode refid="7349" relation="include">
        </childnode>
        <childnode refid="7350" relation="include">
        </childnode>
        <childnode refid="7351" relation="include">
        </childnode>
        <childnode refid="7352" relation="include">
        </childnode>
        <childnode refid="7353" relation="include">
        </childnode>
        <childnode refid="7354" relation="include">
        </childnode>
        <childnode refid="7358" relation="include">
        </childnode>
        <childnode refid="7359" relation="include">
        </childnode>
        <childnode refid="7360" relation="include">
        </childnode>
        <childnode refid="7361" relation="include">
        </childnode>
        <childnode refid="7362" relation="include">
        </childnode>
        <childnode refid="7363" relation="include">
        </childnode>
        <childnode refid="7364" relation="include">
        </childnode>
        <childnode refid="7370" relation="include">
        </childnode>
        <childnode refid="7371" relation="include">
        </childnode>
        <childnode refid="7368" relation="include">
        </childnode>
        <childnode refid="7372" relation="include">
        </childnode>
        <childnode refid="7375" relation="include">
        </childnode>
        <childnode refid="7377" relation="include">
        </childnode>
        <childnode refid="7378" relation="include">
        </childnode>
        <childnode refid="7387" relation="include">
        </childnode>
        <childnode refid="7388" relation="include">
        </childnode>
      </node>
      <node id="7338">
        <label>cstdio</label>
      </node>
      <node id="7342">
        <label>tuple</label>
      </node>
      <node id="7347">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="7364">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="7347" relation="include">
        </childnode>
        <childnode refid="7348" relation="include">
        </childnode>
        <childnode refid="7349" relation="include">
        </childnode>
        <childnode refid="7351" relation="include">
        </childnode>
        <childnode refid="7365" relation="include">
        </childnode>
        <childnode refid="7366" relation="include">
        </childnode>
        <childnode refid="7367" relation="include">
        </childnode>
        <childnode refid="7368" relation="include">
        </childnode>
      </node>
      <node id="7343">
        <label>utility</label>
      </node>
      <node id="7367">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="7358">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="7355">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="7356" relation="include">
        </childnode>
      </node>
      <node id="7378">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="7379" relation="include">
        </childnode>
        <childnode refid="7380" relation="include">
        </childnode>
        <childnode refid="7381" relation="include">
        </childnode>
        <childnode refid="7382" relation="include">
        </childnode>
        <childnode refid="7383" relation="include">
        </childnode>
        <childnode refid="7384" relation="include">
        </childnode>
        <childnode refid="7385" relation="include">
        </childnode>
        <childnode refid="7386" relation="include">
        </childnode>
      </node>
      <node id="7356">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="7370">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="7368" relation="include">
        </childnode>
        <childnode refid="7364" relation="include">
        </childnode>
        <childnode refid="7371" relation="include">
        </childnode>
      </node>
      <node id="7339">
        <label>cstdlib</label>
      </node>
      <node id="7334">
        <label>cctype</label>
      </node>
      <node id="7357">
        <label>unordered_map</label>
      </node>
      <node id="7336">
        <label>climits</label>
      </node>
      <node id="7384">
        <label>mutex</label>
      </node>
      <node id="7380">
        <label>chrono</label>
      </node>
      <node id="7388">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="7386">
        <label>thread</label>
      </node>
      <node id="7374">
        <label>type_traits</label>
      </node>
      <node id="7350">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="7344">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="7368">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="7346" relation="include">
        </childnode>
        <childnode refid="7347" relation="include">
        </childnode>
        <childnode refid="7348" relation="include">
        </childnode>
        <childnode refid="7349" relation="include">
        </childnode>
        <childnode refid="7369" relation="include">
        </childnode>
      </node>
      <node id="7331">
        <label>/home/aakash/mlpack/src/mlpack/core/data/imputation_methods/custom_imputation.hpp</label>
        <link refid="custom__imputation_8hpp"/>
        <childnode refid="7332" relation="include">
        </childnode>
      </node>
      <node id="7340">
        <label>cstring</label>
      </node>
      <node id="7359">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="7348">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1data_1_1CustomImputation" prot="public">mlpack::data::CustomImputation</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1data">mlpack::data</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Keon Kim</para></simplesect>
Definition and Implementation of the empty CustomImputation class.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_DATA_IMPUTE_STRATEGIES_CUSTOM_IMPUTATION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_DATA_IMPUTE_STRATEGIES_CUSTOM_IMPUTATION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">data<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="24" refid="classmlpack_1_1data_1_1CustomImputation" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1data_1_1CustomImputation" kindref="compound">CustomImputation</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27" refid="classmlpack_1_1data_1_1CustomImputation_1a66df4ec3bf18ec99c7cd44df6ef1f092" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1data_1_1CustomImputation_1a66df4ec3bf18ec99c7cd44df6ef1f092" kindref="member">CustomImputation</ref>(T<sp/>customValue):</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>customValue(<ref refid="namespacestd" kindref="compound">std</ref>::move(customValue))</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nothing<sp/>to<sp/>initialize<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classmlpack_1_1data_1_1CustomImputation_1a94b8353ed4d68b10e2dd59d5e7dc15ca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1CustomImputation_1a94b8353ed4d68b10e2dd59d5e7dc15ca" kindref="member">Impute</ref>(arma::Mat&lt;T&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>mappedValue,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimension,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>columnMajor<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>replace<sp/>the<sp/>target<sp/>value<sp/>to<sp/>custom<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(columnMajor)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>input.n_cols;<sp/>++i)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input(dimension,<sp/>i)<sp/>==<sp/>mappedValue<sp/>||</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::isnan(input(dimension,<sp/>i)))</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input(dimension,<sp/>i)<sp/>=<sp/>customValue;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>input.n_rows;<sp/>++i)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input(i,<sp/>dimension)<sp/>==<sp/>mappedValue<sp/>||</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::isnan(input(i,<sp/>dimension)))</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input(i,<sp/>dimension)<sp/>=<sp/>customValue;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>T<sp/>customValue;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>CustomImputation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/data/imputation_methods/custom_imputation.hpp"/>
  </compounddef>
</doxygen>
