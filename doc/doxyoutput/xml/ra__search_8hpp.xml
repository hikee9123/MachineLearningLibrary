<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="ra__search_8hpp" kind="file" language="C++">
    <compoundname>ra_search.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="binary__space__tree_8hpp" local="no">mlpack/core/tree/binary_space_tree.hpp</includes>
    <includes refid="lmetric_8hpp" local="no">mlpack/core/metrics/lmetric.hpp</includes>
    <includes refid="nearest__neighbor__sort_8hpp" local="no">mlpack/methods/neighbor_search/sort_policies/nearest_neighbor_sort.hpp</includes>
    <includes refid="ra__query__stat_8hpp" local="yes">ra_query_stat.hpp</includes>
    <includes refid="ra__util_8hpp" local="yes">ra_util.hpp</includes>
    <includes local="yes">ra_search_impl.hpp</includes>
    <includes refid="ra__typedef_8hpp" local="yes">ra_typedef.hpp</includes>
    <includedby refid="ra__model_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp</includedby>
    <includedby refid="ra__typedef_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/rann/ra_typedef.hpp</includedby>
    <incdepgraph>
      <node id="54866">
        <label>list</label>
      </node>
      <node id="54917">
        <label>breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="54909">
        <label>binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54906" relation="include">
        </childnode>
        <childnode refid="54910" relation="include">
        </childnode>
      </node>
      <node id="54919">
        <label>binary_space_tree/traits.hpp</label>
        <link refid="binary__space__tree_2traits_8hpp"/>
        <childnode refid="54920" relation="include">
        </childnode>
        <childnode refid="54881" relation="include">
        </childnode>
      </node>
      <node id="54863">
        <label>atomic</label>
      </node>
      <node id="54853">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="54829">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="54865">
        <label>iomanip</label>
      </node>
      <node id="54916">
        <label>queue</label>
      </node>
      <node id="54878">
        <label>bound_traits.hpp</label>
        <link refid="bound__traits_8hpp"/>
      </node>
      <node id="54891">
        <label>binary_space_tree/mean_split.hpp</label>
        <link refid="mean__split_8hpp"/>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54889" relation="include">
        </childnode>
        <childnode refid="54892" relation="include">
        </childnode>
      </node>
      <node id="54877">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="54838">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="54839" relation="include">
        </childnode>
        <childnode refid="54841" relation="include">
        </childnode>
      </node>
      <node id="54821">
        <label>cstdint</label>
      </node>
      <node id="54830">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="54837">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="54918">
        <label>binary_space_tree/breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="54923">
        <label>nearest_neighbor_sort_impl.hpp</label>
      </node>
      <node id="54895">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="54892">
        <label>mean_split_impl.hpp</label>
      </node>
      <node id="54860">
        <label>arma_config.hpp</label>
      </node>
      <node id="54883">
        <label>hollow_ball_bound.hpp</label>
        <link refid="hollow__ball__bound_8hpp"/>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54876" relation="include">
        </childnode>
        <childnode refid="54878" relation="include">
        </childnode>
        <childnode refid="54884" relation="include">
        </childnode>
      </node>
      <node id="54907">
        <label>../statistic.hpp</label>
        <link refid="statistic_8hpp"/>
      </node>
      <node id="54902">
        <label>lin_alg_impl.hpp</label>
      </node>
      <node id="54850">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="54817">
        <label>cmath</label>
      </node>
      <node id="54874">
        <label>bounds.hpp</label>
        <link refid="bounds_8hpp"/>
        <childnode refid="54875" relation="include">
        </childnode>
        <childnode refid="54876" relation="include">
        </childnode>
        <childnode refid="54878" relation="include">
        </childnode>
        <childnode refid="54879" relation="include">
        </childnode>
        <childnode refid="54881" relation="include">
        </childnode>
        <childnode refid="54883" relation="include">
        </childnode>
        <childnode refid="54885" relation="include">
        </childnode>
      </node>
      <node id="54836">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="54825">
        <label>stdexcept</label>
      </node>
      <node id="54912">
        <label>binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54906" relation="include">
        </childnode>
        <childnode refid="54913" relation="include">
        </childnode>
      </node>
      <node id="54845">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="54830" relation="include">
        </childnode>
        <childnode refid="54832" relation="include">
        </childnode>
        <childnode refid="54833" relation="include">
        </childnode>
        <childnode refid="54831" relation="include">
        </childnode>
      </node>
      <node id="54875">
        <label>mlpack/core/math/range.hpp</label>
      </node>
      <node id="54869">
        <label>string</label>
      </node>
      <node id="54898">
        <label>binary_space_tree/rp_tree_max_split.hpp</label>
        <link refid="rp__tree__max__split_8hpp"/>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54889" relation="include">
        </childnode>
        <childnode refid="54899" relation="include">
        </childnode>
      </node>
      <node id="54890">
        <label>midpoint_split_impl.hpp</label>
      </node>
      <node id="54857">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="54858" relation="include">
        </childnode>
        <childnode refid="54824" relation="include">
        </childnode>
      </node>
      <node id="54925">
        <label>ra_util.hpp</label>
        <link refid="ra__util_8hpp"/>
        <childnode refid="54816" relation="include">
        </childnode>
      </node>
      <node id="54867">
        <label>map</label>
      </node>
      <node id="54913">
        <label>dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="54901">
        <label>mlpack/core/math/lin_alg.hpp</label>
        <link refid="lin__alg_8hpp"/>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54902" relation="include">
        </childnode>
      </node>
      <node id="54819">
        <label>cfloat</label>
      </node>
      <node id="54849">
        <label>boost/variant.hpp</label>
      </node>
      <node id="54927">
        <label>ra_typedef.hpp</label>
        <link refid="ra__typedef_8hpp"/>
        <childnode refid="54815" relation="include">
        </childnode>
        <childnode refid="54876" relation="include">
        </childnode>
        <childnode refid="54922" relation="include">
        </childnode>
        <childnode refid="54928" relation="include">
        </childnode>
      </node>
      <node id="54871">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="54833">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="54856">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="54857" relation="include">
        </childnode>
        <childnode refid="54833" relation="include">
        </childnode>
        <childnode refid="54840" relation="include">
        </childnode>
        <childnode refid="54858" relation="include">
        </childnode>
      </node>
      <node id="54846">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="54844">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="54830" relation="include">
        </childnode>
        <childnode refid="54832" relation="include">
        </childnode>
        <childnode refid="54833" relation="include">
        </childnode>
        <childnode refid="54831" relation="include">
        </childnode>
      </node>
      <node id="54847">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="54830" relation="include">
        </childnode>
        <childnode refid="54832" relation="include">
        </childnode>
        <childnode refid="54833" relation="include">
        </childnode>
        <childnode refid="54831" relation="include">
        </childnode>
      </node>
      <node id="54908">
        <label>binary_space_tree_impl.hpp</label>
      </node>
      <node id="54835">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="54855">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="54831" relation="include">
        </childnode>
        <childnode refid="54832" relation="include">
        </childnode>
        <childnode refid="54833" relation="include">
        </childnode>
        <childnode refid="54843" relation="include">
        </childnode>
        <childnode refid="54852" relation="include">
        </childnode>
      </node>
      <node id="54859">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="54860" relation="include">
        </childnode>
      </node>
      <node id="54914">
        <label>binary_space_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="54861">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="54816">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="54817" relation="include">
        </childnode>
        <childnode refid="54818" relation="include">
        </childnode>
        <childnode refid="54819" relation="include">
        </childnode>
        <childnode refid="54820" relation="include">
        </childnode>
        <childnode refid="54821" relation="include">
        </childnode>
        <childnode refid="54822" relation="include">
        </childnode>
        <childnode refid="54823" relation="include">
        </childnode>
        <childnode refid="54824" relation="include">
        </childnode>
        <childnode refid="54825" relation="include">
        </childnode>
        <childnode refid="54826" relation="include">
        </childnode>
        <childnode refid="54827" relation="include">
        </childnode>
        <childnode refid="54828" relation="include">
        </childnode>
        <childnode refid="54829" relation="include">
        </childnode>
        <childnode refid="54830" relation="include">
        </childnode>
        <childnode refid="54831" relation="include">
        </childnode>
        <childnode refid="54832" relation="include">
        </childnode>
        <childnode refid="54833" relation="include">
        </childnode>
        <childnode refid="54834" relation="include">
        </childnode>
        <childnode refid="54835" relation="include">
        </childnode>
        <childnode refid="54836" relation="include">
        </childnode>
        <childnode refid="54837" relation="include">
        </childnode>
        <childnode refid="54838" relation="include">
        </childnode>
        <childnode refid="54842" relation="include">
        </childnode>
        <childnode refid="54843" relation="include">
        </childnode>
        <childnode refid="54844" relation="include">
        </childnode>
        <childnode refid="54845" relation="include">
        </childnode>
        <childnode refid="54846" relation="include">
        </childnode>
        <childnode refid="54847" relation="include">
        </childnode>
        <childnode refid="54848" relation="include">
        </childnode>
        <childnode refid="54854" relation="include">
        </childnode>
        <childnode refid="54855" relation="include">
        </childnode>
        <childnode refid="54852" relation="include">
        </childnode>
        <childnode refid="54856" relation="include">
        </childnode>
        <childnode refid="54859" relation="include">
        </childnode>
        <childnode refid="54861" relation="include">
        </childnode>
        <childnode refid="54862" relation="include">
        </childnode>
        <childnode refid="54871" relation="include">
        </childnode>
        <childnode refid="54872" relation="include">
        </childnode>
      </node>
      <node id="54910">
        <label>single_tree_traverser_impl.hpp</label>
      </node>
      <node id="54929">
        <label>furthest_neighbor_sort_impl.hpp</label>
      </node>
      <node id="54888">
        <label>binary_space_tree/midpoint_split.hpp</label>
        <link refid="midpoint__split_8hpp"/>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54889" relation="include">
        </childnode>
        <childnode refid="54890" relation="include">
        </childnode>
      </node>
      <node id="54896">
        <label>random</label>
      </node>
      <node id="54882">
        <label>ballbound_impl.hpp</label>
      </node>
      <node id="54815">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_search.hpp</label>
        <link refid="ra__search_8hpp"/>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54873" relation="include">
        </childnode>
        <childnode refid="54876" relation="include">
        </childnode>
        <childnode refid="54922" relation="include">
        </childnode>
        <childnode refid="54924" relation="include">
        </childnode>
        <childnode refid="54925" relation="include">
        </childnode>
        <childnode refid="54926" relation="include">
        </childnode>
        <childnode refid="54927" relation="include">
        </childnode>
      </node>
      <node id="54911">
        <label>binary_space_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="54822">
        <label>cstdio</label>
      </node>
      <node id="54886">
        <label>address.hpp</label>
        <link refid="address_8hpp"/>
      </node>
      <node id="54920">
        <label>mlpack/core/tree/tree_traits.hpp</label>
        <link refid="tree__traits_8hpp"/>
      </node>
      <node id="54826">
        <label>tuple</label>
      </node>
      <node id="54831">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="54904">
        <label>binary_space_tree/ub_tree_split.hpp</label>
        <link refid="ub__tree__split_8hpp"/>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54886" relation="include">
        </childnode>
        <childnode refid="54905" relation="include">
        </childnode>
      </node>
      <node id="54848">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="54831" relation="include">
        </childnode>
        <childnode refid="54832" relation="include">
        </childnode>
        <childnode refid="54833" relation="include">
        </childnode>
        <childnode refid="54835" relation="include">
        </childnode>
        <childnode refid="54849" relation="include">
        </childnode>
        <childnode refid="54850" relation="include">
        </childnode>
        <childnode refid="54851" relation="include">
        </childnode>
        <childnode refid="54852" relation="include">
        </childnode>
      </node>
      <node id="54906">
        <label>binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54907" relation="include">
        </childnode>
        <childnode refid="54888" relation="include">
        </childnode>
        <childnode refid="54908" relation="include">
        </childnode>
        <childnode refid="54873" relation="include">
        </childnode>
      </node>
      <node id="54879">
        <label>hrectbound.hpp</label>
        <link refid="hrectbound_8hpp"/>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54875" relation="include">
        </childnode>
        <childnode refid="54876" relation="include">
        </childnode>
        <childnode refid="54878" relation="include">
        </childnode>
        <childnode refid="54880" relation="include">
        </childnode>
      </node>
      <node id="54903">
        <label>rp_tree_mean_split_impl.hpp</label>
      </node>
      <node id="54894">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54895" relation="include">
        </childnode>
        <childnode refid="54896" relation="include">
        </childnode>
      </node>
      <node id="54827">
        <label>utility</label>
      </node>
      <node id="54851">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="54842">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="54873">
        <label>mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54874" relation="include">
        </childnode>
        <childnode refid="54888" relation="include">
        </childnode>
        <childnode refid="54891" relation="include">
        </childnode>
        <childnode refid="54893" relation="include">
        </childnode>
        <childnode refid="54898" relation="include">
        </childnode>
        <childnode refid="54900" relation="include">
        </childnode>
        <childnode refid="54904" relation="include">
        </childnode>
        <childnode refid="54906" relation="include">
        </childnode>
        <childnode refid="54909" relation="include">
        </childnode>
        <childnode refid="54911" relation="include">
        </childnode>
        <childnode refid="54912" relation="include">
        </childnode>
        <childnode refid="54914" relation="include">
        </childnode>
        <childnode refid="54915" relation="include">
        </childnode>
        <childnode refid="54918" relation="include">
        </childnode>
        <childnode refid="54919" relation="include">
        </childnode>
        <childnode refid="54921" relation="include">
        </childnode>
      </node>
      <node id="54922">
        <label>mlpack/methods/neighbor_search/sort_policies/nearest_neighbor_sort.hpp</label>
        <link refid="nearest__neighbor__sort_8hpp"/>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54923" relation="include">
        </childnode>
      </node>
      <node id="54839">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="54840" relation="include">
        </childnode>
      </node>
      <node id="54924">
        <label>ra_query_stat.hpp</label>
        <link refid="ra__query__stat_8hpp"/>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54873" relation="include">
        </childnode>
        <childnode refid="54876" relation="include">
        </childnode>
        <childnode refid="54922" relation="include">
        </childnode>
      </node>
      <node id="54862">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="54863" relation="include">
        </childnode>
        <childnode refid="54864" relation="include">
        </childnode>
        <childnode refid="54865" relation="include">
        </childnode>
        <childnode refid="54866" relation="include">
        </childnode>
        <childnode refid="54867" relation="include">
        </childnode>
        <childnode refid="54868" relation="include">
        </childnode>
        <childnode refid="54869" relation="include">
        </childnode>
        <childnode refid="54870" relation="include">
        </childnode>
      </node>
      <node id="54840">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="54854">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="54852" relation="include">
        </childnode>
        <childnode refid="54848" relation="include">
        </childnode>
        <childnode refid="54855" relation="include">
        </childnode>
      </node>
      <node id="54823">
        <label>cstdlib</label>
      </node>
      <node id="54818">
        <label>cctype</label>
      </node>
      <node id="54928">
        <label>mlpack/methods/neighbor_search/sort_policies/furthest_neighbor_sort.hpp</label>
        <link refid="furthest__neighbor__sort_8hpp"/>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54929" relation="include">
        </childnode>
      </node>
      <node id="54841">
        <label>unordered_map</label>
      </node>
      <node id="54820">
        <label>climits</label>
      </node>
      <node id="54926">
        <label>ra_search_impl.hpp</label>
      </node>
      <node id="54868">
        <label>mutex</label>
      </node>
      <node id="54864">
        <label>chrono</label>
      </node>
      <node id="54880">
        <label>hrectbound_impl.hpp</label>
      </node>
      <node id="54872">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="54900">
        <label>binary_space_tree/rp_tree_mean_split.hpp</label>
        <link refid="rp__tree__mean__split_8hpp"/>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54898" relation="include">
        </childnode>
        <childnode refid="54889" relation="include">
        </childnode>
        <childnode refid="54901" relation="include">
        </childnode>
        <childnode refid="54903" relation="include">
        </childnode>
      </node>
      <node id="54897">
        <label>vantage_point_split_impl.hpp</label>
      </node>
      <node id="54870">
        <label>thread</label>
      </node>
      <node id="54881">
        <label>ballbound.hpp</label>
        <link refid="ballbound_8hpp"/>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54876" relation="include">
        </childnode>
        <childnode refid="54878" relation="include">
        </childnode>
        <childnode refid="54882" relation="include">
        </childnode>
      </node>
      <node id="54899">
        <label>rp_tree_max_split_impl.hpp</label>
      </node>
      <node id="54889">
        <label>mlpack/core/tree/perform_split.hpp</label>
        <link refid="perform__split_8hpp"/>
      </node>
      <node id="54858">
        <label>type_traits</label>
      </node>
      <node id="54915">
        <label>binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54916" relation="include">
        </childnode>
        <childnode refid="54873" relation="include">
        </childnode>
        <childnode refid="54917" relation="include">
        </childnode>
      </node>
      <node id="54834">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="54921">
        <label>binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="54873" relation="include">
        </childnode>
      </node>
      <node id="54828">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="54852">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="54830" relation="include">
        </childnode>
        <childnode refid="54831" relation="include">
        </childnode>
        <childnode refid="54832" relation="include">
        </childnode>
        <childnode refid="54833" relation="include">
        </childnode>
        <childnode refid="54853" relation="include">
        </childnode>
      </node>
      <node id="54884">
        <label>hollow_ball_bound_impl.hpp</label>
      </node>
      <node id="54824">
        <label>cstring</label>
      </node>
      <node id="54843">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="54887">
        <label>cellbound_impl.hpp</label>
      </node>
      <node id="54905">
        <label>ub_tree_split_impl.hpp</label>
      </node>
      <node id="54885">
        <label>cellbound.hpp</label>
        <link refid="cellbound_8hpp"/>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54875" relation="include">
        </childnode>
        <childnode refid="54876" relation="include">
        </childnode>
        <childnode refid="54878" relation="include">
        </childnode>
        <childnode refid="54886" relation="include">
        </childnode>
        <childnode refid="54887" relation="include">
        </childnode>
      </node>
      <node id="54832">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="54876">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54877" relation="include">
        </childnode>
      </node>
      <node id="54893">
        <label>binary_space_tree/vantage_point_split.hpp</label>
        <link refid="vantage__point__split_8hpp"/>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54889" relation="include">
        </childnode>
        <childnode refid="54894" relation="include">
        </childnode>
        <childnode refid="54897" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="54932">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_typedef.hpp</label>
        <link refid="ra__typedef_8hpp"/>
        <childnode refid="54930" relation="include">
        </childnode>
      </node>
      <node id="54930">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_search.hpp</label>
        <link refid="ra__search_8hpp"/>
        <childnode refid="54931" relation="include">
        </childnode>
        <childnode refid="54932" relation="include">
        </childnode>
      </node>
      <node id="54931">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp</label>
        <link refid="ra__model_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper" prot="public">mlpack::neighbor::LeafSizeRAWrapper</innerclass>
    <innerclass refid="classmlpack_1_1neighbor_1_1RASearch" prot="public">mlpack::neighbor::RASearch</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1neighbor">mlpack::neighbor</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Parikshit Ram</para></simplesect>
Defines the RASearch class, which performs an abstract rank-approximate nearest/farthest neighbor query on two datasets.</para><para>The details of this method can be found in the following paper:</para><para><programlisting><codeline><highlight class="normal">@inproceedings{ram2009rank,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>title={{Rank-Approximate<sp/>Nearest<sp/>Neighbor<sp/>Search:<sp/>Retaining<sp/>Meaning<sp/>and</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Speed<sp/>in<sp/>High<sp/>Dimensions}},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>author={{Ram,<sp/>P.<sp/>and<sp/>Lee,<sp/>D.<sp/>and<sp/>Ouyang,<sp/>H.<sp/>and<sp/>Gray,<sp/>A.<sp/>G.}},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>booktitle={{Advances<sp/>of<sp/>Neural<sp/>Information<sp/>Processing<sp/>Systems}},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>year={2009}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="25"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_RANN_RA_SEARCH_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_RANN_RA_SEARCH_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="binary__space__tree_8hpp" kindref="compound">mlpack/core/tree/binary_space_tree.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="lmetric_8hpp" kindref="compound">mlpack/core/metrics/lmetric.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nearest__neighbor__sort_8hpp" kindref="compound">mlpack/methods/neighbor_search/sort_policies/nearest_neighbor_sort.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ra__query__stat_8hpp" kindref="compound">ra_query_stat.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ra__util_8hpp" kindref="compound">ra_util.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">neighbor<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Forward<sp/>declaration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMetricType,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeStatType,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMatType&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TreeType&gt;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">class<sp/>LeafSizeRAWrapper;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SortPolicy<sp/>=<sp/><ref refid="namespacemlpack_1_1neighbor_1af3f11fce33c041aa26b1c91107f71b0f" kindref="member">NearestNeighborSort</ref>,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MetricType<sp/>=<sp/><ref refid="namespacemlpack_1_1metric_1a0306f114fdf32dcdfa8f015408cfc37d" kindref="member">metric::EuclideanDistance</ref>,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType<sp/>=<sp/>arma::mat,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMetricType,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeStatType,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMatType&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TreeType<sp/>=<sp/><ref refid="namespacemlpack_1_1tree_1a73c2146f8d1da65d927c7746bfe7e750" kindref="member">tree::KDTree</ref>&gt;</highlight></codeline>
<codeline lineno="77" refid="classmlpack_1_1neighbor_1_1RASearch" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1neighbor_1_1RASearch" kindref="compound">RASearch</ref></highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81" refid="classmlpack_1_1neighbor_1_1RASearch_1a23f60d6d543928c40d96f87711eeba19" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TreeType&lt;MetricType,<sp/>RAQueryStat&lt;SortPolicy&gt;,<sp/>MatType&gt;<sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1a23f60d6d543928c40d96f87711eeba19" kindref="member">Tree</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1a2e2e09ad4d126aa5c72648e5e36198ae" kindref="member">RASearch</ref>(MatType<sp/>referenceSet,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>naive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>singleMode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau<sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha<sp/>=<sp/>0.95,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sampleAtLeaves<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>firstLeafExact<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>singleSampleLimit<sp/>=<sp/>20,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MetricType<sp/>metric<sp/>=<sp/>MetricType());</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1a2e2e09ad4d126aa5c72648e5e36198ae" kindref="member">RASearch</ref>(Tree*<sp/>referenceTree,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>singleMode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau<sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha<sp/>=<sp/>0.95,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sampleAtLeaves<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>firstLeafExact<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>singleSampleLimit<sp/>=<sp/>20,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MetricType<sp/>metric<sp/>=<sp/>MetricType());</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1a2e2e09ad4d126aa5c72648e5e36198ae" kindref="member">RASearch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>naive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>singleMode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau<sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha<sp/>=<sp/>0.95,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sampleAtLeaves<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>firstLeafExact<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>singleSampleLimit<sp/>=<sp/>20,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MetricType<sp/>metric<sp/>=<sp/>MetricType());</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1a68b835e379f6b9375bbe6874357eb978" kindref="member">~RASearch</ref>();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1a27ba39af83e3cb01f2e6fbec159adf0e" kindref="member">Train</ref>(MatType<sp/>referenceSet);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1a27ba39af83e3cb01f2e6fbec159adf0e" kindref="member">Train</ref>(Tree*<sp/>referenceTree);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1a0de302ca0602fe721ac01f073d5e630f" kindref="member">Search</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>querySet,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;size_t&gt;&amp;<sp/>neighbors,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>distances);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1a0de302ca0602fe721ac01f073d5e630f" kindref="member">Search</ref>(Tree*<sp/>queryTree,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;size_t&gt;&amp;<sp/>neighbors,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>distances);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1a0de302ca0602fe721ac01f073d5e630f" kindref="member">Search</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;size_t&gt;&amp;<sp/>neighbors,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>distances);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1a769fa33810494d3cc0abdd8578daba67" kindref="member">ResetQueryTree</ref>(Tree*<sp/>queryTree)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="classmlpack_1_1neighbor_1_1RASearch_1a0a975940b302b4efec85bbe2d8b36251" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1a0a975940b302b4efec85bbe2d8b36251" kindref="member">ReferenceSet</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*referenceSet;<sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="classmlpack_1_1neighbor_1_1RASearch_1a343230e7d7344e3f7d5f5f2eb89cf2c5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1a343230e7d7344e3f7d5f5f2eb89cf2c5" kindref="member">Naive</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>naive;<sp/>}</highlight></codeline>
<codeline lineno="329" refid="classmlpack_1_1neighbor_1_1RASearch_1af7d397adca3f411b4e2d2f977b280ce6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1af7d397adca3f411b4e2d2f977b280ce6" kindref="member">Naive</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>naive;<sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="classmlpack_1_1neighbor_1_1RASearch_1a7477b3e8499a6158bbe177e7f30d4947" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1a7477b3e8499a6158bbe177e7f30d4947" kindref="member">SingleMode</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>singleMode;<sp/>}</highlight></codeline>
<codeline lineno="334" refid="classmlpack_1_1neighbor_1_1RASearch_1adadacd63ddeadf138d834b1fdc632773" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1adadacd63ddeadf138d834b1fdc632773" kindref="member">SingleMode</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>singleMode;<sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="classmlpack_1_1neighbor_1_1RASearch_1a4a4b0fafde4cc4c856a53025dc8c4c21" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1a4a4b0fafde4cc4c856a53025dc8c4c21" kindref="member">Tau</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tau;<sp/>}</highlight></codeline>
<codeline lineno="339" refid="classmlpack_1_1neighbor_1_1RASearch_1ad522d61ed716a322376adea25ebdbc90" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1ad522d61ed716a322376adea25ebdbc90" kindref="member">Tau</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tau;<sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="classmlpack_1_1neighbor_1_1RASearch_1a500ecd077d5cc5fdbf6ceb095d8de9e1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1a500ecd077d5cc5fdbf6ceb095d8de9e1" kindref="member">Alpha</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>alpha;<sp/>}</highlight></codeline>
<codeline lineno="344" refid="classmlpack_1_1neighbor_1_1RASearch_1acbb0e4747a3a307bee88bad71e5eeaf1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1acbb0e4747a3a307bee88bad71e5eeaf1" kindref="member">Alpha</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>alpha;<sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="classmlpack_1_1neighbor_1_1RASearch_1aa9dd91d6b96e1d0b343c3cec27372036" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1aa9dd91d6b96e1d0b343c3cec27372036" kindref="member">SampleAtLeaves</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sampleAtLeaves;<sp/>}</highlight></codeline>
<codeline lineno="349" refid="classmlpack_1_1neighbor_1_1RASearch_1a9f6d54dd0424f827becc2e2e9969b1bb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1a9f6d54dd0424f827becc2e2e9969b1bb" kindref="member">SampleAtLeaves</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sampleAtLeaves;<sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="classmlpack_1_1neighbor_1_1RASearch_1a17ec6e467897eb8aee3b519e0758e77d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1a17ec6e467897eb8aee3b519e0758e77d" kindref="member">FirstLeafExact</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>firstLeafExact;<sp/>}</highlight></codeline>
<codeline lineno="354" refid="classmlpack_1_1neighbor_1_1RASearch_1aca2eb648feb965d3bcb0b0b73f8b2b0f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1aca2eb648feb965d3bcb0b0b73f8b2b0f" kindref="member">FirstLeafExact</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>firstLeafExact;<sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="classmlpack_1_1neighbor_1_1RASearch_1a3a2580f686a9de3078e499b1280e2a9f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1a3a2580f686a9de3078e499b1280e2a9f" kindref="member">SingleSampleLimit</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>singleSampleLimit;<sp/>}</highlight></codeline>
<codeline lineno="359" refid="classmlpack_1_1neighbor_1_1RASearch_1ae78a7b8e9c96a2dbf646a27efee047b1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1ae78a7b8e9c96a2dbf646a27efee047b1" kindref="member">SingleSampleLimit</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>singleSampleLimit;<sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1RASearch_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>std::vector&lt;size_t&gt;<sp/>oldFromNewReferences;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>Tree*<sp/>referenceTree;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType*<sp/>referenceSet;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>treeOwner;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setOwner;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>naive;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>singleMode;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sampleAtLeaves;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>firstLeafExact;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>singleSampleLimit;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>MetricType<sp/>metric;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="classmlpack_1_1neighbor_1_1RASearch_1aba6992841b00d5aa2a2aeca9ce1423d7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper" kindref="compound">LeafSizeRAWrapper</ref>&lt;TreeType&gt;;</highlight></codeline>
<codeline lineno="400"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>RASearch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>neighbor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ra_search_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>convenient<sp/>typedefs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ra__typedef_8hpp" kindref="compound">ra_typedef.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_search.hpp"/>
  </compounddef>
</doxygen>
