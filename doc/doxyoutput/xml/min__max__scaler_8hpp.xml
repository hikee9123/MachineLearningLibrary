<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="min__max__scaler_8hpp" kind="file" language="C++">
    <compoundname>min_max_scaler.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includedby refid="scaling__model_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/preprocess/scaling_model.hpp</includedby>
    <incdepgraph>
      <node id="9007">
        <label>list</label>
      </node>
      <node id="9004">
        <label>atomic</label>
      </node>
      <node id="8994">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="8970">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="9006">
        <label>iomanip</label>
      </node>
      <node id="8979">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="8980" relation="include">
        </childnode>
        <childnode refid="8982" relation="include">
        </childnode>
      </node>
      <node id="8962">
        <label>cstdint</label>
      </node>
      <node id="8971">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="8978">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="9001">
        <label>arma_config.hpp</label>
      </node>
      <node id="8991">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="8958">
        <label>cmath</label>
      </node>
      <node id="8977">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="8966">
        <label>stdexcept</label>
      </node>
      <node id="8986">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="8971" relation="include">
        </childnode>
        <childnode refid="8973" relation="include">
        </childnode>
        <childnode refid="8974" relation="include">
        </childnode>
        <childnode refid="8972" relation="include">
        </childnode>
      </node>
      <node id="9010">
        <label>string</label>
      </node>
      <node id="8998">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="8999" relation="include">
        </childnode>
        <childnode refid="8965" relation="include">
        </childnode>
      </node>
      <node id="9008">
        <label>map</label>
      </node>
      <node id="8960">
        <label>cfloat</label>
      </node>
      <node id="8990">
        <label>boost/variant.hpp</label>
      </node>
      <node id="9012">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="8974">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="8997">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="8998" relation="include">
        </childnode>
        <childnode refid="8974" relation="include">
        </childnode>
        <childnode refid="8981" relation="include">
        </childnode>
        <childnode refid="8999" relation="include">
        </childnode>
      </node>
      <node id="8987">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="8985">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="8971" relation="include">
        </childnode>
        <childnode refid="8973" relation="include">
        </childnode>
        <childnode refid="8974" relation="include">
        </childnode>
        <childnode refid="8972" relation="include">
        </childnode>
      </node>
      <node id="8988">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="8971" relation="include">
        </childnode>
        <childnode refid="8973" relation="include">
        </childnode>
        <childnode refid="8974" relation="include">
        </childnode>
        <childnode refid="8972" relation="include">
        </childnode>
      </node>
      <node id="8976">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="8996">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="8972" relation="include">
        </childnode>
        <childnode refid="8973" relation="include">
        </childnode>
        <childnode refid="8974" relation="include">
        </childnode>
        <childnode refid="8984" relation="include">
        </childnode>
        <childnode refid="8993" relation="include">
        </childnode>
      </node>
      <node id="9000">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="9001" relation="include">
        </childnode>
      </node>
      <node id="9002">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="8957">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="8958" relation="include">
        </childnode>
        <childnode refid="8959" relation="include">
        </childnode>
        <childnode refid="8960" relation="include">
        </childnode>
        <childnode refid="8961" relation="include">
        </childnode>
        <childnode refid="8962" relation="include">
        </childnode>
        <childnode refid="8963" relation="include">
        </childnode>
        <childnode refid="8964" relation="include">
        </childnode>
        <childnode refid="8965" relation="include">
        </childnode>
        <childnode refid="8966" relation="include">
        </childnode>
        <childnode refid="8967" relation="include">
        </childnode>
        <childnode refid="8968" relation="include">
        </childnode>
        <childnode refid="8969" relation="include">
        </childnode>
        <childnode refid="8970" relation="include">
        </childnode>
        <childnode refid="8971" relation="include">
        </childnode>
        <childnode refid="8972" relation="include">
        </childnode>
        <childnode refid="8973" relation="include">
        </childnode>
        <childnode refid="8974" relation="include">
        </childnode>
        <childnode refid="8975" relation="include">
        </childnode>
        <childnode refid="8976" relation="include">
        </childnode>
        <childnode refid="8977" relation="include">
        </childnode>
        <childnode refid="8978" relation="include">
        </childnode>
        <childnode refid="8979" relation="include">
        </childnode>
        <childnode refid="8983" relation="include">
        </childnode>
        <childnode refid="8984" relation="include">
        </childnode>
        <childnode refid="8985" relation="include">
        </childnode>
        <childnode refid="8986" relation="include">
        </childnode>
        <childnode refid="8987" relation="include">
        </childnode>
        <childnode refid="8988" relation="include">
        </childnode>
        <childnode refid="8989" relation="include">
        </childnode>
        <childnode refid="8995" relation="include">
        </childnode>
        <childnode refid="8996" relation="include">
        </childnode>
        <childnode refid="8993" relation="include">
        </childnode>
        <childnode refid="8997" relation="include">
        </childnode>
        <childnode refid="9000" relation="include">
        </childnode>
        <childnode refid="9002" relation="include">
        </childnode>
        <childnode refid="9003" relation="include">
        </childnode>
        <childnode refid="9012" relation="include">
        </childnode>
        <childnode refid="9013" relation="include">
        </childnode>
      </node>
      <node id="8963">
        <label>cstdio</label>
      </node>
      <node id="8967">
        <label>tuple</label>
      </node>
      <node id="8972">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="8989">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="8972" relation="include">
        </childnode>
        <childnode refid="8973" relation="include">
        </childnode>
        <childnode refid="8974" relation="include">
        </childnode>
        <childnode refid="8976" relation="include">
        </childnode>
        <childnode refid="8990" relation="include">
        </childnode>
        <childnode refid="8991" relation="include">
        </childnode>
        <childnode refid="8992" relation="include">
        </childnode>
        <childnode refid="8993" relation="include">
        </childnode>
      </node>
      <node id="8968">
        <label>utility</label>
      </node>
      <node id="8992">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="8983">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="8980">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="8981" relation="include">
        </childnode>
      </node>
      <node id="9003">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="9004" relation="include">
        </childnode>
        <childnode refid="9005" relation="include">
        </childnode>
        <childnode refid="9006" relation="include">
        </childnode>
        <childnode refid="9007" relation="include">
        </childnode>
        <childnode refid="9008" relation="include">
        </childnode>
        <childnode refid="9009" relation="include">
        </childnode>
        <childnode refid="9010" relation="include">
        </childnode>
        <childnode refid="9011" relation="include">
        </childnode>
      </node>
      <node id="8981">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="8995">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="8993" relation="include">
        </childnode>
        <childnode refid="8989" relation="include">
        </childnode>
        <childnode refid="8996" relation="include">
        </childnode>
      </node>
      <node id="8964">
        <label>cstdlib</label>
      </node>
      <node id="8959">
        <label>cctype</label>
      </node>
      <node id="8956">
        <label>/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/min_max_scaler.hpp</label>
        <link refid="min__max__scaler_8hpp"/>
        <childnode refid="8957" relation="include">
        </childnode>
      </node>
      <node id="8982">
        <label>unordered_map</label>
      </node>
      <node id="8961">
        <label>climits</label>
      </node>
      <node id="9009">
        <label>mutex</label>
      </node>
      <node id="9005">
        <label>chrono</label>
      </node>
      <node id="9013">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="9011">
        <label>thread</label>
      </node>
      <node id="8999">
        <label>type_traits</label>
      </node>
      <node id="8975">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="8969">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="8993">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="8971" relation="include">
        </childnode>
        <childnode refid="8972" relation="include">
        </childnode>
        <childnode refid="8973" relation="include">
        </childnode>
        <childnode refid="8974" relation="include">
        </childnode>
        <childnode refid="8994" relation="include">
        </childnode>
      </node>
      <node id="8965">
        <label>cstring</label>
      </node>
      <node id="8984">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="8973">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="9014">
        <label>/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/min_max_scaler.hpp</label>
        <link refid="min__max__scaler_8hpp"/>
        <childnode refid="9015" relation="include">
        </childnode>
      </node>
      <node id="9015">
        <label>/home/aakash/mlpack/src/mlpack/methods/preprocess/scaling_model.hpp</label>
        <link refid="scaling__model_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1data_1_1MinMaxScaler" prot="public">mlpack::data::MinMaxScaler</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1data">mlpack::data</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Jeffin Sam</para></simplesect>
MinMaxScaler class to scale features.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_DATA_SCALE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_DATA_SCALE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">data<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classmlpack_1_1data_1_1MinMaxScaler" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1data_1_1MinMaxScaler" kindref="compound">MinMaxScaler</ref></highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57" refid="classmlpack_1_1data_1_1MinMaxScaler_1acb30d2500651f0921263773ddd493252" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1data_1_1MinMaxScaler_1acb30d2500651f0921263773ddd493252" kindref="member">MinMaxScaler</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min<sp/>=<sp/>0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>scaleMin<sp/>=<sp/>min;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>scaleMax<sp/>=<sp/>max;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>scaleMin<sp/>is<sp/>smaller<sp/>than<sp/>scaleMax.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scaleMin<sp/>&gt;<sp/>scaleMax)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Range<sp/>is<sp/>not<sp/>appropriate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="74" refid="classmlpack_1_1data_1_1MinMaxScaler_1a0b68c1a39a21e56e10f5b9250b056244" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1MinMaxScaler_1a0b68c1a39a21e56e10f5b9250b056244" kindref="member">Fit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>input)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>itemMin<sp/>=<sp/>arma::min(input,<sp/>1);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>itemMax<sp/>=<sp/>arma::max(input,<sp/>1);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>scale<sp/>=<sp/>itemMax<sp/>-<sp/>itemMin;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>zeros<sp/>in<sp/>scale<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>scale.for_each([](arma::vec::elem_type&amp;<sp/>val)<sp/>{<sp/>val<sp/>=</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(val<sp/>==<sp/>0)<sp/>?<sp/>1<sp/>:<sp/>val;<sp/>});</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>scale<sp/>=<sp/>(scaleMax<sp/>-<sp/>scaleMin)<sp/>/<sp/>scale;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>scalerowmin.copy_size(itemMin);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>scalerowmin.fill(scaleMin);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>scalerowmin<sp/>=<sp/>scalerowmin<sp/>-<sp/>itemMin<sp/>%<sp/>scale;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="95" refid="classmlpack_1_1data_1_1MinMaxScaler_1a7bc470a1e097f5b0aaf2396691432b3f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1MinMaxScaler_1a7bc470a1e097f5b0aaf2396691432b3f" kindref="member">Transform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>input,<sp/>MatType&amp;<sp/>output)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scalerowmin.is_empty()<sp/>||<sp/>scale.is_empty())</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Call<sp/>Fit()<sp/>before<sp/>Transform(),<sp/>please&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>refer<sp/>to<sp/>the<sp/>documentation.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>output.copy_size(input);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>(input.each_col()<sp/>%<sp/>scale).each_col()<sp/>+<sp/>scalerowmin;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="113" refid="classmlpack_1_1data_1_1MinMaxScaler_1afb0e67c6fbf5a527f63469bbbf07066c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1MinMaxScaler_1afb0e67c6fbf5a527f63469bbbf07066c" kindref="member">InverseTransform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>input,<sp/>MatType&amp;<sp/>output)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>output.copy_size(input);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>(input.each_col()<sp/>-<sp/>scalerowmin).each_col()<sp/>/<sp/>scale;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classmlpack_1_1data_1_1MinMaxScaler_1ae9ae591f227874f238c38d4cf070c6c8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/><ref refid="classmlpack_1_1data_1_1MinMaxScaler_1ae9ae591f227874f238c38d4cf070c6c8" kindref="member">ItemMin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itemMin;<sp/>}</highlight></codeline>
<codeline lineno="122" refid="classmlpack_1_1data_1_1MinMaxScaler_1a5ed43c216f23cf96c432216d6fc2a1c3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/><ref refid="classmlpack_1_1data_1_1MinMaxScaler_1a5ed43c216f23cf96c432216d6fc2a1c3" kindref="member">ItemMax</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itemMax;<sp/>}</highlight></codeline>
<codeline lineno="124" refid="classmlpack_1_1data_1_1MinMaxScaler_1a5adcafebd2c229793e57b7268c90a0fe" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/><ref refid="classmlpack_1_1data_1_1MinMaxScaler_1a5adcafebd2c229793e57b7268c90a0fe" kindref="member">Scale</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scale;<sp/>}</highlight></codeline>
<codeline lineno="126" refid="classmlpack_1_1data_1_1MinMaxScaler_1a841ab6e52291099af1ea0d7f50b31f87" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1MinMaxScaler_1a841ab6e52291099af1ea0d7f50b31f87" kindref="member">ScaleMax</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scaleMax;<sp/>}</highlight></codeline>
<codeline lineno="128" refid="classmlpack_1_1data_1_1MinMaxScaler_1a478b195e13c72fe1a667f93dfbf5b613" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1MinMaxScaler_1a478b195e13c72fe1a667f93dfbf5b613" kindref="member">ScaleMin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scaleMin;<sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="131" refid="classmlpack_1_1data_1_1MinMaxScaler_1a65cba07328997659bec80b9879b15a51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1MinMaxScaler_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(itemMin));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(itemMax));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(scale));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(scaleMin));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(scaleMax));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(scalerowmin));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Vector<sp/>which<sp/>holds<sp/>minimum<sp/>of<sp/>each<sp/>feature.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>arma::vec<sp/>itemMin;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Vector<sp/>which<sp/>holds<sp/>maximum<sp/>of<sp/>each<sp/>feature.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>arma::vec<sp/>itemMax;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Scale<sp/>vector<sp/>which<sp/>is<sp/>used<sp/>to<sp/>scale<sp/>up<sp/>each<sp/>feature.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>arma::vec<sp/>scale;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Lower<sp/>value<sp/>for<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scaleMin;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Upper<sp/>value<sp/>for<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scaleMax;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Column<sp/>vector<sp/>of<sp/>scalemin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>arma::vec<sp/>scalerowmin;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>MinMaxScaler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/min_max_scaler.hpp"/>
  </compounddef>
</doxygen>
