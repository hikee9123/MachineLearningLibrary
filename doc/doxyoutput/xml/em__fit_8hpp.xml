<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="em__fit_8hpp" kind="file" language="C++">
    <compoundname>em_fit.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="gaussian__distribution_8hpp" local="no">mlpack/core/dists/gaussian_distribution.hpp</includes>
    <includes refid="diagonal__gaussian__distribution_8hpp" local="no">mlpack/core/dists/diagonal_gaussian_distribution.hpp</includes>
    <includes refid="kmeans_8hpp" local="no">mlpack/methods/kmeans/kmeans.hpp</includes>
    <includes refid="positive__definite__constraint_8hpp" local="yes">positive_definite_constraint.hpp</includes>
    <includes local="yes">em_fit_impl.hpp</includes>
    <includedby refid="diagonal__gmm_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp</includedby>
    <includedby refid="gmm_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/gmm/gmm.hpp</includedby>
    <incdepgraph>
      <node id="49958">
        <label>list</label>
      </node>
      <node id="50017">
        <label>breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="50009">
        <label>binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
        <childnode refid="50006" relation="include">
        </childnode>
        <childnode refid="50010" relation="include">
        </childnode>
      </node>
      <node id="50019">
        <label>binary_space_tree/traits.hpp</label>
        <link refid="binary__space__tree_2traits_8hpp"/>
        <childnode refid="50020" relation="include">
        </childnode>
        <childnode refid="49984" relation="include">
        </childnode>
      </node>
      <node id="49955">
        <label>atomic</label>
      </node>
      <node id="49945">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="49921">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="49957">
        <label>iomanip</label>
      </node>
      <node id="50016">
        <label>queue</label>
      </node>
      <node id="49981">
        <label>bound_traits.hpp</label>
        <link refid="bound__traits_8hpp"/>
      </node>
      <node id="49994">
        <label>binary_space_tree/mean_split.hpp</label>
        <link refid="mean__split_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
        <childnode refid="49992" relation="include">
        </childnode>
        <childnode refid="49995" relation="include">
        </childnode>
      </node>
      <node id="49969">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="49930">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="49931" relation="include">
        </childnode>
        <childnode refid="49933" relation="include">
        </childnode>
      </node>
      <node id="49913">
        <label>cstdint</label>
      </node>
      <node id="49922">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="49929">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="50018">
        <label>binary_space_tree/breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="50024">
        <label>em_fit_impl.hpp</label>
      </node>
      <node id="49972">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="49995">
        <label>mean_split_impl.hpp</label>
      </node>
      <node id="49952">
        <label>arma_config.hpp</label>
      </node>
      <node id="49986">
        <label>hollow_ball_bound.hpp</label>
        <link refid="hollow__ball__bound_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
        <childnode refid="49968" relation="include">
        </childnode>
        <childnode refid="49981" relation="include">
        </childnode>
        <childnode refid="49987" relation="include">
        </childnode>
      </node>
      <node id="50007">
        <label>../statistic.hpp</label>
        <link refid="statistic_8hpp"/>
      </node>
      <node id="50002">
        <label>lin_alg_impl.hpp</label>
      </node>
      <node id="49942">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="49909">
        <label>cmath</label>
      </node>
      <node id="49979">
        <label>bounds.hpp</label>
        <link refid="bounds_8hpp"/>
        <childnode refid="49980" relation="include">
        </childnode>
        <childnode refid="49968" relation="include">
        </childnode>
        <childnode refid="49981" relation="include">
        </childnode>
        <childnode refid="49982" relation="include">
        </childnode>
        <childnode refid="49984" relation="include">
        </childnode>
        <childnode refid="49986" relation="include">
        </childnode>
        <childnode refid="49988" relation="include">
        </childnode>
      </node>
      <node id="49928">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="49917">
        <label>stdexcept</label>
      </node>
      <node id="50012">
        <label>binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
        <childnode refid="50006" relation="include">
        </childnode>
        <childnode refid="50013" relation="include">
        </childnode>
      </node>
      <node id="49937">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="49922" relation="include">
        </childnode>
        <childnode refid="49924" relation="include">
        </childnode>
        <childnode refid="49925" relation="include">
        </childnode>
        <childnode refid="49923" relation="include">
        </childnode>
      </node>
      <node id="49977">
        <label>naive_kmeans_impl.hpp</label>
      </node>
      <node id="49980">
        <label>mlpack/core/math/range.hpp</label>
      </node>
      <node id="49961">
        <label>string</label>
      </node>
      <node id="49998">
        <label>binary_space_tree/rp_tree_max_split.hpp</label>
        <link refid="rp__tree__max__split_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
        <childnode refid="49992" relation="include">
        </childnode>
        <childnode refid="49999" relation="include">
        </childnode>
      </node>
      <node id="49993">
        <label>midpoint_split_impl.hpp</label>
      </node>
      <node id="49949">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="49950" relation="include">
        </childnode>
        <childnode refid="49916" relation="include">
        </childnode>
      </node>
      <node id="49959">
        <label>map</label>
      </node>
      <node id="50013">
        <label>dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="50001">
        <label>mlpack/core/math/lin_alg.hpp</label>
        <link refid="lin__alg_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
        <childnode refid="50002" relation="include">
        </childnode>
      </node>
      <node id="49975">
        <label>max_variance_new_cluster_impl.hpp</label>
      </node>
      <node id="49911">
        <label>cfloat</label>
      </node>
      <node id="49941">
        <label>boost/variant.hpp</label>
      </node>
      <node id="49963">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="49925">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="49948">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="49949" relation="include">
        </childnode>
        <childnode refid="49925" relation="include">
        </childnode>
        <childnode refid="49932" relation="include">
        </childnode>
        <childnode refid="49950" relation="include">
        </childnode>
      </node>
      <node id="49938">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="49966">
        <label>mlpack/core/dists/diagonal_gaussian_distribution.hpp</label>
        <link refid="diagonal__gaussian__distribution_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
      </node>
      <node id="50023">
        <label>positive_definite_constraint.hpp</label>
        <link refid="positive__definite__constraint_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
      </node>
      <node id="49936">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="49922" relation="include">
        </childnode>
        <childnode refid="49924" relation="include">
        </childnode>
        <childnode refid="49925" relation="include">
        </childnode>
        <childnode refid="49923" relation="include">
        </childnode>
      </node>
      <node id="49939">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="49922" relation="include">
        </childnode>
        <childnode refid="49924" relation="include">
        </childnode>
        <childnode refid="49925" relation="include">
        </childnode>
        <childnode refid="49923" relation="include">
        </childnode>
      </node>
      <node id="50008">
        <label>binary_space_tree_impl.hpp</label>
      </node>
      <node id="49927">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="49947">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="49923" relation="include">
        </childnode>
        <childnode refid="49924" relation="include">
        </childnode>
        <childnode refid="49925" relation="include">
        </childnode>
        <childnode refid="49935" relation="include">
        </childnode>
        <childnode refid="49944" relation="include">
        </childnode>
      </node>
      <node id="49951">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="49952" relation="include">
        </childnode>
      </node>
      <node id="50014">
        <label>binary_space_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="49953">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="49908">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="49909" relation="include">
        </childnode>
        <childnode refid="49910" relation="include">
        </childnode>
        <childnode refid="49911" relation="include">
        </childnode>
        <childnode refid="49912" relation="include">
        </childnode>
        <childnode refid="49913" relation="include">
        </childnode>
        <childnode refid="49914" relation="include">
        </childnode>
        <childnode refid="49915" relation="include">
        </childnode>
        <childnode refid="49916" relation="include">
        </childnode>
        <childnode refid="49917" relation="include">
        </childnode>
        <childnode refid="49918" relation="include">
        </childnode>
        <childnode refid="49919" relation="include">
        </childnode>
        <childnode refid="49920" relation="include">
        </childnode>
        <childnode refid="49921" relation="include">
        </childnode>
        <childnode refid="49922" relation="include">
        </childnode>
        <childnode refid="49923" relation="include">
        </childnode>
        <childnode refid="49924" relation="include">
        </childnode>
        <childnode refid="49925" relation="include">
        </childnode>
        <childnode refid="49926" relation="include">
        </childnode>
        <childnode refid="49927" relation="include">
        </childnode>
        <childnode refid="49928" relation="include">
        </childnode>
        <childnode refid="49929" relation="include">
        </childnode>
        <childnode refid="49930" relation="include">
        </childnode>
        <childnode refid="49934" relation="include">
        </childnode>
        <childnode refid="49935" relation="include">
        </childnode>
        <childnode refid="49936" relation="include">
        </childnode>
        <childnode refid="49937" relation="include">
        </childnode>
        <childnode refid="49938" relation="include">
        </childnode>
        <childnode refid="49939" relation="include">
        </childnode>
        <childnode refid="49940" relation="include">
        </childnode>
        <childnode refid="49946" relation="include">
        </childnode>
        <childnode refid="49947" relation="include">
        </childnode>
        <childnode refid="49944" relation="include">
        </childnode>
        <childnode refid="49948" relation="include">
        </childnode>
        <childnode refid="49951" relation="include">
        </childnode>
        <childnode refid="49953" relation="include">
        </childnode>
        <childnode refid="49954" relation="include">
        </childnode>
        <childnode refid="49963" relation="include">
        </childnode>
        <childnode refid="49964" relation="include">
        </childnode>
      </node>
      <node id="50010">
        <label>single_tree_traverser_impl.hpp</label>
      </node>
      <node id="49991">
        <label>binary_space_tree/midpoint_split.hpp</label>
        <link refid="midpoint__split_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
        <childnode refid="49992" relation="include">
        </childnode>
        <childnode refid="49993" relation="include">
        </childnode>
      </node>
      <node id="49973">
        <label>random</label>
      </node>
      <node id="49985">
        <label>ballbound_impl.hpp</label>
      </node>
      <node id="50011">
        <label>binary_space_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="49914">
        <label>cstdio</label>
      </node>
      <node id="49989">
        <label>address.hpp</label>
        <link refid="address_8hpp"/>
      </node>
      <node id="50020">
        <label>mlpack/core/tree/tree_traits.hpp</label>
        <link refid="tree__traits_8hpp"/>
      </node>
      <node id="49918">
        <label>tuple</label>
      </node>
      <node id="49923">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="50004">
        <label>binary_space_tree/ub_tree_split.hpp</label>
        <link refid="ub__tree__split_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
        <childnode refid="49989" relation="include">
        </childnode>
        <childnode refid="50005" relation="include">
        </childnode>
      </node>
      <node id="49940">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="49923" relation="include">
        </childnode>
        <childnode refid="49924" relation="include">
        </childnode>
        <childnode refid="49925" relation="include">
        </childnode>
        <childnode refid="49927" relation="include">
        </childnode>
        <childnode refid="49941" relation="include">
        </childnode>
        <childnode refid="49942" relation="include">
        </childnode>
        <childnode refid="49943" relation="include">
        </childnode>
        <childnode refid="49944" relation="include">
        </childnode>
      </node>
      <node id="50006">
        <label>binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
        <childnode refid="50007" relation="include">
        </childnode>
        <childnode refid="49991" relation="include">
        </childnode>
        <childnode refid="50008" relation="include">
        </childnode>
        <childnode refid="49978" relation="include">
        </childnode>
      </node>
      <node id="49982">
        <label>hrectbound.hpp</label>
        <link refid="hrectbound_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
        <childnode refid="49980" relation="include">
        </childnode>
        <childnode refid="49968" relation="include">
        </childnode>
        <childnode refid="49981" relation="include">
        </childnode>
        <childnode refid="49983" relation="include">
        </childnode>
      </node>
      <node id="50003">
        <label>rp_tree_mean_split_impl.hpp</label>
      </node>
      <node id="49907">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/em_fit.hpp</label>
        <link refid="em__fit_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
        <childnode refid="49965" relation="include">
        </childnode>
        <childnode refid="49966" relation="include">
        </childnode>
        <childnode refid="49967" relation="include">
        </childnode>
        <childnode refid="50023" relation="include">
        </childnode>
        <childnode refid="50024" relation="include">
        </childnode>
      </node>
      <node id="49974">
        <label>max_variance_new_cluster.hpp</label>
        <link refid="max__variance__new__cluster_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
        <childnode refid="49975" relation="include">
        </childnode>
      </node>
      <node id="50022">
        <label>kmeans_impl.hpp</label>
      </node>
      <node id="49971">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
        <childnode refid="49972" relation="include">
        </childnode>
        <childnode refid="49973" relation="include">
        </childnode>
      </node>
      <node id="49919">
        <label>utility</label>
      </node>
      <node id="49943">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="49934">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="49978">
        <label>mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
        <childnode refid="49979" relation="include">
        </childnode>
        <childnode refid="49991" relation="include">
        </childnode>
        <childnode refid="49994" relation="include">
        </childnode>
        <childnode refid="49996" relation="include">
        </childnode>
        <childnode refid="49998" relation="include">
        </childnode>
        <childnode refid="50000" relation="include">
        </childnode>
        <childnode refid="50004" relation="include">
        </childnode>
        <childnode refid="50006" relation="include">
        </childnode>
        <childnode refid="50009" relation="include">
        </childnode>
        <childnode refid="50011" relation="include">
        </childnode>
        <childnode refid="50012" relation="include">
        </childnode>
        <childnode refid="50014" relation="include">
        </childnode>
        <childnode refid="50015" relation="include">
        </childnode>
        <childnode refid="50018" relation="include">
        </childnode>
        <childnode refid="50019" relation="include">
        </childnode>
        <childnode refid="50021" relation="include">
        </childnode>
      </node>
      <node id="49931">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="49932" relation="include">
        </childnode>
      </node>
      <node id="49954">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="49955" relation="include">
        </childnode>
        <childnode refid="49956" relation="include">
        </childnode>
        <childnode refid="49957" relation="include">
        </childnode>
        <childnode refid="49958" relation="include">
        </childnode>
        <childnode refid="49959" relation="include">
        </childnode>
        <childnode refid="49960" relation="include">
        </childnode>
        <childnode refid="49961" relation="include">
        </childnode>
        <childnode refid="49962" relation="include">
        </childnode>
      </node>
      <node id="49932">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="49946">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="49944" relation="include">
        </childnode>
        <childnode refid="49940" relation="include">
        </childnode>
        <childnode refid="49947" relation="include">
        </childnode>
      </node>
      <node id="49915">
        <label>cstdlib</label>
      </node>
      <node id="49910">
        <label>cctype</label>
      </node>
      <node id="49933">
        <label>unordered_map</label>
      </node>
      <node id="49967">
        <label>mlpack/methods/kmeans/kmeans.hpp</label>
        <link refid="kmeans_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
        <childnode refid="49968" relation="include">
        </childnode>
        <childnode refid="49970" relation="include">
        </childnode>
        <childnode refid="49974" relation="include">
        </childnode>
        <childnode refid="49976" relation="include">
        </childnode>
        <childnode refid="49978" relation="include">
        </childnode>
        <childnode refid="50022" relation="include">
        </childnode>
      </node>
      <node id="49970">
        <label>sample_initialization.hpp</label>
        <link refid="sample__initialization_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
        <childnode refid="49971" relation="include">
        </childnode>
      </node>
      <node id="49912">
        <label>climits</label>
      </node>
      <node id="49960">
        <label>mutex</label>
      </node>
      <node id="49956">
        <label>chrono</label>
      </node>
      <node id="49983">
        <label>hrectbound_impl.hpp</label>
      </node>
      <node id="49964">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="50000">
        <label>binary_space_tree/rp_tree_mean_split.hpp</label>
        <link refid="rp__tree__mean__split_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
        <childnode refid="49998" relation="include">
        </childnode>
        <childnode refid="49992" relation="include">
        </childnode>
        <childnode refid="50001" relation="include">
        </childnode>
        <childnode refid="50003" relation="include">
        </childnode>
      </node>
      <node id="49997">
        <label>vantage_point_split_impl.hpp</label>
      </node>
      <node id="49962">
        <label>thread</label>
      </node>
      <node id="49984">
        <label>ballbound.hpp</label>
        <link refid="ballbound_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
        <childnode refid="49968" relation="include">
        </childnode>
        <childnode refid="49981" relation="include">
        </childnode>
        <childnode refid="49985" relation="include">
        </childnode>
      </node>
      <node id="49999">
        <label>rp_tree_max_split_impl.hpp</label>
      </node>
      <node id="49992">
        <label>mlpack/core/tree/perform_split.hpp</label>
        <link refid="perform__split_8hpp"/>
      </node>
      <node id="49976">
        <label>naive_kmeans.hpp</label>
        <link refid="naive__kmeans_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
        <childnode refid="49977" relation="include">
        </childnode>
      </node>
      <node id="49950">
        <label>type_traits</label>
      </node>
      <node id="50015">
        <label>binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
        <childnode refid="50016" relation="include">
        </childnode>
        <childnode refid="49978" relation="include">
        </childnode>
        <childnode refid="50017" relation="include">
        </childnode>
      </node>
      <node id="49926">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="50021">
        <label>binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="49978" relation="include">
        </childnode>
      </node>
      <node id="49920">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="49944">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="49922" relation="include">
        </childnode>
        <childnode refid="49923" relation="include">
        </childnode>
        <childnode refid="49924" relation="include">
        </childnode>
        <childnode refid="49925" relation="include">
        </childnode>
        <childnode refid="49945" relation="include">
        </childnode>
      </node>
      <node id="49987">
        <label>hollow_ball_bound_impl.hpp</label>
      </node>
      <node id="49916">
        <label>cstring</label>
      </node>
      <node id="49935">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="49990">
        <label>cellbound_impl.hpp</label>
      </node>
      <node id="50005">
        <label>ub_tree_split_impl.hpp</label>
      </node>
      <node id="49988">
        <label>cellbound.hpp</label>
        <link refid="cellbound_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
        <childnode refid="49980" relation="include">
        </childnode>
        <childnode refid="49968" relation="include">
        </childnode>
        <childnode refid="49981" relation="include">
        </childnode>
        <childnode refid="49989" relation="include">
        </childnode>
        <childnode refid="49990" relation="include">
        </childnode>
      </node>
      <node id="49924">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="49965">
        <label>mlpack/core/dists/gaussian_distribution.hpp</label>
        <link refid="gaussian__distribution_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
      </node>
      <node id="49968">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
        <childnode refid="49969" relation="include">
        </childnode>
      </node>
      <node id="49996">
        <label>binary_space_tree/vantage_point_split.hpp</label>
        <link refid="vantage__point__split_8hpp"/>
        <childnode refid="49908" relation="include">
        </childnode>
        <childnode refid="49992" relation="include">
        </childnode>
        <childnode refid="49971" relation="include">
        </childnode>
        <childnode refid="49997" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="50028">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/gmm.hpp</label>
        <link refid="gmm_8hpp"/>
        <childnode refid="50027" relation="include">
        </childnode>
      </node>
      <node id="50026">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp</label>
        <link refid="diagonal__gmm_8hpp"/>
        <childnode refid="50027" relation="include">
        </childnode>
      </node>
      <node id="50025">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/em_fit.hpp</label>
        <link refid="em__fit_8hpp"/>
        <childnode refid="50026" relation="include">
        </childnode>
        <childnode refid="50028" relation="include">
        </childnode>
      </node>
      <node id="50027">
        <label>/home/aakash/mlpack/src/mlpack/methods/hmm/hmm_model.hpp</label>
        <link refid="hmm__model_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1gmm_1_1EMFit" prot="public">mlpack::gmm::EMFit</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1gmm">mlpack::gmm</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ryan Curtin </para></simplesect>
<simplesect kind="author"><para>Michael Fox</para></simplesect>
Utility class to fit a GMM using the EM algorithm. Used by GMM::Estimate&lt;&gt;().</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="14"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_GMM_EM_FIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_GMM_EM_FIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gaussian__distribution_8hpp" kindref="compound">mlpack/core/dists/gaussian_distribution.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="diagonal__gaussian__distribution_8hpp" kindref="compound">mlpack/core/dists/diagonal_gaussian_distribution.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Default<sp/>clustering<sp/>mechanism.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="kmeans_8hpp" kindref="compound">mlpack/methods/kmeans/kmeans.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Default<sp/>covariance<sp/>matrix<sp/>constraint.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="positive__definite__constraint_8hpp" kindref="compound">positive_definite_constraint.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">gmm<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InitialClusteringType<sp/>=<sp/>kmeans::KMeans&lt;&gt;,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CovarianceConstra</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">Policy<sp/>=<sp/>PositiveDefiniteConstra</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Distribution<sp/>=<sp/>distribution::GaussianDistribution&gt;</highlight></codeline>
<codeline lineno="45" refid="classmlpack_1_1gmm_1_1EMFit" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1gmm_1_1EMFit" kindref="compound">EMFit</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1gmm_1_1EMFit_1a030d5debc5e91c51e0f72f64ff39f3de" kindref="member">EMFit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations<sp/>=<sp/>300,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tolerance<sp/>=<sp/>1e-10,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InitialClusteringType<sp/>clusterer<sp/>=<sp/>InitialClusteringType(),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CovarianceConstraintPolicy<sp/>constraint<sp/>=<sp/>CovarianceConstraintPolicy());</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1EMFit_1a2a2f9c9c82f1e94ee7aad7d759193b97" kindref="member">Estimate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>observations,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Distribution&gt;&amp;<sp/>dists,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>weights,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useInitialModel<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1EMFit_1a2a2f9c9c82f1e94ee7aad7d759193b97" kindref="member">Estimate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>observations,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/>probabilities,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Distribution&gt;&amp;<sp/>dists,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>weights,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useInitialModel<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classmlpack_1_1gmm_1_1EMFit_1a399ea7835ff966f467d13416046c7fa0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InitialClusteringType&amp;<sp/><ref refid="classmlpack_1_1gmm_1_1EMFit_1a399ea7835ff966f467d13416046c7fa0" kindref="member">Clusterer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clusterer;<sp/>}</highlight></codeline>
<codeline lineno="113" refid="classmlpack_1_1gmm_1_1EMFit_1a79abb61d6e17dced3b7bffcec5a5a83a" refkind="member"><highlight class="normal"><sp/><sp/>InitialClusteringType&amp;<sp/><ref refid="classmlpack_1_1gmm_1_1EMFit_1a79abb61d6e17dced3b7bffcec5a5a83a" kindref="member">Clusterer</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clusterer;<sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classmlpack_1_1gmm_1_1EMFit_1a2abb870b3266e1ce64e43ed16f2537f6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CovarianceConstraintPolicy&amp;<sp/><ref refid="classmlpack_1_1gmm_1_1EMFit_1a2abb870b3266e1ce64e43ed16f2537f6" kindref="member">Constraint</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>constraint;<sp/>}</highlight></codeline>
<codeline lineno="118" refid="classmlpack_1_1gmm_1_1EMFit_1a05ddd1b39294c15e05c8d922b336ee2f" refkind="member"><highlight class="normal"><sp/><sp/>CovarianceConstraintPolicy&amp;<sp/><ref refid="classmlpack_1_1gmm_1_1EMFit_1a05ddd1b39294c15e05c8d922b336ee2f" kindref="member">Constraint</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>constraint;<sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classmlpack_1_1gmm_1_1EMFit_1a420770944a5b0c7a852c4ec372c4a2d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1EMFit_1a420770944a5b0c7a852c4ec372c4a2d1" kindref="member">MaxIterations</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxIterations;<sp/>}</highlight></codeline>
<codeline lineno="123" refid="classmlpack_1_1gmm_1_1EMFit_1acda675ab4ab86b95c92bc33bc391a61b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1gmm_1_1EMFit_1acda675ab4ab86b95c92bc33bc391a61b" kindref="member">MaxIterations</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxIterations;<sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="classmlpack_1_1gmm_1_1EMFit_1a7b5af5c1a84c507cbaa7f999ea5a4fda" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1EMFit_1a7b5af5c1a84c507cbaa7f999ea5a4fda" kindref="member">Tolerance</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tolerance;<sp/>}</highlight></codeline>
<codeline lineno="128" refid="classmlpack_1_1gmm_1_1EMFit_1a3d9fac84af16250f5a3689692e8f2173" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1gmm_1_1EMFit_1a3d9fac84af16250f5a3689692e8f2173" kindref="member">Tolerance</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tolerance;<sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1EMFit_1a72d63b74c8166dff8e1a9006905ad9ca" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>version);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InitialClustering(</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>observations,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Distribution&gt;&amp;<sp/>dists,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>weights);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>LogLikelihood(</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Distribution&gt;&amp;<sp/>dists,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/>weights)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ArmadilloGMMWrapper(</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>observations,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Distribution&gt;&amp;<sp/>dists,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>weights,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useInitialModel);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tolerance;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>InitialClusteringType<sp/>clusterer;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>CovarianceConstraintPolicy<sp/>constraint;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>gmm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;em_fit_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/em_fit.hpp"/>
  </compounddef>
</doxygen>
