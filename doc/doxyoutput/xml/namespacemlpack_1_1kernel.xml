<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacemlpack_1_1kernel" kind="namespace" language="C++">
    <compoundname>mlpack::kernel</compoundname>
    <innerclass refid="classmlpack_1_1kernel_1_1CauchyKernel" prot="public">mlpack::kernel::CauchyKernel</innerclass>
    <innerclass refid="classmlpack_1_1kernel_1_1CosineDistance" prot="public">mlpack::kernel::CosineDistance</innerclass>
    <innerclass refid="classmlpack_1_1kernel_1_1EpanechnikovKernel" prot="public">mlpack::kernel::EpanechnikovKernel</innerclass>
    <innerclass refid="classmlpack_1_1kernel_1_1ExampleKernel" prot="public">mlpack::kernel::ExampleKernel</innerclass>
    <innerclass refid="classmlpack_1_1kernel_1_1GaussianKernel" prot="public">mlpack::kernel::GaussianKernel</innerclass>
    <innerclass refid="classmlpack_1_1kernel_1_1HyperbolicTangentKernel" prot="public">mlpack::kernel::HyperbolicTangentKernel</innerclass>
    <innerclass refid="classmlpack_1_1kernel_1_1KernelTraits" prot="public">mlpack::kernel::KernelTraits</innerclass>
    <innerclass refid="classmlpack_1_1kernel_1_1KernelTraits_3_01CauchyKernel_01_4" prot="public">mlpack::kernel::KernelTraits&lt; CauchyKernel &gt;</innerclass>
    <innerclass refid="classmlpack_1_1kernel_1_1KernelTraits_3_01CosineDistance_01_4" prot="public">mlpack::kernel::KernelTraits&lt; CosineDistance &gt;</innerclass>
    <innerclass refid="classmlpack_1_1kernel_1_1KernelTraits_3_01EpanechnikovKernel_01_4" prot="public">mlpack::kernel::KernelTraits&lt; EpanechnikovKernel &gt;</innerclass>
    <innerclass refid="classmlpack_1_1kernel_1_1KernelTraits_3_01GaussianKernel_01_4" prot="public">mlpack::kernel::KernelTraits&lt; GaussianKernel &gt;</innerclass>
    <innerclass refid="classmlpack_1_1kernel_1_1KernelTraits_3_01LaplacianKernel_01_4" prot="public">mlpack::kernel::KernelTraits&lt; LaplacianKernel &gt;</innerclass>
    <innerclass refid="classmlpack_1_1kernel_1_1KernelTraits_3_01SphericalKernel_01_4" prot="public">mlpack::kernel::KernelTraits&lt; SphericalKernel &gt;</innerclass>
    <innerclass refid="classmlpack_1_1kernel_1_1KernelTraits_3_01TriangularKernel_01_4" prot="public">mlpack::kernel::KernelTraits&lt; TriangularKernel &gt;</innerclass>
    <innerclass refid="classmlpack_1_1kernel_1_1KMeansSelection" prot="public">mlpack::kernel::KMeansSelection</innerclass>
    <innerclass refid="classmlpack_1_1kernel_1_1LaplacianKernel" prot="public">mlpack::kernel::LaplacianKernel</innerclass>
    <innerclass refid="classmlpack_1_1kernel_1_1LinearKernel" prot="public">mlpack::kernel::LinearKernel</innerclass>
    <innerclass refid="classmlpack_1_1kernel_1_1NystroemMethod" prot="public">mlpack::kernel::NystroemMethod</innerclass>
    <innerclass refid="classmlpack_1_1kernel_1_1OrderedSelection" prot="public">mlpack::kernel::OrderedSelection</innerclass>
    <innerclass refid="classmlpack_1_1kernel_1_1PolynomialKernel" prot="public">mlpack::kernel::PolynomialKernel</innerclass>
    <innerclass refid="classmlpack_1_1kernel_1_1PSpectrumStringKernel" prot="public">mlpack::kernel::PSpectrumStringKernel</innerclass>
    <innerclass refid="classmlpack_1_1kernel_1_1RandomSelection" prot="public">mlpack::kernel::RandomSelection</innerclass>
    <innerclass refid="classmlpack_1_1kernel_1_1SphericalKernel" prot="public">mlpack::kernel::SphericalKernel</innerclass>
    <innerclass refid="classmlpack_1_1kernel_1_1TriangularKernel" prot="public">mlpack::kernel::TriangularKernel</innerclass>
    <briefdescription>
<para>Kernel functions. </para>    </briefdescription>
    <detaileddescription>
<para>This namespace contains kernel functions, which evaluate some kernel function <formula id="43">$ K(x, y) $</formula> for some arbitrary vectors <formula id="36">$ x $</formula> and <formula id="37">$ y $</formula> of the same dimension. The single restriction on the function <formula id="43">$ K(x, y) $</formula> is that it must satisfy Mercer&apos;s condition:</para><para><formula id="44">\[ \int \int K(x, y) g(x) g(y) dx dy \ge 0 \]</formula></para><para>for all square integrable functions <formula id="45">$ g(x) $</formula>.</para><para>The kernels in this namespace all implement the KernelType policy. For more information, see <ref refid="kernels" kindref="compound">The KernelType policy documentation</ref>. </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/core/kernels/cauchy_kernel.hpp" line="20" column="1"/>
  </compounddef>
</doxygen>
