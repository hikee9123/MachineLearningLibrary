<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="huber__loss_8hpp" kind="file" language="C++">
    <compoundname>huber_loss.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="yes">huber_loss_impl.hpp</includes>
    <incdepgraph>
      <node id="39518">
        <label>list</label>
      </node>
      <node id="39515">
        <label>atomic</label>
      </node>
      <node id="39505">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="39481">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="39517">
        <label>iomanip</label>
      </node>
      <node id="39490">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="39491" relation="include">
        </childnode>
        <childnode refid="39493" relation="include">
        </childnode>
      </node>
      <node id="39473">
        <label>cstdint</label>
      </node>
      <node id="39482">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="39489">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="39512">
        <label>arma_config.hpp</label>
      </node>
      <node id="39502">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="39467">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp</label>
        <link refid="huber__loss_8hpp"/>
        <childnode refid="39468" relation="include">
        </childnode>
        <childnode refid="39525" relation="include">
        </childnode>
      </node>
      <node id="39469">
        <label>cmath</label>
      </node>
      <node id="39488">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="39477">
        <label>stdexcept</label>
      </node>
      <node id="39525">
        <label>huber_loss_impl.hpp</label>
      </node>
      <node id="39497">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="39482" relation="include">
        </childnode>
        <childnode refid="39484" relation="include">
        </childnode>
        <childnode refid="39485" relation="include">
        </childnode>
        <childnode refid="39483" relation="include">
        </childnode>
      </node>
      <node id="39521">
        <label>string</label>
      </node>
      <node id="39509">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="39510" relation="include">
        </childnode>
        <childnode refid="39476" relation="include">
        </childnode>
      </node>
      <node id="39519">
        <label>map</label>
      </node>
      <node id="39471">
        <label>cfloat</label>
      </node>
      <node id="39501">
        <label>boost/variant.hpp</label>
      </node>
      <node id="39523">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="39485">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="39508">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="39509" relation="include">
        </childnode>
        <childnode refid="39485" relation="include">
        </childnode>
        <childnode refid="39492" relation="include">
        </childnode>
        <childnode refid="39510" relation="include">
        </childnode>
      </node>
      <node id="39498">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="39496">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="39482" relation="include">
        </childnode>
        <childnode refid="39484" relation="include">
        </childnode>
        <childnode refid="39485" relation="include">
        </childnode>
        <childnode refid="39483" relation="include">
        </childnode>
      </node>
      <node id="39499">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="39482" relation="include">
        </childnode>
        <childnode refid="39484" relation="include">
        </childnode>
        <childnode refid="39485" relation="include">
        </childnode>
        <childnode refid="39483" relation="include">
        </childnode>
      </node>
      <node id="39487">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="39507">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="39483" relation="include">
        </childnode>
        <childnode refid="39484" relation="include">
        </childnode>
        <childnode refid="39485" relation="include">
        </childnode>
        <childnode refid="39495" relation="include">
        </childnode>
        <childnode refid="39504" relation="include">
        </childnode>
      </node>
      <node id="39511">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="39512" relation="include">
        </childnode>
      </node>
      <node id="39513">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="39468">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="39469" relation="include">
        </childnode>
        <childnode refid="39470" relation="include">
        </childnode>
        <childnode refid="39471" relation="include">
        </childnode>
        <childnode refid="39472" relation="include">
        </childnode>
        <childnode refid="39473" relation="include">
        </childnode>
        <childnode refid="39474" relation="include">
        </childnode>
        <childnode refid="39475" relation="include">
        </childnode>
        <childnode refid="39476" relation="include">
        </childnode>
        <childnode refid="39477" relation="include">
        </childnode>
        <childnode refid="39478" relation="include">
        </childnode>
        <childnode refid="39479" relation="include">
        </childnode>
        <childnode refid="39480" relation="include">
        </childnode>
        <childnode refid="39481" relation="include">
        </childnode>
        <childnode refid="39482" relation="include">
        </childnode>
        <childnode refid="39483" relation="include">
        </childnode>
        <childnode refid="39484" relation="include">
        </childnode>
        <childnode refid="39485" relation="include">
        </childnode>
        <childnode refid="39486" relation="include">
        </childnode>
        <childnode refid="39487" relation="include">
        </childnode>
        <childnode refid="39488" relation="include">
        </childnode>
        <childnode refid="39489" relation="include">
        </childnode>
        <childnode refid="39490" relation="include">
        </childnode>
        <childnode refid="39494" relation="include">
        </childnode>
        <childnode refid="39495" relation="include">
        </childnode>
        <childnode refid="39496" relation="include">
        </childnode>
        <childnode refid="39497" relation="include">
        </childnode>
        <childnode refid="39498" relation="include">
        </childnode>
        <childnode refid="39499" relation="include">
        </childnode>
        <childnode refid="39500" relation="include">
        </childnode>
        <childnode refid="39506" relation="include">
        </childnode>
        <childnode refid="39507" relation="include">
        </childnode>
        <childnode refid="39504" relation="include">
        </childnode>
        <childnode refid="39508" relation="include">
        </childnode>
        <childnode refid="39511" relation="include">
        </childnode>
        <childnode refid="39513" relation="include">
        </childnode>
        <childnode refid="39514" relation="include">
        </childnode>
        <childnode refid="39523" relation="include">
        </childnode>
        <childnode refid="39524" relation="include">
        </childnode>
      </node>
      <node id="39474">
        <label>cstdio</label>
      </node>
      <node id="39478">
        <label>tuple</label>
      </node>
      <node id="39483">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="39500">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="39483" relation="include">
        </childnode>
        <childnode refid="39484" relation="include">
        </childnode>
        <childnode refid="39485" relation="include">
        </childnode>
        <childnode refid="39487" relation="include">
        </childnode>
        <childnode refid="39501" relation="include">
        </childnode>
        <childnode refid="39502" relation="include">
        </childnode>
        <childnode refid="39503" relation="include">
        </childnode>
        <childnode refid="39504" relation="include">
        </childnode>
      </node>
      <node id="39479">
        <label>utility</label>
      </node>
      <node id="39503">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="39494">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="39491">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="39492" relation="include">
        </childnode>
      </node>
      <node id="39514">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="39515" relation="include">
        </childnode>
        <childnode refid="39516" relation="include">
        </childnode>
        <childnode refid="39517" relation="include">
        </childnode>
        <childnode refid="39518" relation="include">
        </childnode>
        <childnode refid="39519" relation="include">
        </childnode>
        <childnode refid="39520" relation="include">
        </childnode>
        <childnode refid="39521" relation="include">
        </childnode>
        <childnode refid="39522" relation="include">
        </childnode>
      </node>
      <node id="39492">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="39506">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="39504" relation="include">
        </childnode>
        <childnode refid="39500" relation="include">
        </childnode>
        <childnode refid="39507" relation="include">
        </childnode>
      </node>
      <node id="39475">
        <label>cstdlib</label>
      </node>
      <node id="39470">
        <label>cctype</label>
      </node>
      <node id="39493">
        <label>unordered_map</label>
      </node>
      <node id="39472">
        <label>climits</label>
      </node>
      <node id="39520">
        <label>mutex</label>
      </node>
      <node id="39516">
        <label>chrono</label>
      </node>
      <node id="39524">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="39522">
        <label>thread</label>
      </node>
      <node id="39510">
        <label>type_traits</label>
      </node>
      <node id="39486">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="39480">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="39504">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="39482" relation="include">
        </childnode>
        <childnode refid="39483" relation="include">
        </childnode>
        <childnode refid="39484" relation="include">
        </childnode>
        <childnode refid="39485" relation="include">
        </childnode>
        <childnode refid="39505" relation="include">
        </childnode>
      </node>
      <node id="39476">
        <label>cstring</label>
      </node>
      <node id="39495">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="39484">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1ann_1_1HuberLoss" prot="public">mlpack::ann::HuberLoss</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1ann">mlpack::ann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Mrityunjay Tripathi</para></simplesect>
Definition of the Huber loss function.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_ANN_LOSS_FUNCTION_HUBER_LOSS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_ANN_LOSS_FUNCTION_HUBER_LOSS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ann<sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputDataType<sp/>=<sp/>arma::mat,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputDataType<sp/>=<sp/>arma::mat</highlight></codeline>
<codeline lineno="35"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="36" refid="classmlpack_1_1ann_1_1HuberLoss" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1ann_1_1HuberLoss" kindref="compound">HuberLoss</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1ann_1_1HuberLoss_1af05212ee761a4171dcdd1d0065848bbb" kindref="member">HuberLoss</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>1.0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mean<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PredictionType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TargetType&gt;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PredictionType::elem_type<sp/><ref refid="classmlpack_1_1ann_1_1HuberLoss_1ab3640059898ea76c13709b8099316fe8" kindref="member">Forward</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PredictionType&amp;<sp/>prediction,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TargetType&amp;<sp/>target);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PredictionType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TargetType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LossType&gt;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1HuberLoss_1add41dbaf358dc099750dc6064cb7e0d7" kindref="member">Backward</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PredictionType&amp;<sp/>prediction,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TargetType&amp;<sp/>target,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LossType&amp;<sp/>loss);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classmlpack_1_1ann_1_1HuberLoss_1a8bae962cc603d1cab8d80ec78f8d505d" refkind="member"><highlight class="normal"><sp/><sp/>OutputDataType&amp;<sp/><ref refid="classmlpack_1_1ann_1_1HuberLoss_1a8bae962cc603d1cab8d80ec78f8d505d" kindref="member">OutputParameter</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputParameter;<sp/>}</highlight></codeline>
<codeline lineno="75" refid="classmlpack_1_1ann_1_1HuberLoss_1a21d5f745f02c709625a4ee0907f004a5" refkind="member"><highlight class="normal"><sp/><sp/>OutputDataType&amp;<sp/><ref refid="classmlpack_1_1ann_1_1HuberLoss_1a21d5f745f02c709625a4ee0907f004a5" kindref="member">OutputParameter</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputParameter;<sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classmlpack_1_1ann_1_1HuberLoss_1acb1f7d73ed8ec9121d6d0e45b560d8fa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1HuberLoss_1acb1f7d73ed8ec9121d6d0e45b560d8fa" kindref="member">Delta</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>delta;<sp/>}</highlight></codeline>
<codeline lineno="80" refid="classmlpack_1_1ann_1_1HuberLoss_1a9fcb8a5caa7165245d5aa803b0a94a7c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1HuberLoss_1a9fcb8a5caa7165245d5aa803b0a94a7c" kindref="member">Delta</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>delta;<sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classmlpack_1_1ann_1_1HuberLoss_1ab3fece30ee983f7dc98302bacde75efe" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1HuberLoss_1ab3fece30ee983f7dc98302bacde75efe" kindref="member">Mean</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mean;<sp/>}</highlight></codeline>
<codeline lineno="85" refid="classmlpack_1_1ann_1_1HuberLoss_1ab9d30d78fb30a243c70e8dd27a88bf49" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1HuberLoss_1ab9d30d78fb30a243c70e8dd27a88bf49" kindref="member">Mean</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mean;<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1HuberLoss_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>OutputDataType<sp/>outputParameter;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mean;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>HuberLoss</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;huber_loss_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp"/>
  </compounddef>
</doxygen>
