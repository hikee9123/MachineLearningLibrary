<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1ann_1_1DeterministicSetVisitor" kind="class" language="C++" prot="public">
    <compoundname>mlpack::ann::DeterministicSetVisitor</compoundname>
    <basecompoundref prot="public" virt="non-virtual">boost::static_visitor&lt; void &gt;</basecompoundref>
    <includes refid="deterministic__set__visitor_8hpp" local="no">deterministic_set_visitor.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1DeterministicSetVisitor_1aca01c985852ee162baf3f0d91f57d039" prot="private" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool deterministic</definition>
        <argsstring></argsstring>
        <name>deterministic</name>
        <briefdescription>
<para>The deterministic parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/visitor/deterministic_set_visitor.hpp" line="42" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/visitor/deterministic_set_visitor.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1ann_1_1DeterministicSetVisitor_1aeb4fae3bdfa0643b201c0f5a7691bdf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DeterministicSetVisitor</definition>
        <argsstring>(const bool deterministic=true)</argsstring>
        <name>DeterministicSetVisitor</name>
        <param>
          <type>const bool</type>
          <declname>deterministic</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Set the deterministic parameter given the current deterministic value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/visitor/deterministic_set_visitor.hpp" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1DeterministicSetVisitor_1a26bb3385c630118c35f4799f1509abbc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename LayerType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void operator()</definition>
        <argsstring>(LayerType *layer) const</argsstring>
        <name>operator()</name>
        <param>
          <type>LayerType *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
<para>Set the deterministic parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/visitor/deterministic_set_visitor.hpp" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1DeterministicSetVisitor_1ae35578e7ff874a320fe762bc0edfff04" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void operator()</definition>
        <argsstring>(MoreTypes layer) const</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="namespacemlpack_1_1ann_1ad134e44d3c36af22599a8c67d4c1f844" kindref="member">MoreTypes</ref></type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/visitor/deterministic_set_visitor.hpp" line="38" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmlpack_1_1ann_1_1DeterministicSetVisitor_1a49eec28d2a5f233e2c8bbac9ad8a2511" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; HasDeterministicCheck&lt; T, bool &amp;(T::*)(void)&gt;::value &amp;&amp;HasModelCheck&lt; T &gt;::value, void &gt;::type</type>
        <definition>std::enable_if&lt; HasDeterministicCheck&lt;T, bool&amp;(T::*)(void)&gt;::value &amp;&amp; HasModelCheck&lt;T&gt;::value, void&gt;::type LayerDeterministic</definition>
        <argsstring>(T *layer) const</argsstring>
        <name>LayerDeterministic</name>
        <param>
          <type>T *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
<para>Set the deterministic parameter if the module implements the Deterministic() and Model() function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/visitor/deterministic_set_visitor.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1DeterministicSetVisitor_1a3bab97de670ae82e68c9084cb959a58a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; !HasDeterministicCheck&lt; T, bool &amp;(T::*)(void)&gt;::value &amp;&amp;HasModelCheck&lt; T &gt;::value, void &gt;::type</type>
        <definition>std::enable_if&lt; !HasDeterministicCheck&lt;T, bool&amp;(T::*)(void)&gt;::value &amp;&amp; HasModelCheck&lt;T&gt;::value, void&gt;::type LayerDeterministic</definition>
        <argsstring>(T *layer) const</argsstring>
        <name>LayerDeterministic</name>
        <param>
          <type>T *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
<para>Set the deterministic parameter if the module implements the Model() function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/visitor/deterministic_set_visitor.hpp" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1DeterministicSetVisitor_1ac6fa27f2f310c2a267b13d719fcff10d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; HasDeterministicCheck&lt; T, bool &amp;(T::*)(void)&gt;::value &amp;&amp;!HasModelCheck&lt; T &gt;::value, void &gt;::type</type>
        <definition>std::enable_if&lt; HasDeterministicCheck&lt;T, bool&amp;(T::*)(void)&gt;::value &amp;&amp; !HasModelCheck&lt;T&gt;::value, void&gt;::type LayerDeterministic</definition>
        <argsstring>(T *layer) const</argsstring>
        <name>LayerDeterministic</name>
        <param>
          <type>T *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
<para>Set the deterministic parameter if the module implements the Deterministic() function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/visitor/deterministic_set_visitor.hpp" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1DeterministicSetVisitor_1a7eef45006425cba35e81a58d07781bcb" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; !HasDeterministicCheck&lt; T, bool &amp;(T::*)(void)&gt;::value &amp;&amp;!HasModelCheck&lt; T &gt;::value, void &gt;::type</type>
        <definition>std::enable_if&lt; !HasDeterministicCheck&lt;T, bool&amp;(T::*)(void)&gt;::value &amp;&amp; !HasModelCheck&lt;T&gt;::value, void&gt;::type LayerDeterministic</definition>
        <argsstring>(T *layer) const</argsstring>
        <name>LayerDeterministic</name>
        <param>
          <type>T *</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
<para>Do not set the deterministic parameter if the module doesn&apos;t implement the Deterministic() or Model() function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/visitor/deterministic_set_visitor.hpp" line="74" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classmlpack_1_1ann_1_1DeterministicSetVisitor" kindref="compound">DeterministicSetVisitor</ref> set the deterministic parameter given the deterministic value. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="173">
        <label>DeterministicSetVisitor</label>
        <link refid="classmlpack_1_1ann_1_1DeterministicSetVisitor"/>
        <childnode refid="174" relation="public-inheritance">
        </childnode>
      </node>
      <node id="174">
        <label>static_visitor&lt; void &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="175">
        <label>DeterministicSetVisitor</label>
        <link refid="classmlpack_1_1ann_1_1DeterministicSetVisitor"/>
        <childnode refid="176" relation="public-inheritance">
        </childnode>
      </node>
      <node id="176">
        <label>static_visitor&lt; void &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/visitor/deterministic_set_visitor.hpp" line="29" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/visitor/deterministic_set_visitor.hpp" bodystart="28" bodyend="75"/>
    <listofallmembers>
      <member refid="classmlpack_1_1ann_1_1DeterministicSetVisitor_1aca01c985852ee162baf3f0d91f57d039" prot="private" virt="non-virtual"><scope>mlpack::ann::DeterministicSetVisitor</scope><name>deterministic</name></member>
      <member refid="classmlpack_1_1ann_1_1DeterministicSetVisitor_1aeb4fae3bdfa0643b201c0f5a7691bdf6" prot="public" virt="non-virtual"><scope>mlpack::ann::DeterministicSetVisitor</scope><name>DeterministicSetVisitor</name></member>
      <member refid="classmlpack_1_1ann_1_1DeterministicSetVisitor_1a49eec28d2a5f233e2c8bbac9ad8a2511" prot="private" virt="non-virtual"><scope>mlpack::ann::DeterministicSetVisitor</scope><name>LayerDeterministic</name></member>
      <member refid="classmlpack_1_1ann_1_1DeterministicSetVisitor_1a3bab97de670ae82e68c9084cb959a58a" prot="private" virt="non-virtual"><scope>mlpack::ann::DeterministicSetVisitor</scope><name>LayerDeterministic</name></member>
      <member refid="classmlpack_1_1ann_1_1DeterministicSetVisitor_1ac6fa27f2f310c2a267b13d719fcff10d" prot="private" virt="non-virtual"><scope>mlpack::ann::DeterministicSetVisitor</scope><name>LayerDeterministic</name></member>
      <member refid="classmlpack_1_1ann_1_1DeterministicSetVisitor_1a7eef45006425cba35e81a58d07781bcb" prot="private" virt="non-virtual"><scope>mlpack::ann::DeterministicSetVisitor</scope><name>LayerDeterministic</name></member>
      <member refid="classmlpack_1_1ann_1_1DeterministicSetVisitor_1a26bb3385c630118c35f4799f1509abbc" prot="public" virt="non-virtual"><scope>mlpack::ann::DeterministicSetVisitor</scope><name>operator()</name></member>
      <member refid="classmlpack_1_1ann_1_1DeterministicSetVisitor_1ae35578e7ff874a320fe762bc0edfff04" prot="public" virt="non-virtual"><scope>mlpack::ann::DeterministicSetVisitor</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
