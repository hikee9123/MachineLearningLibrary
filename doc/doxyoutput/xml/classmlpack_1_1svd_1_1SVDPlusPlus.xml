<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1svd_1_1SVDPlusPlus" kind="class" language="C++" prot="public">
    <compoundname>mlpack::svd::SVDPlusPlus</compoundname>
    <includes refid="svdplusplus_8hpp" local="no">svdplusplus.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>OptimizerType</declname>
        <defname>OptimizerType</defname>
        <defval>ens::StandardSGD</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1svd_1_1SVDPlusPlus_1a20f4c4490bc8ecbdd1ffcb79acce6035" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double alpha</definition>
        <argsstring></argsstring>
        <name>alpha</name>
        <briefdescription>
<para>Learning rate for the SGD optimizer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp" line="146" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1svd_1_1SVDPlusPlus_1a8c30486c22f07ec9373b0b3992994d58" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t iterations</definition>
        <argsstring></argsstring>
        <name>iterations</name>
        <briefdescription>
<para>Number of optimization iterations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp" line="144" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1svd_1_1SVDPlusPlus_1a3db359547eed8cfd48ca821d95f577af" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double lambda</definition>
        <argsstring></argsstring>
        <name>lambda</name>
        <briefdescription>
<para>Regularization parameter for the optimization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp" line="148" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1svd_1_1SVDPlusPlus_1a1d617828d260997a17e4d930506a9596" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SVDPlusPlus</definition>
        <argsstring>(const size_t iterations=10, const double alpha=0.001, const double lambda=0.1)</argsstring>
        <name>SVDPlusPlus</name>
        <param>
          <type>const size_t</type>
          <declname>iterations</declname>
          <defval>10</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>alpha</declname>
          <defval>0.001</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>lambda</declname>
          <defval>0.1</defval>
        </param>
        <briefdescription>
<para>Constructor of <ref refid="classmlpack_1_1svd_1_1SVDPlusPlus" kindref="compound">SVDPlusPlus</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>By default SGD optimizer is used in <ref refid="classmlpack_1_1svd_1_1SVDPlusPlus" kindref="compound">SVDPlusPlus</ref>. The optimizer uses a template specialization of Optimize().</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iterations</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of optimization iterations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>Learning rate for the SGD optimizer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambda</parametername>
</parameternamelist>
<parameterdescription>
<para>Regularization parameter for the optimization. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1svd_1_1SVDPlusPlus_1af419d2631d74927653807942b3c5fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Apply</definition>
        <argsstring>(const arma::mat &amp;data, const arma::mat &amp;implicitData, const size_t rank, arma::mat &amp;u, arma::mat &amp;v, arma::vec &amp;p, arma::vec &amp;q, arma::mat &amp;y)</argsstring>
        <name>Apply</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>implicitData</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>rank</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Trains the model and obtains user/item matrices, user/item bias, and item implicit matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Rating data matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>implicitData</parametername>
</parameternamelist>
<parameterdescription>
<para>Implicit feedback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rank</parametername>
</parameternamelist>
<parameterdescription>
<para>Rank parameter to be used for optimization. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>Item matrix obtained on decomposition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>User matrix obtained on decomposition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Item bias. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>User bias. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Item matrix with respect to implicit feedback. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp" line="104" column="1"/>
        <referencedby refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a3b3962a80d1217a799cfab110b487cea" compoundref="svdplusplus__method_8hpp" startline="73" endline="88">SVDPlusPlusPolicy::Apply</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1svd_1_1SVDPlusPlus_1a2e7d12e268021ca1160a4862844f7520" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Apply</definition>
        <argsstring>(const arma::mat &amp;data, const size_t rank, arma::mat &amp;u, arma::mat &amp;v, arma::vec &amp;p, arma::vec &amp;q, arma::mat &amp;y)</argsstring>
        <name>Apply</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>rank</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Trains the model and obtains user/item matrices, user/item bias, and item implicit matrix. </para>        </briefdescription>
        <detaileddescription>
<para>Whether a user rates an item is used as implicit feedback.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Rating data matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rank</parametername>
</parameternamelist>
<parameterdescription>
<para>Rank parameter to be used for optimization. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>Item matrix obtained on decomposition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>User matrix obtained on decomposition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Item bias. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>User bias. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Item matrix with respect to implicit feedback. Each column is a latent vector of an item with respect to implicit feedback. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp" line="127" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmlpack_1_1svd_1_1SVDPlusPlus_1ac693882f80e29d39f18dd080e00a9403" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void CleanData</definition>
        <argsstring>(const arma::mat &amp;implicitData, arma::sp_mat &amp;cleanedData, const arma::mat &amp;data)</argsstring>
        <name>CleanData</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>implicitData</declname>
        </param>
        <param>
          <type>arma::sp_mat &amp;</type>
          <declname>cleanedData</declname>
        </param>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Converts the User, Item matrix of implicit data to Item-User Table. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp" line="138" column="1"/>
        <referencedby refid="classmlpack_1_1cf_1_1SVDPlusPlusPolicy_1a3b3962a80d1217a799cfab110b487cea" compoundref="svdplusplus__method_8hpp" startline="73" endline="88">SVDPlusPlusPolicy::Apply</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>SVD++ is a matrix decomposition tenique used in collaborative filtering. </para>    </briefdescription>
    <detaileddescription>
<para>SVD++ is similar to <ref refid="classmlpack_1_1svd_1_1BiasSVD" kindref="compound">BiasSVD</ref>, but it is a more expressive model because SVD++ also models implicit feedback. SVD++ outputs user/item latent vectors, user/item bias, and item vectors with regard to implicit feedback. Parameters are optmized by Stochastic Gradient Desent(SGD). The updates also penalize the learning of large feature values by means of regularization.</para><para>For more information, see the following paper:</para><para><programlisting><codeline><highlight class="normal">@inproceedings{koren2008factorization,</highlight></codeline>
<codeline><highlight class="normal">title={Factorization<sp/>meets<sp/>the<sp/>neighborhood:<sp/>a<sp/>multifaceted<sp/>collaborative</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filtering<sp/>model},</highlight></codeline>
<codeline><highlight class="normal">author={Koren,<sp/>Yehuda},</highlight></codeline>
<codeline><highlight class="normal">booktitle={Proceedings<sp/>of<sp/>the<sp/>14th<sp/>ACM<sp/>SIGKDD<sp/>international<sp/>conference<sp/>on</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Knowledge<sp/>discovery<sp/>and<sp/>data<sp/>mining},</highlight></codeline>
<codeline><highlight class="normal">pages={426--434},</highlight></codeline>
<codeline><highlight class="normal">year={2008},</highlight></codeline>
<codeline><highlight class="normal">organization={ACM}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para>An example of how to use the interface is shown below:</para><para><programlisting><codeline><highlight class="normal">arma::mat<sp/>data;<sp/>//<sp/>Rating<sp/>data<sp/>in<sp/>the<sp/>form<sp/>of<sp/>coordinate<sp/>list.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Implicit<sp/>feedback<sp/>data<sp/>in<sp/>the<sp/>form<sp/>of<sp/>coordinate<sp/>list.</highlight></codeline>
<codeline><highlight class="normal">arma::mat<sp/>implicitData;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">const<sp/>size_t<sp/>rank<sp/>=<sp/>10;<sp/>//<sp/>Rank<sp/>used<sp/>for<sp/>the<sp/>decomposition.</highlight></codeline>
<codeline><highlight class="normal">const<sp/>size_t<sp/>iterations<sp/>=<sp/>10;<sp/>//<sp/>Number<sp/>of<sp/>iterations<sp/>used<sp/>for<sp/>optimization.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">const<sp/>double<sp/>alpha<sp/>=<sp/>0.001<sp/>//<sp/>Learning<sp/>rate<sp/>for<sp/>the<sp/>SGD<sp/>optimizer.</highlight></codeline>
<codeline><highlight class="normal">const<sp/>double<sp/>lambda<sp/>=<sp/>0.1<sp/>//<sp/>Regularization<sp/>parameter<sp/>for<sp/>the<sp/>optimization.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Make<sp/>a<sp/>SVD++<sp/>object.</highlight></codeline>
<codeline><highlight class="normal">SVDPlusPlus&lt;&gt;<sp/>svdPP(iterations,<sp/>alpha,<sp/>lambda);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">arma::mat<sp/>u,<sp/>v;<sp/>//<sp/>Item<sp/>and<sp/>User<sp/>matrices.</highlight></codeline>
<codeline><highlight class="normal">arma::vec<sp/>p,<sp/>q;<sp/>//<sp/>Item<sp/>and<sp/>User<sp/>bias.</highlight></codeline>
<codeline><highlight class="normal">arma::mat<sp/>y;<sp/><sp/><sp/><sp/>//<sp/>Item<sp/>matrix<sp/>with<sp/>respect<sp/>to<sp/>implicit<sp/>feedback.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Use<sp/>the<sp/>Apply()<sp/>method<sp/>to<sp/>get<sp/>a<sp/>factorization.</highlight></codeline>
<codeline><highlight class="normal">svdPP.Apply(data,<sp/>implicitData,<sp/>rank,<sp/>u,<sp/>v,<sp/>p,<sp/>q,<sp/>y);</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp" line="77" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp" bodystart="76" bodyend="149"/>
    <listofallmembers>
      <member refid="classmlpack_1_1svd_1_1SVDPlusPlus_1a20f4c4490bc8ecbdd1ffcb79acce6035" prot="private" virt="non-virtual"><scope>mlpack::svd::SVDPlusPlus</scope><name>alpha</name></member>
      <member refid="classmlpack_1_1svd_1_1SVDPlusPlus_1af419d2631d74927653807942b3c5fa97" prot="public" virt="non-virtual"><scope>mlpack::svd::SVDPlusPlus</scope><name>Apply</name></member>
      <member refid="classmlpack_1_1svd_1_1SVDPlusPlus_1a2e7d12e268021ca1160a4862844f7520" prot="public" virt="non-virtual"><scope>mlpack::svd::SVDPlusPlus</scope><name>Apply</name></member>
      <member refid="classmlpack_1_1svd_1_1SVDPlusPlus_1ac693882f80e29d39f18dd080e00a9403" prot="public" virt="non-virtual"><scope>mlpack::svd::SVDPlusPlus</scope><name>CleanData</name></member>
      <member refid="classmlpack_1_1svd_1_1SVDPlusPlus_1a8c30486c22f07ec9373b0b3992994d58" prot="private" virt="non-virtual"><scope>mlpack::svd::SVDPlusPlus</scope><name>iterations</name></member>
      <member refid="classmlpack_1_1svd_1_1SVDPlusPlus_1a3db359547eed8cfd48ca821d95f577af" prot="private" virt="non-virtual"><scope>mlpack::svd::SVDPlusPlus</scope><name>lambda</name></member>
      <member refid="classmlpack_1_1svd_1_1SVDPlusPlus_1a1d617828d260997a17e4d930506a9596" prot="public" virt="non-virtual"><scope>mlpack::svd::SVDPlusPlus</scope><name>SVDPlusPlus</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
