<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="categorical__split__info_8hpp" kind="file" language="C++">
    <compoundname>categorical_split_info.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includedby refid="hoeffding__categorical__split_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/hoeffding_categorical_split.hpp</includedby>
    <incdepgraph>
      <node id="49292">
        <label>list</label>
      </node>
      <node id="49289">
        <label>atomic</label>
      </node>
      <node id="49279">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="49255">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="49291">
        <label>iomanip</label>
      </node>
      <node id="49241">
        <label>/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/categorical_split_info.hpp</label>
        <link refid="categorical__split__info_8hpp"/>
        <childnode refid="49242" relation="include">
        </childnode>
      </node>
      <node id="49264">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="49265" relation="include">
        </childnode>
        <childnode refid="49267" relation="include">
        </childnode>
      </node>
      <node id="49247">
        <label>cstdint</label>
      </node>
      <node id="49256">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="49263">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="49286">
        <label>arma_config.hpp</label>
      </node>
      <node id="49276">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="49243">
        <label>cmath</label>
      </node>
      <node id="49262">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="49251">
        <label>stdexcept</label>
      </node>
      <node id="49271">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="49256" relation="include">
        </childnode>
        <childnode refid="49258" relation="include">
        </childnode>
        <childnode refid="49259" relation="include">
        </childnode>
        <childnode refid="49257" relation="include">
        </childnode>
      </node>
      <node id="49295">
        <label>string</label>
      </node>
      <node id="49283">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="49284" relation="include">
        </childnode>
        <childnode refid="49250" relation="include">
        </childnode>
      </node>
      <node id="49293">
        <label>map</label>
      </node>
      <node id="49245">
        <label>cfloat</label>
      </node>
      <node id="49275">
        <label>boost/variant.hpp</label>
      </node>
      <node id="49297">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="49259">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="49282">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="49283" relation="include">
        </childnode>
        <childnode refid="49259" relation="include">
        </childnode>
        <childnode refid="49266" relation="include">
        </childnode>
        <childnode refid="49284" relation="include">
        </childnode>
      </node>
      <node id="49272">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="49270">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="49256" relation="include">
        </childnode>
        <childnode refid="49258" relation="include">
        </childnode>
        <childnode refid="49259" relation="include">
        </childnode>
        <childnode refid="49257" relation="include">
        </childnode>
      </node>
      <node id="49273">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="49256" relation="include">
        </childnode>
        <childnode refid="49258" relation="include">
        </childnode>
        <childnode refid="49259" relation="include">
        </childnode>
        <childnode refid="49257" relation="include">
        </childnode>
      </node>
      <node id="49261">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="49281">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="49257" relation="include">
        </childnode>
        <childnode refid="49258" relation="include">
        </childnode>
        <childnode refid="49259" relation="include">
        </childnode>
        <childnode refid="49269" relation="include">
        </childnode>
        <childnode refid="49278" relation="include">
        </childnode>
      </node>
      <node id="49285">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="49286" relation="include">
        </childnode>
      </node>
      <node id="49287">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="49242">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="49243" relation="include">
        </childnode>
        <childnode refid="49244" relation="include">
        </childnode>
        <childnode refid="49245" relation="include">
        </childnode>
        <childnode refid="49246" relation="include">
        </childnode>
        <childnode refid="49247" relation="include">
        </childnode>
        <childnode refid="49248" relation="include">
        </childnode>
        <childnode refid="49249" relation="include">
        </childnode>
        <childnode refid="49250" relation="include">
        </childnode>
        <childnode refid="49251" relation="include">
        </childnode>
        <childnode refid="49252" relation="include">
        </childnode>
        <childnode refid="49253" relation="include">
        </childnode>
        <childnode refid="49254" relation="include">
        </childnode>
        <childnode refid="49255" relation="include">
        </childnode>
        <childnode refid="49256" relation="include">
        </childnode>
        <childnode refid="49257" relation="include">
        </childnode>
        <childnode refid="49258" relation="include">
        </childnode>
        <childnode refid="49259" relation="include">
        </childnode>
        <childnode refid="49260" relation="include">
        </childnode>
        <childnode refid="49261" relation="include">
        </childnode>
        <childnode refid="49262" relation="include">
        </childnode>
        <childnode refid="49263" relation="include">
        </childnode>
        <childnode refid="49264" relation="include">
        </childnode>
        <childnode refid="49268" relation="include">
        </childnode>
        <childnode refid="49269" relation="include">
        </childnode>
        <childnode refid="49270" relation="include">
        </childnode>
        <childnode refid="49271" relation="include">
        </childnode>
        <childnode refid="49272" relation="include">
        </childnode>
        <childnode refid="49273" relation="include">
        </childnode>
        <childnode refid="49274" relation="include">
        </childnode>
        <childnode refid="49280" relation="include">
        </childnode>
        <childnode refid="49281" relation="include">
        </childnode>
        <childnode refid="49278" relation="include">
        </childnode>
        <childnode refid="49282" relation="include">
        </childnode>
        <childnode refid="49285" relation="include">
        </childnode>
        <childnode refid="49287" relation="include">
        </childnode>
        <childnode refid="49288" relation="include">
        </childnode>
        <childnode refid="49297" relation="include">
        </childnode>
        <childnode refid="49298" relation="include">
        </childnode>
      </node>
      <node id="49248">
        <label>cstdio</label>
      </node>
      <node id="49252">
        <label>tuple</label>
      </node>
      <node id="49257">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="49274">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="49257" relation="include">
        </childnode>
        <childnode refid="49258" relation="include">
        </childnode>
        <childnode refid="49259" relation="include">
        </childnode>
        <childnode refid="49261" relation="include">
        </childnode>
        <childnode refid="49275" relation="include">
        </childnode>
        <childnode refid="49276" relation="include">
        </childnode>
        <childnode refid="49277" relation="include">
        </childnode>
        <childnode refid="49278" relation="include">
        </childnode>
      </node>
      <node id="49253">
        <label>utility</label>
      </node>
      <node id="49277">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="49268">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="49265">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="49266" relation="include">
        </childnode>
      </node>
      <node id="49288">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="49289" relation="include">
        </childnode>
        <childnode refid="49290" relation="include">
        </childnode>
        <childnode refid="49291" relation="include">
        </childnode>
        <childnode refid="49292" relation="include">
        </childnode>
        <childnode refid="49293" relation="include">
        </childnode>
        <childnode refid="49294" relation="include">
        </childnode>
        <childnode refid="49295" relation="include">
        </childnode>
        <childnode refid="49296" relation="include">
        </childnode>
      </node>
      <node id="49266">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="49280">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="49278" relation="include">
        </childnode>
        <childnode refid="49274" relation="include">
        </childnode>
        <childnode refid="49281" relation="include">
        </childnode>
      </node>
      <node id="49249">
        <label>cstdlib</label>
      </node>
      <node id="49244">
        <label>cctype</label>
      </node>
      <node id="49267">
        <label>unordered_map</label>
      </node>
      <node id="49246">
        <label>climits</label>
      </node>
      <node id="49294">
        <label>mutex</label>
      </node>
      <node id="49290">
        <label>chrono</label>
      </node>
      <node id="49298">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="49296">
        <label>thread</label>
      </node>
      <node id="49284">
        <label>type_traits</label>
      </node>
      <node id="49260">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="49254">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="49278">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="49256" relation="include">
        </childnode>
        <childnode refid="49257" relation="include">
        </childnode>
        <childnode refid="49258" relation="include">
        </childnode>
        <childnode refid="49259" relation="include">
        </childnode>
        <childnode refid="49279" relation="include">
        </childnode>
      </node>
      <node id="49250">
        <label>cstring</label>
      </node>
      <node id="49269">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="49258">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="49299">
        <label>/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/categorical_split_info.hpp</label>
        <link refid="categorical__split__info_8hpp"/>
        <childnode refid="49300" relation="include">
        </childnode>
      </node>
      <node id="49301">
        <label>/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/hoeffding_tree.hpp</label>
        <link refid="hoeffding__tree_8hpp"/>
        <childnode refid="49302" relation="include">
        </childnode>
        <childnode refid="49303" relation="include">
        </childnode>
      </node>
      <node id="49300">
        <label>/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/hoeffding_categorical_split.hpp</label>
        <link refid="hoeffding__categorical__split_8hpp"/>
        <childnode refid="49301" relation="include">
        </childnode>
      </node>
      <node id="49303">
        <label>/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/typedef.hpp</label>
        <link refid="methods_2hoeffding__trees_2typedef_8hpp"/>
      </node>
      <node id="49302">
        <label>/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/hoeffding_tree_model.hpp</label>
        <link refid="hoeffding__tree__model_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1tree_1_1CategoricalSplitInfo" prot="public">mlpack::tree::CategoricalSplitInfo</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1tree">mlpack::tree</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ryan Curtin</para></simplesect>
After a categorical split has been made, this holds information on the split.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_HOEFFDING_TREES_CATEGORICAL_SPLIT_INFO_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_HOEFFDING_TREES_CATEGORICAL_SPLIT_INFO_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tree<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classmlpack_1_1tree_1_1CategoricalSplitInfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1tree_1_1CategoricalSplitInfo" kindref="compound">CategoricalSplitInfo</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23" refid="classmlpack_1_1tree_1_1CategoricalSplitInfo_1ad287444a06299e946a7d16b47b0f656e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1CategoricalSplitInfo_1ad287444a06299e946a7d16b47b0f656e" kindref="member">CategoricalSplitInfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>categories<sp/>*/</highlight><highlight class="normal">)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="26" refid="classmlpack_1_1tree_1_1CategoricalSplitInfo_1ac1f5e439aa34731eafc789cdb2d6e09f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1CategoricalSplitInfo_1ac1f5e439aa34731eafc789cdb2d6e09f" kindref="member">CalculateDirection</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eT&amp;<sp/>value)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>a<sp/>child<sp/>for<sp/>each<sp/>categorical<sp/>value,<sp/>and<sp/>value<sp/>should<sp/>be<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>range<sp/>[0,<sp/>categories).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size_t(value);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="35" refid="classmlpack_1_1tree_1_1CategoricalSplitInfo_1aa2ccb5a0533a6ba0abe6dfc1f98fbafb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1CategoricalSplitInfo_1aa2ccb5a0533a6ba0abe6dfc1f98fbafb" kindref="member">serialize</ref>(Archive&amp;<sp/></highlight><highlight class="comment">/*<sp/>ar<sp/>*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/categorical_split_info.hpp"/>
  </compounddef>
</doxygen>
