<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper" kind="class" language="C++" prot="public">
    <compoundname>mlpack::neighbor::LeafSizeRAWrapper</compoundname>
    <basecompoundref refid="classmlpack_1_1neighbor_1_1RAWrapper" prot="public" virt="non-virtual">mlpack::neighbor::RAWrapper&lt; TreeType &gt;</basecompoundref>
    <includes refid="ra__model_8hpp" local="no">ra_model.hpp</includes>
    <templateparamlist>
      <param>
        <type>template&lt; typename TreeMetricType, typename TreeStatType, typename TreeMatType &gt; class</type>
        <declname>TreeType</declname>
        <defname>TreeType</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper_1a5d81fdfb139dff3a3ae1d0927d0a54d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>LeafSizeRAWrapper</definition>
        <argsstring>(const bool singleMode, const bool naive)</argsstring>
        <name>LeafSizeRAWrapper</name>
        <param>
          <type>const bool</type>
          <declname>singleMode</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>naive</declname>
        </param>
        <briefdescription>
<para>Construct the <ref refid="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper" kindref="compound">LeafSizeRAWrapper</ref> by delegating to the <ref refid="classmlpack_1_1neighbor_1_1RAWrapper" kindref="compound">RAWrapper</ref> constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="213" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="213" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper_1a8143e6a42aa8db8a769546687e2bc21f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual ~LeafSizeRAWrapper</definition>
        <argsstring>()</argsstring>
        <name>~LeafSizeRAWrapper</name>
        <briefdescription>
<para>Delete the <ref refid="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper" kindref="compound">LeafSizeRAWrapper</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="220" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="220" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper_1a6fb5273198ccf37addbdd3783ca4579e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper" kindref="compound">LeafSizeRAWrapper</ref> *</type>
        <definition>virtual LeafSizeRAWrapper* Clone</definition>
        <argsstring>() const</argsstring>
        <name>Clone</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1RAWrapper_1a792e0cada1f67fd770b5bb101dc6c9ed">Clone</reimplements>
        <briefdescription>
<para>Return a copy of the <ref refid="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper" kindref="compound">LeafSizeRAWrapper</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="223" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="223" bodyend="226"/>
        <references refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1ac54eb02407917fdaa1725b77fd65c766">RAWrapperBase::Search</references>
        <references refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1aed03cfde627d1e971acb1d36d9abd29c">RAWrapperBase::Train</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper_1a2c53ba7b98b21fbdfc1aa186a3927089" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Search</definition>
        <argsstring>(arma::mat &amp;&amp;querySet, const size_t k, arma::Mat&lt; size_t &gt; &amp;neighbors, arma::mat &amp;distances, const size_t leafSize)</argsstring>
        <name>Search</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1RAWrapper_1ad43293b5ec532712b022897bedc15f44">Search</reimplements>
        <param>
          <type>arma::mat &amp;&amp;</type>
          <declname>querySet</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>neighbors</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>distances</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>leafSize</declname>
        </param>
        <briefdescription>
<para>Perform bichromatic search (e.g. </para>        </briefdescription>
        <detaileddescription>
<para>search with a separate query set). This overload takes the leaf size into account to build the query tree. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="234" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the <ref refid="classmlpack_1_1neighbor_1_1RASearch" kindref="compound">RASearch</ref> model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="242" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="242" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper_1a6804dc4af719ba3162ad5f15dbe5553d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Train</definition>
        <argsstring>(arma::mat &amp;&amp;referenceSet, const size_t leafSize)</argsstring>
        <name>Train</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1RAWrapper_1aab4ee663331b914daad05f6f7c22ee9b">Train</reimplements>
        <param>
          <type>arma::mat &amp;&amp;</type>
          <declname>referenceSet</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>leafSize</declname>
        </param>
        <briefdescription>
<para>Train a model with the given parameters. This overload uses leafSize. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="229" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper" kindref="compound">LeafSizeRAWrapper</ref> wraps any <ref refid="classmlpack_1_1neighbor_1_1RASearch" kindref="compound">RASearch</ref> type that needs to be able to take the leaf size into account when building trees. </para>    </briefdescription>
    <detaileddescription>
<para>The implementations of <ref refid="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper_1a6804dc4af719ba3162ad5f15dbe5553d" kindref="member">Train()</ref> and bichromatic <ref refid="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper_1a2c53ba7b98b21fbdfc1aa186a3927089" kindref="member">Search()</ref> take this leaf size into account. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1066">
        <label>RAWrapperBase</label>
        <link refid="classmlpack_1_1neighbor_1_1RAWrapperBase"/>
      </node>
      <node id="1064">
        <label>LeafSizeRAWrapper&lt; TreeType &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper"/>
        <childnode refid="1065" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1065">
        <label>RAWrapper&lt; TreeType &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1RAWrapper"/>
        <childnode refid="1066" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1069">
        <label>RAWrapperBase</label>
        <link refid="classmlpack_1_1neighbor_1_1RAWrapperBase"/>
      </node>
      <node id="1067">
        <label>LeafSizeRAWrapper&lt; TreeType &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper"/>
        <childnode refid="1068" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1071">
        <label>RASearch&lt; SortPolicy, MetricType, MatType, TreeType &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1RASearch"/>
      </node>
      <node id="1070">
        <label>RASearch&lt; NearestNeighborSort, metric::EuclideanDistance, arma::mat, TreeType &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1RASearch"/>
        <childnode refid="1071" relation="template-instance">
          <edgelabel>&lt; NearestNeighborSort, metric::EuclideanDistance, arma::mat, TreeType &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1068">
        <label>RAWrapper&lt; TreeType &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1RAWrapper"/>
        <childnode refid="1069" relation="public-inheritance">
        </childnode>
        <childnode refid="1070" relation="usage">
          <edgelabel>ra</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="209" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="208" bodyend="249"/>
    <listofallmembers>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a500ecd077d5cc5fdbf6ceb095d8de9e1" prot="public" virt="virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>Alpha</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1acbb0e4747a3a307bee88bad71e5eeaf1" prot="public" virt="virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>Alpha</name></member>
      <member refid="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper_1a6fb5273198ccf37addbdd3783ca4579e" prot="public" virt="virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>Clone</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1aff320b9a86b77a150e630c01d5888273" prot="public" virt="virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>Dataset</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a17ec6e467897eb8aee3b519e0758e77d" prot="public" virt="virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>FirstLeafExact</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1aca2eb648feb965d3bcb0b0b73f8b2b0f" prot="public" virt="virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>FirstLeafExact</name></member>
      <member refid="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper_1a5d81fdfb139dff3a3ae1d0927d0a54d0" prot="public" virt="non-virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>LeafSizeRAWrapper</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a343230e7d7344e3f7d5f5f2eb89cf2c5" prot="public" virt="virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>Naive</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1af7d397adca3f411b4e2d2f977b280ce6" prot="public" virt="virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>Naive</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1acdd8c30736e12f437a7143f7e45b9350" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>ra</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a4a36b35460d31a24b77aae0b8b485e6a" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>RAType</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a1139e9796b453bff6f94924e60475493" prot="public" virt="non-virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>RAWrapper</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a33445e59b0dcf448bca4d6d73cd5a903" prot="public" virt="non-virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>RAWrapperBase</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1aa9dd91d6b96e1d0b343c3cec27372036" prot="public" virt="virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>SampleAtLeaves</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a9f6d54dd0424f827becc2e2e9969b1bb" prot="public" virt="virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>SampleAtLeaves</name></member>
      <member refid="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper_1a2c53ba7b98b21fbdfc1aa186a3927089" prot="public" virt="virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>Search</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1aeb3fa1fab8680898b6326556ea81a55b" prot="public" virt="virtual" ambiguityscope="mlpack::neighbor::RAWrapper::"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>Search</name></member>
      <member refid="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a7477b3e8499a6158bbe177e7f30d4947" prot="public" virt="virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>SingleMode</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1adadacd63ddeadf138d834b1fdc632773" prot="public" virt="virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>SingleMode</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a3a2580f686a9de3078e499b1280e2a9f" prot="public" virt="virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>SingleSampleLimit</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1ae78a7b8e9c96a2dbf646a27efee047b1" prot="public" virt="virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>SingleSampleLimit</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a4a4b0fafde4cc4c856a53025dc8c4c21" prot="public" virt="virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>Tau</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1ad522d61ed716a322376adea25ebdbc90" prot="public" virt="virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>Tau</name></member>
      <member refid="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper_1a6804dc4af719ba3162ad5f15dbe5553d" prot="public" virt="virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>Train</name></member>
      <member refid="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper_1a8143e6a42aa8db8a769546687e2bc21f" prot="public" virt="virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>~LeafSizeRAWrapper</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a00e8f2feab29adf7a6156c5a90e6252d" prot="public" virt="virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>~RAWrapper</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a0fc504cc59c425b26f3cadcdf45fe17d" prot="public" virt="virtual"><scope>mlpack::neighbor::LeafSizeRAWrapper</scope><name>~RAWrapperBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
