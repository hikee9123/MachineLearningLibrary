<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sample__initialization_8hpp" kind="file" language="C++">
    <compoundname>sample_initialization.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="random_8hpp" local="no">mlpack/core/math/random.hpp</includes>
    <includedby refid="kmeans_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/kmeans/kmeans.hpp</includedby>
    <incdepgraph>
      <node id="51235">
        <label>list</label>
      </node>
      <node id="51232">
        <label>atomic</label>
      </node>
      <node id="51222">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="51198">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="51234">
        <label>iomanip</label>
      </node>
      <node id="51207">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="51208" relation="include">
        </childnode>
        <childnode refid="51210" relation="include">
        </childnode>
      </node>
      <node id="51190">
        <label>cstdint</label>
      </node>
      <node id="51199">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="51206">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="51243">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="51229">
        <label>arma_config.hpp</label>
      </node>
      <node id="51219">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="51186">
        <label>cmath</label>
      </node>
      <node id="51205">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="51194">
        <label>stdexcept</label>
      </node>
      <node id="51214">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="51199" relation="include">
        </childnode>
        <childnode refid="51201" relation="include">
        </childnode>
        <childnode refid="51202" relation="include">
        </childnode>
        <childnode refid="51200" relation="include">
        </childnode>
      </node>
      <node id="51238">
        <label>string</label>
      </node>
      <node id="51226">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="51227" relation="include">
        </childnode>
        <childnode refid="51193" relation="include">
        </childnode>
      </node>
      <node id="51236">
        <label>map</label>
      </node>
      <node id="51188">
        <label>cfloat</label>
      </node>
      <node id="51218">
        <label>boost/variant.hpp</label>
      </node>
      <node id="51240">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="51202">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="51225">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="51226" relation="include">
        </childnode>
        <childnode refid="51202" relation="include">
        </childnode>
        <childnode refid="51209" relation="include">
        </childnode>
        <childnode refid="51227" relation="include">
        </childnode>
      </node>
      <node id="51215">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="51213">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="51199" relation="include">
        </childnode>
        <childnode refid="51201" relation="include">
        </childnode>
        <childnode refid="51202" relation="include">
        </childnode>
        <childnode refid="51200" relation="include">
        </childnode>
      </node>
      <node id="51216">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="51199" relation="include">
        </childnode>
        <childnode refid="51201" relation="include">
        </childnode>
        <childnode refid="51202" relation="include">
        </childnode>
        <childnode refid="51200" relation="include">
        </childnode>
      </node>
      <node id="51204">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="51224">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="51200" relation="include">
        </childnode>
        <childnode refid="51201" relation="include">
        </childnode>
        <childnode refid="51202" relation="include">
        </childnode>
        <childnode refid="51212" relation="include">
        </childnode>
        <childnode refid="51221" relation="include">
        </childnode>
      </node>
      <node id="51228">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="51229" relation="include">
        </childnode>
      </node>
      <node id="51230">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="51185">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="51186" relation="include">
        </childnode>
        <childnode refid="51187" relation="include">
        </childnode>
        <childnode refid="51188" relation="include">
        </childnode>
        <childnode refid="51189" relation="include">
        </childnode>
        <childnode refid="51190" relation="include">
        </childnode>
        <childnode refid="51191" relation="include">
        </childnode>
        <childnode refid="51192" relation="include">
        </childnode>
        <childnode refid="51193" relation="include">
        </childnode>
        <childnode refid="51194" relation="include">
        </childnode>
        <childnode refid="51195" relation="include">
        </childnode>
        <childnode refid="51196" relation="include">
        </childnode>
        <childnode refid="51197" relation="include">
        </childnode>
        <childnode refid="51198" relation="include">
        </childnode>
        <childnode refid="51199" relation="include">
        </childnode>
        <childnode refid="51200" relation="include">
        </childnode>
        <childnode refid="51201" relation="include">
        </childnode>
        <childnode refid="51202" relation="include">
        </childnode>
        <childnode refid="51203" relation="include">
        </childnode>
        <childnode refid="51204" relation="include">
        </childnode>
        <childnode refid="51205" relation="include">
        </childnode>
        <childnode refid="51206" relation="include">
        </childnode>
        <childnode refid="51207" relation="include">
        </childnode>
        <childnode refid="51211" relation="include">
        </childnode>
        <childnode refid="51212" relation="include">
        </childnode>
        <childnode refid="51213" relation="include">
        </childnode>
        <childnode refid="51214" relation="include">
        </childnode>
        <childnode refid="51215" relation="include">
        </childnode>
        <childnode refid="51216" relation="include">
        </childnode>
        <childnode refid="51217" relation="include">
        </childnode>
        <childnode refid="51223" relation="include">
        </childnode>
        <childnode refid="51224" relation="include">
        </childnode>
        <childnode refid="51221" relation="include">
        </childnode>
        <childnode refid="51225" relation="include">
        </childnode>
        <childnode refid="51228" relation="include">
        </childnode>
        <childnode refid="51230" relation="include">
        </childnode>
        <childnode refid="51231" relation="include">
        </childnode>
        <childnode refid="51240" relation="include">
        </childnode>
        <childnode refid="51241" relation="include">
        </childnode>
      </node>
      <node id="51244">
        <label>random</label>
      </node>
      <node id="51191">
        <label>cstdio</label>
      </node>
      <node id="51195">
        <label>tuple</label>
      </node>
      <node id="51200">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="51217">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="51200" relation="include">
        </childnode>
        <childnode refid="51201" relation="include">
        </childnode>
        <childnode refid="51202" relation="include">
        </childnode>
        <childnode refid="51204" relation="include">
        </childnode>
        <childnode refid="51218" relation="include">
        </childnode>
        <childnode refid="51219" relation="include">
        </childnode>
        <childnode refid="51220" relation="include">
        </childnode>
        <childnode refid="51221" relation="include">
        </childnode>
      </node>
      <node id="51242">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="51185" relation="include">
        </childnode>
        <childnode refid="51243" relation="include">
        </childnode>
        <childnode refid="51244" relation="include">
        </childnode>
      </node>
      <node id="51196">
        <label>utility</label>
      </node>
      <node id="51220">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="51211">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="51208">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="51209" relation="include">
        </childnode>
      </node>
      <node id="51231">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="51232" relation="include">
        </childnode>
        <childnode refid="51233" relation="include">
        </childnode>
        <childnode refid="51234" relation="include">
        </childnode>
        <childnode refid="51235" relation="include">
        </childnode>
        <childnode refid="51236" relation="include">
        </childnode>
        <childnode refid="51237" relation="include">
        </childnode>
        <childnode refid="51238" relation="include">
        </childnode>
        <childnode refid="51239" relation="include">
        </childnode>
      </node>
      <node id="51209">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="51223">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="51221" relation="include">
        </childnode>
        <childnode refid="51217" relation="include">
        </childnode>
        <childnode refid="51224" relation="include">
        </childnode>
      </node>
      <node id="51192">
        <label>cstdlib</label>
      </node>
      <node id="51187">
        <label>cctype</label>
      </node>
      <node id="51210">
        <label>unordered_map</label>
      </node>
      <node id="51189">
        <label>climits</label>
      </node>
      <node id="51184">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/sample_initialization.hpp</label>
        <link refid="sample__initialization_8hpp"/>
        <childnode refid="51185" relation="include">
        </childnode>
        <childnode refid="51242" relation="include">
        </childnode>
      </node>
      <node id="51237">
        <label>mutex</label>
      </node>
      <node id="51233">
        <label>chrono</label>
      </node>
      <node id="51241">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="51239">
        <label>thread</label>
      </node>
      <node id="51227">
        <label>type_traits</label>
      </node>
      <node id="51203">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="51197">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="51221">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="51199" relation="include">
        </childnode>
        <childnode refid="51200" relation="include">
        </childnode>
        <childnode refid="51201" relation="include">
        </childnode>
        <childnode refid="51202" relation="include">
        </childnode>
        <childnode refid="51222" relation="include">
        </childnode>
      </node>
      <node id="51193">
        <label>cstring</label>
      </node>
      <node id="51212">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="51201">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="51250">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/gmm.hpp</label>
        <link refid="gmm_8hpp"/>
        <childnode refid="51249" relation="include">
        </childnode>
      </node>
      <node id="51248">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp</label>
        <link refid="diagonal__gmm_8hpp"/>
        <childnode refid="51249" relation="include">
        </childnode>
      </node>
      <node id="51253">
        <label>/home/aakash/mlpack/src/mlpack/methods/nystroem_method/nystroem_method.hpp</label>
        <link refid="nystroem__method_2nystroem__method_8hpp"/>
        <childnode refid="51252" relation="include">
        </childnode>
      </node>
      <node id="51247">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/em_fit.hpp</label>
        <link refid="em__fit_8hpp"/>
        <childnode refid="51248" relation="include">
        </childnode>
        <childnode refid="51250" relation="include">
        </childnode>
      </node>
      <node id="51246">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/kmeans.hpp</label>
        <link refid="kmeans_8hpp"/>
        <childnode refid="51247" relation="include">
        </childnode>
        <childnode refid="51251" relation="include">
        </childnode>
      </node>
      <node id="51245">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/sample_initialization.hpp</label>
        <link refid="sample__initialization_8hpp"/>
        <childnode refid="51246" relation="include">
        </childnode>
      </node>
      <node id="51251">
        <label>/home/aakash/mlpack/src/mlpack/methods/nystroem_method/kmeans_selection.hpp</label>
        <link refid="kmeans__selection_8hpp"/>
        <childnode refid="51252" relation="include">
        </childnode>
        <childnode refid="51253" relation="include">
        </childnode>
      </node>
      <node id="51249">
        <label>/home/aakash/mlpack/src/mlpack/methods/hmm/hmm_model.hpp</label>
        <link refid="hmm__model_8hpp"/>
      </node>
      <node id="51252">
        <label>/home/aakash/mlpack/src/mlpack/methods/kernel_pca/kernel_rules/nystroem_method.hpp</label>
        <link refid="kernel__pca_2kernel__rules_2nystroem__method_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1kmeans_1_1SampleInitialization" prot="public">mlpack::kmeans::SampleInitialization</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1kmeans">mlpack::kmeans</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ryan Curtin</para></simplesect>
In order to construct initial centroids, randomly sample points from the dataset. This tends to give better results than the RandomPartition strategy.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="14"><highlight class="preprocessor">#ifndef<sp/>__MLPACK_METHODS_KMEANS_SAMPLE_INITIALIZATION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__MLPACK_METHODS_KMEANS_SAMPLE_INITIALIZATION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="random_8hpp" kindref="compound">mlpack/core/math/random.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">kmeans<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classmlpack_1_1kmeans_1_1SampleInitialization" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1kmeans_1_1SampleInitialization" kindref="compound">SampleInitialization</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27" refid="classmlpack_1_1kmeans_1_1SampleInitialization_1a47289aac77d670ddc14b58336fb5b051" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1kmeans_1_1SampleInitialization_1a47289aac77d670ddc14b58336fb5b051" kindref="member">SampleInitialization</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="38" refid="classmlpack_1_1kmeans_1_1SampleInitialization_1a8ee4dff98d318a0f5586140c5846ef39" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kmeans_1_1SampleInitialization_1a8ee4dff98d318a0f5586140c5846ef39" kindref="member">Cluster</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>clusters,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>centroids)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>centroids.set_size(data.n_rows,<sp/>clusters);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>clusters;<sp/>++i)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Randomly<sp/>sample<sp/>a<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/><ref refid="namespacemlpack_1_1math_1aad090ac225728d74c1b66bcf52f3ab95" kindref="member">math::RandInt</ref>(0,<sp/>data.n_cols);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>centroids.col(i)<sp/>=<sp/>data.col(index);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>kmeans</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/kmeans/sample_initialization.hpp"/>
  </compounddef>
</doxygen>
