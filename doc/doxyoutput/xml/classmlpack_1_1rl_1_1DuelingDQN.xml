<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1rl_1_1DuelingDQN" kind="class" language="C++" prot="public">
    <compoundname>mlpack::rl::DuelingDQN</compoundname>
    <includes refid="dueling__dqn_8hpp" local="no">dueling_dqn.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename OutputLayerType</type>
        <defval><ref refid="classmlpack_1_1ann_1_1EmptyLoss" kindref="compound">EmptyLoss</ref>&lt;&gt;</defval>
      </param>
      <param>
        <type>typename InitType</type>
        <defval><ref refid="classmlpack_1_1ann_1_1GaussianInitialization" kindref="compound">GaussianInitialization</ref></defval>
      </param>
      <param>
        <type>typename CompleteNetworkType</type>
        <defval><ref refid="classmlpack_1_1ann_1_1FFN" kindref="compound">FFN</ref>&lt;OutputLayerType, InitType&gt;</defval>
      </param>
      <param>
        <type>typename FeatureNetworkType</type>
        <defval><ref refid="classmlpack_1_1ann_1_1Sequential" kindref="compound">Sequential</ref>&lt;&gt;</defval>
      </param>
      <param>
        <type>typename AdvantageNetworkType</type>
        <defval><ref refid="classmlpack_1_1ann_1_1Sequential" kindref="compound">Sequential</ref>&lt;&gt;</defval>
      </param>
      <param>
        <type>typename ValueNetworkType</type>
        <defval><ref refid="classmlpack_1_1ann_1_1Sequential" kindref="compound">Sequential</ref>&lt;&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1rl_1_1DuelingDQN_1a17a561be67c5da1bae846c63545cd3d9" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat actionValues</definition>
        <argsstring></argsstring>
        <name>actionValues</name>
        <briefdescription>
<para>Locally-stored actionValues of the network. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" line="283" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1rl_1_1DuelingDQN_1a65ed3cbbea00a5eac3b8ef3e16ef614a" prot="private" static="no" mutable="no">
        <type>AdvantageNetworkType *</type>
        <definition>AdvantageNetworkType* advantageNetwork</definition>
        <argsstring></argsstring>
        <name>advantageNetwork</name>
        <briefdescription>
<para>Locally-stored advantage network. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" line="271" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1rl_1_1DuelingDQN_1a9a1f2588909f6a9f2d90d9c536fdf5f6" prot="private" static="no" mutable="no">
        <type>CompleteNetworkType</type>
        <definition>CompleteNetworkType completeNetwork</definition>
        <argsstring></argsstring>
        <name>completeNetwork</name>
        <briefdescription>
<para>Locally-stored complete network. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" line="262" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1rl_1_1DuelingDQN_1aefc651ad28ad437c291c33f79bdaffba" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1ann_1_1Concat" kindref="compound">Concat</ref> *</type>
        <definition>Concat* concat</definition>
        <argsstring></argsstring>
        <name>concat</name>
        <briefdescription>
<para>Locally-stored concat network. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" line="265" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1rl_1_1DuelingDQN_1a82451c024f2d4d19064a8d1506480250" prot="private" static="no" mutable="no">
        <type>FeatureNetworkType *</type>
        <definition>FeatureNetworkType* featureNetwork</definition>
        <argsstring></argsstring>
        <name>featureNetwork</name>
        <briefdescription>
<para>Locally-stored feature network. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" line="268" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1rl_1_1DuelingDQN_1a60757a70981fc591fc46d06a3df22678" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool isNoisy</definition>
        <argsstring></argsstring>
        <name>isNoisy</name>
        <briefdescription>
<para>Locally-stored check for noisy network. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" line="277" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1rl_1_1DuelingDQN_1a1134a397e61154c5bf7d2d25954035ee" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1ann_1_1MeanSquaredError" kindref="compound">MeanSquaredError</ref></type>
        <definition>MeanSquaredError lossFunction</definition>
        <argsstring></argsstring>
        <name>lossFunction</name>
        <briefdescription>
<para>Locally-stored loss function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" line="286" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1rl_1_1DuelingDQN_1a5e9104ca1235f6380ad1d10274dd1292" prot="private" static="no" mutable="no">
        <type>std::vector&lt; size_t &gt;</type>
        <definition>std::vector&lt;size_t&gt; noisyLayerIndex</definition>
        <argsstring></argsstring>
        <name>noisyLayerIndex</name>
        <briefdescription>
<para>Locally-stored indexes of noisy layers in the network. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" line="280" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1rl_1_1DuelingDQN_1a3c7c773b4aa0325d83456dfa11015e98" prot="private" static="no" mutable="no">
        <type>ValueNetworkType *</type>
        <definition>ValueNetworkType* valueNetwork</definition>
        <argsstring></argsstring>
        <name>valueNetwork</name>
        <briefdescription>
<para>Locally-stored value network. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" line="274" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" bodystart="274" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1rl_1_1DuelingDQN_1a19f74770618d675330602748306a4147" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DuelingDQN</definition>
        <argsstring>()</argsstring>
        <name>DuelingDQN</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" line="60" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" bodystart="60" bodyend="72"/>
        <references refid="classmlpack_1_1ann_1_1Sequential_1a8b5234495846c00f6b2c8296ca6bc718" compoundref="sequential_8hpp" startline="143" endline="143">Sequential&lt; InputDataType, OutputDataType, Residual, CustomLayers &gt;::Add</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1rl_1_1DuelingDQN_1a820e73dd1061693f3281ddbc20e08b16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DuelingDQN</definition>
        <argsstring>(const int inputDim, const int h1, const int h2, const int outputDim, const bool isNoisy=false, InitType init=InitType(), OutputLayerType outputLayer=OutputLayerType())</argsstring>
        <name>DuelingDQN</name>
        <param>
          <type>const int</type>
          <declname>inputDim</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>h2</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>outputDim</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>isNoisy</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>InitType</type>
          <declname>init</declname>
          <defval>InitType()</defval>
        </param>
        <param>
          <type>OutputLayerType</type>
          <declname>outputLayer</declname>
          <defval>OutputLayerType()</defval>
        </param>
        <briefdescription>
<para>Construct an instance of <ref refid="classmlpack_1_1rl_1_1DuelingDQN" kindref="compound">DuelingDQN</ref> class. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputDim</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of inputs. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h1</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of neurons in hiddenlayer-1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h2</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of neurons in hiddenlayer-2. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputDim</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of neurons in output layer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isNoisy</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies whether the network needs to be of type noisy. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>init</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the initialization rule for the network. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputLayer</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the output layer type for network. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" line="85" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" bodystart="85" bodyend="134"/>
        <references refid="classmlpack_1_1ann_1_1Sequential_1a8b5234495846c00f6b2c8296ca6bc718" compoundref="sequential_8hpp" startline="143" endline="143">Sequential&lt; InputDataType, OutputDataType, Residual, CustomLayers &gt;::Add</references>
        <references refid="classmlpack_1_1ann_1_1Concat_1a8b5234495846c00f6b2c8296ca6bc718" compoundref="concat_8hpp" startline="147" endline="147">Concat&lt; InputDataType, OutputDataType, CustomLayers &gt;::Add</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1rl_1_1DuelingDQN_1acbde6caaa3601be4429d799f1f88f8a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DuelingDQN</definition>
        <argsstring>(FeatureNetworkType &amp;featureNetwork, AdvantageNetworkType &amp;advantageNetwork, ValueNetworkType &amp;valueNetwork, const bool isNoisy=false)</argsstring>
        <name>DuelingDQN</name>
        <param>
          <type>FeatureNetworkType &amp;</type>
          <declname>featureNetwork</declname>
        </param>
        <param>
          <type>AdvantageNetworkType &amp;</type>
          <declname>advantageNetwork</declname>
        </param>
        <param>
          <type>ValueNetworkType &amp;</type>
          <declname>valueNetwork</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>isNoisy</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Construct an instance of <ref refid="classmlpack_1_1rl_1_1DuelingDQN" kindref="compound">DuelingDQN</ref> class from a pre-constructed network. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>featureNetwork</parametername>
</parameternamelist>
<parameterdescription>
<para>The feature network to be used by <ref refid="classmlpack_1_1rl_1_1DuelingDQN" kindref="compound">DuelingDQN</ref> class. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>advantageNetwork</parametername>
</parameternamelist>
<parameterdescription>
<para>The advantage network to be used by <ref refid="classmlpack_1_1rl_1_1DuelingDQN" kindref="compound">DuelingDQN</ref> class. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valueNetwork</parametername>
</parameternamelist>
<parameterdescription>
<para>The value network to be used by <ref refid="classmlpack_1_1rl_1_1DuelingDQN" kindref="compound">DuelingDQN</ref> class. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isNoisy</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies whether the network needs to be of type noisy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" line="144" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" bodystart="144" bodyend="160"/>
        <references refid="classmlpack_1_1ann_1_1Concat_1a8b5234495846c00f6b2c8296ca6bc718" compoundref="concat_8hpp" startline="147" endline="147">Concat&lt; InputDataType, OutputDataType, CustomLayers &gt;::Add</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1rl_1_1DuelingDQN_1a7d21e28890605be3b558ec79037560ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DuelingDQN</definition>
        <argsstring>(const DuelingDQN &amp;)</argsstring>
        <name>DuelingDQN</name>
        <param>
          <type>const <ref refid="classmlpack_1_1rl_1_1DuelingDQN" kindref="compound">DuelingDQN</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" line="163" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" bodystart="163" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1rl_1_1DuelingDQN_1ac6d24661593a769ea1cfcd17e11c375f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Backward</definition>
        <argsstring>(const arma::mat state, arma::mat &amp;target, arma::mat &amp;gradient)</argsstring>
        <name>Backward</name>
        <param>
          <type>const arma::mat</type>
          <declname>state</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>gradient</declname>
        </param>
        <briefdescription>
<para>Perform the backward pass of the state in real batch mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The input state. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The training target. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gradient</parametername>
</parameternamelist>
<parameterdescription>
<para>The gradient. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" line="221" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" bodystart="221" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1rl_1_1DuelingDQN_1a245296893ea44b3e2dd31099371080bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Forward</definition>
        <argsstring>(const arma::mat state, arma::mat &amp;actionValue)</argsstring>
        <name>Forward</name>
        <param>
          <type>const arma::mat</type>
          <declname>state</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>actionValue</declname>
        </param>
        <briefdescription>
<para>Perform the forward pass of the states in real batch mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The input state. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>actionValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to put output action values of states input. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" line="203" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" bodystart="203" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1rl_1_1DuelingDQN_1af7b53ec80591b8574f4ef7da536a364e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void operator=</definition>
        <argsstring>(const DuelingDQN &amp;model)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmlpack_1_1rl_1_1DuelingDQN" kindref="compound">DuelingDQN</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>Copy assignment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" line="167" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" bodystart="167" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1rl_1_1DuelingDQN_1aa68d74dc1e86e4352e00a3cab83a0e4a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::mat &amp;</type>
        <definition>const arma::mat&amp; Parameters</definition>
        <argsstring>() const</argsstring>
        <name>Parameters</name>
        <briefdescription>
<para>Return the Parameters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" line="256" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" bodystart="256" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1rl_1_1DuelingDQN_1a043f0ccd62e6711a18e0d81047be9a0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>arma::mat &amp;</type>
        <definition>arma::mat&amp; Parameters</definition>
        <argsstring>()</argsstring>
        <name>Parameters</name>
        <briefdescription>
<para>Modify the Parameters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" line="258" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" bodystart="258" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1rl_1_1DuelingDQN_1aefcbb9daa8a256f06abf569abc4ebd1e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Predict</definition>
        <argsstring>(const arma::mat state, arma::mat &amp;actionValue)</argsstring>
        <name>Predict</name>
        <param>
          <type>const arma::mat</type>
          <declname>state</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>actionValue</declname>
        </param>
        <briefdescription>
<para>Predict the responses to a given set of predictors. </para>        </briefdescription>
        <detaileddescription>
<para>The responses will reflect the output of the given output layer as returned by the output layer function.</para><para>If you want to pass in a parameter and discard the original parameter object, be sure to use std::move to avoid unnecessary copy.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Input state. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>actionValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to put output action values of states input. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" line="187" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" bodystart="187" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1rl_1_1DuelingDQN_1a13df76c46bb1caaacde3c67531e52382" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ResetNoise</definition>
        <argsstring>()</argsstring>
        <name>ResetNoise</name>
        <briefdescription>
<para>Resets noise of the network, if the network is of type noisy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" line="244" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" bodystart="244" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1rl_1_1DuelingDQN_1a7178038c3cb8d247eadb94cd2058c432" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ResetParameters</definition>
        <argsstring>()</argsstring>
        <name>ResetParameters</name>
        <briefdescription>
<para>Resets the parameters of the network. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" line="236" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" bodystart="236" bodyend="239"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implementation of the Dueling Deep Q-Learning network. </para>    </briefdescription>
    <detaileddescription>
<para>For more information, see the following.</para><para><programlisting><codeline><highlight class="normal">@misc{wang2015dueling,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>author<sp/><sp/>=<sp/>{Ziyu<sp/>Wang,<sp/>Tom<sp/>Schaul,<sp/>Matteo<sp/>Hessel,Hado<sp/>van<sp/>Hasselt,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Marc<sp/>Lanctot,<sp/>Nando<sp/>de<sp/>Freitas},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>title<sp/><sp/><sp/>=<sp/>{Dueling<sp/>Network<sp/>Architectures<sp/>for<sp/>Deep<sp/>Reinforcement<sp/>Learning},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>year<sp/><sp/><sp/><sp/>=<sp/>{2015},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>url<sp/><sp/><sp/><sp/><sp/>=<sp/>{https://arxiv.org/abs/1511.06581}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OutputLayerType</parametername>
</parameternamelist>
<parameterdescription>
<para>The output layer type of the network. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InitType</parametername>
</parameternamelist>
<parameterdescription>
<para>The initialization type used for the network. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CompleteNetworkType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of network used for full dueling dqn. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FeatureNetworkType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of network used for feature network. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>AdvantageNetworkType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of network used for advantage network. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ValueNetworkType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of network used for value network. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" line="57" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp" bodystart="56" bodyend="287"/>
    <listofallmembers>
      <member refid="classmlpack_1_1rl_1_1DuelingDQN_1a17a561be67c5da1bae846c63545cd3d9" prot="private" virt="non-virtual"><scope>mlpack::rl::DuelingDQN</scope><name>actionValues</name></member>
      <member refid="classmlpack_1_1rl_1_1DuelingDQN_1a65ed3cbbea00a5eac3b8ef3e16ef614a" prot="private" virt="non-virtual"><scope>mlpack::rl::DuelingDQN</scope><name>advantageNetwork</name></member>
      <member refid="classmlpack_1_1rl_1_1DuelingDQN_1ac6d24661593a769ea1cfcd17e11c375f" prot="public" virt="non-virtual"><scope>mlpack::rl::DuelingDQN</scope><name>Backward</name></member>
      <member refid="classmlpack_1_1rl_1_1DuelingDQN_1a9a1f2588909f6a9f2d90d9c536fdf5f6" prot="private" virt="non-virtual"><scope>mlpack::rl::DuelingDQN</scope><name>completeNetwork</name></member>
      <member refid="classmlpack_1_1rl_1_1DuelingDQN_1aefc651ad28ad437c291c33f79bdaffba" prot="private" virt="non-virtual"><scope>mlpack::rl::DuelingDQN</scope><name>concat</name></member>
      <member refid="classmlpack_1_1rl_1_1DuelingDQN_1a19f74770618d675330602748306a4147" prot="public" virt="non-virtual"><scope>mlpack::rl::DuelingDQN</scope><name>DuelingDQN</name></member>
      <member refid="classmlpack_1_1rl_1_1DuelingDQN_1a820e73dd1061693f3281ddbc20e08b16" prot="public" virt="non-virtual"><scope>mlpack::rl::DuelingDQN</scope><name>DuelingDQN</name></member>
      <member refid="classmlpack_1_1rl_1_1DuelingDQN_1acbde6caaa3601be4429d799f1f88f8a3" prot="public" virt="non-virtual"><scope>mlpack::rl::DuelingDQN</scope><name>DuelingDQN</name></member>
      <member refid="classmlpack_1_1rl_1_1DuelingDQN_1a7d21e28890605be3b558ec79037560ba" prot="public" virt="non-virtual"><scope>mlpack::rl::DuelingDQN</scope><name>DuelingDQN</name></member>
      <member refid="classmlpack_1_1rl_1_1DuelingDQN_1a82451c024f2d4d19064a8d1506480250" prot="private" virt="non-virtual"><scope>mlpack::rl::DuelingDQN</scope><name>featureNetwork</name></member>
      <member refid="classmlpack_1_1rl_1_1DuelingDQN_1a245296893ea44b3e2dd31099371080bb" prot="public" virt="non-virtual"><scope>mlpack::rl::DuelingDQN</scope><name>Forward</name></member>
      <member refid="classmlpack_1_1rl_1_1DuelingDQN_1a60757a70981fc591fc46d06a3df22678" prot="private" virt="non-virtual"><scope>mlpack::rl::DuelingDQN</scope><name>isNoisy</name></member>
      <member refid="classmlpack_1_1rl_1_1DuelingDQN_1a1134a397e61154c5bf7d2d25954035ee" prot="private" virt="non-virtual"><scope>mlpack::rl::DuelingDQN</scope><name>lossFunction</name></member>
      <member refid="classmlpack_1_1rl_1_1DuelingDQN_1a5e9104ca1235f6380ad1d10274dd1292" prot="private" virt="non-virtual"><scope>mlpack::rl::DuelingDQN</scope><name>noisyLayerIndex</name></member>
      <member refid="classmlpack_1_1rl_1_1DuelingDQN_1af7b53ec80591b8574f4ef7da536a364e" prot="public" virt="non-virtual"><scope>mlpack::rl::DuelingDQN</scope><name>operator=</name></member>
      <member refid="classmlpack_1_1rl_1_1DuelingDQN_1aa68d74dc1e86e4352e00a3cab83a0e4a" prot="public" virt="non-virtual"><scope>mlpack::rl::DuelingDQN</scope><name>Parameters</name></member>
      <member refid="classmlpack_1_1rl_1_1DuelingDQN_1a043f0ccd62e6711a18e0d81047be9a0a" prot="public" virt="non-virtual"><scope>mlpack::rl::DuelingDQN</scope><name>Parameters</name></member>
      <member refid="classmlpack_1_1rl_1_1DuelingDQN_1aefcbb9daa8a256f06abf569abc4ebd1e" prot="public" virt="non-virtual"><scope>mlpack::rl::DuelingDQN</scope><name>Predict</name></member>
      <member refid="classmlpack_1_1rl_1_1DuelingDQN_1a13df76c46bb1caaacde3c67531e52382" prot="public" virt="non-virtual"><scope>mlpack::rl::DuelingDQN</scope><name>ResetNoise</name></member>
      <member refid="classmlpack_1_1rl_1_1DuelingDQN_1a7178038c3cb8d247eadb94cd2058c432" prot="public" virt="non-virtual"><scope>mlpack::rl::DuelingDQN</scope><name>ResetParameters</name></member>
      <member refid="classmlpack_1_1rl_1_1DuelingDQN_1a3c7c773b4aa0325d83456dfa11015e98" prot="private" virt="non-virtual"><scope>mlpack::rl::DuelingDQN</scope><name>valueNetwork</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
