<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1tree_1_1Octree" kind="class" language="C++" prot="public">
    <compoundname>mlpack::tree::Octree</compoundname>
    <includes refid="octree_2octree_8hpp" local="no">octree.hpp</includes>
    <innerclass refid="classmlpack_1_1tree_1_1Octree_1_1DualTreeTraverser" prot="public">mlpack::tree::Octree::DualTreeTraverser</innerclass>
    <innerclass refid="classmlpack_1_1tree_1_1Octree_1_1SingleTreeTraverser" prot="public">mlpack::tree::Octree::SingleTreeTraverser</innerclass>
    <innerclass refid="structmlpack_1_1tree_1_1Octree_1_1SplitType" prot="private">mlpack::tree::Octree::SplitType</innerclass>
    <templateparamlist>
      <param>
        <type>typename MetricType</type>
        <defval><ref refid="namespacemlpack_1_1metric_1a0306f114fdf32dcdfa8f015408cfc37d" kindref="member">metric::EuclideanDistance</ref></defval>
      </param>
      <param>
        <type>typename StatisticType</type>
        <defval><ref refid="classmlpack_1_1tree_1_1EmptyStatistic" kindref="compound">EmptyStatistic</ref></defval>
      </param>
      <param>
        <type>typename MatType</type>
        <defval>arma::mat</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmlpack_1_1tree_1_1Octree_1a227d0c7e23e98fcd6c81ecab357a791f" prot="public" static="no">
        <type>MatType::elem_type</type>
        <definition>typedef MatType::elem_type ElemType</definition>
        <argsstring></argsstring>
        <name>ElemType</name>
        <briefdescription>
<para>The type of element held in MatType. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="31" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmlpack_1_1tree_1_1Octree_1a57758caa2e58c3fe05d1284eeabae523" prot="public" static="no">
        <type>MatType</type>
        <definition>typedef MatType Mat</definition>
        <argsstring></argsstring>
        <name>Mat</name>
        <briefdescription>
<para>So other classes can use TreeType::Mat. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="29" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1Octree_1aac83a4c2da46afd4932602be91f84961" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t begin</definition>
        <argsstring></argsstring>
        <name>begin</name>
        <briefdescription>
<para>The index of the first point in the dataset contained in this node (and its children). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="47" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1Octree_1a17503bd9e38f30432fac138d72a70638" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">bound::HRectBound</ref>&lt; MetricType &gt;</type>
        <definition>bound::HRectBound&lt;MetricType&gt; bound</definition>
        <argsstring></argsstring>
        <name>bound</name>
        <briefdescription>
<para>The minimum bounding rectangle of the points held in the node (and its children). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="53" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1Octree_1aa1c3e2822c4aee5614096ed8506dfd8d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classmlpack_1_1tree_1_1Octree" kindref="compound">Octree</ref> * &gt;</type>
        <definition>std::vector&lt;Octree*&gt; children</definition>
        <argsstring></argsstring>
        <name>children</name>
        <briefdescription>
<para>The children held by this node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="43" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1Octree_1a76d971a3c552bc58ba9f0d5fceae9806" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t count</definition>
        <argsstring></argsstring>
        <name>count</name>
        <briefdescription>
<para>The number of points of the dataset contained in this node (and its children). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="50" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1Octree_1a5a181abd72e80483265881c41c67689a" prot="private" static="no" mutable="no">
        <type>MatType *</type>
        <definition>MatType* dataset</definition>
        <argsstring></argsstring>
        <name>dataset</name>
        <briefdescription>
<para>The dataset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="55" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1Octree_1abac6d3189ea06ff1b589cbf2e736568b" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1tree_1_1Octree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType furthestDescendantDistance</definition>
        <argsstring></argsstring>
        <name>furthestDescendantDistance</name>
        <briefdescription>
<para>The distance to the furthest descendant, cached to speed things up. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="63" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1Octree_1ad069c71a7bc99c59bce1c3f859e5d22b" prot="private" static="no" mutable="no">
        <type>MetricType</type>
        <definition>MetricType metric</definition>
        <argsstring></argsstring>
        <name>metric</name>
        <briefdescription>
<para>An instantiated metric. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="65" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1Octree_1abb072382ca98b9eeef8eaf5180f8b412" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1tree_1_1Octree" kindref="compound">Octree</ref> *</type>
        <definition>Octree* parent</definition>
        <argsstring></argsstring>
        <name>parent</name>
        <briefdescription>
<para>The parent (NULL if this node is the root). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="57" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1Octree_1a110be38965cb624d9e3b4d335f962806" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1tree_1_1Octree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType parentDistance</definition>
        <argsstring></argsstring>
        <name>parentDistance</name>
        <briefdescription>
<para>The distance from the center of this node to the center of the parent. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="61" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1Octree_1a3bb6957cc0ee042b639ebc4b8b45fd37" prot="private" static="no" mutable="no">
        <type>StatisticType</type>
        <definition>StatisticType stat</definition>
        <argsstring></argsstring>
        <name>stat</name>
        <briefdescription>
<para>The statistic. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="59" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classmlpack_1_1tree_1_1Octree_1ab2f44cbb59a08132f4c843e5225bba0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class cereal::access</definition>
        <argsstring></argsstring>
        <name>cereal::access</name>
        <briefdescription>
<para>Friend access is given for the default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="413" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="413" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a940b91cf8ccc25b9c2963db5b3a66bc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Octree</definition>
        <argsstring>(const MatType &amp;data, const size_t maxLeafSize=20)</argsstring>
        <name>Octree</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>maxLeafSize</declname>
          <defval>20</defval>
        </param>
        <briefdescription>
<para>Construct this as the root node of an octree on the given dataset. </para>        </briefdescription>
        <detaileddescription>
<para>This copies the dataset. If you don&apos;t want to copy the input dataset, consider using the constructor that takes an rvalue reference and use std::move().</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Dataset to create tree from. This will be copied! </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxLeafSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of points in a leaf node. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1abe33deaeabe1ae05bb18d5af6967bdf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Octree</definition>
        <argsstring>(const MatType &amp;data, std::vector&lt; size_t &gt; &amp;oldFromNew, const size_t maxLeafSize=20)</argsstring>
        <name>Octree</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; &amp;</type>
          <declname>oldFromNew</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>maxLeafSize</declname>
          <defval>20</defval>
        </param>
        <briefdescription>
<para>Construct this as the root node of an octree on the given dataset. </para>        </briefdescription>
        <detaileddescription>
<para>This copies the dataset and modifies its ordering; a mapping of the old point indices to the new point indices is filled. If you don&apos;t want the matrix to be copied, consider using the constructor that takes an rvalue reference and use std::move().</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Dataset to create tree from. This will be copied! </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldFromNew</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector which will be filled with the old positions for each new point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxLeafSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of points in a leaf node. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a5bfa1708191f9f0bbf83ddaf7ec8db03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Octree</definition>
        <argsstring>(const MatType &amp;data, std::vector&lt; size_t &gt; &amp;oldFromNew, std::vector&lt; size_t &gt; &amp;newFromOld, const size_t maxLeafSize=20)</argsstring>
        <name>Octree</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; &amp;</type>
          <declname>oldFromNew</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; &amp;</type>
          <declname>newFromOld</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>maxLeafSize</declname>
          <defval>20</defval>
        </param>
        <briefdescription>
<para>Construct this as the root node of an octree on the given dataset. </para>        </briefdescription>
        <detaileddescription>
<para>This copies the dataset and modifies its ordering; a mapping of the old point indices to the new point indices is filled, and a mapping of the new point indices to the old point indices is filled. If you don&apos;t want the matrix to be copied, consider using the constructor that takes an rvalue reference and use std::move().</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Dataset to create tree from. This will be copied! </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldFromNew</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector which will be filled with the old positions for each new point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newFromOld</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector which will be filled with the new positions for each old point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxLeafSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of points in a leaf node. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1ab4535603bebd322fd77949e0a82f6aac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Octree</definition>
        <argsstring>(MatType &amp;&amp;data, const size_t maxLeafSize=20)</argsstring>
        <name>Octree</name>
        <param>
          <type>MatType &amp;&amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>maxLeafSize</declname>
          <defval>20</defval>
        </param>
        <briefdescription>
<para>Construct this as the root node of an octree on the given dataset. </para>        </briefdescription>
        <detaileddescription>
<para>This will take ownership of the dataset; if you don&apos;t want this, consider using the constructor that takes a const reference to the dataset.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Dataset to create tree from. This will be copied! </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxLeafSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of points in a leaf node. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1adaa3abbfb7a0fba16a089c00673dbaeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Octree</definition>
        <argsstring>(MatType &amp;&amp;data, std::vector&lt; size_t &gt; &amp;oldFromNew, const size_t maxLeafSize=20)</argsstring>
        <name>Octree</name>
        <param>
          <type>MatType &amp;&amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; &amp;</type>
          <declname>oldFromNew</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>maxLeafSize</declname>
          <defval>20</defval>
        </param>
        <briefdescription>
<para>Construct this as the root node of an octree on the given dataset. </para>        </briefdescription>
        <detaileddescription>
<para>This will take ownership of the dataset; if you don&apos;t want this, consider using the constructor that takes a const reference to the dataset. This modifies the ordering of the dataset; a mapping of the old point indices to the new point indices is filled.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Dataset to create tree from. This will be copied! </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldFromNew</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector which will be filled with the old positions for each new point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxLeafSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of points in a leaf node. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a0fdcd166bbf486173b443365d6ac8526" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Octree</definition>
        <argsstring>(MatType &amp;&amp;data, std::vector&lt; size_t &gt; &amp;oldFromNew, std::vector&lt; size_t &gt; &amp;newFromOld, const size_t maxLeafSize=20)</argsstring>
        <name>Octree</name>
        <param>
          <type>MatType &amp;&amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; &amp;</type>
          <declname>oldFromNew</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; &amp;</type>
          <declname>newFromOld</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>maxLeafSize</declname>
          <defval>20</defval>
        </param>
        <briefdescription>
<para>Construct this as the root node of an octree on the given dataset. </para>        </briefdescription>
        <detaileddescription>
<para>This will take ownership of the dataset; if you don&apos;t want this, consider using the constructor that takes a const reference to the dataset. This modifies the ordering of the dataset; a mapping of the old point indices to the new point indices is filled, and a mapping of the new point indices to the old point indices is filled.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Dataset to create tree from. This will be copied! </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldFromNew</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector which will be filled with the old positions for each new point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newFromOld</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector which will be filled with the new positions for each old point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxLeafSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of points in a leaf node. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a15aaf2ef1033ab2024b8824a5f1c3ec2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Octree</definition>
        <argsstring>(Octree *parent, const size_t begin, const size_t count, const arma::vec &amp;center, const double width, const size_t maxLeafSize=20)</argsstring>
        <name>Octree</name>
        <param>
          <type><ref refid="classmlpack_1_1tree_1_1Octree" kindref="compound">Octree</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>maxLeafSize</declname>
          <defval>20</defval>
        </param>
        <briefdescription>
<para>Construct this node as a child of the given parent, starting at column begin and using count points. </para>        </briefdescription>
        <detaileddescription>
<para>The ordering of that subset of points in the parent&apos;s data matrix will be modified! This is used for recursive tree-building by the other constructors that don&apos;t specify point indices.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent of this node. Its dataset will be modified! </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of point to start tree construction with. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points to use to construct tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para>Center of the node (for splitting). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the node in each dimension. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxLeafSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of points in a leaf node. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a90c79a81edbb7ddfe27631a96d911833" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Octree</definition>
        <argsstring>(Octree *parent, const size_t begin, const size_t count, std::vector&lt; size_t &gt; &amp;oldFromNew, const arma::vec &amp;center, const double width, const size_t maxLeafSize=20)</argsstring>
        <name>Octree</name>
        <param>
          <type><ref refid="classmlpack_1_1tree_1_1Octree" kindref="compound">Octree</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; &amp;</type>
          <declname>oldFromNew</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>maxLeafSize</declname>
          <defval>20</defval>
        </param>
        <briefdescription>
<para>Construct this node as a child of the given parent, starting at column begin and using count points. </para>        </briefdescription>
        <detaileddescription>
<para>The ordering of that subset of points in the parent&apos;s data matrix will be modified! This is used for recursive tree-building by the other constructors that don&apos;t specify point indices.</para><para>A mapping of the old point indices to the new point indices is filled, but it is expected that the vector is already allocated with size greater than or equal to (begin + count), and if that is not true, invalid memory reads (and writes) will occur.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent of this node. Its dataset will be modified! </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of point to start tree construction with. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points to use to construct tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldFromNew</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector which will be filled with the old positions for each new point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para>Center of the node (for splitting). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the node in each dimension. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxLeafSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of points in a leaf node. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1ae5e0b1d29e637654b70b15cdc99f2246" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Octree</definition>
        <argsstring>(const Octree &amp;other)</argsstring>
        <name>Octree</name>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1Octree" kindref="compound">Octree</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy the given tree. </para>        </briefdescription>
        <detaileddescription>
<para>Be careful! This may use a lot of memory.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree to copy from. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1af2708c1402a16aa0ca09398a7efe549c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Octree</definition>
        <argsstring>(Octree &amp;&amp;other)</argsstring>
        <name>Octree</name>
        <param>
          <type><ref refid="classmlpack_1_1tree_1_1Octree" kindref="compound">Octree</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Move the given tree. </para>        </briefdescription>
        <detaileddescription>
<para>The tree passed as a parameter will be emptied and will not be usable after this call.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree to move. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a4ac80bc0e3c5ca35839df7cf9756786e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Octree</definition>
        <argsstring>(Archive &amp;ar, const typename std::enable_if_t&lt; cereal::is_loading&lt; Archive &gt;()&gt; *=0)</argsstring>
        <name>Octree</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const typename <ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt; <ref refid="namespacecereal_1ad79f9b690399d7e8aad9e7fc9ef3b797" kindref="member">cereal::is_loading</ref>&lt; Archive &gt;()&gt; *</type>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Initialize the tree from a cereal archive. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ar</parametername>
</parameternamelist>
<parameterdescription>
<para>Archive to load tree from. Must be an iarchive, not an oarchive. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="243" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1ad8533c57bb339999b1386cffc4a4fe91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~Octree</definition>
        <argsstring>()</argsstring>
        <name>~Octree</name>
        <briefdescription>
<para>Destroy the tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="250" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1ad4a13f7a6c0b11ebbfc0c1bf551141d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">bound::HRectBound</ref>&lt; MetricType &gt; &amp;</type>
        <definition>const bound::HRectBound&lt;MetricType&gt;&amp; Bound</definition>
        <argsstring>() const</argsstring>
        <name>Bound</name>
        <briefdescription>
<para>Return the bound object for this node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="261" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="261" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a8a0a35d824602c0e21a8d21638cfd6ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">bound::HRectBound</ref>&lt; MetricType &gt; &amp;</type>
        <definition>bound::HRectBound&lt;MetricType&gt;&amp; Bound</definition>
        <argsstring>()</argsstring>
        <name>Bound</name>
        <briefdescription>
<para>Modify the bound object for this node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="263" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="263" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1aa800439660375c0253008cafa648da78" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Center</definition>
        <argsstring>(arma::vec &amp;center) const</argsstring>
        <name>Center</name>
        <param>
          <type>arma::vec &amp;</type>
          <declname>center</declname>
        </param>
        <briefdescription>
<para>Store the center of the bounding region in the given vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="397" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="397" bodyend="397"/>
        <references refid="classmlpack_1_1bound_1_1HRectBound_1ac519e0ecb1bbd517724a93b4b57cc399">HRectBound&lt; MetricType, ElemType &gt;::Center</references>
        <references refid="classmlpack_1_1tree_1_1Octree_1a6a0f63e3f15fc571cd678d81096f51f4">Octree&lt; MetricType, StatisticType, MatType &gt;::Octree</references>
        <references refid="classmlpack_1_1tree_1_1Octree_1a65cba07328997659bec80b9879b15a51">Octree&lt; MetricType, StatisticType, MatType &gt;::serialize</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a0668c313d2dd2b9a8d7de5095fb02680" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classmlpack_1_1tree_1_1Octree" kindref="compound">Octree</ref> &amp;</type>
        <definition>const Octree&amp; Child</definition>
        <argsstring>(const size_t child) const</argsstring>
        <name>Child</name>
        <param>
          <type>const size_t</type>
          <declname>child</declname>
        </param>
        <briefdescription>
<para>Return the specified child. </para>        </briefdescription>
        <detaileddescription>
<para>If the index is out of bounds, unspecified behavior will occur. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="340" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="340" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a6986077035a6d402c1a4b7d34467ed49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1Octree" kindref="compound">Octree</ref> &amp;</type>
        <definition>Octree&amp; Child</definition>
        <argsstring>(const size_t child)</argsstring>
        <name>Child</name>
        <param>
          <type>const size_t</type>
          <declname>child</declname>
        </param>
        <briefdescription>
<para>Return the specified child. </para>        </briefdescription>
        <detaileddescription>
<para>If the index is out of bounds, unspecified behavior will occur. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="346" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="346" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a36fdff8e6d4d68634b22458326eaaa4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1Octree" kindref="compound">Octree</ref> *&amp;</type>
        <definition>Octree*&amp; ChildPtr</definition>
        <argsstring>(const size_t child)</argsstring>
        <name>ChildPtr</name>
        <param>
          <type>const size_t</type>
          <declname>child</declname>
        </param>
        <briefdescription>
<para>Return the pointer to the given child. </para>        </briefdescription>
        <detaileddescription>
<para>This allows the child itself to be modified. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="352" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="352" bodyend="352"/>
        <references refid="classmlpack_1_1tree_1_1Octree_1aa732ea3eeb38529c549fd4d15d8655be">Octree&lt; MetricType, StatisticType, MatType &gt;::Descendant</references>
        <references refid="classmlpack_1_1tree_1_1Octree_1a164f185be46809ad05820d8b179150e6">Octree&lt; MetricType, StatisticType, MatType &gt;::MaxDistance</references>
        <references refid="classmlpack_1_1tree_1_1Octree_1a52189034235a921f63e3531ce2c5131b">Octree&lt; MetricType, StatisticType, MatType &gt;::MinDistance</references>
        <references refid="classmlpack_1_1tree_1_1Octree_1a2a85eb34222f1fc073940e8c89274e81">Octree&lt; MetricType, StatisticType, MatType &gt;::NumDescendants</references>
        <references refid="classmlpack_1_1tree_1_1Octree_1a352077c26368da0ee570c0b7f062b1e3">Octree&lt; MetricType, StatisticType, MatType &gt;::NumPoints</references>
        <references refid="classmlpack_1_1tree_1_1Octree_1a559eede5ea60f68634f8e7e72c3c68d2">Octree&lt; MetricType, StatisticType, MatType &gt;::Point</references>
        <references refid="classmlpack_1_1tree_1_1Octree_1a6ab7c54d047346131ebea90f285068b6">Octree&lt; MetricType, StatisticType, MatType &gt;::RangeDistance</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a4c3764c98d5804083a9ec2c867eb9366" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const MatType &amp;</type>
        <definition>const MatType&amp; Dataset</definition>
        <argsstring>() const</argsstring>
        <name>Dataset</name>
        <briefdescription>
<para>Return the dataset used by this node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="253" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="253" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1aa732ea3eeb38529c549fd4d15d8655be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Descendant</definition>
        <argsstring>(const size_t index) const</argsstring>
        <name>Descendant</name>
        <param>
          <type>const size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Return the index (with reference to the dataset) of a particular descendant. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="364" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1Octree_1a36fdff8e6d4d68634b22458326eaaa4c" compoundref="octree_2octree_8hpp" startline="352" endline="352">Octree&lt; MetricType, StatisticType, MatType &gt;::ChildPtr</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1adc597088eadfcfa3060336d0484ab573" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1Octree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType FurthestDescendantDistance</definition>
        <argsstring>() const</argsstring>
        <name>FurthestDescendantDistance</name>
        <briefdescription>
<para>Return the furthest possible descendant distance. </para>        </briefdescription>
        <detaileddescription>
<para>This returns the maximum distance from the centroid to the edge of the bound and not the empirical quantity which is the actual furthest descendant distance. So the actual furthest descendant distance may be less than what this method returns (but it will never be greater than this). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="324" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1Octree_1aa0f4813924e6cdee43b45050bb947abe" compoundref="octree_2octree_8hpp" startline="297" endline="297">Octree&lt; MetricType, StatisticType, MatType &gt;::IsLeaf</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1acbe82a6439f71405b5801ca7d941cbfb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1Octree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType FurthestPointDistance</definition>
        <argsstring>() const</argsstring>
        <name>FurthestPointDistance</name>
        <briefdescription>
<para>Return the furthest distance to a point held in this node. </para>        </briefdescription>
        <detaileddescription>
<para>If this is not a leaf node, then the distance is 0 because the node holds no points. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="315" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1Octree_1aa0f4813924e6cdee43b45050bb947abe" compoundref="octree_2octree_8hpp" startline="297" endline="297">Octree&lt; MetricType, StatisticType, MatType &gt;::IsLeaf</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1af7fe6fafdfef4cd49d272fdfa6aeeb7d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VecType</type>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t GetFurthestChild</definition>
        <argsstring>(const VecType &amp;point, typename std::enable_if_t&lt; IsVector&lt; VecType &gt;::value &gt; *=0) const</argsstring>
        <name>GetFurthestChild</name>
        <param>
          <type>const VecType &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>typename <ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt; <ref refid="structIsVector" kindref="compound">IsVector</ref>&lt; VecType &gt;::value &gt; *</type>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Return the index of the furthest child node to the given query point. </para>        </briefdescription>
        <detaileddescription>
<para>If this is a leaf node, it will return <ref refid="classmlpack_1_1tree_1_1Octree_1a1f7ec083be66d58a3e02e12956bf005e" kindref="member">NumChildren()</ref> (invalid index). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="290" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1Octree_1aa0f4813924e6cdee43b45050bb947abe" compoundref="octree_2octree_8hpp" startline="297" endline="297">Octree&lt; MetricType, StatisticType, MatType &gt;::IsLeaf</referencedby>
        <referencedby refid="classmlpack_1_1tree_1_1Octree_1ab7cdd810a507e4a0aa262ea0fa8a322c" compoundref="octree_2octree_8hpp" startline="274" endline="274">Octree&lt; MetricType, StatisticType, MatType &gt;::Metric</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1ab7b7b2805d543760aaea7745f978fae0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GetFurthestChild</definition>
        <argsstring>(const Octree &amp;queryNode) const</argsstring>
        <name>GetFurthestChild</name>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1Octree" kindref="compound">Octree</ref> &amp;</type>
          <declname>queryNode</declname>
        </param>
        <briefdescription>
<para>Return the index of the furthest child node to the given query node. </para>        </briefdescription>
        <detaileddescription>
<para>If it can&apos;t decide, it will return <ref refid="classmlpack_1_1tree_1_1Octree_1a1f7ec083be66d58a3e02e12956bf005e" kindref="member">NumChildren()</ref> (invalid index). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="309" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1abc9efb62f9749ab6507249a90d86361b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VecType</type>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t GetNearestChild</definition>
        <argsstring>(const VecType &amp;point, typename std::enable_if_t&lt; IsVector&lt; VecType &gt;::value &gt; *=0) const</argsstring>
        <name>GetNearestChild</name>
        <param>
          <type>const VecType &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>typename <ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt; <ref refid="structIsVector" kindref="compound">IsVector</ref>&lt; VecType &gt;::value &gt; *</type>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Return the index of the nearest child node to the given query point. </para>        </briefdescription>
        <detaileddescription>
<para>If this is a leaf node, it will return <ref refid="classmlpack_1_1tree_1_1Octree_1a1f7ec083be66d58a3e02e12956bf005e" kindref="member">NumChildren()</ref> (invalid index). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="281" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1Octree_1aa0f4813924e6cdee43b45050bb947abe" compoundref="octree_2octree_8hpp" startline="297" endline="297">Octree&lt; MetricType, StatisticType, MatType &gt;::IsLeaf</referencedby>
        <referencedby refid="classmlpack_1_1tree_1_1Octree_1ab7cdd810a507e4a0aa262ea0fa8a322c" compoundref="octree_2octree_8hpp" startline="274" endline="274">Octree&lt; MetricType, StatisticType, MatType &gt;::Metric</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1aa75fc90585345e37f400f575db912958" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GetNearestChild</definition>
        <argsstring>(const Octree &amp;queryNode) const</argsstring>
        <name>GetNearestChild</name>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1Octree" kindref="compound">Octree</ref> &amp;</type>
          <declname>queryNode</declname>
        </param>
        <briefdescription>
<para>Return the index of the nearest child node to the given query node. </para>        </briefdescription>
        <detaileddescription>
<para>If it can&apos;t decide, it will return <ref refid="classmlpack_1_1tree_1_1Octree_1a1f7ec083be66d58a3e02e12956bf005e" kindref="member">NumChildren()</ref> (invalid index). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="303" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1aa0f4813924e6cdee43b45050bb947abe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsLeaf</definition>
        <argsstring>() const</argsstring>
        <name>IsLeaf</name>
        <briefdescription>
<para>Return whether or not the node is a leaf. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="297" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="297" bodyend="297"/>
        <references refid="classmlpack_1_1tree_1_1Octree_1adc597088eadfcfa3060336d0484ab573">Octree&lt; MetricType, StatisticType, MatType &gt;::FurthestDescendantDistance</references>
        <references refid="classmlpack_1_1tree_1_1Octree_1acbe82a6439f71405b5801ca7d941cbfb">Octree&lt; MetricType, StatisticType, MatType &gt;::FurthestPointDistance</references>
        <references refid="classmlpack_1_1tree_1_1Octree_1af7fe6fafdfef4cd49d272fdfa6aeeb7d">Octree&lt; MetricType, StatisticType, MatType &gt;::GetFurthestChild</references>
        <references refid="classmlpack_1_1tree_1_1Octree_1abc9efb62f9749ab6507249a90d86361b">Octree&lt; MetricType, StatisticType, MatType &gt;::GetNearestChild</references>
        <references refid="classmlpack_1_1tree_1_1Octree_1a20a4e92da6066eb335a576b7f9cd0415">Octree&lt; MetricType, StatisticType, MatType &gt;::MinimumBoundDistance</references>
        <references refid="classmlpack_1_1tree_1_1Octree_1a1f7ec083be66d58a3e02e12956bf005e">Octree&lt; MetricType, StatisticType, MatType &gt;::NumChildren</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a164f185be46809ad05820d8b179150e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1Octree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType MaxDistance</definition>
        <argsstring>(const Octree &amp;other) const</argsstring>
        <name>MaxDistance</name>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1Octree" kindref="compound">Octree</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Return the maximum distance to another node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="376" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1Octree_1a36fdff8e6d4d68634b22458326eaaa4c" compoundref="octree_2octree_8hpp" startline="352" endline="352">Octree&lt; MetricType, StatisticType, MatType &gt;::ChildPtr</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1ae764d88483236cc470f5abe0273df4c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VecType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmlpack_1_1tree_1_1Octree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType MaxDistance</definition>
        <argsstring>(const VecType &amp;point, typename std::enable_if_t&lt; IsVector&lt; VecType &gt;::value &gt; *=0) const</argsstring>
        <name>MaxDistance</name>
        <param>
          <type>const VecType &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>typename <ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt; <ref refid="structIsVector" kindref="compound">IsVector</ref>&lt; VecType &gt;::value &gt; *</type>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Return the maximum distance to the given point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="387" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1ab7cdd810a507e4a0aa262ea0fa8a322c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>MetricType</type>
        <definition>MetricType Metric</definition>
        <argsstring>() const</argsstring>
        <name>Metric</name>
        <briefdescription>
<para>Return the metric that this tree uses. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="274" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="274" bodyend="274"/>
        <references refid="classmlpack_1_1tree_1_1Octree_1af7fe6fafdfef4cd49d272fdfa6aeeb7d">Octree&lt; MetricType, StatisticType, MatType &gt;::GetFurthestChild</references>
        <references refid="classmlpack_1_1tree_1_1Octree_1abc9efb62f9749ab6507249a90d86361b">Octree&lt; MetricType, StatisticType, MatType &gt;::GetNearestChild</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a52189034235a921f63e3531ce2c5131b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1Octree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType MinDistance</definition>
        <argsstring>(const Octree &amp;other) const</argsstring>
        <name>MinDistance</name>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1Octree" kindref="compound">Octree</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Return the minimum distance to another node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="374" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1Octree_1a36fdff8e6d4d68634b22458326eaaa4c" compoundref="octree_2octree_8hpp" startline="352" endline="352">Octree&lt; MetricType, StatisticType, MatType &gt;::ChildPtr</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a73bf99a433e88a31d98b46bf4c0da147" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VecType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classmlpack_1_1tree_1_1Octree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType MinDistance</definition>
        <argsstring>(const VecType &amp;point, typename std::enable_if_t&lt; IsVector&lt; VecType &gt;::value &gt; *=0) const</argsstring>
        <name>MinDistance</name>
        <param>
          <type>const VecType &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>typename <ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt; <ref refid="structIsVector" kindref="compound">IsVector</ref>&lt; VecType &gt;::value &gt; *</type>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Return the minimum distance to the given point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="382" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a20a4e92da6066eb335a576b7f9cd0415" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1Octree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType MinimumBoundDistance</definition>
        <argsstring>() const</argsstring>
        <name>MinimumBoundDistance</name>
        <briefdescription>
<para>Return the minimum distance from the center of the node to any bound edge. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="327" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1Octree_1aa0f4813924e6cdee43b45050bb947abe" compoundref="octree_2octree_8hpp" startline="297" endline="297">Octree&lt; MetricType, StatisticType, MatType &gt;::IsLeaf</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a1f7ec083be66d58a3e02e12956bf005e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t NumChildren</definition>
        <argsstring>() const</argsstring>
        <name>NumChildren</name>
        <briefdescription>
<para>Return the number of children in this node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="271" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1Octree_1aa0f4813924e6cdee43b45050bb947abe" compoundref="octree_2octree_8hpp" startline="297" endline="297">Octree&lt; MetricType, StatisticType, MatType &gt;::IsLeaf</referencedby>
        <referencedby refid="classmlpack_1_1tree_1_1Octree_1aac2d3c104b89109f3df4a9a8cad244da" compoundref="octree_2octree_8hpp" startline="268" endline="268">Octree&lt; MetricType, StatisticType, MatType &gt;::Stat</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a2a85eb34222f1fc073940e8c89274e81" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t NumDescendants</definition>
        <argsstring>() const</argsstring>
        <name>NumDescendants</name>
        <briefdescription>
<para>Return the number of descendants of this node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="358" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1Octree_1a36fdff8e6d4d68634b22458326eaaa4c" compoundref="octree_2octree_8hpp" startline="352" endline="352">Octree&lt; MetricType, StatisticType, MatType &gt;::ChildPtr</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a352077c26368da0ee570c0b7f062b1e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t NumPoints</definition>
        <argsstring>() const</argsstring>
        <name>NumPoints</name>
        <briefdescription>
<para>Return the number of points in this node (0 if not a leaf). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="355" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1Octree_1a36fdff8e6d4d68634b22458326eaaa4c" compoundref="octree_2octree_8hpp" startline="352" endline="352">Octree&lt; MetricType, StatisticType, MatType &gt;::ChildPtr</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a6bfe693e8d99d8e44383a696a6a0b486" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1Octree" kindref="compound">Octree</ref> &amp;</type>
        <definition>Octree&amp; operator=</definition>
        <argsstring>(const Octree &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1Octree" kindref="compound">Octree</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy the given <ref refid="classmlpack_1_1tree_1_1Octree" kindref="compound">Octree</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The tree to be copied. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="228" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a75ca498192de2da91e07b45d24a5e5b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1Octree" kindref="compound">Octree</ref> &amp;</type>
        <definition>Octree&amp; operator=</definition>
        <argsstring>(Octree &amp;&amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classmlpack_1_1tree_1_1Octree" kindref="compound">Octree</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Take ownership of the given <ref refid="classmlpack_1_1tree_1_1Octree" kindref="compound">Octree</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The tree to take ownership of. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="235" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1ac0345342726dd74a225568b2def9cdd3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1Octree" kindref="compound">Octree</ref> *</type>
        <definition>Octree* Parent</definition>
        <argsstring>() const</argsstring>
        <name>Parent</name>
        <briefdescription>
<para>Get the pointer to the parent. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="256" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="256" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a06f4d6cad44b489b665a563647840bff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1Octree" kindref="compound">Octree</ref> *&amp;</type>
        <definition>Octree*&amp; Parent</definition>
        <argsstring>()</argsstring>
        <name>Parent</name>
        <briefdescription>
<para>Modify the pointer to the parent (be careful!). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="258" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="258" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1af44ed4e7bfea088689caed082da67e17" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1Octree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType ParentDistance</definition>
        <argsstring>() const</argsstring>
        <name>ParentDistance</name>
        <briefdescription>
<para>Return the distance from the center of this node to the center of the parent node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="331" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="331" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1aa22ead21ac809efb970b90ec014dc318" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1Octree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref> &amp;</type>
        <definition>ElemType&amp; ParentDistance</definition>
        <argsstring>()</argsstring>
        <name>ParentDistance</name>
        <briefdescription>
<para>Modify the distance from the center of this node to the center of the parent node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="334" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="334" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a559eede5ea60f68634f8e7e72c3c68d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Point</definition>
        <argsstring>(const size_t index) const</argsstring>
        <name>Point</name>
        <param>
          <type>const size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Return the index (with reference to the dataset) of a particular point in this node. </para>        </briefdescription>
        <detaileddescription>
<para>If the given index is invalid (i.e. if it is greater than <ref refid="classmlpack_1_1tree_1_1Octree_1a352077c26368da0ee570c0b7f062b1e3" kindref="member">NumPoints()</ref>), the indices returned will be invalid. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="371" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1Octree_1a36fdff8e6d4d68634b22458326eaaa4c" compoundref="octree_2octree_8hpp" startline="352" endline="352">Octree&lt; MetricType, StatisticType, MatType &gt;::ChildPtr</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a6ab7c54d047346131ebea90f285068b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>math::RangeType&lt; <ref refid="classmlpack_1_1tree_1_1Octree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref> &gt;</type>
        <definition>math::RangeType&lt;ElemType&gt; RangeDistance</definition>
        <argsstring>(const Octree &amp;other) const</argsstring>
        <name>RangeDistance</name>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1Octree" kindref="compound">Octree</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Return the minimum and maximum distance to another node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="378" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1Octree_1a36fdff8e6d4d68634b22458326eaaa4c" compoundref="octree_2octree_8hpp" startline="352" endline="352">Octree&lt; MetricType, StatisticType, MatType &gt;::ChildPtr</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a60a550bf46aa1d7b858134ce41fd5a3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VecType</type>
          </param>
        </templateparamlist>
        <type>math::RangeType&lt; <ref refid="classmlpack_1_1tree_1_1Octree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref> &gt;</type>
        <definition>math::RangeType&lt;ElemType&gt; RangeDistance</definition>
        <argsstring>(const VecType &amp;point, typename std::enable_if_t&lt; IsVector&lt; VecType &gt;::value &gt; *=0) const</argsstring>
        <name>RangeDistance</name>
        <param>
          <type>const VecType &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>typename <ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt; <ref refid="structIsVector" kindref="compound">IsVector</ref>&lt; VecType &gt;::value &gt; *</type>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Return the minimum and maximum distance to another node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="392" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="401" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1Octree_1aa800439660375c0253008cafa648da78" compoundref="octree_2octree_8hpp" startline="397" endline="397">Octree&lt; MetricType, StatisticType, MatType &gt;::Center</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1ad8b29c84ac793742cd15834f9f4c4f31" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const StatisticType &amp;</type>
        <definition>const StatisticType&amp; Stat</definition>
        <argsstring>() const</argsstring>
        <name>Stat</name>
        <briefdescription>
<para>Return the statistic object for this node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="266" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="266" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1aac2d3c104b89109f3df4a9a8cad244da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>StatisticType &amp;</type>
        <definition>StatisticType&amp; Stat</definition>
        <argsstring>()</argsstring>
        <name>Stat</name>
        <briefdescription>
<para>Modify the statistic object for this node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="268" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="268" bodyend="268"/>
        <references refid="classmlpack_1_1tree_1_1Octree_1a1f7ec083be66d58a3e02e12956bf005e">Octree&lt; MetricType, StatisticType, MatType &gt;::NumChildren</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a6a0f63e3f15fc571cd678d81096f51f4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Octree</definition>
        <argsstring>()</argsstring>
        <name>Octree</name>
        <briefdescription>
<para>A default constructor. </para>        </briefdescription>
        <detaileddescription>
<para>This is meant to only be used with cereal, which is allowed with the friend declaration below. This does not return a valid treee! The method must be protected, so that the serialization shim can work with the default constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="410" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1Octree_1aa800439660375c0253008cafa648da78" compoundref="octree_2octree_8hpp" startline="397" endline="397">Octree&lt; MetricType, StatisticType, MatType &gt;::Center</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a6bdb1bdd26a7734aa61eb5ea868c0143" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SplitNode</definition>
        <argsstring>(const arma::vec &amp;center, const double width, const size_t maxLeafSize)</argsstring>
        <name>SplitNode</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>maxLeafSize</declname>
        </param>
        <briefdescription>
<para>Split the node, using the given center and the given maximum width of this node. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para>Center of the node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the current node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxLeafSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of points allowed in a leaf. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="424" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1Octree_1a9d406aa73c44e4a3453c2e8e00d1e5ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SplitNode</definition>
        <argsstring>(const arma::vec &amp;center, const double width, std::vector&lt; size_t &gt; &amp;oldFromNew, const size_t maxLeafSize)</argsstring>
        <name>SplitNode</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>width</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; &amp;</type>
          <declname>oldFromNew</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>maxLeafSize</declname>
        </param>
        <briefdescription>
<para>Split the node, using the given center and the given maximum width of this node, and fill the mappings vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>center</parametername>
</parameternamelist>
<parameterdescription>
<para>Center of the node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the current node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldFromNew</parametername>
</parameternamelist>
<parameterdescription>
<para>Mappings from old to new. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxLeafSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of points allowed in a leaf. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="437" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" line="26" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp" bodystart="25" bodyend="464"/>
    <listofallmembers>
      <member refid="classmlpack_1_1tree_1_1Octree_1aac83a4c2da46afd4932602be91f84961" prot="private" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>begin</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1ad4a13f7a6c0b11ebbfc0c1bf551141d1" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Bound</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a8a0a35d824602c0e21a8d21638cfd6ad" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Bound</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a17503bd9e38f30432fac138d72a70638" prot="private" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>bound</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1aa800439660375c0253008cafa648da78" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Center</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a0668c313d2dd2b9a8d7de5095fb02680" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Child</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a6986077035a6d402c1a4b7d34467ed49" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Child</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a36fdff8e6d4d68634b22458326eaaa4c" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>ChildPtr</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1aa1c3e2822c4aee5614096ed8506dfd8d" prot="private" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>children</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a76d971a3c552bc58ba9f0d5fceae9806" prot="private" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>count</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a4c3764c98d5804083a9ec2c867eb9366" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Dataset</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a5a181abd72e80483265881c41c67689a" prot="private" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>dataset</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1aa732ea3eeb38529c549fd4d15d8655be" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Descendant</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a227d0c7e23e98fcd6c81ecab357a791f" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>ElemType</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1abac6d3189ea06ff1b589cbf2e736568b" prot="private" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>furthestDescendantDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1adc597088eadfcfa3060336d0484ab573" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>FurthestDescendantDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1acbe82a6439f71405b5801ca7d941cbfb" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>FurthestPointDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1af7fe6fafdfef4cd49d272fdfa6aeeb7d" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>GetFurthestChild</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1ab7b7b2805d543760aaea7745f978fae0" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>GetFurthestChild</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1abc9efb62f9749ab6507249a90d86361b" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>GetNearestChild</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1aa75fc90585345e37f400f575db912958" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>GetNearestChild</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1aa0f4813924e6cdee43b45050bb947abe" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>IsLeaf</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a57758caa2e58c3fe05d1284eeabae523" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Mat</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a164f185be46809ad05820d8b179150e6" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>MaxDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1ae764d88483236cc470f5abe0273df4c5" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>MaxDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1ab7cdd810a507e4a0aa262ea0fa8a322c" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Metric</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1ad069c71a7bc99c59bce1c3f859e5d22b" prot="private" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>metric</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a52189034235a921f63e3531ce2c5131b" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>MinDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a73bf99a433e88a31d98b46bf4c0da147" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>MinDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a20a4e92da6066eb335a576b7f9cd0415" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>MinimumBoundDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a1f7ec083be66d58a3e02e12956bf005e" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>NumChildren</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a2a85eb34222f1fc073940e8c89274e81" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>NumDescendants</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a352077c26368da0ee570c0b7f062b1e3" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>NumPoints</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a940b91cf8ccc25b9c2963db5b3a66bc9" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Octree</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1abe33deaeabe1ae05bb18d5af6967bdf0" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Octree</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a5bfa1708191f9f0bbf83ddaf7ec8db03" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Octree</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1ab4535603bebd322fd77949e0a82f6aac" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Octree</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1adaa3abbfb7a0fba16a089c00673dbaeb" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Octree</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a0fdcd166bbf486173b443365d6ac8526" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Octree</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a15aaf2ef1033ab2024b8824a5f1c3ec2" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Octree</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a90c79a81edbb7ddfe27631a96d911833" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Octree</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1ae5e0b1d29e637654b70b15cdc99f2246" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Octree</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1af2708c1402a16aa0ca09398a7efe549c" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Octree</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a4ac80bc0e3c5ca35839df7cf9756786e" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Octree</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a6a0f63e3f15fc571cd678d81096f51f4" prot="protected" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Octree</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a6bfe693e8d99d8e44383a696a6a0b486" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>operator=</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a75ca498192de2da91e07b45d24a5e5b5" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>operator=</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1ac0345342726dd74a225568b2def9cdd3" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Parent</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a06f4d6cad44b489b665a563647840bff" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Parent</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1abb072382ca98b9eeef8eaf5180f8b412" prot="private" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>parent</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a110be38965cb624d9e3b4d335f962806" prot="private" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>parentDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1af44ed4e7bfea088689caed082da67e17" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>ParentDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1aa22ead21ac809efb970b90ec014dc318" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>ParentDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a559eede5ea60f68634f8e7e72c3c68d2" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Point</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a6ab7c54d047346131ebea90f285068b6" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>RangeDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a60a550bf46aa1d7b858134ce41fd5a3a" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>RangeDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a6bdb1bdd26a7734aa61eb5ea868c0143" prot="private" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>SplitNode</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a9d406aa73c44e4a3453c2e8e00d1e5ad" prot="private" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>SplitNode</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1a3bb6957cc0ee042b639ebc4b8b45fd37" prot="private" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>stat</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1ad8b29c84ac793742cd15834f9f4c4f31" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Stat</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1aac2d3c104b89109f3df4a9a8cad244da" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>Stat</name></member>
      <member refid="classmlpack_1_1tree_1_1Octree_1ad8533c57bb339999b1386cffc4a4fe91" prot="public" virt="non-virtual"><scope>mlpack::tree::Octree</scope><name>~Octree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
