<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="average__init_8hpp" kind="file" language="C++">
    <compoundname>average_init.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <incdepgraph>
      <node id="22937">
        <label>list</label>
      </node>
      <node id="22934">
        <label>atomic</label>
      </node>
      <node id="22924">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="22900">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="22936">
        <label>iomanip</label>
      </node>
      <node id="22909">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="22910" relation="include">
        </childnode>
        <childnode refid="22912" relation="include">
        </childnode>
      </node>
      <node id="22892">
        <label>cstdint</label>
      </node>
      <node id="22901">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="22908">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="22931">
        <label>arma_config.hpp</label>
      </node>
      <node id="22921">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="22888">
        <label>cmath</label>
      </node>
      <node id="22907">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="22896">
        <label>stdexcept</label>
      </node>
      <node id="22916">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="22901" relation="include">
        </childnode>
        <childnode refid="22903" relation="include">
        </childnode>
        <childnode refid="22904" relation="include">
        </childnode>
        <childnode refid="22902" relation="include">
        </childnode>
      </node>
      <node id="22886">
        <label>/home/aakash/mlpack/src/mlpack/methods/amf/init_rules/average_init.hpp</label>
        <link refid="average__init_8hpp"/>
        <childnode refid="22887" relation="include">
        </childnode>
      </node>
      <node id="22940">
        <label>string</label>
      </node>
      <node id="22928">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="22929" relation="include">
        </childnode>
        <childnode refid="22895" relation="include">
        </childnode>
      </node>
      <node id="22938">
        <label>map</label>
      </node>
      <node id="22890">
        <label>cfloat</label>
      </node>
      <node id="22920">
        <label>boost/variant.hpp</label>
      </node>
      <node id="22942">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="22904">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="22927">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="22928" relation="include">
        </childnode>
        <childnode refid="22904" relation="include">
        </childnode>
        <childnode refid="22911" relation="include">
        </childnode>
        <childnode refid="22929" relation="include">
        </childnode>
      </node>
      <node id="22917">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="22915">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="22901" relation="include">
        </childnode>
        <childnode refid="22903" relation="include">
        </childnode>
        <childnode refid="22904" relation="include">
        </childnode>
        <childnode refid="22902" relation="include">
        </childnode>
      </node>
      <node id="22918">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="22901" relation="include">
        </childnode>
        <childnode refid="22903" relation="include">
        </childnode>
        <childnode refid="22904" relation="include">
        </childnode>
        <childnode refid="22902" relation="include">
        </childnode>
      </node>
      <node id="22906">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="22926">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="22902" relation="include">
        </childnode>
        <childnode refid="22903" relation="include">
        </childnode>
        <childnode refid="22904" relation="include">
        </childnode>
        <childnode refid="22914" relation="include">
        </childnode>
        <childnode refid="22923" relation="include">
        </childnode>
      </node>
      <node id="22930">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="22931" relation="include">
        </childnode>
      </node>
      <node id="22932">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="22887">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="22888" relation="include">
        </childnode>
        <childnode refid="22889" relation="include">
        </childnode>
        <childnode refid="22890" relation="include">
        </childnode>
        <childnode refid="22891" relation="include">
        </childnode>
        <childnode refid="22892" relation="include">
        </childnode>
        <childnode refid="22893" relation="include">
        </childnode>
        <childnode refid="22894" relation="include">
        </childnode>
        <childnode refid="22895" relation="include">
        </childnode>
        <childnode refid="22896" relation="include">
        </childnode>
        <childnode refid="22897" relation="include">
        </childnode>
        <childnode refid="22898" relation="include">
        </childnode>
        <childnode refid="22899" relation="include">
        </childnode>
        <childnode refid="22900" relation="include">
        </childnode>
        <childnode refid="22901" relation="include">
        </childnode>
        <childnode refid="22902" relation="include">
        </childnode>
        <childnode refid="22903" relation="include">
        </childnode>
        <childnode refid="22904" relation="include">
        </childnode>
        <childnode refid="22905" relation="include">
        </childnode>
        <childnode refid="22906" relation="include">
        </childnode>
        <childnode refid="22907" relation="include">
        </childnode>
        <childnode refid="22908" relation="include">
        </childnode>
        <childnode refid="22909" relation="include">
        </childnode>
        <childnode refid="22913" relation="include">
        </childnode>
        <childnode refid="22914" relation="include">
        </childnode>
        <childnode refid="22915" relation="include">
        </childnode>
        <childnode refid="22916" relation="include">
        </childnode>
        <childnode refid="22917" relation="include">
        </childnode>
        <childnode refid="22918" relation="include">
        </childnode>
        <childnode refid="22919" relation="include">
        </childnode>
        <childnode refid="22925" relation="include">
        </childnode>
        <childnode refid="22926" relation="include">
        </childnode>
        <childnode refid="22923" relation="include">
        </childnode>
        <childnode refid="22927" relation="include">
        </childnode>
        <childnode refid="22930" relation="include">
        </childnode>
        <childnode refid="22932" relation="include">
        </childnode>
        <childnode refid="22933" relation="include">
        </childnode>
        <childnode refid="22942" relation="include">
        </childnode>
        <childnode refid="22943" relation="include">
        </childnode>
      </node>
      <node id="22893">
        <label>cstdio</label>
      </node>
      <node id="22897">
        <label>tuple</label>
      </node>
      <node id="22902">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="22919">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="22902" relation="include">
        </childnode>
        <childnode refid="22903" relation="include">
        </childnode>
        <childnode refid="22904" relation="include">
        </childnode>
        <childnode refid="22906" relation="include">
        </childnode>
        <childnode refid="22920" relation="include">
        </childnode>
        <childnode refid="22921" relation="include">
        </childnode>
        <childnode refid="22922" relation="include">
        </childnode>
        <childnode refid="22923" relation="include">
        </childnode>
      </node>
      <node id="22898">
        <label>utility</label>
      </node>
      <node id="22922">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="22913">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="22910">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="22911" relation="include">
        </childnode>
      </node>
      <node id="22933">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="22934" relation="include">
        </childnode>
        <childnode refid="22935" relation="include">
        </childnode>
        <childnode refid="22936" relation="include">
        </childnode>
        <childnode refid="22937" relation="include">
        </childnode>
        <childnode refid="22938" relation="include">
        </childnode>
        <childnode refid="22939" relation="include">
        </childnode>
        <childnode refid="22940" relation="include">
        </childnode>
        <childnode refid="22941" relation="include">
        </childnode>
      </node>
      <node id="22911">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="22925">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="22923" relation="include">
        </childnode>
        <childnode refid="22919" relation="include">
        </childnode>
        <childnode refid="22926" relation="include">
        </childnode>
      </node>
      <node id="22894">
        <label>cstdlib</label>
      </node>
      <node id="22889">
        <label>cctype</label>
      </node>
      <node id="22912">
        <label>unordered_map</label>
      </node>
      <node id="22891">
        <label>climits</label>
      </node>
      <node id="22939">
        <label>mutex</label>
      </node>
      <node id="22935">
        <label>chrono</label>
      </node>
      <node id="22943">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="22941">
        <label>thread</label>
      </node>
      <node id="22929">
        <label>type_traits</label>
      </node>
      <node id="22905">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="22899">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="22923">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="22901" relation="include">
        </childnode>
        <childnode refid="22902" relation="include">
        </childnode>
        <childnode refid="22903" relation="include">
        </childnode>
        <childnode refid="22904" relation="include">
        </childnode>
        <childnode refid="22924" relation="include">
        </childnode>
      </node>
      <node id="22895">
        <label>cstring</label>
      </node>
      <node id="22914">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="22903">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1amf_1_1AverageInitialization" prot="public">mlpack::amf::AverageInitialization</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1amf">mlpack::amf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Sumedh Ghaisas</para></simplesect>
Initialization rule for Alternating Matrix Factorization.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_AMF_AVERAGE_INIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_AMF_AVERAGE_INIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">amf<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classmlpack_1_1amf_1_1AverageInitialization" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1amf_1_1AverageInitialization" kindref="compound">AverageInitialization</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>constructor<sp/>required<sp/>for<sp/>the<sp/>InitializeRule<sp/>template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classmlpack_1_1amf_1_1AverageInitialization_1a202e4b31ec0c19e8d2980b08b099ba6a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1amf_1_1AverageInitialization_1a202e4b31ec0c19e8d2980b08b099ba6a" kindref="member">AverageInitialization</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="43" refid="classmlpack_1_1amf_1_1AverageInitialization_1a02a3610958f42b7dbef8bd5063ceaee7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1AverageInitialization_1a02a3610958f42b7dbef8bd5063ceaee7" kindref="member">Initialize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>V,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>W,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>H)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>V.n_rows;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>V.n_cols;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>avgV<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min<sp/>=<sp/>DBL_MAX;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>all<sp/>elements<sp/>in<sp/>the<sp/>matrix<sp/>(for<sp/>sparse<sp/>matrices,<sp/>this<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterates<sp/>over<sp/>nonzeros).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType::const_row_col_iterator<sp/>it<sp/>=<sp/>V.begin();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>V.end();<sp/>++it)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>avgV<sp/>+=<sp/>*it;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Track<sp/>the<sp/>minimum<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*it<sp/>&lt;<sp/>min)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>avgV<sp/>=<sp/>sqrt(((avgV<sp/>/<sp/>(n<sp/>*<sp/>m))<sp/>-<sp/>min)<sp/>/<sp/>r);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>to<sp/>random<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>W.randu(n,<sp/>r);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>H.randu(r,<sp/>m);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>W<sp/>+=<sp/>avgV;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>H<sp/>+=<sp/>+<sp/>avgV;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="86" refid="classmlpack_1_1amf_1_1AverageInitialization_1ac92b923632083ddeab1be9d2a33fb1af" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1AverageInitialization_1ac92b923632083ddeab1be9d2a33fb1af" kindref="member">InitializeOne</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>V,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>M,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>whichMatrix<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>V.n_rows;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>V.n_cols;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>avgV<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min<sp/>=<sp/>DBL_MAX;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>all<sp/>elements<sp/>in<sp/>the<sp/>matrix<sp/>(for<sp/>sparse<sp/>matrices,<sp/>this<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterates<sp/>over<sp/>nonzeros).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType::const_row_col_iterator<sp/>it<sp/>=<sp/>V.begin();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/>V.end();<sp/>++it)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>avgV<sp/>+=<sp/>*it;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Track<sp/>the<sp/>minimum<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*it<sp/>&lt;<sp/>min)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(whichMatrix)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>W<sp/>to<sp/>random<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>M.randu(n,<sp/>r);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>H<sp/>to<sp/>random<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>M.randu(r,<sp/>m);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>M<sp/>+=<sp/>sqrt(((avgV<sp/>/<sp/>(n<sp/>*<sp/>m))<sp/>-<sp/>min)<sp/>/<sp/>r);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="122" refid="classmlpack_1_1amf_1_1AverageInitialization_1aa2ccb5a0533a6ba0abe6dfc1f98fbafb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1AverageInitialization_1aa2ccb5a0533a6ba0abe6dfc1f98fbafb" kindref="member">serialize</ref>(Archive&amp;<sp/></highlight><highlight class="comment">/*<sp/>ar<sp/>*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal">};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>amf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/amf/init_rules/average_init.hpp"/>
  </compounddef>
</doxygen>
