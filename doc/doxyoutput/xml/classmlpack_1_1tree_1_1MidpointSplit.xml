<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1tree_1_1MidpointSplit" kind="class" language="C++" prot="public">
    <compoundname>mlpack::tree::MidpointSplit</compoundname>
    <includes refid="midpoint__split_8hpp" local="no">midpoint_split.hpp</includes>
    <innerclass refid="structmlpack_1_1tree_1_1MidpointSplit_1_1SplitInfo" prot="public">mlpack::tree::MidpointSplit::SplitInfo</innerclass>
    <templateparamlist>
      <param>
        <type>typename BoundType</type>
      </param>
      <param>
        <type>typename MatType</type>
        <defval>arma::mat</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1MidpointSplit_1af0fc61f469596cb8796d1966564ecbcb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VecType</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool AssignToLeftNode</definition>
        <argsstring>(const VecType &amp;point, const SplitInfo &amp;splitInfo)</argsstring>
        <name>AssignToLeftNode</name>
        <param>
          <type>const VecType &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const <ref refid="structmlpack_1_1tree_1_1MidpointSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref> &amp;</type>
          <declname>splitInfo</declname>
        </param>
        <briefdescription>
<para>Indicates that a point should be assigned to the left subtree. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>The point that is being assigned. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>splitInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>An information about the split. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/midpoint_split.hpp" line="113" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/midpoint_split.hpp" bodystart="113" bodyend="117"/>
        <references refid="structmlpack_1_1tree_1_1MidpointSplit_1_1SplitInfo_1a351b01278d3022d478536e0a84a1808e" compoundref="midpoint__split_8hpp" startline="37">MidpointSplit&lt; BoundType, MatType &gt;::SplitInfo::splitDimension</references>
        <references refid="structmlpack_1_1tree_1_1MidpointSplit_1_1SplitInfo_1a414b35a0916562712a643bf4aa7904dd" compoundref="midpoint__split_8hpp" startline="39">MidpointSplit&lt; BoundType, MatType &gt;::SplitInfo::splitVal</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1MidpointSplit_1aace8240352cb3ea61c975987b91a80a6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t PerformSplit</definition>
        <argsstring>(MatType &amp;data, const size_t begin, const size_t count, const SplitInfo &amp;splitInfo)</argsstring>
        <name>PerformSplit</name>
        <param>
          <type>MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const <ref refid="structmlpack_1_1tree_1_1MidpointSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref> &amp;</type>
          <declname>splitInfo</declname>
        </param>
        <briefdescription>
<para>Perform the split process according to the information about the split. </para>        </briefdescription>
        <detaileddescription>
<para>This will order the dataset such that points that belong to the left subtree are on the left of the split column, and points from the right subtree are on the right side of the split column.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The dataset used by the binary space tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the starting point in the dataset that belongs to this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points in this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>splitInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>The information about the split. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/midpoint_split.hpp" line="72" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/midpoint_split.hpp" bodystart="72" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1MidpointSplit_1af99e13e8418a8bb6b602435fbd7e4e64" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t PerformSplit</definition>
        <argsstring>(MatType &amp;data, const size_t begin, const size_t count, const SplitInfo &amp;splitInfo, std::vector&lt; size_t &gt; &amp;oldFromNew)</argsstring>
        <name>PerformSplit</name>
        <param>
          <type>MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const <ref refid="structmlpack_1_1tree_1_1MidpointSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref> &amp;</type>
          <declname>splitInfo</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; &amp;</type>
          <declname>oldFromNew</declname>
        </param>
        <briefdescription>
<para>Perform the split process according to the information about the split and return the list of changed indices. </para>        </briefdescription>
        <detaileddescription>
<para>This will order the dataset such that points that belong to the left subtree are on the left of the split column, and points from the right subtree are on the right side of the split column.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The dataset used by the binary space tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the starting point in the dataset that belongs to this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points in this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>splitInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>The information about the split. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldFromNew</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector which will be filled with the old positions for each new point. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/midpoint_split.hpp" line="96" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/midpoint_split.hpp" bodystart="96" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1MidpointSplit_1ae326f86e681c01ed2fd5d3d12123e7bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SplitNode</definition>
        <argsstring>(const BoundType &amp;bound, MatType &amp;data, const size_t begin, const size_t count, SplitInfo &amp;splitInfo)</argsstring>
        <name>SplitNode</name>
        <param>
          <type>const BoundType &amp;</type>
          <declname>bound</declname>
        </param>
        <param>
          <type>MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="structmlpack_1_1tree_1_1MidpointSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref> &amp;</type>
          <declname>splitInfo</declname>
        </param>
        <briefdescription>
<para>Find the partition of the node. </para>        </briefdescription>
        <detaileddescription>
<para>This method fills up the dimension that will be used to split the node and the value according which the split will be performed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bound</parametername>
</parameternamelist>
<parameterdescription>
<para>The bound used for this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The dataset used by the binary space tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the starting point in the dataset that belongs to this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points in this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>splitInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>An information about the split. This information contains the dimension and the value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/midpoint_split.hpp" line="54" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A binary space partitioning tree node is split into its left and right child. </para>    </briefdescription>
    <detaileddescription>
<para>The split is done in the dimension that has the maximum width. The points are divided into two parts based on the midpoint in this dimension. </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/midpoint_split.hpp" line="31" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/midpoint_split.hpp" bodystart="30" bodyend="118"/>
    <listofallmembers>
      <member refid="classmlpack_1_1tree_1_1MidpointSplit_1af0fc61f469596cb8796d1966564ecbcb" prot="public" virt="non-virtual"><scope>mlpack::tree::MidpointSplit</scope><name>AssignToLeftNode</name></member>
      <member refid="classmlpack_1_1tree_1_1MidpointSplit_1aace8240352cb3ea61c975987b91a80a6" prot="public" virt="non-virtual"><scope>mlpack::tree::MidpointSplit</scope><name>PerformSplit</name></member>
      <member refid="classmlpack_1_1tree_1_1MidpointSplit_1af99e13e8418a8bb6b602435fbd7e4e64" prot="public" virt="non-virtual"><scope>mlpack::tree::MidpointSplit</scope><name>PerformSplit</name></member>
      <member refid="classmlpack_1_1tree_1_1MidpointSplit_1ae326f86e681c01ed2fd5d3d12123e7bd" prot="public" virt="non-virtual"><scope>mlpack::tree::MidpointSplit</scope><name>SplitNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
