<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1tree_1_1RPlusTreeSplit" kind="class" language="C++" prot="public">
    <compoundname>mlpack::tree::RPlusTreeSplit</compoundname>
    <includes refid="r__plus__tree__split_8hpp" local="no">r_plus_tree_split.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename SplitPolicyType</type>
      </param>
      <param>
        <type>template&lt; typename &gt; class</type>
        <declname>SweepType</declname>
        <defname>SweepType</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmlpack_1_1tree_1_1RPlusTreeSplit_1a0b150bc0b3a177f0ca7f3c4ce2d551f9" prot="public" static="no">
        <type>SplitPolicyType</type>
        <definition>typedef SplitPolicyType SplitPolicy</definition>
        <argsstring></argsstring>
        <name>SplitPolicy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/r_plus_tree_split.hpp" line="35" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/r_plus_tree_split.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1RPlusTreeSplit_1af73652d9536a1715364bbb0e4a9ba04e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TreeType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void SplitLeafNode</definition>
        <argsstring>(TreeType *tree, std::vector&lt; bool &gt; &amp;relevels)</argsstring>
        <name>SplitLeafNode</name>
        <param>
          <type>TreeType *</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>std::vector&lt; bool &gt; &amp;</type>
          <declname>relevels</declname>
        </param>
        <briefdescription>
<para>Split a leaf node using the &quot;default&quot; algorithm. </para>        </briefdescription>
        <detaileddescription>
<para>If necessary, this split will propagate upwards through the tree. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>The node that is being split. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>relevels</parametername>
</parameternamelist>
<parameterdescription>
<para>Not used. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/r_plus_tree_split.hpp" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1RPlusTreeSplit_1a73ff1eaa94449d763847fff1f537922f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TreeType</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool SplitNonLeafNode</definition>
        <argsstring>(TreeType *tree, std::vector&lt; bool &gt; &amp;relevels)</argsstring>
        <name>SplitNonLeafNode</name>
        <param>
          <type>TreeType *</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>std::vector&lt; bool &gt; &amp;</type>
          <declname>relevels</declname>
        </param>
        <briefdescription>
<para>Split a non-leaf node using the &quot;default&quot; algorithm. </para>        </briefdescription>
        <detaileddescription>
<para>If this is a root node, the tree increases in depth. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>The node that is being split. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>relevels</parametername>
</parameternamelist>
<parameterdescription>
<para>Not used. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/r_plus_tree_split.hpp" line="52" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1RPlusTreeSplit_1a018e689347f2265a4c2038dea5521b86" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TreeType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void AddFakeNodes</definition>
        <argsstring>(const TreeType *tree, TreeType *emptyTree)</argsstring>
        <name>AddFakeNodes</name>
        <param>
          <type>const TreeType *</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>TreeType *</type>
          <declname>emptyTree</declname>
        </param>
        <briefdescription>
<para>This method is used to make sure that the tree has equivalent maximum depth in every branch. </para>        </briefdescription>
        <detaileddescription>
<para>The method should be invoked if one of two resulting subtrees is empty after the split process (i.e. the subtree contains no children). The method convert the empty node into an empty subtree (increase the node in depth).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>One of two subtrees that is not empty. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>emptyTree</parametername>
</parameternamelist>
<parameterdescription>
<para>The empty subtree. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/r_plus_tree_split.hpp" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1RPlusTreeSplit_1ad6cd53f562619e04c67c12c67e26a199" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TreeType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void InsertNodeIntoTree</definition>
        <argsstring>(TreeType *destTree, TreeType *srcNode)</argsstring>
        <name>InsertNodeIntoTree</name>
        <param>
          <type>TreeType *</type>
          <declname>destTree</declname>
        </param>
        <param>
          <type>TreeType *</type>
          <declname>srcNode</declname>
        </param>
        <briefdescription>
<para>Insert a node into another node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/r_plus_tree_split.hpp" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1RPlusTreeSplit_1a31100a61d22d9576e18da8b60cf66538" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TreeType</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool PartitionNode</definition>
        <argsstring>(const TreeType *node, size_t &amp;minCutAxis, typename TreeType::ElemType &amp;minCut)</argsstring>
        <name>PartitionNode</name>
        <param>
          <type>const TreeType *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>minCutAxis</declname>
        </param>
        <param>
          <type>typename TreeType::ElemType &amp;</type>
          <declname>minCut</declname>
        </param>
        <briefdescription>
<para>Partition a node using SweepType. </para>        </briefdescription>
        <detaileddescription>
<para>This method invokes SweepType::Sweep(Non)LeafNode() for each dimension and chooses the best one. The method returns false if the node needn&apos;t partitioning. Overwise, the method returns true. If the method failed in finding an acceptable partition, the minCutAxis will be equal to the number of dimensions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node that is being split. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minCutAxis</parametername>
</parameternamelist>
<parameterdescription>
<para>The axis along which the node will be split. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>minCut</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinate at which the node will be split. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/r_plus_tree_split.hpp" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1RPlusTreeSplit_1a22056f9c1d8eb28ecf3d14cdb0eb9181" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TreeType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void SplitLeafNodeAlongPartition</definition>
        <argsstring>(TreeType *tree, TreeType *treeOne, TreeType *treeTwo, const size_t cutAxis, const typename TreeType::ElemType cut)</argsstring>
        <name>SplitLeafNodeAlongPartition</name>
        <param>
          <type>TreeType *</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>TreeType *</type>
          <declname>treeOne</declname>
        </param>
        <param>
          <type>TreeType *</type>
          <declname>treeTwo</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>cutAxis</declname>
        </param>
        <param>
          <type>const typename TreeType::ElemType</type>
          <declname>cut</declname>
        </param>
        <briefdescription>
<para>Split a leaf node along an axis. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>The node that is being split into two new nodes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>treeOne</parametername>
</parameternamelist>
<parameterdescription>
<para>The first subtree of two resulting subtrees. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>treeOne</parametername>
</parameternamelist>
<parameterdescription>
<para>The second subtree of two resulting subtrees. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cutAxis</parametername>
</parameternamelist>
<parameterdescription>
<para>The axis along which the node is being split. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cut</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinate at which the node is being split. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/r_plus_tree_split.hpp" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1RPlusTreeSplit_1a4d644f20945e8bfcd174a61ffe39bcdb" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TreeType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void SplitNonLeafNodeAlongPartition</definition>
        <argsstring>(TreeType *tree, TreeType *treeOne, TreeType *treeTwo, const size_t cutAxis, const typename TreeType::ElemType cut)</argsstring>
        <name>SplitNonLeafNodeAlongPartition</name>
        <param>
          <type>TreeType *</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>TreeType *</type>
          <declname>treeOne</declname>
        </param>
        <param>
          <type>TreeType *</type>
          <declname>treeTwo</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>cutAxis</declname>
        </param>
        <param>
          <type>const typename TreeType::ElemType</type>
          <declname>cut</declname>
        </param>
        <briefdescription>
<para>Split a non-leaf node along an axis. </para>        </briefdescription>
        <detaileddescription>
<para>This method propagates the split downward up to a leaf node if necessary.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>The node that is being split into two new nodes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>treeOne</parametername>
</parameternamelist>
<parameterdescription>
<para>The first subtree of two resulting subtrees. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>treeOne</parametername>
</parameternamelist>
<parameterdescription>
<para>The second subtree of two resulting subtrees. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cutAxis</parametername>
</parameternamelist>
<parameterdescription>
<para>The axis along which the node is being split. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cut</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinate at which the node is being split. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/r_plus_tree_split.hpp" line="83" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classmlpack_1_1tree_1_1RPlusTreeSplit" kindref="compound">RPlusTreeSplit</ref> class performs the split process of a node on overflow. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>SplitPolicyType</parametername>
</parameternamelist>
<parameterdescription>
<para>The class that helps to determine the subtree into which we should insert a child node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SweepType</parametername>
</parameternamelist>
<parameterdescription>
<para>The class that finds the partition of a node along a given axis. The partition algorithm tries to find a partition along each axis, evaluates each partition and chooses the best one. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/r_plus_tree_split.hpp" line="33" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/r_plus_tree_split.hpp" bodystart="32" bodyend="126"/>
    <listofallmembers>
      <member refid="classmlpack_1_1tree_1_1RPlusTreeSplit_1a018e689347f2265a4c2038dea5521b86" prot="private" virt="non-virtual"><scope>mlpack::tree::RPlusTreeSplit</scope><name>AddFakeNodes</name></member>
      <member refid="classmlpack_1_1tree_1_1RPlusTreeSplit_1ad6cd53f562619e04c67c12c67e26a199" prot="private" virt="non-virtual"><scope>mlpack::tree::RPlusTreeSplit</scope><name>InsertNodeIntoTree</name></member>
      <member refid="classmlpack_1_1tree_1_1RPlusTreeSplit_1a31100a61d22d9576e18da8b60cf66538" prot="private" virt="non-virtual"><scope>mlpack::tree::RPlusTreeSplit</scope><name>PartitionNode</name></member>
      <member refid="classmlpack_1_1tree_1_1RPlusTreeSplit_1af73652d9536a1715364bbb0e4a9ba04e" prot="public" virt="non-virtual"><scope>mlpack::tree::RPlusTreeSplit</scope><name>SplitLeafNode</name></member>
      <member refid="classmlpack_1_1tree_1_1RPlusTreeSplit_1a22056f9c1d8eb28ecf3d14cdb0eb9181" prot="private" virt="non-virtual"><scope>mlpack::tree::RPlusTreeSplit</scope><name>SplitLeafNodeAlongPartition</name></member>
      <member refid="classmlpack_1_1tree_1_1RPlusTreeSplit_1a73ff1eaa94449d763847fff1f537922f" prot="public" virt="non-virtual"><scope>mlpack::tree::RPlusTreeSplit</scope><name>SplitNonLeafNode</name></member>
      <member refid="classmlpack_1_1tree_1_1RPlusTreeSplit_1a4d644f20945e8bfcd174a61ffe39bcdb" prot="private" virt="non-virtual"><scope>mlpack::tree::RPlusTreeSplit</scope><name>SplitNonLeafNodeAlongPartition</name></member>
      <member refid="classmlpack_1_1tree_1_1RPlusTreeSplit_1a0b150bc0b3a177f0ca7f3c4ce2d551f9" prot="public" virt="non-virtual"><scope>mlpack::tree::RPlusTreeSplit</scope><name>SplitPolicy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
