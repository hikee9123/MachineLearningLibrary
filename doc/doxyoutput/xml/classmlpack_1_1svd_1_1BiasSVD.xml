<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1svd_1_1BiasSVD" kind="class" language="C++" prot="public">
    <compoundname>mlpack::svd::BiasSVD</compoundname>
    <includes refid="bias__svd_8hpp" local="no">bias_svd.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>OptimizerType</declname>
        <defname>OptimizerType</defname>
        <defval>ens::StandardSGD</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1svd_1_1BiasSVD_1a20f4c4490bc8ecbdd1ffcb79acce6035" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double alpha</definition>
        <argsstring></argsstring>
        <name>alpha</name>
        <briefdescription>
<para>Learning rate for the SGD optimizer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp" line="93" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1svd_1_1BiasSVD_1a8c30486c22f07ec9373b0b3992994d58" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t iterations</definition>
        <argsstring></argsstring>
        <name>iterations</name>
        <briefdescription>
<para>Number of optimization iterations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp" line="91" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1svd_1_1BiasSVD_1a3db359547eed8cfd48ca821d95f577af" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double lambda</definition>
        <argsstring></argsstring>
        <name>lambda</name>
        <briefdescription>
<para>Regularization parameter for the optimization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp" line="95" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1svd_1_1BiasSVD_1a217884b3b86ec1fa9148eac852165945" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BiasSVD</definition>
        <argsstring>(const size_t iterations=10, const double alpha=0.02, const double lambda=0.05)</argsstring>
        <name>BiasSVD</name>
        <param>
          <type>const size_t</type>
          <declname>iterations</declname>
          <defval>10</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>alpha</declname>
          <defval>0.02</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>lambda</declname>
          <defval>0.05</defval>
        </param>
        <briefdescription>
<para>Constructor of Bias SVD. </para>        </briefdescription>
        <detaileddescription>
<para>By default SGD optimizer is used in <ref refid="classmlpack_1_1svd_1_1BiasSVD" kindref="compound">BiasSVD</ref>. The optimizer uses a template specialization of Optimize().</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iterations</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of optimization iterations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>Learning rate for the SGD optimizer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambda</parametername>
</parameternamelist>
<parameterdescription>
<para>Regularization parameter for the optimization. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1svd_1_1BiasSVD_1a2cda95c3460611ea7af141f8db7fb3eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Apply</definition>
        <argsstring>(const arma::mat &amp;data, const size_t rank, arma::mat &amp;u, arma::mat &amp;v, arma::vec &amp;p, arma::vec &amp;q)</argsstring>
        <name>Apply</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>rank</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Trains the model and obtains user/item matrices and user/item bias. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Rating data matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rank</parametername>
</parameternamelist>
<parameterdescription>
<para>Rank parameter to be used for optimization. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>Item matrix obtained on decomposition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>User matrix obtained on decomposition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Item bias. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>User bias. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp" line="82" column="1"/>
        <referencedby refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1a3b3962a80d1217a799cfab110b487cea" compoundref="bias__svd__method_8hpp" startline="73" endline="83">BiasSVDPolicy::Apply</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Bias SVD is an improvement on Regularized SVD which is a matrix factorization techniques. </para>    </briefdescription>
    <detaileddescription>
<para>Bias SVD outputs user/item latent vectors and user/item bias, so that <formula id="148">$ r_{iu} = b_i + b_u + p_i * q_u $</formula>, where b, p, q are bias, item latent, user latent respectively. Parameters are optmized by Stochastic Gradient Desent(SGD). The updates also penalize the learning of large feature values by means of regularization.</para><para>An example of how to use the interface is shown below:</para><para><programlisting><codeline><highlight class="normal">arma::mat<sp/>data;<sp/>//<sp/>Rating<sp/>data<sp/>in<sp/>the<sp/>form<sp/>of<sp/>coordinate<sp/>list.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">const<sp/>size_t<sp/>rank<sp/>=<sp/>10;<sp/>//<sp/>Rank<sp/>used<sp/>for<sp/>the<sp/>decomposition.</highlight></codeline>
<codeline><highlight class="normal">const<sp/>size_t<sp/>iterations<sp/>=<sp/>10;<sp/>//<sp/>Number<sp/>of<sp/>iterations<sp/>used<sp/>for<sp/>optimization.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">const<sp/>double<sp/>alpha<sp/>=<sp/>0.005<sp/>//<sp/>Learning<sp/>rate<sp/>for<sp/>the<sp/>SGD<sp/>optimizer.</highlight></codeline>
<codeline><highlight class="normal">const<sp/>double<sp/>lambda<sp/>=<sp/>0.02<sp/>//<sp/>Regularization<sp/>parameter<sp/>for<sp/>the<sp/>optimization.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Make<sp/>a<sp/>BiasSVD<sp/>object.</highlight></codeline>
<codeline><highlight class="normal">BiasSVD&lt;&gt;<sp/>biasSVD(iterations,<sp/>alpha,<sp/>lambda);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">arma::mat<sp/>u,<sp/>v;<sp/>//<sp/>Item<sp/>and<sp/>User<sp/>matrices.</highlight></codeline>
<codeline><highlight class="normal">arma::vec<sp/>p,<sp/>q;<sp/>//<sp/>Item<sp/>and<sp/>User<sp/>bias.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Use<sp/>the<sp/>Apply()<sp/>method<sp/>to<sp/>get<sp/>a<sp/>factorization.</highlight></codeline>
<codeline><highlight class="normal">rSVD.Apply(data,<sp/>rank,<sp/>u,<sp/>v,<sp/>p,<sp/>q);</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp" line="58" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp" bodystart="57" bodyend="96"/>
    <listofallmembers>
      <member refid="classmlpack_1_1svd_1_1BiasSVD_1a20f4c4490bc8ecbdd1ffcb79acce6035" prot="private" virt="non-virtual"><scope>mlpack::svd::BiasSVD</scope><name>alpha</name></member>
      <member refid="classmlpack_1_1svd_1_1BiasSVD_1a2cda95c3460611ea7af141f8db7fb3eb" prot="public" virt="non-virtual"><scope>mlpack::svd::BiasSVD</scope><name>Apply</name></member>
      <member refid="classmlpack_1_1svd_1_1BiasSVD_1a217884b3b86ec1fa9148eac852165945" prot="public" virt="non-virtual"><scope>mlpack::svd::BiasSVD</scope><name>BiasSVD</name></member>
      <member refid="classmlpack_1_1svd_1_1BiasSVD_1a8c30486c22f07ec9373b0b3992994d58" prot="private" virt="non-virtual"><scope>mlpack::svd::BiasSVD</scope><name>iterations</name></member>
      <member refid="classmlpack_1_1svd_1_1BiasSVD_1a3db359547eed8cfd48ca821d95f577af" prot="private" virt="non-virtual"><scope>mlpack::svd::BiasSVD</scope><name>lambda</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
