<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="deduce__hp__types_8hpp" kind="file" language="C++">
    <compoundname>deduce_hp_types.hpp</compoundname>
    <includes refid="fixed_8hpp" local="no">mlpack/core/hpt/fixed.hpp</includes>
    <includedby refid="src_2mlpack_2core_2hpt_2hpt_8hpp" local="no">/home/aakash/mlpack/src/mlpack/core/hpt/hpt.hpp</includedby>
    <incdepgraph>
      <node id="10465">
        <label>list</label>
      </node>
      <node id="10494">
        <label>save_impl.hpp</label>
      </node>
      <node id="10462">
        <label>atomic</label>
      </node>
      <node id="10486">
        <label>dataset_mapper_impl.hpp</label>
      </node>
      <node id="10492">
        <label>load_image_impl.hpp</label>
      </node>
      <node id="10453">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="10429">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="10464">
        <label>iomanip</label>
      </node>
      <node id="10524">
        <label>mlpack/core/kernels/linear_kernel.hpp</label>
        <link refid="linear__kernel_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
      </node>
      <node id="10519">
        <label>mlpack/core/data/confusion_matrix.hpp</label>
        <link refid="confusion__matrix_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10520" relation="include">
        </childnode>
      </node>
      <node id="10534">
        <label>mlpack/core/kernels/laplacian_kernel.hpp</label>
        <link refid="laplacian__kernel_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
      </node>
      <node id="10501">
        <label>float.h</label>
      </node>
      <node id="10530">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="10438">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="10439" relation="include">
        </childnode>
        <childnode refid="10441" relation="include">
        </childnode>
      </node>
      <node id="10421">
        <label>cstdint</label>
      </node>
      <node id="10532">
        <label>epanechnikov_kernel_impl.hpp</label>
      </node>
      <node id="10523">
        <label>mlpack/core/kernels/kernel_traits.hpp</label>
        <link refid="kernel__traits_8hpp"/>
      </node>
      <node id="10430">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="10437">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="10517">
        <label>mlpack/core/dists/gamma_distribution.hpp</label>
        <link refid="gamma__distribution_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10502" relation="include">
        </childnode>
      </node>
      <node id="10481">
        <label>mlpack/core/data/load.hpp</label>
        <link refid="load_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10460" relation="include">
        </childnode>
        <childnode refid="10468" relation="include">
        </childnode>
        <childnode refid="10482" relation="include">
        </childnode>
        <childnode refid="10483" relation="include">
        </childnode>
        <childnode refid="10487" relation="include">
        </childnode>
        <childnode refid="10490" relation="include">
        </childnode>
        <childnode refid="10491" relation="include">
        </childnode>
        <childnode refid="10492" relation="include">
        </childnode>
      </node>
      <node id="10476">
        <label>program_doc.hpp</label>
        <link refid="program__doc_8hpp"/>
      </node>
      <node id="10499">
        <label>stdlib.h</label>
      </node>
      <node id="10503">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="10459">
        <label>arma_config.hpp</label>
      </node>
      <node id="10538">
        <label>mlpack/core/kernels/spherical_kernel.hpp</label>
        <link refid="spherical__kernel_8hpp"/>
        <childnode refid="10539" relation="include">
        </childnode>
        <childnode refid="10416" relation="include">
        </childnode>
      </node>
      <node id="10479">
        <label>params.hpp</label>
        <link refid="params_8hpp"/>
        <childnode refid="10478" relation="include">
        </childnode>
        <childnode refid="10475" relation="include">
        </childnode>
        <childnode refid="10480" relation="include">
        </childnode>
      </node>
      <node id="10507">
        <label>lin_alg_impl.hpp</label>
      </node>
      <node id="10533">
        <label>mlpack/core/kernels/hyperbolic_tangent_kernel.hpp</label>
        <link refid="hyperbolic__tangent__kernel_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
      </node>
      <node id="10415">
        <label>mlpack/core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10429" relation="include">
        </childnode>
        <childnode refid="10460" relation="include">
        </childnode>
        <childnode refid="10472" relation="include">
        </childnode>
        <childnode refid="10470" relation="include">
        </childnode>
        <childnode refid="10481" relation="include">
        </childnode>
        <childnode refid="10493" relation="include">
        </childnode>
        <childnode refid="10496" relation="include">
        </childnode>
        <childnode refid="10498" relation="include">
        </childnode>
        <childnode refid="10502" relation="include">
        </childnode>
        <childnode refid="10505" relation="include">
        </childnode>
        <childnode refid="10506" relation="include">
        </childnode>
        <childnode refid="10508" relation="include">
        </childnode>
        <childnode refid="10509" relation="include">
        </childnode>
        <childnode refid="10510" relation="include">
        </childnode>
        <childnode refid="10511" relation="include">
        </childnode>
        <childnode refid="10513" relation="include">
        </childnode>
        <childnode refid="10514" relation="include">
        </childnode>
        <childnode refid="10515" relation="include">
        </childnode>
        <childnode refid="10516" relation="include">
        </childnode>
        <childnode refid="10517" relation="include">
        </childnode>
        <childnode refid="10518" relation="include">
        </childnode>
        <childnode refid="10519" relation="include">
        </childnode>
        <childnode refid="10521" relation="include">
        </childnode>
        <childnode refid="10523" relation="include">
        </childnode>
        <childnode refid="10524" relation="include">
        </childnode>
        <childnode refid="10525" relation="include">
        </childnode>
        <childnode refid="10526" relation="include">
        </childnode>
        <childnode refid="10528" relation="include">
        </childnode>
        <childnode refid="10531" relation="include">
        </childnode>
        <childnode refid="10533" relation="include">
        </childnode>
        <childnode refid="10534" relation="include">
        </childnode>
        <childnode refid="10535" relation="include">
        </childnode>
        <childnode refid="10538" relation="include">
        </childnode>
        <childnode refid="10540" relation="include">
        </childnode>
        <childnode refid="10541" relation="include">
        </childnode>
      </node>
      <node id="10495">
        <label>io_impl.hpp</label>
      </node>
      <node id="10450">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="10521">
        <label>mlpack/core/data/one_hot_encoding.hpp</label>
        <link refid="one__hot__encoding_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10415" relation="include">
        </childnode>
        <childnode refid="10522" relation="include">
        </childnode>
      </node>
      <node id="10417">
        <label>cmath</label>
      </node>
      <node id="10436">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="10425">
        <label>stdexcept</label>
      </node>
      <node id="10445">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="10430" relation="include">
        </childnode>
        <childnode refid="10432" relation="include">
        </childnode>
        <childnode refid="10433" relation="include">
        </childnode>
        <childnode refid="10431" relation="include">
        </childnode>
      </node>
      <node id="10508">
        <label>mlpack/core/math/range.hpp</label>
      </node>
      <node id="10527">
        <label>cosine_distance_impl.hpp</label>
      </node>
      <node id="10485">
        <label>mlpack/core/data/map_policies/datatype.hpp</label>
        <link refid="datatype_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
      </node>
      <node id="10468">
        <label>string</label>
      </node>
      <node id="10457">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="10414" relation="include">
        </childnode>
        <childnode refid="10424" relation="include">
        </childnode>
      </node>
      <node id="10526">
        <label>mlpack/core/kernels/cosine_distance.hpp</label>
        <link refid="cosine__distance_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10523" relation="include">
        </childnode>
        <childnode refid="10527" relation="include">
        </childnode>
      </node>
      <node id="10466">
        <label>map</label>
      </node>
      <node id="10506">
        <label>mlpack/core/math/lin_alg.hpp</label>
        <link refid="lin__alg_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10507" relation="include">
        </childnode>
      </node>
      <node id="10419">
        <label>cfloat</label>
      </node>
      <node id="10475">
        <label>binding_details.hpp</label>
        <link refid="binding__details_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10476" relation="include">
        </childnode>
      </node>
      <node id="10449">
        <label>boost/variant.hpp</label>
      </node>
      <node id="10516">
        <label>mlpack/core/dists/laplace_distribution.hpp</label>
        <link refid="laplace__distribution_8hpp"/>
      </node>
      <node id="10470">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="10433">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="10456">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="10457" relation="include">
        </childnode>
        <childnode refid="10433" relation="include">
        </childnode>
        <childnode refid="10440" relation="include">
        </childnode>
        <childnode refid="10414" relation="include">
        </childnode>
      </node>
      <node id="10412">
        <label>/home/aakash/mlpack/src/mlpack/core/hpt/deduce_hp_types.hpp</label>
        <link refid="deduce__hp__types_8hpp"/>
        <childnode refid="10413" relation="include">
        </childnode>
      </node>
      <node id="10446">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="10513">
        <label>mlpack/core/math/make_alias.hpp</label>
        <link refid="make__alias_8hpp"/>
      </node>
      <node id="10531">
        <label>mlpack/core/kernels/epanechnikov_kernel.hpp</label>
        <link refid="epanechnikov__kernel_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10523" relation="include">
        </childnode>
        <childnode refid="10532" relation="include">
        </childnode>
      </node>
      <node id="10518">
        <label>mlpack/core/dists/diagonal_gaussian_distribution.hpp</label>
        <link refid="diagonal__gaussian__distribution_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
      </node>
      <node id="10444">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="10430" relation="include">
        </childnode>
        <childnode refid="10432" relation="include">
        </childnode>
        <childnode refid="10433" relation="include">
        </childnode>
        <childnode refid="10431" relation="include">
        </childnode>
      </node>
      <node id="10447">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="10430" relation="include">
        </childnode>
        <childnode refid="10432" relation="include">
        </childnode>
        <childnode refid="10433" relation="include">
        </childnode>
        <childnode refid="10431" relation="include">
        </childnode>
      </node>
      <node id="10505">
        <label>mlpack/core/math/random_basis.hpp</label>
        <link refid="random__basis_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
      </node>
      <node id="10474">
        <label>boost/any.hpp</label>
      </node>
      <node id="10435">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="10455">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="10431" relation="include">
        </childnode>
        <childnode refid="10432" relation="include">
        </childnode>
        <childnode refid="10433" relation="include">
        </childnode>
        <childnode refid="10443" relation="include">
        </childnode>
        <childnode refid="10452" relation="include">
        </childnode>
      </node>
      <node id="10458">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="10459" relation="include">
        </childnode>
      </node>
      <node id="10460">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="10416">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="10417" relation="include">
        </childnode>
        <childnode refid="10418" relation="include">
        </childnode>
        <childnode refid="10419" relation="include">
        </childnode>
        <childnode refid="10420" relation="include">
        </childnode>
        <childnode refid="10421" relation="include">
        </childnode>
        <childnode refid="10422" relation="include">
        </childnode>
        <childnode refid="10423" relation="include">
        </childnode>
        <childnode refid="10424" relation="include">
        </childnode>
        <childnode refid="10425" relation="include">
        </childnode>
        <childnode refid="10426" relation="include">
        </childnode>
        <childnode refid="10427" relation="include">
        </childnode>
        <childnode refid="10428" relation="include">
        </childnode>
        <childnode refid="10429" relation="include">
        </childnode>
        <childnode refid="10430" relation="include">
        </childnode>
        <childnode refid="10431" relation="include">
        </childnode>
        <childnode refid="10432" relation="include">
        </childnode>
        <childnode refid="10433" relation="include">
        </childnode>
        <childnode refid="10434" relation="include">
        </childnode>
        <childnode refid="10435" relation="include">
        </childnode>
        <childnode refid="10436" relation="include">
        </childnode>
        <childnode refid="10437" relation="include">
        </childnode>
        <childnode refid="10438" relation="include">
        </childnode>
        <childnode refid="10442" relation="include">
        </childnode>
        <childnode refid="10443" relation="include">
        </childnode>
        <childnode refid="10444" relation="include">
        </childnode>
        <childnode refid="10445" relation="include">
        </childnode>
        <childnode refid="10446" relation="include">
        </childnode>
        <childnode refid="10447" relation="include">
        </childnode>
        <childnode refid="10448" relation="include">
        </childnode>
        <childnode refid="10454" relation="include">
        </childnode>
        <childnode refid="10455" relation="include">
        </childnode>
        <childnode refid="10452" relation="include">
        </childnode>
        <childnode refid="10456" relation="include">
        </childnode>
        <childnode refid="10458" relation="include">
        </childnode>
        <childnode refid="10460" relation="include">
        </childnode>
        <childnode refid="10461" relation="include">
        </childnode>
        <childnode refid="10470" relation="include">
        </childnode>
        <childnode refid="10471" relation="include">
        </childnode>
      </node>
      <node id="10497">
        <label>normalize_labels_impl.hpp</label>
      </node>
      <node id="10522">
        <label>one_hot_encoding_impl.hpp</label>
      </node>
      <node id="10504">
        <label>random</label>
      </node>
      <node id="10528">
        <label>mlpack/core/kernels/gaussian_kernel.hpp</label>
        <link refid="gaussian__kernel_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10529" relation="include">
        </childnode>
        <childnode refid="10523" relation="include">
        </childnode>
      </node>
      <node id="10484">
        <label>map_policies/increment_policy.hpp</label>
        <link refid="increment__policy_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10441" relation="include">
        </childnode>
        <childnode refid="10485" relation="include">
        </childnode>
      </node>
      <node id="10422">
        <label>cstdio</label>
      </node>
      <node id="10488">
        <label>extension.hpp</label>
        <link refid="extension_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
      </node>
      <node id="10426">
        <label>tuple</label>
      </node>
      <node id="10431">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="10448">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="10431" relation="include">
        </childnode>
        <childnode refid="10432" relation="include">
        </childnode>
        <childnode refid="10433" relation="include">
        </childnode>
        <childnode refid="10435" relation="include">
        </childnode>
        <childnode refid="10449" relation="include">
        </childnode>
        <childnode refid="10450" relation="include">
        </childnode>
        <childnode refid="10451" relation="include">
        </childnode>
        <childnode refid="10452" relation="include">
        </childnode>
      </node>
      <node id="10489">
        <label>image_info_impl.hpp</label>
      </node>
      <node id="10536">
        <label>vector</label>
      </node>
      <node id="10491">
        <label>load_vec_impl.hpp</label>
      </node>
      <node id="10477">
        <label>version.hpp</label>
        <link refid="src_2mlpack_2core_2util_2version_8hpp"/>
        <childnode refid="10468" relation="include">
        </childnode>
      </node>
      <node id="10498">
        <label>mlpack/core/math/clamp.hpp</label>
        <link refid="clamp_8hpp"/>
        <childnode refid="10499" relation="include">
        </childnode>
        <childnode refid="10500" relation="include">
        </childnode>
        <childnode refid="10501" relation="include">
        </childnode>
      </node>
      <node id="10502">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10503" relation="include">
        </childnode>
        <childnode refid="10504" relation="include">
        </childnode>
      </node>
      <node id="10427">
        <label>utility</label>
      </node>
      <node id="10451">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="10490">
        <label>load_model_impl.hpp</label>
      </node>
      <node id="10442">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="10439">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="10440" relation="include">
        </childnode>
      </node>
      <node id="10535">
        <label>mlpack/core/kernels/pspectrum_string_kernel.hpp</label>
        <link refid="pspectrum__string__kernel_8hpp"/>
        <childnode refid="10466" relation="include">
        </childnode>
        <childnode refid="10468" relation="include">
        </childnode>
        <childnode refid="10536" relation="include">
        </childnode>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10460" relation="include">
        </childnode>
        <childnode refid="10537" relation="include">
        </childnode>
      </node>
      <node id="10510">
        <label>mlpack/core/math/shuffle_data.hpp</label>
        <link refid="shuffle__data_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
      </node>
      <node id="10496">
        <label>mlpack/core/data/normalize_labels.hpp</label>
        <link refid="normalize__labels_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10497" relation="include">
        </childnode>
      </node>
      <node id="10461">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="10462" relation="include">
        </childnode>
        <childnode refid="10463" relation="include">
        </childnode>
        <childnode refid="10464" relation="include">
        </childnode>
        <childnode refid="10465" relation="include">
        </childnode>
        <childnode refid="10466" relation="include">
        </childnode>
        <childnode refid="10467" relation="include">
        </childnode>
        <childnode refid="10468" relation="include">
        </childnode>
        <childnode refid="10469" relation="include">
        </childnode>
      </node>
      <node id="10440">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="10454">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="10452" relation="include">
        </childnode>
        <childnode refid="10448" relation="include">
        </childnode>
        <childnode refid="10455" relation="include">
        </childnode>
      </node>
      <node id="10500">
        <label>math.h</label>
      </node>
      <node id="10478">
        <label>param_data.hpp</label>
        <link refid="param__data_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10474" relation="include">
        </childnode>
      </node>
      <node id="10423">
        <label>cstdlib</label>
      </node>
      <node id="10514">
        <label>mlpack/core/dists/discrete_distribution.hpp</label>
        <link refid="discrete__distribution_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10460" relation="include">
        </childnode>
        <childnode refid="10502" relation="include">
        </childnode>
      </node>
      <node id="10418">
        <label>cctype</label>
      </node>
      <node id="10473">
        <label>iostream</label>
      </node>
      <node id="10525">
        <label>mlpack/core/kernels/polynomial_kernel.hpp</label>
        <link refid="polynomial__kernel_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
      </node>
      <node id="10520">
        <label>confusion_matrix_impl.hpp</label>
      </node>
      <node id="10441">
        <label>unordered_map</label>
      </node>
      <node id="10487">
        <label>image_info.hpp</label>
        <link refid="image__info_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10488" relation="include">
        </childnode>
        <childnode refid="10489" relation="include">
        </childnode>
      </node>
      <node id="10420">
        <label>climits</label>
      </node>
      <node id="10483">
        <label>dataset_mapper.hpp</label>
        <link refid="dataset__mapper_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10441" relation="include">
        </childnode>
        <childnode refid="10484" relation="include">
        </childnode>
        <childnode refid="10486" relation="include">
        </childnode>
      </node>
      <node id="10511">
        <label>mlpack/core/math/ccov.hpp</label>
        <link refid="ccov_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10512" relation="include">
        </childnode>
      </node>
      <node id="10467">
        <label>mutex</label>
      </node>
      <node id="10493">
        <label>mlpack/core/data/save.hpp</label>
        <link refid="save_8hpp"/>
        <childnode refid="10460" relation="include">
        </childnode>
        <childnode refid="10428" relation="include">
        </childnode>
        <childnode refid="10468" relation="include">
        </childnode>
        <childnode refid="10482" relation="include">
        </childnode>
        <childnode refid="10487" relation="include">
        </childnode>
        <childnode refid="10494" relation="include">
        </childnode>
      </node>
      <node id="10463">
        <label>chrono</label>
      </node>
      <node id="10471">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="10512">
        <label>ccov_impl.hpp</label>
      </node>
      <node id="10539">
        <label>boost/math/special_functions/gamma.hpp</label>
      </node>
      <node id="10469">
        <label>thread</label>
      </node>
      <node id="10541">
        <label>mlpack/core/kernels/cauchy_kernel.hpp</label>
        <link refid="cauchy__kernel_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10529" relation="include">
        </childnode>
        <childnode refid="10523" relation="include">
        </childnode>
      </node>
      <node id="10480">
        <label>params_impl.hpp</label>
      </node>
      <node id="10414">
        <label>type_traits</label>
      </node>
      <node id="10434">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="10537">
        <label>pspectrum_string_kernel_impl.hpp</label>
      </node>
      <node id="10428">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="10452">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="10430" relation="include">
        </childnode>
        <childnode refid="10431" relation="include">
        </childnode>
        <childnode refid="10432" relation="include">
        </childnode>
        <childnode refid="10433" relation="include">
        </childnode>
        <childnode refid="10453" relation="include">
        </childnode>
      </node>
      <node id="10509">
        <label>mlpack/core/math/round.hpp</label>
        <link refid="round_8hpp"/>
      </node>
      <node id="10540">
        <label>mlpack/core/kernels/triangular_kernel.hpp</label>
        <link refid="triangular__kernel_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10529" relation="include">
        </childnode>
      </node>
      <node id="10424">
        <label>cstring</label>
      </node>
      <node id="10443">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="10472">
        <label>mlpack/core/util/io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="10473" relation="include">
        </childnode>
        <childnode refid="10465" relation="include">
        </childnode>
        <childnode refid="10466" relation="include">
        </childnode>
        <childnode refid="10468" relation="include">
        </childnode>
        <childnode refid="10474" relation="include">
        </childnode>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10461" relation="include">
        </childnode>
        <childnode refid="10475" relation="include">
        </childnode>
        <childnode refid="10476" relation="include">
        </childnode>
        <childnode refid="10477" relation="include">
        </childnode>
        <childnode refid="10478" relation="include">
        </childnode>
        <childnode refid="10479" relation="include">
        </childnode>
        <childnode refid="10481" relation="include">
        </childnode>
        <childnode refid="10493" relation="include">
        </childnode>
        <childnode refid="10495" relation="include">
        </childnode>
      </node>
      <node id="10413">
        <label>mlpack/core/hpt/fixed.hpp</label>
        <link refid="fixed_8hpp"/>
        <childnode refid="10414" relation="include">
        </childnode>
        <childnode refid="10415" relation="include">
        </childnode>
      </node>
      <node id="10432">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="10515">
        <label>mlpack/core/dists/gaussian_distribution.hpp</label>
        <link refid="gaussian__distribution_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
      </node>
      <node id="10529">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10530" relation="include">
        </childnode>
      </node>
      <node id="10482">
        <label>format.hpp</label>
        <link refid="format_8hpp"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10543">
        <label>/home/aakash/mlpack/src/mlpack/core/hpt/hpt.hpp</label>
        <link refid="src_2mlpack_2core_2hpt_2hpt_8hpp"/>
      </node>
      <node id="10542">
        <label>/home/aakash/mlpack/src/mlpack/core/hpt/deduce_hp_types.hpp</label>
        <link refid="deduce__hp__types_8hpp"/>
        <childnode refid="10543" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes" prot="public">mlpack::hpt::DeduceHyperParameterTypes</innerclass>
    <innerclass refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_1_1ResultHolder" prot="public">mlpack::hpt::DeduceHyperParameterTypes::ResultHolder</innerclass>
    <innerclass refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01PreFixedArg_3_01T_01_4_00_01Args_8_8_8_01_4" prot="public">mlpack::hpt::DeduceHyperParameterTypes&lt; PreFixedArg&lt; T &gt;, Args... &gt;</innerclass>
    <innerclass refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01PreFixedArg_3_01T_01_4_00_01Args_8_8_8_01_4_1_1ResultHolder" prot="public">mlpack::hpt::DeduceHyperParameterTypes&lt; PreFixedArg&lt; T &gt;, Args... &gt;::ResultHolder</innerclass>
    <innerclass refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4" prot="public">mlpack::hpt::DeduceHyperParameterTypes&lt; T, Args... &gt;</innerclass>
    <innerclass refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType" prot="public">mlpack::hpt::DeduceHyperParameterTypes&lt; T, Args... &gt;::IsCollectionType</innerclass>
    <innerclass refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1ResultHolder" prot="public">mlpack::hpt::DeduceHyperParameterTypes&lt; T, Args... &gt;::ResultHolder</innerclass>
    <innerclass refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1ResultHPType" prot="public">mlpack::hpt::DeduceHyperParameterTypes&lt; T, Args... &gt;::ResultHPType</innerclass>
    <innerclass refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1ResultHPType_3_01ArithmeticType_00_01true_01_4" prot="public">mlpack::hpt::DeduceHyperParameterTypes&lt; T, Args... &gt;::ResultHPType&lt; ArithmeticType, true &gt;</innerclass>
    <innerclass refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1ResultHPType_3_01CollectionType_00_01false_01_4" prot="public">mlpack::hpt::DeduceHyperParameterTypes&lt; T, Args... &gt;::ResultHPType&lt; CollectionType, false &gt;</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1hpt">mlpack::hpt</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Kirill Mishchenko</para></simplesect>
Tools to deduce types of hyper-parameters from types of arguments in the Optimize method in HyperParameterTuner.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_HPT_DEDUCE_HP_TYPES_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_HPT_DEDUCE_HP_TYPES_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="fixed_8hpp" kindref="compound">mlpack/core/hpt/fixed.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">hpt<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="34" refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes" kindref="compound">DeduceHyperParameterTypes</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>HPTypes&gt;</highlight></codeline>
<codeline lineno="37" refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_1_1ResultHolder" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_1_1ResultHolder" kindref="compound">ResultHolder</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="39" refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_1_1ResultHolder_1a157bc4f2867e96115811d2d9d30b0b45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_1_1ResultHolder_1a157bc4f2867e96115811d2d9d30b0b45" kindref="member">TupleType</ref><sp/>=<sp/>std::tuple&lt;HPTypes...&gt;;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="41"><highlight class="normal">};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="49" refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes" kindref="compound">DeduceHyperParameterTypes</ref>&lt;T,<sp/>Args...&gt;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArgumentType,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsArithmetic<sp/>=<sp/>std::is_arithmetic&lt;ArgumentType&gt;::value&gt;</highlight></codeline>
<codeline lineno="56" refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1ResultHPType" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ResultHPType;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ArithmeticType&gt;</highlight></codeline>
<codeline lineno="59" refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1ResultHPType_3_01ArithmeticType_00_01true_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ResultHPType&lt;ArithmeticType,<sp/>true&gt;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="61" refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1ResultHPType_3_01ArithmeticType_00_01true_01_4_1a73709384a51a57b7531673c1989560a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1ResultHPType_3_01ArithmeticType_00_01true_01_4_1a73709384a51a57b7531673c1989560a7" kindref="member">Type</ref><sp/>=<sp/>ArithmeticType;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type&gt;</highlight></codeline>
<codeline lineno="69" refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">IsCollectionType</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="71" refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType_1a8a5f86dc364a80cbbe38f807fc8904d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType_1a8a5f86dc364a80cbbe38f807fc8904d2" kindref="member">Yes</ref><sp/>=<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[1];</highlight></codeline>
<codeline lineno="72" refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType_1a526523778b562af6e2215b2f374718d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType_1a526523778b562af6e2215b2f374718d6" kindref="member">No</ref><sp/>=<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[2];</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TypeToCheck&gt;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType_1a8a5f86dc364a80cbbe38f807fc8904d2" kindref="member">Yes</ref>&amp;<sp/>Check(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TypeToCheck::value_type*);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType_1a526523778b562af6e2215b2f374718d6" kindref="member">No</ref>&amp;<sp/>Check(...);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType_1a11ddd051208250c32dc4985abcafa86d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/><sp/>=</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(decltype(Check&lt;Type&gt;(0)))<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType_1a8a5f86dc364a80cbbe38f807fc8904d2" kindref="member">Yes</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CollectionType&gt;</highlight></codeline>
<codeline lineno="84" refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1ResultHPType_3_01CollectionType_00_01false_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ResultHPType&lt;CollectionType,<sp/>false&gt;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(IsCollectionType&lt;CollectionType&gt;::value,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;One<sp/>of<sp/>the<sp/>passed<sp/>arguments<sp/>is<sp/>neither<sp/>of<sp/>an<sp/>arithmetic<sp/>type,<sp/>nor<sp/>of<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;a<sp/>collection<sp/>type,<sp/>nor<sp/>fixed<sp/>with<sp/>the<sp/>Fixed<sp/>function.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1ResultHPType_3_01CollectionType_00_01false_01_4_1a3c17e8c74759e8a51edcee28b5d4cc01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1ResultHPType_3_01CollectionType_00_01false_01_4_1a3c17e8c74759e8a51edcee28b5d4cc01" kindref="member">Type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CollectionType::value_type;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>HPTypes&gt;</highlight></codeline>
<codeline lineno="94" refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1ResultHolder" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ResultHolder</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1ResultHolder_1a2f1706932f0f0a3ac0f4da29b7672abf" kindref="member">TupleType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes" kindref="compound">DeduceHyperParameterTypes</ref>&lt;Args...&gt;::template</highlight></codeline>
<codeline lineno="97" refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1ResultHolder_1a2f1706932f0f0a3ac0f4da29b7672abf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResultHolder&lt;HPTypes...,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ResultHPType&lt;T&gt;::Type&gt;<ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_1_1ResultHolder_1a157bc4f2867e96115811d2d9d30b0b45" kindref="member">::TupleType</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1a885638d120e5be68a073bad43a0a7c38" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1a885638d120e5be68a073bad43a0a7c38" kindref="member">TupleType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1ResultHolder_1a2f1706932f0f0a3ac0f4da29b7672abf" kindref="member">ResultHolder&lt;&gt;::TupleType</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="109" refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01PreFixedArg_3_01T_01_4_00_01Args_8_8_8_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes" kindref="compound">DeduceHyperParameterTypes</ref>&lt;<ref refid="structmlpack_1_1hpt_1_1PreFixedArg" kindref="compound">PreFixedArg</ref>&lt;T&gt;,<sp/>Args...&gt;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>HPTypes&gt;</highlight></codeline>
<codeline lineno="112" refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01PreFixedArg_3_01T_01_4_00_01Args_8_8_8_01_4_1_1ResultHolder" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ResultHolder</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01PreFixedArg_3_01T_01_4_00_01Args_8_8_8_01_4_1_1ResultHolder_1ae2594da27993362e9262ba5811fccabb" kindref="member">TupleType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes" kindref="compound">DeduceHyperParameterTypes</ref>&lt;Args...&gt;::template</highlight></codeline>
<codeline lineno="115" refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01PreFixedArg_3_01T_01_4_00_01Args_8_8_8_01_4_1_1ResultHolder_1ae2594da27993362e9262ba5811fccabb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResultHolder&lt;HPTypes...&gt;<ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_1_1ResultHolder_1a157bc4f2867e96115811d2d9d30b0b45" kindref="member">::TupleType</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01PreFixedArg_3_01T_01_4_00_01Args_8_8_8_01_4_1a885638d120e5be68a073bad43a0a7c38" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01PreFixedArg_3_01T_01_4_00_01Args_8_8_8_01_4_1a885638d120e5be68a073bad43a0a7c38" kindref="member">TupleType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01PreFixedArg_3_01T_01_4_00_01Args_8_8_8_01_4_1_1ResultHolder_1ae2594da27993362e9262ba5811fccabb" kindref="member">ResultHolder&lt;&gt;::TupleType</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1hpt_1a7146c132523ba701e4baee3e1cad424d" kindref="member">TupleOfHyperParameters</ref><sp/>=</highlight></codeline>
<codeline lineno="127" refid="namespacemlpack_1_1hpt_1a7146c132523ba701e4baee3e1cad424d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes" kindref="compound">DeduceHyperParameterTypes</ref>&lt;Args...&gt;<ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_1_1ResultHolder_1a157bc4f2867e96115811d2d9d30b0b45" kindref="member">::TupleType</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hpt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/hpt/deduce_hp_types.hpp"/>
  </compounddef>
</doxygen>
