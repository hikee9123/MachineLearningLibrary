<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1neighbor_1_1RAWrapper" kind="class" language="C++" prot="public">
    <compoundname>mlpack::neighbor::RAWrapper</compoundname>
    <basecompoundref refid="classmlpack_1_1neighbor_1_1RAWrapperBase" prot="public" virt="non-virtual">RAWrapperBase</basecompoundref>
    <derivedcompoundref refid="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper" prot="public" virt="non-virtual">LeafSizeRAWrapper&lt; TreeType &gt;</derivedcompoundref>
    <includes refid="ra__model_8hpp" local="no">ra_model.hpp</includes>
    <templateparamlist>
      <param>
        <type>template&lt; typename TreeMetricType, typename TreeStatType, typename TreeMatType &gt; class</type>
        <declname>TreeType</declname>
        <defname>TreeType</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="classmlpack_1_1neighbor_1_1RAWrapper_1a4a36b35460d31a24b77aae0b8b485e6a" prot="protected" static="no">
        <type><ref refid="classmlpack_1_1neighbor_1_1RASearch" kindref="compound">RASearch</ref>&lt; <ref refid="namespacemlpack_1_1neighbor_1af3f11fce33c041aa26b1c91107f71b0f" kindref="member">NearestNeighborSort</ref>, <ref refid="namespacemlpack_1_1metric_1a0306f114fdf32dcdfa8f015408cfc37d" kindref="member">metric::EuclideanDistance</ref>, arma::mat, TreeType &gt;</type>
        <definition>typedef RASearch&lt;NearestNeighborSort, metric::EuclideanDistance, arma::mat, TreeType&gt; RAType</definition>
        <argsstring></argsstring>
        <name>RAType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="200" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1RAWrapper_1acdd8c30736e12f437a7143f7e45b9350" prot="protected" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1neighbor_1_1RAWrapper_1a4a36b35460d31a24b77aae0b8b485e6a" kindref="member">RAType</ref></type>
        <definition>RAType ra</definition>
        <argsstring></argsstring>
        <name>ra</name>
        <briefdescription>
<para>The instantiated <ref refid="classmlpack_1_1neighbor_1_1RASearch" kindref="compound">RASearch</ref> object that we are wrapping. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="203" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAWrapper_1a1139e9796b453bff6f94924e60475493" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>RAWrapper</definition>
        <argsstring>(const bool singleMode, const bool naive)</argsstring>
        <name>RAWrapper</name>
        <param>
          <type>const bool</type>
          <declname>singleMode</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>naive</declname>
        </param>
        <briefdescription>
<para>Construct the <ref refid="classmlpack_1_1neighbor_1_1RAWrapper" kindref="compound">RAWrapper</ref> object, initializing the internally-held <ref refid="classmlpack_1_1neighbor_1_1RASearch" kindref="compound">RASearch</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="117" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="117" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAWrapper_1a00e8f2feab29adf7a6156c5a90e6252d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual ~RAWrapper</definition>
        <argsstring>()</argsstring>
        <name>~RAWrapper</name>
        <briefdescription>
<para>Delete the <ref refid="classmlpack_1_1neighbor_1_1RAWrapper" kindref="compound">RAWrapper</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="124" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAWrapper_1a500ecd077d5cc5fdbf6ceb095d8de9e1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double Alpha</definition>
        <argsstring>() const</argsstring>
        <name>Alpha</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a82b4d70edcf506e24a36702731bb1d8c">Alpha</reimplements>
        <briefdescription>
<para>Get the value of alpha. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="149" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAWrapper_1acbb0e4747a3a307bee88bad71e5eeaf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double &amp;</type>
        <definition>double&amp; Alpha</definition>
        <argsstring>()</argsstring>
        <name>Alpha</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1abfdfae3b38039d282f10a63860afc650">Alpha</reimplements>
        <briefdescription>
<para>Modify the value of alpha. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="151" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAWrapper_1a792e0cada1f67fd770b5bb101dc6c9ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classmlpack_1_1neighbor_1_1RAWrapper" kindref="compound">RAWrapper</ref> *</type>
        <definition>virtual RAWrapper* Clone</definition>
        <argsstring>() const</argsstring>
        <name>Clone</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a745c8a58d8efd5f4047e9195883cd943">Clone</reimplements>
        <reimplementedby refid="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper_1a6fb5273198ccf37addbdd3783ca4579e">Clone</reimplementedby>
        <briefdescription>
<para>Create a copy of this <ref refid="classmlpack_1_1neighbor_1_1RAWrapper" kindref="compound">RAWrapper</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>This correctly handles polymorphism. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="128" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAWrapper_1aff320b9a86b77a150e630c01d5888273" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const arma::mat &amp;</type>
        <definition>const arma::mat&amp; Dataset</definition>
        <argsstring>() const</argsstring>
        <name>Dataset</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a2effd31755e4ae5f85e14ed94e7fab8e">Dataset</reimplements>
        <briefdescription>
<para>Get a reference to the reference set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="131" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAWrapper_1a17ec6e467897eb8aee3b519e0758e77d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool FirstLeafExact</definition>
        <argsstring>() const</argsstring>
        <name>FirstLeafExact</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1afeeb9495ce89199f8c68a11b1ed03c62">FirstLeafExact</reimplements>
        <briefdescription>
<para>Get whether to do exact search at the first leaf. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="139" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAWrapper_1aca2eb648feb965d3bcb0b0b73f8b2b0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool &amp;</type>
        <definition>bool&amp; FirstLeafExact</definition>
        <argsstring>()</argsstring>
        <name>FirstLeafExact</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a26aaa27045003a709864f1df22779e27">FirstLeafExact</reimplements>
        <briefdescription>
<para>Modify whether to do exact search at the first leaf. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="141" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAWrapper_1a343230e7d7344e3f7d5f5f2eb89cf2c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool Naive</definition>
        <argsstring>() const</argsstring>
        <name>Naive</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a76bdb2e751927f38210e7111c15cba08">Naive</reimplements>
        <briefdescription>
<para>Get whether naive search is being used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="164" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAWrapper_1af7d397adca3f411b4e2d2f977b280ce6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool &amp;</type>
        <definition>bool&amp; Naive</definition>
        <argsstring>()</argsstring>
        <name>Naive</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1af7b975b8b5777ab38621d5d7ccd90aae">Naive</reimplements>
        <briefdescription>
<para>Modify whether naive search is being used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="166" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="166" bodyend="166"/>
        <references refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a0bb7815368137d2d77482fa77e3a86db">RAWrapperBase::Search</references>
        <references refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1ae741766424a9f00e5214981ab126248a">RAWrapperBase::Train</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAWrapper_1aa9dd91d6b96e1d0b343c3cec27372036" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool SampleAtLeaves</definition>
        <argsstring>() const</argsstring>
        <name>SampleAtLeaves</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a66a953e46f9ad0cfd8d6641816370614">SampleAtLeaves</reimplements>
        <briefdescription>
<para>Get whether to do sampling at leaves. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="144" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="144" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAWrapper_1a9f6d54dd0424f827becc2e2e9969b1bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool &amp;</type>
        <definition>bool&amp; SampleAtLeaves</definition>
        <argsstring>()</argsstring>
        <name>SampleAtLeaves</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1ac33a833eb52f373a94f383370c4deb29">SampleAtLeaves</reimplements>
        <briefdescription>
<para>Modify whether to do sampling at leaves. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="146" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAWrapper_1a58c353341f9f44a1897505d6c467e666" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Search</definition>
        <argsstring>(util::Timers &amp;timers, arma::mat &amp;&amp;querySet, const size_t k, arma::Mat&lt; size_t &gt; &amp;neighbors, arma::mat &amp;distances, const size_t)</argsstring>
        <name>Search</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a0bb7815368137d2d77482fa77e3a86db">Search</reimplements>
        <reimplementedby refid="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper_1aec1eefc960f0881e374dbcbd6b20d568">Search</reimplementedby>
        <param>
          <type><ref refid="classmlpack_1_1util_1_1Timers" kindref="compound">util::Timers</ref> &amp;</type>
          <declname>timers</declname>
        </param>
        <param>
          <type>arma::mat &amp;&amp;</type>
          <declname>querySet</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>neighbors</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>distances</declname>
        </param>
        <param>
          <type>const size_t</type>
        </param>
        <briefdescription>
<para>Perform bichromatic neighbor search (i.e. </para>        </briefdescription>
        <detaileddescription>
<para>search with a separate query set). For <ref refid="classmlpack_1_1neighbor_1_1RAWrapper" kindref="compound">RAWrapper</ref>, we ignore the leaf size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAWrapper_1a6c6cf8fe51983b2f1597f70753ca2d1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Search</definition>
        <argsstring>(util::Timers &amp;timers, const size_t k, arma::Mat&lt; size_t &gt; &amp;neighbors, arma::mat &amp;distances)</argsstring>
        <name>Search</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a07e26aa53e77ad631a36858d49c900c3">Search</reimplements>
        <param>
          <type><ref refid="classmlpack_1_1util_1_1Timers" kindref="compound">util::Timers</ref> &amp;</type>
          <declname>timers</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>neighbors</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>distances</declname>
        </param>
        <briefdescription>
<para>Perform monochromatic neighbor search (i.e. </para>        </briefdescription>
        <detaileddescription>
<para>search where the reference set is used as the query set). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="184" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAWrapper_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the <ref refid="classmlpack_1_1neighbor_1_1RASearch" kindref="compound">RASearch</ref> model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="191" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="191" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAWrapper_1a7477b3e8499a6158bbe177e7f30d4947" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool SingleMode</definition>
        <argsstring>() const</argsstring>
        <name>SingleMode</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a66d221dd25418821f76bb66bd9c98bce">SingleMode</reimplements>
        <briefdescription>
<para>Get whether single-tree search is being used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="159" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="159" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAWrapper_1adadacd63ddeadf138d834b1fdc632773" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool &amp;</type>
        <definition>bool&amp; SingleMode</definition>
        <argsstring>()</argsstring>
        <name>SingleMode</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a5e231427eaa7eeb695cfd1b324858dfb">SingleMode</reimplements>
        <briefdescription>
<para>Modify whether single-tree search is being used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="161" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAWrapper_1a3a2580f686a9de3078e499b1280e2a9f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>size_t</type>
        <definition>size_t SingleSampleLimit</definition>
        <argsstring>() const</argsstring>
        <name>SingleSampleLimit</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a9732af23ee467fcf80889261e2a29047">SingleSampleLimit</reimplements>
        <briefdescription>
<para>Get the single sample limit. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="134" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAWrapper_1ae78a7b8e9c96a2dbf646a27efee047b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>size_t &amp;</type>
        <definition>size_t&amp; SingleSampleLimit</definition>
        <argsstring>()</argsstring>
        <name>SingleSampleLimit</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a5f780bd465b98c024ff3659adbeffaf1">SingleSampleLimit</reimplements>
        <briefdescription>
<para>Modify the single sample limit. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="136" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAWrapper_1a4a4b0fafde4cc4c856a53025dc8c4c21" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double Tau</definition>
        <argsstring>() const</argsstring>
        <name>Tau</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1ae0bfd2fa9956cc64af4ded5d0a497c89">Tau</reimplements>
        <briefdescription>
<para>Get the value of tau. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="154" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAWrapper_1ad522d61ed716a322376adea25ebdbc90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double &amp;</type>
        <definition>double&amp; Tau</definition>
        <argsstring>()</argsstring>
        <name>Tau</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a7e51ae335f71878cff370a9525380bac">Tau</reimplements>
        <briefdescription>
<para>Modify the value of tau. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="156" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAWrapper_1a7bc2562f0ea045f22c787ae220649379" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Train</definition>
        <argsstring>(util::Timers &amp;timers, arma::mat &amp;&amp;referenceSet, const size_t)</argsstring>
        <name>Train</name>
        <reimplements refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1ae741766424a9f00e5214981ab126248a">Train</reimplements>
        <reimplementedby refid="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper_1a795e90427302e4dacb6e7570a26c55d6">Train</reimplementedby>
        <param>
          <type><ref refid="classmlpack_1_1util_1_1Timers" kindref="compound">util::Timers</ref> &amp;</type>
          <declname>timers</declname>
        </param>
        <param>
          <type>arma::mat &amp;&amp;</type>
          <declname>referenceSet</declname>
        </param>
        <param>
          <type>const size_t</type>
        </param>
        <briefdescription>
<para>Train the model. For <ref refid="classmlpack_1_1neighbor_1_1RAWrapper" kindref="compound">RAWrapper</ref>, we ignore the leaf size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="169" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classmlpack_1_1neighbor_1_1RAWrapper" kindref="compound">RAWrapper</ref> is a wrapper class for most <ref refid="classmlpack_1_1neighbor_1_1RASearch" kindref="compound">RASearch</ref> types. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1136">
        <label>RAWrapperBase</label>
        <link refid="classmlpack_1_1neighbor_1_1RAWrapperBase"/>
      </node>
      <node id="1137">
        <label>LeafSizeRAWrapper&lt; TreeType &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1LeafSizeRAWrapper"/>
        <childnode refid="1135" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1135">
        <label>RAWrapper&lt; TreeType &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1RAWrapper"/>
        <childnode refid="1136" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1139">
        <label>RAWrapperBase</label>
        <link refid="classmlpack_1_1neighbor_1_1RAWrapperBase"/>
      </node>
      <node id="1141">
        <label>RASearch&lt; SortPolicy, MetricType, MatType, TreeType &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1RASearch"/>
      </node>
      <node id="1140">
        <label>RASearch&lt; NearestNeighborSort, metric::EuclideanDistance, arma::mat, TreeType &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1RASearch"/>
        <childnode refid="1141" relation="template-instance">
          <edgelabel>&lt; NearestNeighborSort, metric::EuclideanDistance, arma::mat, TreeType &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1138">
        <label>RAWrapper&lt; TreeType &gt;</label>
        <link refid="classmlpack_1_1neighbor_1_1RAWrapper"/>
        <childnode refid="1139" relation="public-inheritance">
        </childnode>
        <childnode refid="1140" relation="usage">
          <edgelabel>ra</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="113" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="112" bodyend="204"/>
    <listofallmembers>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a500ecd077d5cc5fdbf6ceb095d8de9e1" prot="public" virt="virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>Alpha</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1acbb0e4747a3a307bee88bad71e5eeaf1" prot="public" virt="virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>Alpha</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a792e0cada1f67fd770b5bb101dc6c9ed" prot="public" virt="virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>Clone</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1aff320b9a86b77a150e630c01d5888273" prot="public" virt="virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>Dataset</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a17ec6e467897eb8aee3b519e0758e77d" prot="public" virt="virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>FirstLeafExact</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1aca2eb648feb965d3bcb0b0b73f8b2b0f" prot="public" virt="virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>FirstLeafExact</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a343230e7d7344e3f7d5f5f2eb89cf2c5" prot="public" virt="virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>Naive</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1af7d397adca3f411b4e2d2f977b280ce6" prot="public" virt="virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>Naive</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1acdd8c30736e12f437a7143f7e45b9350" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>ra</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a4a36b35460d31a24b77aae0b8b485e6a" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>RAType</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a1139e9796b453bff6f94924e60475493" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>RAWrapper</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a33445e59b0dcf448bca4d6d73cd5a903" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>RAWrapperBase</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1aa9dd91d6b96e1d0b343c3cec27372036" prot="public" virt="virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>SampleAtLeaves</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a9f6d54dd0424f827becc2e2e9969b1bb" prot="public" virt="virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>SampleAtLeaves</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a58c353341f9f44a1897505d6c467e666" prot="public" virt="virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>Search</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a6c6cf8fe51983b2f1597f70753ca2d1a" prot="public" virt="virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>Search</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a7477b3e8499a6158bbe177e7f30d4947" prot="public" virt="virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>SingleMode</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1adadacd63ddeadf138d834b1fdc632773" prot="public" virt="virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>SingleMode</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a3a2580f686a9de3078e499b1280e2a9f" prot="public" virt="virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>SingleSampleLimit</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1ae78a7b8e9c96a2dbf646a27efee047b1" prot="public" virt="virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>SingleSampleLimit</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a4a4b0fafde4cc4c856a53025dc8c4c21" prot="public" virt="virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>Tau</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1ad522d61ed716a322376adea25ebdbc90" prot="public" virt="virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>Tau</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a7bc2562f0ea045f22c787ae220649379" prot="public" virt="virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>Train</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapper_1a00e8f2feab29adf7a6156c5a90e6252d" prot="public" virt="virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>~RAWrapper</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a0fc504cc59c425b26f3cadcdf45fe17d" prot="public" virt="virtual"><scope>mlpack::neighbor::RAWrapper</scope><name>~RAWrapperBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
