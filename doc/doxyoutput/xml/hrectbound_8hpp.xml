<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="hrectbound_8hpp" kind="file" language="C++">
    <compoundname>hrectbound.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="no">mlpack/core/math/range.hpp</includes>
    <includes refid="lmetric_8hpp" local="no">mlpack/core/metrics/lmetric.hpp</includes>
    <includes refid="bound__traits_8hpp" local="yes">bound_traits.hpp</includes>
    <includes local="yes">hrectbound_impl.hpp</includes>
    <includedby refid="bounds_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/core/tree/bounds.hpp</includedby>
    <includedby refid="octree_2octree_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp</includedby>
    <includedby refid="r__plus__plus__tree__auxiliary__information_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/r_plus_plus_tree_auxiliary_information.hpp</includedby>
    <incdepgraph>
      <node id="16866">
        <label>list</label>
      </node>
      <node id="16863">
        <label>atomic</label>
      </node>
      <node id="16853">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="16829">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="16865">
        <label>iomanip</label>
      </node>
      <node id="16876">
        <label>bound_traits.hpp</label>
        <link refid="bound__traits_8hpp"/>
      </node>
      <node id="16875">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="16838">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="16839" relation="include">
        </childnode>
        <childnode refid="16841" relation="include">
        </childnode>
      </node>
      <node id="16821">
        <label>cstdint</label>
      </node>
      <node id="16830">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="16837">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="16860">
        <label>arma_config.hpp</label>
      </node>
      <node id="16850">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="16817">
        <label>cmath</label>
      </node>
      <node id="16836">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="16825">
        <label>stdexcept</label>
      </node>
      <node id="16845">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="16830" relation="include">
        </childnode>
        <childnode refid="16832" relation="include">
        </childnode>
        <childnode refid="16833" relation="include">
        </childnode>
        <childnode refid="16831" relation="include">
        </childnode>
      </node>
      <node id="16873">
        <label>mlpack/core/math/range.hpp</label>
      </node>
      <node id="16869">
        <label>string</label>
      </node>
      <node id="16857">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="16858" relation="include">
        </childnode>
        <childnode refid="16824" relation="include">
        </childnode>
      </node>
      <node id="16867">
        <label>map</label>
      </node>
      <node id="16819">
        <label>cfloat</label>
      </node>
      <node id="16849">
        <label>boost/variant.hpp</label>
      </node>
      <node id="16871">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="16833">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="16856">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="16857" relation="include">
        </childnode>
        <childnode refid="16833" relation="include">
        </childnode>
        <childnode refid="16840" relation="include">
        </childnode>
        <childnode refid="16858" relation="include">
        </childnode>
      </node>
      <node id="16846">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="16844">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="16830" relation="include">
        </childnode>
        <childnode refid="16832" relation="include">
        </childnode>
        <childnode refid="16833" relation="include">
        </childnode>
        <childnode refid="16831" relation="include">
        </childnode>
      </node>
      <node id="16847">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="16830" relation="include">
        </childnode>
        <childnode refid="16832" relation="include">
        </childnode>
        <childnode refid="16833" relation="include">
        </childnode>
        <childnode refid="16831" relation="include">
        </childnode>
      </node>
      <node id="16835">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="16855">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="16831" relation="include">
        </childnode>
        <childnode refid="16832" relation="include">
        </childnode>
        <childnode refid="16833" relation="include">
        </childnode>
        <childnode refid="16843" relation="include">
        </childnode>
        <childnode refid="16852" relation="include">
        </childnode>
      </node>
      <node id="16859">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="16860" relation="include">
        </childnode>
      </node>
      <node id="16861">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="16816">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="16817" relation="include">
        </childnode>
        <childnode refid="16818" relation="include">
        </childnode>
        <childnode refid="16819" relation="include">
        </childnode>
        <childnode refid="16820" relation="include">
        </childnode>
        <childnode refid="16821" relation="include">
        </childnode>
        <childnode refid="16822" relation="include">
        </childnode>
        <childnode refid="16823" relation="include">
        </childnode>
        <childnode refid="16824" relation="include">
        </childnode>
        <childnode refid="16825" relation="include">
        </childnode>
        <childnode refid="16826" relation="include">
        </childnode>
        <childnode refid="16827" relation="include">
        </childnode>
        <childnode refid="16828" relation="include">
        </childnode>
        <childnode refid="16829" relation="include">
        </childnode>
        <childnode refid="16830" relation="include">
        </childnode>
        <childnode refid="16831" relation="include">
        </childnode>
        <childnode refid="16832" relation="include">
        </childnode>
        <childnode refid="16833" relation="include">
        </childnode>
        <childnode refid="16834" relation="include">
        </childnode>
        <childnode refid="16835" relation="include">
        </childnode>
        <childnode refid="16836" relation="include">
        </childnode>
        <childnode refid="16837" relation="include">
        </childnode>
        <childnode refid="16838" relation="include">
        </childnode>
        <childnode refid="16842" relation="include">
        </childnode>
        <childnode refid="16843" relation="include">
        </childnode>
        <childnode refid="16844" relation="include">
        </childnode>
        <childnode refid="16845" relation="include">
        </childnode>
        <childnode refid="16846" relation="include">
        </childnode>
        <childnode refid="16847" relation="include">
        </childnode>
        <childnode refid="16848" relation="include">
        </childnode>
        <childnode refid="16854" relation="include">
        </childnode>
        <childnode refid="16855" relation="include">
        </childnode>
        <childnode refid="16852" relation="include">
        </childnode>
        <childnode refid="16856" relation="include">
        </childnode>
        <childnode refid="16859" relation="include">
        </childnode>
        <childnode refid="16861" relation="include">
        </childnode>
        <childnode refid="16862" relation="include">
        </childnode>
        <childnode refid="16871" relation="include">
        </childnode>
        <childnode refid="16872" relation="include">
        </childnode>
      </node>
      <node id="16822">
        <label>cstdio</label>
      </node>
      <node id="16826">
        <label>tuple</label>
      </node>
      <node id="16831">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="16848">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="16831" relation="include">
        </childnode>
        <childnode refid="16832" relation="include">
        </childnode>
        <childnode refid="16833" relation="include">
        </childnode>
        <childnode refid="16835" relation="include">
        </childnode>
        <childnode refid="16849" relation="include">
        </childnode>
        <childnode refid="16850" relation="include">
        </childnode>
        <childnode refid="16851" relation="include">
        </childnode>
        <childnode refid="16852" relation="include">
        </childnode>
      </node>
      <node id="16815">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp</label>
        <link refid="hrectbound_8hpp"/>
        <childnode refid="16816" relation="include">
        </childnode>
        <childnode refid="16873" relation="include">
        </childnode>
        <childnode refid="16874" relation="include">
        </childnode>
        <childnode refid="16876" relation="include">
        </childnode>
        <childnode refid="16877" relation="include">
        </childnode>
      </node>
      <node id="16827">
        <label>utility</label>
      </node>
      <node id="16851">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="16842">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="16839">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="16840" relation="include">
        </childnode>
      </node>
      <node id="16862">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="16863" relation="include">
        </childnode>
        <childnode refid="16864" relation="include">
        </childnode>
        <childnode refid="16865" relation="include">
        </childnode>
        <childnode refid="16866" relation="include">
        </childnode>
        <childnode refid="16867" relation="include">
        </childnode>
        <childnode refid="16868" relation="include">
        </childnode>
        <childnode refid="16869" relation="include">
        </childnode>
        <childnode refid="16870" relation="include">
        </childnode>
      </node>
      <node id="16840">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="16854">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="16852" relation="include">
        </childnode>
        <childnode refid="16848" relation="include">
        </childnode>
        <childnode refid="16855" relation="include">
        </childnode>
      </node>
      <node id="16823">
        <label>cstdlib</label>
      </node>
      <node id="16818">
        <label>cctype</label>
      </node>
      <node id="16841">
        <label>unordered_map</label>
      </node>
      <node id="16820">
        <label>climits</label>
      </node>
      <node id="16868">
        <label>mutex</label>
      </node>
      <node id="16864">
        <label>chrono</label>
      </node>
      <node id="16877">
        <label>hrectbound_impl.hpp</label>
      </node>
      <node id="16872">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="16870">
        <label>thread</label>
      </node>
      <node id="16858">
        <label>type_traits</label>
      </node>
      <node id="16834">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="16828">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="16852">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="16830" relation="include">
        </childnode>
        <childnode refid="16831" relation="include">
        </childnode>
        <childnode refid="16832" relation="include">
        </childnode>
        <childnode refid="16833" relation="include">
        </childnode>
        <childnode refid="16853" relation="include">
        </childnode>
      </node>
      <node id="16824">
        <label>cstring</label>
      </node>
      <node id="16843">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="16832">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="16874">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="16816" relation="include">
        </childnode>
        <childnode refid="16875" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="16882">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="16880" relation="include">
        </childnode>
      </node>
      <node id="16915">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/pelleg_moore_kmeans.hpp</label>
        <link refid="pelleg__moore__kmeans_8hpp"/>
      </node>
      <node id="16933">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/spill_tree/spill_dual_tree_traverser.hpp</label>
        <link refid="spill__dual__tree__traverser_8hpp"/>
        <childnode refid="16929" relation="include">
        </childnode>
      </node>
      <node id="16925">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/space_split/projection_vector.hpp</label>
        <link refid="projection__vector_8hpp"/>
        <childnode refid="16926" relation="include">
        </childnode>
      </node>
      <node id="16898">
        <label>/home/aakash/mlpack/src/mlpack/methods/lmnn/lmnn_function.hpp</label>
        <link refid="lmnn__function_8hpp"/>
        <childnode refid="16899" relation="include">
        </childnode>
      </node>
      <node id="16916">
        <label>/home/aakash/mlpack/src/mlpack/methods/range_search/range_search.hpp</label>
        <link refid="range__search_8hpp"/>
        <childnode refid="16917" relation="include">
        </childnode>
        <childnode refid="16918" relation="include">
        </childnode>
      </node>
      <node id="16928">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/spill_tree/typedef.hpp</label>
        <link refid="core_2tree_2spill__tree_2typedef_8hpp"/>
        <childnode refid="16929" relation="include">
        </childnode>
      </node>
      <node id="16900">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/typedef.hpp</label>
        <link refid="methods_2neighbor__search_2typedef_8hpp"/>
        <childnode refid="16884" relation="include">
        </childnode>
      </node>
      <node id="16926">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/space_split/hyperplane.hpp</label>
        <link refid="hyperplane_8hpp"/>
        <childnode refid="16927" relation="include">
        </childnode>
        <childnode refid="16934" relation="include">
        </childnode>
        <childnode refid="16935" relation="include">
        </childnode>
      </node>
      <node id="16888">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp</label>
        <link refid="cf__model_8hpp"/>
      </node>
      <node id="16934">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/space_split/midpoint_space_split.hpp</label>
        <link refid="midpoint__space__split_8hpp"/>
        <childnode refid="16930" relation="include">
        </childnode>
        <childnode refid="16928" relation="include">
        </childnode>
      </node>
      <node id="16890">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp</label>
        <link refid="regularized__svd__method_8hpp"/>
      </node>
      <node id="16936">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/octree/octree.hpp</label>
        <link refid="octree_2octree_8hpp"/>
        <childnode refid="16937" relation="include">
        </childnode>
        <childnode refid="16938" relation="include">
        </childnode>
        <childnode refid="16924" relation="include">
        </childnode>
      </node>
      <node id="16929">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/spill_tree.hpp</label>
        <link refid="spill__tree_8hpp"/>
        <childnode refid="16930" relation="include">
        </childnode>
        <childnode refid="16901" relation="include">
        </childnode>
      </node>
      <node id="16935">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/space_split/space_split.hpp</label>
        <link refid="space__split_8hpp"/>
      </node>
      <node id="16879">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/bounds.hpp</label>
        <link refid="bounds_8hpp"/>
        <childnode refid="16880" relation="include">
        </childnode>
        <childnode refid="16924" relation="include">
        </childnode>
        <childnode refid="16925" relation="include">
        </childnode>
        <childnode refid="16929" relation="include">
        </childnode>
      </node>
      <node id="16883">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="16880" relation="include">
        </childnode>
      </node>
      <node id="16887">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/bias_svd_method.hpp</label>
        <link refid="bias__svd__method_8hpp"/>
      </node>
      <node id="16885">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf.hpp</label>
        <link refid="cf_8hpp"/>
        <childnode refid="16886" relation="include">
        </childnode>
        <childnode refid="16888" relation="include">
        </childnode>
        <childnode refid="16889" relation="include">
        </childnode>
        <childnode refid="16891" relation="include">
        </childnode>
      </node>
      <node id="16893">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/cosine_search.hpp</label>
        <link refid="cosine__search_8hpp"/>
      </node>
      <node id="16922">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_typedef.hpp</label>
        <link refid="ra__typedef_8hpp"/>
        <childnode refid="16921" relation="include">
        </childnode>
      </node>
      <node id="16917">
        <label>/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp</label>
        <link refid="dbscan_8hpp"/>
      </node>
      <node id="16911">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/gmm.hpp</label>
        <link refid="gmm_8hpp"/>
        <childnode refid="16910" relation="include">
        </childnode>
      </node>
      <node id="16919">
        <label>/home/aakash/mlpack/src/mlpack/tests/main_tests/range_search_utils.hpp</label>
        <link refid="range__search__utils_8hpp"/>
      </node>
      <node id="16896">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/dual_tree_kmeans.hpp</label>
        <link refid="dual__tree__kmeans_8hpp"/>
      </node>
      <node id="16932">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/spill_tree/spill_single_tree_traverser.hpp</label>
        <link refid="spill__single__tree__traverser_8hpp"/>
        <childnode refid="16929" relation="include">
        </childnode>
      </node>
      <node id="16891">
        <label>/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp</label>
        <link refid="svdplusplus_8hpp"/>
        <childnode refid="16892" relation="include">
        </childnode>
      </node>
      <node id="16909">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp</label>
        <link refid="diagonal__gmm_8hpp"/>
        <childnode refid="16910" relation="include">
        </childnode>
      </node>
      <node id="16901">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp</label>
        <link refid="ns__model_8hpp"/>
      </node>
      <node id="16921">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_search.hpp</label>
        <link refid="ra__search_8hpp"/>
        <childnode refid="16920" relation="include">
        </childnode>
        <childnode refid="16922" relation="include">
        </childnode>
      </node>
      <node id="16914">
        <label>/home/aakash/mlpack/src/mlpack/methods/nystroem_method/nystroem_method.hpp</label>
        <link refid="nystroem__method_2nystroem__method_8hpp"/>
        <childnode refid="16913" relation="include">
        </childnode>
      </node>
      <node id="16930">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/spill_tree/spill_tree.hpp</label>
        <link refid="spill__tree_2spill__tree_8hpp"/>
        <childnode refid="16931" relation="include">
        </childnode>
        <childnode refid="16929" relation="include">
        </childnode>
        <childnode refid="16932" relation="include">
        </childnode>
        <childnode refid="16933" relation="include">
        </childnode>
      </node>
      <node id="16897">
        <label>/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp</label>
        <link refid="constraints_8hpp"/>
        <childnode refid="16898" relation="include">
        </childnode>
      </node>
      <node id="16894">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/lmetric_search.hpp</label>
        <link refid="lmetric__search_8hpp"/>
        <childnode refid="16885" relation="include">
        </childnode>
      </node>
      <node id="16899">
        <label>/home/aakash/mlpack/src/mlpack/methods/lmnn/lmnn.hpp</label>
        <link refid="lmnn_8hpp"/>
      </node>
      <node id="16886">
        <label>/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp</label>
        <link refid="bias__svd_8hpp"/>
        <childnode refid="16887" relation="include">
        </childnode>
      </node>
      <node id="16881">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="16880" relation="include">
        </childnode>
        <childnode refid="16882" relation="include">
        </childnode>
        <childnode refid="16883" relation="include">
        </childnode>
        <childnode refid="16884" relation="include">
        </childnode>
      </node>
      <node id="16920">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp</label>
        <link refid="ra__model_8hpp"/>
      </node>
      <node id="16878">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp</label>
        <link refid="hrectbound_8hpp"/>
        <childnode refid="16879" relation="include">
        </childnode>
        <childnode refid="16936" relation="include">
        </childnode>
        <childnode refid="16939" relation="include">
        </childnode>
      </node>
      <node id="16908">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/em_fit.hpp</label>
        <link refid="em__fit_8hpp"/>
        <childnode refid="16909" relation="include">
        </childnode>
        <childnode refid="16911" relation="include">
        </childnode>
      </node>
      <node id="16906">
        <label>/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp</label>
        <link refid="kde__model_8hpp"/>
      </node>
      <node id="16880">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="16881" relation="include">
        </childnode>
        <childnode refid="16902" relation="include">
        </childnode>
        <childnode refid="16903" relation="include">
        </childnode>
        <childnode refid="16904" relation="include">
        </childnode>
        <childnode refid="16905" relation="include">
        </childnode>
        <childnode refid="16906" relation="include">
        </childnode>
        <childnode refid="16896" relation="include">
        </childnode>
        <childnode refid="16907" relation="include">
        </childnode>
        <childnode refid="16915" relation="include">
        </childnode>
        <childnode refid="16884" relation="include">
        </childnode>
        <childnode refid="16901" relation="include">
        </childnode>
        <childnode refid="16916" relation="include">
        </childnode>
        <childnode refid="16918" relation="include">
        </childnode>
        <childnode refid="16920" relation="include">
        </childnode>
        <childnode refid="16921" relation="include">
        </childnode>
        <childnode refid="16923" relation="include">
        </childnode>
      </node>
      <node id="16892">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svdplusplus_method.hpp</label>
        <link refid="svdplusplus__method_8hpp"/>
      </node>
      <node id="16889">
        <label>/home/aakash/mlpack/src/mlpack/methods/regularized_svd/regularized_svd.hpp</label>
        <link refid="regularized__svd_8hpp"/>
        <childnode refid="16890" relation="include">
        </childnode>
      </node>
      <node id="16923">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_query_stat.hpp</label>
        <link refid="ra__query__stat_8hpp"/>
        <childnode refid="16921" relation="include">
        </childnode>
      </node>
      <node id="16931">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/spill_tree/is_spill_tree.hpp</label>
        <link refid="is__spill__tree_8hpp"/>
        <childnode refid="16929" relation="include">
        </childnode>
      </node>
      <node id="16884">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search.hpp</label>
        <link refid="neighbor__search_8hpp"/>
        <childnode refid="16885" relation="include">
        </childnode>
        <childnode refid="16893" relation="include">
        </childnode>
        <childnode refid="16894" relation="include">
        </childnode>
        <childnode refid="16895" relation="include">
        </childnode>
        <childnode refid="16896" relation="include">
        </childnode>
        <childnode refid="16897" relation="include">
        </childnode>
        <childnode refid="16900" relation="include">
        </childnode>
        <childnode refid="16901" relation="include">
        </childnode>
      </node>
      <node id="16918">
        <label>/home/aakash/mlpack/src/mlpack/methods/range_search/rs_model.hpp</label>
        <link refid="rs__model_8hpp"/>
        <childnode refid="16919" relation="include">
        </childnode>
      </node>
      <node id="16905">
        <label>/home/aakash/mlpack/src/mlpack/methods/kde/kde.hpp</label>
        <link refid="kde_8hpp"/>
        <childnode refid="16906" relation="include">
        </childnode>
      </node>
      <node id="16895">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/pearson_search.hpp</label>
        <link refid="pearson__search_8hpp"/>
      </node>
      <node id="16907">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/kmeans.hpp</label>
        <link refid="kmeans_8hpp"/>
        <childnode refid="16908" relation="include">
        </childnode>
        <childnode refid="16912" relation="include">
        </childnode>
      </node>
      <node id="16924">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/octree.hpp</label>
        <link refid="octree_8hpp"/>
        <childnode refid="16906" relation="include">
        </childnode>
        <childnode refid="16901" relation="include">
        </childnode>
        <childnode refid="16918" relation="include">
        </childnode>
        <childnode refid="16920" relation="include">
        </childnode>
      </node>
      <node id="16937">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/octree/dual_tree_traverser.hpp</label>
        <link refid="octree_2dual__tree__traverser_8hpp"/>
        <childnode refid="16924" relation="include">
        </childnode>
      </node>
      <node id="16904">
        <label>/home/aakash/mlpack/src/mlpack/methods/emst/dtb.hpp</label>
        <link refid="dtb_8hpp"/>
      </node>
      <node id="16912">
        <label>/home/aakash/mlpack/src/mlpack/methods/nystroem_method/kmeans_selection.hpp</label>
        <link refid="kmeans__selection_8hpp"/>
        <childnode refid="16913" relation="include">
        </childnode>
        <childnode refid="16914" relation="include">
        </childnode>
      </node>
      <node id="16910">
        <label>/home/aakash/mlpack/src/mlpack/methods/hmm/hmm_model.hpp</label>
        <link refid="hmm__model_8hpp"/>
      </node>
      <node id="16913">
        <label>/home/aakash/mlpack/src/mlpack/methods/kernel_pca/kernel_rules/nystroem_method.hpp</label>
        <link refid="kernel__pca_2kernel__rules_2nystroem__method_8hpp"/>
      </node>
      <node id="16902">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="16880" relation="include">
        </childnode>
      </node>
      <node id="16903">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="16880" relation="include">
        </childnode>
      </node>
      <node id="16927">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/space_split/mean_space_split.hpp</label>
        <link refid="mean__space__split_8hpp"/>
        <childnode refid="16928" relation="include">
        </childnode>
      </node>
      <node id="16938">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/octree/single_tree_traverser.hpp</label>
        <link refid="octree_2single__tree__traverser_8hpp"/>
        <childnode refid="16924" relation="include">
        </childnode>
      </node>
      <node id="16939">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/r_plus_plus_tree_auxiliary_information.hpp</label>
        <link refid="r__plus__plus__tree__auxiliary__information_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structmlpack_1_1bound_1_1BoundTraits_3_01HRectBound_3_01MetricType_00_01ElemType_01_4_01_4" prot="public">mlpack::bound::BoundTraits&lt; HRectBound&lt; MetricType, ElemType &gt; &gt;</innerclass>
    <innerclass refid="classmlpack_1_1bound_1_1HRectBound" prot="public">mlpack::bound::HRectBound</innerclass>
    <innerclass refid="structmlpack_1_1bound_1_1meta_1_1IsLMetric" prot="public">mlpack::bound::meta::IsLMetric</innerclass>
    <innerclass refid="structmlpack_1_1bound_1_1meta_1_1IsLMetric_3_01metric_1_1LMetric_3_01Power_00_01TakeRoot_01_4_01_4" prot="public">mlpack::bound::meta::IsLMetric&lt; metric::LMetric&lt; Power, TakeRoot &gt; &gt;</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1bound">mlpack::bound</innernamespace>
    <innernamespace refid="namespacemlpack_1_1bound_1_1meta">mlpack::bound::meta</innernamespace>
    <briefdescription>
<para>Bounds that are useful for binary space partitioning trees. </para>    </briefdescription>
    <detaileddescription>
<para>This file describes the interface for the HRectBound class, which implements a hyperrectangle bound.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="14"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_TREE_HRECTBOUND_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_TREE_HRECTBOUND_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mlpack/core/math/range.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="lmetric_8hpp" kindref="compound">mlpack/core/metrics/lmetric.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bound__traits_8hpp" kindref="compound">bound_traits.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">bound<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="namespacemlpack_1_1bound_1_1meta" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">meta<sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MetricType&gt;</highlight></codeline>
<codeline lineno="30" refid="structmlpack_1_1bound_1_1meta_1_1IsLMetric" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmlpack_1_1bound_1_1meta_1_1IsLMetric" kindref="compound">IsLMetric</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32" refid="structmlpack_1_1bound_1_1meta_1_1IsLMetric_1a2cbb7037a76934614ab6ca3cc713d6ef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1bound_1_1meta_1_1IsLMetric_1a2cbb7037a76934614ab6ca3cc713d6ef" kindref="member">Value</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Power,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TakeRoot&gt;</highlight></codeline>
<codeline lineno="37" refid="structmlpack_1_1bound_1_1meta_1_1IsLMetric_3_01metric_1_1LMetric_3_01Power_00_01TakeRoot_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmlpack_1_1bound_1_1meta_1_1IsLMetric" kindref="compound">IsLMetric</ref>&lt;metric::LMetric&lt;Power,<sp/>TakeRoot&gt;&gt;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39" refid="structmlpack_1_1bound_1_1meta_1_1IsLMetric_3_01metric_1_1LMetric_3_01Power_00_01TakeRoot_01_4_01_4_1a2cbb7037a76934614ab6ca3cc713d6ef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1bound_1_1meta_1_1IsLMetric_1a2cbb7037a76934614ab6ca3cc713d6ef" kindref="member">Value</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>meta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MetricType<sp/>=<sp/>metric::LMetric&lt;2,<sp/>true&gt;,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ElemType<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="54" refid="classmlpack_1_1bound_1_1HRectBound" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref></highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>required<sp/>that<sp/>HRectBound<sp/>have<sp/>an<sp/>LMetric<sp/>as<sp/>the<sp/>given<sp/>MetricType.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>static_assert(<ref refid="structmlpack_1_1bound_1_1meta_1_1IsLMetric" kindref="compound">meta::IsLMetric&lt;MetricType&gt;::Value</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;HRectBound<sp/>can<sp/>only<sp/>be<sp/>used<sp/>with<sp/>the<sp/>LMetric&lt;&gt;<sp/>metric<sp/>type.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimension);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref>(<ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref>&amp;&amp;<sp/>other);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref>&amp;<sp/>operator=(<ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref>&amp;&amp;<sp/>other);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>~<ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clear();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classmlpack_1_1bound_1_1HRectBound_1a7993a4f36c530e03b78b28b5f53bb286" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1bound_1_1HRectBound_1a7993a4f36c530e03b78b28b5f53bb286" kindref="member">Dim</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dim;<sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="classmlpack_1_1bound_1_1HRectBound_1a3f5bdaafab276f919fb5fbca6cc2f885" refkind="member"><highlight class="normal"><sp/><sp/>math::RangeType&lt;ElemType&gt;&amp;<sp/><ref refid="classmlpack_1_1bound_1_1HRectBound_1a3f5bdaafab276f919fb5fbca6cc2f885" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bounds[i];<sp/>}</highlight></codeline>
<codeline lineno="102" refid="classmlpack_1_1bound_1_1HRectBound_1a4ab2ad05d0e4e59b868c4c5bef904ee1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>math::RangeType&lt;ElemType&gt;&amp;<sp/><ref refid="classmlpack_1_1bound_1_1HRectBound_1a4ab2ad05d0e4e59b868c4c5bef904ee1" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="103"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bounds[i];<sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classmlpack_1_1bound_1_1HRectBound_1ab8478ff52c4d4d5e7fa6311fa39abb76" refkind="member"><highlight class="normal"><sp/><sp/>ElemType<sp/><ref refid="classmlpack_1_1bound_1_1HRectBound_1ab8478ff52c4d4d5e7fa6311fa39abb76" kindref="member">MinWidth</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>minWidth;<sp/>}</highlight></codeline>
<codeline lineno="108" refid="classmlpack_1_1bound_1_1HRectBound_1a216fa2f42fce4a6edd8f1a354d24aac2" refkind="member"><highlight class="normal"><sp/><sp/>ElemType&amp;<sp/><ref refid="classmlpack_1_1bound_1_1HRectBound_1a216fa2f42fce4a6edd8f1a354d24aac2" kindref="member">MinWidth</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>minWidth;<sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="classmlpack_1_1bound_1_1HRectBound_1aac4d643c62af7d9cc2a072aea10d2b32" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MetricType&amp;<sp/><ref refid="classmlpack_1_1bound_1_1HRectBound_1aac4d643c62af7d9cc2a072aea10d2b32" kindref="member">Metric</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>metric;<sp/>}</highlight></codeline>
<codeline lineno="113" refid="classmlpack_1_1bound_1_1HRectBound_1acc71d930ed90e73b2bc0c360835c5371" refkind="member"><highlight class="normal"><sp/><sp/>MetricType&amp;<sp/><ref refid="classmlpack_1_1bound_1_1HRectBound_1acc71d930ed90e73b2bc0c360835c5371" kindref="member">Metric</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>metric;<sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1math_1af20ca29adeac02601e8f4386bda3588e" kindref="member">Center</ref>(arma::Col&lt;ElemType&gt;&amp;<sp/>center)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>ElemType<sp/>Volume()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType&gt;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>ElemType<sp/>MinDistance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>point,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt;<ref refid="structIsVector" kindref="compound">IsVector&lt;VecType&gt;::value</ref>&gt;*<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>ElemType<sp/>MinDistance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType&gt;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>ElemType<sp/>MaxDistance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>point,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt;<ref refid="structIsVector" kindref="compound">IsVector&lt;VecType&gt;::value</ref>&gt;*<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>ElemType<sp/>MaxDistance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>math::RangeType&lt;ElemType&gt;<sp/>RangeDistance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType&gt;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>math::RangeType&lt;ElemType&gt;<sp/>RangeDistance(</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>point,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt;<ref refid="structIsVector" kindref="compound">IsVector&lt;VecType&gt;::value</ref>&gt;*<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref>&amp;<sp/>operator|=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref>&amp;<sp/>operator|=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType&gt;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1bound_1_1addr_1a64110a8c86f23288f4fef77ff8ac63a4" kindref="member">Contains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>point)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1bound_1_1addr_1a64110a8c86f23288f4fef77ff8ac63a4" kindref="member">Contains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref>&amp;<sp/>bound)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref><sp/>operator&amp;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref>&amp;<sp/>bound)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref>&amp;<sp/>operator&amp;=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref>&amp;<sp/>bound);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>ElemType<sp/>Overlap(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref>&amp;<sp/>bound)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>ElemType<sp/>Diameter()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>version);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dim;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>math::RangeType&lt;ElemType&gt;*<sp/>bounds;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>ElemType<sp/>minWidth;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>MetricType<sp/>metric;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">};</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>specialization<sp/>of<sp/>BoundTraits<sp/>for<sp/>this<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MetricType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ElemType&gt;</highlight></codeline>
<codeline lineno="251" refid="structmlpack_1_1bound_1_1BoundTraits_3_01HRectBound_3_01MetricType_00_01ElemType_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmlpack_1_1bound_1_1BoundTraits" kindref="compound">BoundTraits</ref>&lt;<ref refid="classmlpack_1_1bound_1_1HRectBound" kindref="compound">HRectBound</ref>&lt;MetricType,<sp/>ElemType&gt;&gt;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254" refid="structmlpack_1_1bound_1_1BoundTraits_3_01HRectBound_3_01MetricType_00_01ElemType_01_4_01_4_1af41e456bf5ea6c0557730318fe660d2d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasTightBounds<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">};</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hrectbound_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>MLPACK_CORE_TREE_HRECTBOUND_HPP</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/hrectbound.hpp"/>
  </compounddef>
</doxygen>
