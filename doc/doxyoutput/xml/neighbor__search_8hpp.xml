<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="neighbor__search_8hpp" kind="file" language="C++">
    <compoundname>neighbor_search.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes refid="binary__space__tree_8hpp" local="no">mlpack/core/tree/binary_space_tree.hpp</includes>
    <includes local="no">mlpack/core/tree/rectangle_tree.hpp</includes>
    <includes refid="binary__space__tree_2binary__space__tree_8hpp" local="no">mlpack/core/tree/binary_space_tree/binary_space_tree.hpp</includes>
    <includes refid="neighbor__search__stat_8hpp" local="yes">neighbor_search_stat.hpp</includes>
    <includes refid="nearest__neighbor__sort_8hpp" local="yes">sort_policies/nearest_neighbor_sort.hpp</includes>
    <includes refid="neighbor__search__rules_8hpp" local="yes">neighbor_search_rules.hpp</includes>
    <includes local="yes">neighbor_search_impl.hpp</includes>
    <includes refid="methods_2neighbor__search_2typedef_8hpp" local="yes">typedef.hpp</includes>
    <includedby refid="cf_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/cf/cf.hpp</includedby>
    <includedby refid="cosine__search_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/cosine_search.hpp</includedby>
    <includedby refid="lmetric__search_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/lmetric_search.hpp</includedby>
    <includedby refid="pearson__search_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/pearson_search.hpp</includedby>
    <includedby refid="dual__tree__kmeans_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/kmeans/dual_tree_kmeans.hpp</includedby>
    <includedby refid="constraints_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp</includedby>
    <includedby refid="methods_2neighbor__search_2typedef_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/neighbor_search/typedef.hpp</includedby>
    <includedby refid="ns__model_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp</includedby>
    <incdepgraph>
      <node id="54049">
        <label>list</label>
      </node>
      <node id="54101">
        <label>breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="54093">
        <label>binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="53999" relation="include">
        </childnode>
        <childnode refid="54090" relation="include">
        </childnode>
        <childnode refid="54094" relation="include">
        </childnode>
      </node>
      <node id="54103">
        <label>binary_space_tree/traits.hpp</label>
        <link refid="binary__space__tree_2traits_8hpp"/>
        <childnode refid="54104" relation="include">
        </childnode>
        <childnode refid="54065" relation="include">
        </childnode>
      </node>
      <node id="54046">
        <label>atomic</label>
      </node>
      <node id="54036">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="54012">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="54048">
        <label>iomanip</label>
      </node>
      <node id="54100">
        <label>queue</label>
      </node>
      <node id="54114">
        <label>typedef.hpp</label>
        <link refid="methods_2neighbor__search_2typedef_8hpp"/>
        <childnode refid="53998" relation="include">
        </childnode>
        <childnode refid="54060" relation="include">
        </childnode>
        <childnode refid="54108" relation="include">
        </childnode>
        <childnode refid="54115" relation="include">
        </childnode>
      </node>
      <node id="54110">
        <label>neighbor_search_rules.hpp</label>
        <link refid="neighbor__search__rules_8hpp"/>
        <childnode refid="54111" relation="include">
        </childnode>
        <childnode refid="54100" relation="include">
        </childnode>
        <childnode refid="54112" relation="include">
        </childnode>
      </node>
      <node id="54062">
        <label>bound_traits.hpp</label>
        <link refid="bound__traits_8hpp"/>
      </node>
      <node id="54075">
        <label>binary_space_tree/mean_split.hpp</label>
        <link refid="mean__split_8hpp"/>
        <childnode refid="53999" relation="include">
        </childnode>
        <childnode refid="54073" relation="include">
        </childnode>
        <childnode refid="54076" relation="include">
        </childnode>
      </node>
      <node id="54061">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="54106">
        <label>mlpack/core/tree/rectangle_tree.hpp</label>
      </node>
      <node id="54021">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="54022" relation="include">
        </childnode>
        <childnode refid="54024" relation="include">
        </childnode>
      </node>
      <node id="54004">
        <label>cstdint</label>
      </node>
      <node id="54013">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="54020">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="54102">
        <label>binary_space_tree/breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="54109">
        <label>nearest_neighbor_sort_impl.hpp</label>
      </node>
      <node id="54079">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="54076">
        <label>mean_split_impl.hpp</label>
      </node>
      <node id="54043">
        <label>arma_config.hpp</label>
      </node>
      <node id="54067">
        <label>hollow_ball_bound.hpp</label>
        <link refid="hollow__ball__bound_8hpp"/>
        <childnode refid="53999" relation="include">
        </childnode>
        <childnode refid="54060" relation="include">
        </childnode>
        <childnode refid="54062" relation="include">
        </childnode>
        <childnode refid="54068" relation="include">
        </childnode>
      </node>
      <node id="54091">
        <label>../statistic.hpp</label>
        <link refid="statistic_8hpp"/>
      </node>
      <node id="54107">
        <label>neighbor_search_stat.hpp</label>
        <link refid="neighbor__search__stat_8hpp"/>
        <childnode refid="53999" relation="include">
        </childnode>
      </node>
      <node id="54086">
        <label>lin_alg_impl.hpp</label>
      </node>
      <node id="54033">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="54000">
        <label>cmath</label>
      </node>
      <node id="54058">
        <label>bounds.hpp</label>
        <link refid="bounds_8hpp"/>
        <childnode refid="54059" relation="include">
        </childnode>
        <childnode refid="54060" relation="include">
        </childnode>
        <childnode refid="54062" relation="include">
        </childnode>
        <childnode refid="54063" relation="include">
        </childnode>
        <childnode refid="54065" relation="include">
        </childnode>
        <childnode refid="54067" relation="include">
        </childnode>
        <childnode refid="54069" relation="include">
        </childnode>
      </node>
      <node id="54019">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="54008">
        <label>stdexcept</label>
      </node>
      <node id="54096">
        <label>binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="53999" relation="include">
        </childnode>
        <childnode refid="54090" relation="include">
        </childnode>
        <childnode refid="54097" relation="include">
        </childnode>
      </node>
      <node id="54028">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="54013" relation="include">
        </childnode>
        <childnode refid="54015" relation="include">
        </childnode>
        <childnode refid="54016" relation="include">
        </childnode>
        <childnode refid="54014" relation="include">
        </childnode>
      </node>
      <node id="54059">
        <label>mlpack/core/math/range.hpp</label>
      </node>
      <node id="54052">
        <label>string</label>
      </node>
      <node id="54082">
        <label>binary_space_tree/rp_tree_max_split.hpp</label>
        <link refid="rp__tree__max__split_8hpp"/>
        <childnode refid="53999" relation="include">
        </childnode>
        <childnode refid="54073" relation="include">
        </childnode>
        <childnode refid="54083" relation="include">
        </childnode>
      </node>
      <node id="54074">
        <label>midpoint_split_impl.hpp</label>
      </node>
      <node id="54040">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="54041" relation="include">
        </childnode>
        <childnode refid="54007" relation="include">
        </childnode>
      </node>
      <node id="54050">
        <label>map</label>
      </node>
      <node id="54097">
        <label>dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="54085">
        <label>mlpack/core/math/lin_alg.hpp</label>
        <link refid="lin__alg_8hpp"/>
        <childnode refid="53999" relation="include">
        </childnode>
        <childnode refid="54086" relation="include">
        </childnode>
      </node>
      <node id="54002">
        <label>cfloat</label>
      </node>
      <node id="54032">
        <label>boost/variant.hpp</label>
      </node>
      <node id="54054">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="54016">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="54039">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="54040" relation="include">
        </childnode>
        <childnode refid="54016" relation="include">
        </childnode>
        <childnode refid="54023" relation="include">
        </childnode>
        <childnode refid="54041" relation="include">
        </childnode>
      </node>
      <node id="54029">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="54027">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="54013" relation="include">
        </childnode>
        <childnode refid="54015" relation="include">
        </childnode>
        <childnode refid="54016" relation="include">
        </childnode>
        <childnode refid="54014" relation="include">
        </childnode>
      </node>
      <node id="54030">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="54013" relation="include">
        </childnode>
        <childnode refid="54015" relation="include">
        </childnode>
        <childnode refid="54016" relation="include">
        </childnode>
        <childnode refid="54014" relation="include">
        </childnode>
      </node>
      <node id="54092">
        <label>binary_space_tree_impl.hpp</label>
      </node>
      <node id="54018">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="54038">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="54014" relation="include">
        </childnode>
        <childnode refid="54015" relation="include">
        </childnode>
        <childnode refid="54016" relation="include">
        </childnode>
        <childnode refid="54026" relation="include">
        </childnode>
        <childnode refid="54035" relation="include">
        </childnode>
      </node>
      <node id="54042">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="54043" relation="include">
        </childnode>
      </node>
      <node id="54098">
        <label>binary_space_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="54112">
        <label>neighbor_search_rules_impl.hpp</label>
      </node>
      <node id="54044">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="53999">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="54000" relation="include">
        </childnode>
        <childnode refid="54001" relation="include">
        </childnode>
        <childnode refid="54002" relation="include">
        </childnode>
        <childnode refid="54003" relation="include">
        </childnode>
        <childnode refid="54004" relation="include">
        </childnode>
        <childnode refid="54005" relation="include">
        </childnode>
        <childnode refid="54006" relation="include">
        </childnode>
        <childnode refid="54007" relation="include">
        </childnode>
        <childnode refid="54008" relation="include">
        </childnode>
        <childnode refid="54009" relation="include">
        </childnode>
        <childnode refid="54010" relation="include">
        </childnode>
        <childnode refid="54011" relation="include">
        </childnode>
        <childnode refid="54012" relation="include">
        </childnode>
        <childnode refid="54013" relation="include">
        </childnode>
        <childnode refid="54014" relation="include">
        </childnode>
        <childnode refid="54015" relation="include">
        </childnode>
        <childnode refid="54016" relation="include">
        </childnode>
        <childnode refid="54017" relation="include">
        </childnode>
        <childnode refid="54018" relation="include">
        </childnode>
        <childnode refid="54019" relation="include">
        </childnode>
        <childnode refid="54020" relation="include">
        </childnode>
        <childnode refid="54021" relation="include">
        </childnode>
        <childnode refid="54025" relation="include">
        </childnode>
        <childnode refid="54026" relation="include">
        </childnode>
        <childnode refid="54027" relation="include">
        </childnode>
        <childnode refid="54028" relation="include">
        </childnode>
        <childnode refid="54029" relation="include">
        </childnode>
        <childnode refid="54030" relation="include">
        </childnode>
        <childnode refid="54031" relation="include">
        </childnode>
        <childnode refid="54037" relation="include">
        </childnode>
        <childnode refid="54038" relation="include">
        </childnode>
        <childnode refid="54035" relation="include">
        </childnode>
        <childnode refid="54039" relation="include">
        </childnode>
        <childnode refid="54042" relation="include">
        </childnode>
        <childnode refid="54044" relation="include">
        </childnode>
        <childnode refid="54045" relation="include">
        </childnode>
        <childnode refid="54054" relation="include">
        </childnode>
        <childnode refid="54055" relation="include">
        </childnode>
      </node>
      <node id="54094">
        <label>single_tree_traverser_impl.hpp</label>
      </node>
      <node id="54116">
        <label>furthest_neighbor_sort_impl.hpp</label>
      </node>
      <node id="54072">
        <label>binary_space_tree/midpoint_split.hpp</label>
        <link refid="midpoint__split_8hpp"/>
        <childnode refid="53999" relation="include">
        </childnode>
        <childnode refid="54073" relation="include">
        </childnode>
        <childnode refid="54074" relation="include">
        </childnode>
      </node>
      <node id="54080">
        <label>random</label>
      </node>
      <node id="54066">
        <label>ballbound_impl.hpp</label>
      </node>
      <node id="54095">
        <label>binary_space_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="54005">
        <label>cstdio</label>
      </node>
      <node id="54070">
        <label>address.hpp</label>
        <link refid="address_8hpp"/>
      </node>
      <node id="54104">
        <label>mlpack/core/tree/tree_traits.hpp</label>
        <link refid="tree__traits_8hpp"/>
      </node>
      <node id="54009">
        <label>tuple</label>
      </node>
      <node id="54014">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="54088">
        <label>binary_space_tree/ub_tree_split.hpp</label>
        <link refid="ub__tree__split_8hpp"/>
        <childnode refid="53999" relation="include">
        </childnode>
        <childnode refid="54070" relation="include">
        </childnode>
        <childnode refid="54089" relation="include">
        </childnode>
      </node>
      <node id="54031">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="54014" relation="include">
        </childnode>
        <childnode refid="54015" relation="include">
        </childnode>
        <childnode refid="54016" relation="include">
        </childnode>
        <childnode refid="54018" relation="include">
        </childnode>
        <childnode refid="54032" relation="include">
        </childnode>
        <childnode refid="54033" relation="include">
        </childnode>
        <childnode refid="54034" relation="include">
        </childnode>
        <childnode refid="54035" relation="include">
        </childnode>
      </node>
      <node id="54090">
        <label>binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="53999" relation="include">
        </childnode>
        <childnode refid="54091" relation="include">
        </childnode>
        <childnode refid="54072" relation="include">
        </childnode>
        <childnode refid="54092" relation="include">
        </childnode>
        <childnode refid="54057" relation="include">
        </childnode>
      </node>
      <node id="54063">
        <label>hrectbound.hpp</label>
        <link refid="hrectbound_8hpp"/>
        <childnode refid="53999" relation="include">
        </childnode>
        <childnode refid="54059" relation="include">
        </childnode>
        <childnode refid="54060" relation="include">
        </childnode>
        <childnode refid="54062" relation="include">
        </childnode>
        <childnode refid="54064" relation="include">
        </childnode>
      </node>
      <node id="54056">
        <label>vector</label>
      </node>
      <node id="54087">
        <label>rp_tree_mean_split_impl.hpp</label>
      </node>
      <node id="54078">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="53999" relation="include">
        </childnode>
        <childnode refid="54079" relation="include">
        </childnode>
        <childnode refid="54080" relation="include">
        </childnode>
      </node>
      <node id="54010">
        <label>utility</label>
      </node>
      <node id="54034">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="54025">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="54057">
        <label>mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="53999" relation="include">
        </childnode>
        <childnode refid="54058" relation="include">
        </childnode>
        <childnode refid="54072" relation="include">
        </childnode>
        <childnode refid="54075" relation="include">
        </childnode>
        <childnode refid="54077" relation="include">
        </childnode>
        <childnode refid="54082" relation="include">
        </childnode>
        <childnode refid="54084" relation="include">
        </childnode>
        <childnode refid="54088" relation="include">
        </childnode>
        <childnode refid="54090" relation="include">
        </childnode>
        <childnode refid="54093" relation="include">
        </childnode>
        <childnode refid="54095" relation="include">
        </childnode>
        <childnode refid="54096" relation="include">
        </childnode>
        <childnode refid="54098" relation="include">
        </childnode>
        <childnode refid="54099" relation="include">
        </childnode>
        <childnode refid="54102" relation="include">
        </childnode>
        <childnode refid="54103" relation="include">
        </childnode>
        <childnode refid="54105" relation="include">
        </childnode>
      </node>
      <node id="54108">
        <label>sort_policies/nearest_neighbor_sort.hpp</label>
        <link refid="nearest__neighbor__sort_8hpp"/>
        <childnode refid="53999" relation="include">
        </childnode>
        <childnode refid="54109" relation="include">
        </childnode>
      </node>
      <node id="54022">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="54023" relation="include">
        </childnode>
      </node>
      <node id="54045">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="54046" relation="include">
        </childnode>
        <childnode refid="54047" relation="include">
        </childnode>
        <childnode refid="54048" relation="include">
        </childnode>
        <childnode refid="54049" relation="include">
        </childnode>
        <childnode refid="54050" relation="include">
        </childnode>
        <childnode refid="54051" relation="include">
        </childnode>
        <childnode refid="54052" relation="include">
        </childnode>
        <childnode refid="54053" relation="include">
        </childnode>
      </node>
      <node id="54023">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="53998">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search.hpp</label>
        <link refid="neighbor__search_8hpp"/>
        <childnode refid="53999" relation="include">
        </childnode>
        <childnode refid="54056" relation="include">
        </childnode>
        <childnode refid="54052" relation="include">
        </childnode>
        <childnode refid="54057" relation="include">
        </childnode>
        <childnode refid="54106" relation="include">
        </childnode>
        <childnode refid="54090" relation="include">
        </childnode>
        <childnode refid="54107" relation="include">
        </childnode>
        <childnode refid="54108" relation="include">
        </childnode>
        <childnode refid="54110" relation="include">
        </childnode>
        <childnode refid="54113" relation="include">
        </childnode>
        <childnode refid="54114" relation="include">
        </childnode>
      </node>
      <node id="54037">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="54035" relation="include">
        </childnode>
        <childnode refid="54031" relation="include">
        </childnode>
        <childnode refid="54038" relation="include">
        </childnode>
      </node>
      <node id="54006">
        <label>cstdlib</label>
      </node>
      <node id="54113">
        <label>neighbor_search_impl.hpp</label>
      </node>
      <node id="54001">
        <label>cctype</label>
      </node>
      <node id="54115">
        <label>sort_policies/furthest_neighbor_sort.hpp</label>
        <link refid="furthest__neighbor__sort_8hpp"/>
        <childnode refid="53999" relation="include">
        </childnode>
        <childnode refid="54116" relation="include">
        </childnode>
      </node>
      <node id="54024">
        <label>unordered_map</label>
      </node>
      <node id="54003">
        <label>climits</label>
      </node>
      <node id="54051">
        <label>mutex</label>
      </node>
      <node id="54047">
        <label>chrono</label>
      </node>
      <node id="54111">
        <label>mlpack/core/tree/traversal_info.hpp</label>
        <link refid="traversal__info_8hpp"/>
      </node>
      <node id="54064">
        <label>hrectbound_impl.hpp</label>
      </node>
      <node id="54055">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="54084">
        <label>binary_space_tree/rp_tree_mean_split.hpp</label>
        <link refid="rp__tree__mean__split_8hpp"/>
        <childnode refid="53999" relation="include">
        </childnode>
        <childnode refid="54082" relation="include">
        </childnode>
        <childnode refid="54073" relation="include">
        </childnode>
        <childnode refid="54085" relation="include">
        </childnode>
        <childnode refid="54087" relation="include">
        </childnode>
      </node>
      <node id="54081">
        <label>vantage_point_split_impl.hpp</label>
      </node>
      <node id="54053">
        <label>thread</label>
      </node>
      <node id="54065">
        <label>ballbound.hpp</label>
        <link refid="ballbound_8hpp"/>
        <childnode refid="53999" relation="include">
        </childnode>
        <childnode refid="54060" relation="include">
        </childnode>
        <childnode refid="54062" relation="include">
        </childnode>
        <childnode refid="54066" relation="include">
        </childnode>
      </node>
      <node id="54083">
        <label>rp_tree_max_split_impl.hpp</label>
      </node>
      <node id="54073">
        <label>mlpack/core/tree/perform_split.hpp</label>
        <link refid="perform__split_8hpp"/>
      </node>
      <node id="54041">
        <label>type_traits</label>
      </node>
      <node id="54099">
        <label>binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="53999" relation="include">
        </childnode>
        <childnode refid="54100" relation="include">
        </childnode>
        <childnode refid="54057" relation="include">
        </childnode>
        <childnode refid="54101" relation="include">
        </childnode>
      </node>
      <node id="54017">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="54105">
        <label>binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="54057" relation="include">
        </childnode>
      </node>
      <node id="54011">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="54035">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="54013" relation="include">
        </childnode>
        <childnode refid="54014" relation="include">
        </childnode>
        <childnode refid="54015" relation="include">
        </childnode>
        <childnode refid="54016" relation="include">
        </childnode>
        <childnode refid="54036" relation="include">
        </childnode>
      </node>
      <node id="54068">
        <label>hollow_ball_bound_impl.hpp</label>
      </node>
      <node id="54007">
        <label>cstring</label>
      </node>
      <node id="54026">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="54071">
        <label>cellbound_impl.hpp</label>
      </node>
      <node id="54089">
        <label>ub_tree_split_impl.hpp</label>
      </node>
      <node id="54069">
        <label>cellbound.hpp</label>
        <link refid="cellbound_8hpp"/>
        <childnode refid="53999" relation="include">
        </childnode>
        <childnode refid="54059" relation="include">
        </childnode>
        <childnode refid="54060" relation="include">
        </childnode>
        <childnode refid="54062" relation="include">
        </childnode>
        <childnode refid="54070" relation="include">
        </childnode>
        <childnode refid="54071" relation="include">
        </childnode>
      </node>
      <node id="54015">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="54060">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="53999" relation="include">
        </childnode>
        <childnode refid="54061" relation="include">
        </childnode>
      </node>
      <node id="54077">
        <label>binary_space_tree/vantage_point_split.hpp</label>
        <link refid="vantage__point__split_8hpp"/>
        <childnode refid="53999" relation="include">
        </childnode>
        <childnode refid="54073" relation="include">
        </childnode>
        <childnode refid="54078" relation="include">
        </childnode>
        <childnode refid="54081" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="54131">
        <label>/home/aakash/mlpack/src/mlpack/methods/lmnn/lmnn_function.hpp</label>
        <link refid="lmnn__function_8hpp"/>
        <childnode refid="54132" relation="include">
        </childnode>
      </node>
      <node id="54133">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/typedef.hpp</label>
        <link refid="methods_2neighbor__search_2typedef_8hpp"/>
        <childnode refid="54117" relation="include">
        </childnode>
      </node>
      <node id="54121">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp</label>
        <link refid="cf__model_8hpp"/>
      </node>
      <node id="54123">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp</label>
        <link refid="regularized__svd__method_8hpp"/>
      </node>
      <node id="54120">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/bias_svd_method.hpp</label>
        <link refid="bias__svd__method_8hpp"/>
      </node>
      <node id="54118">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf.hpp</label>
        <link refid="cf_8hpp"/>
        <childnode refid="54119" relation="include">
        </childnode>
        <childnode refid="54121" relation="include">
        </childnode>
        <childnode refid="54122" relation="include">
        </childnode>
        <childnode refid="54124" relation="include">
        </childnode>
      </node>
      <node id="54126">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/cosine_search.hpp</label>
        <link refid="cosine__search_8hpp"/>
      </node>
      <node id="54129">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/dual_tree_kmeans.hpp</label>
        <link refid="dual__tree__kmeans_8hpp"/>
      </node>
      <node id="54124">
        <label>/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp</label>
        <link refid="svdplusplus_8hpp"/>
        <childnode refid="54125" relation="include">
        </childnode>
      </node>
      <node id="54134">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp</label>
        <link refid="ns__model_8hpp"/>
      </node>
      <node id="54130">
        <label>/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp</label>
        <link refid="constraints_8hpp"/>
        <childnode refid="54131" relation="include">
        </childnode>
      </node>
      <node id="54127">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/lmetric_search.hpp</label>
        <link refid="lmetric__search_8hpp"/>
        <childnode refid="54118" relation="include">
        </childnode>
      </node>
      <node id="54132">
        <label>/home/aakash/mlpack/src/mlpack/methods/lmnn/lmnn.hpp</label>
        <link refid="lmnn_8hpp"/>
      </node>
      <node id="54119">
        <label>/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp</label>
        <link refid="bias__svd_8hpp"/>
        <childnode refid="54120" relation="include">
        </childnode>
      </node>
      <node id="54125">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svdplusplus_method.hpp</label>
        <link refid="svdplusplus__method_8hpp"/>
      </node>
      <node id="54122">
        <label>/home/aakash/mlpack/src/mlpack/methods/regularized_svd/regularized_svd.hpp</label>
        <link refid="regularized__svd_8hpp"/>
        <childnode refid="54123" relation="include">
        </childnode>
      </node>
      <node id="54117">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search.hpp</label>
        <link refid="neighbor__search_8hpp"/>
        <childnode refid="54118" relation="include">
        </childnode>
        <childnode refid="54126" relation="include">
        </childnode>
        <childnode refid="54127" relation="include">
        </childnode>
        <childnode refid="54128" relation="include">
        </childnode>
        <childnode refid="54129" relation="include">
        </childnode>
        <childnode refid="54130" relation="include">
        </childnode>
        <childnode refid="54133" relation="include">
        </childnode>
        <childnode refid="54134" relation="include">
        </childnode>
      </node>
      <node id="54128">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/pearson_search.hpp</label>
        <link refid="pearson__search_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1neighbor_1_1LeafSizeNSWrapper" prot="public">mlpack::neighbor::LeafSizeNSWrapper</innerclass>
    <innerclass refid="classmlpack_1_1neighbor_1_1NeighborSearch" prot="public">mlpack::neighbor::NeighborSearch</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1neighbor">mlpack::neighbor</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ryan Curtin</para></simplesect>
Defines the NeighborSearch class, which performs an abstract nearest-neighbor-like query on two datasets.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_NEIGHBOR_SEARCH_NEIGHBOR_SEARCH_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_NEIGHBOR_SEARCH_NEIGHBOR_SEARCH_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="binary__space__tree_8hpp" kindref="compound">mlpack/core/tree/binary_space_tree.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mlpack/core/tree/rectangle_tree.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="binary__space__tree_2binary__space__tree_8hpp" kindref="compound">mlpack/core/tree/binary_space_tree/binary_space_tree.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="neighbor__search__stat_8hpp" kindref="compound">neighbor_search_stat.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nearest__neighbor__sort_8hpp" kindref="compound">sort_policies/nearest_neighbor_sort.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="neighbor__search__rules_8hpp" kindref="compound">neighbor_search_rules.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Neighbor-search<sp/>routines.<sp/>These<sp/>include<sp/>all-nearest-neighbors<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all-furthest-neighbors<sp/>searches.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">neighbor<sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Forward<sp/>declaration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SortPolicy,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMetricType,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeStatType,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMatType&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TreeType,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>RuleType&gt;<sp/>class<sp/>DualTreeTraversalType,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template&lt;typename<sp/>RuleType&gt;<sp/>class<sp/>SingleTreeTraversalType&gt;</highlight></codeline>
<codeline lineno="40" refid="classmlpack_1_1neighbor_1_1LeafSizeNSWrapper" refkind="compound"><highlight class="normal">class<sp/><ref refid="classmlpack_1_1neighbor_1_1LeafSizeNSWrapper" kindref="compound">LeafSizeNSWrapper</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15" kindref="member">NeighborSearchMode</ref></highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45" refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15a84b6e9858a8a0186de25e6ac1b95fce9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15a84b6e9858a8a0186de25e6ac1b95fce9" kindref="member">NAIVE_MODE</ref>,</highlight></codeline>
<codeline lineno="46" refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15a4963da1562f5c21be0ed6f3b4e438f12" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15a4963da1562f5c21be0ed6f3b4e438f12" kindref="member">SINGLE_TREE_MODE</ref>,</highlight></codeline>
<codeline lineno="47" refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15a902f8ca27975735ab2151d26152c6d2a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15a902f8ca27975735ab2151d26152c6d2a" kindref="member">DUAL_TREE_MODE</ref>,</highlight></codeline>
<codeline lineno="48" refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15a21392e2b53181ee5d4d3402fba104846" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15a21392e2b53181ee5d4d3402fba104846" kindref="member">GREEDY_SINGLE_TREE_MODE</ref></highlight></codeline>
<codeline lineno="49"><highlight class="normal">};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SortPolicy<sp/>=<sp/><ref refid="namespacemlpack_1_1neighbor_1af3f11fce33c041aa26b1c91107f71b0f" kindref="member">NearestNeighborSort</ref>,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MetricType<sp/>=<sp/><ref refid="namespacemlpack_1_1metric_1a0306f114fdf32dcdfa8f015408cfc37d" kindref="member">mlpack::metric::EuclideanDistance</ref>,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType<sp/>=<sp/>arma::mat,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMetricType,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeStatType,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMatType&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TreeType<sp/>=<sp/><ref refid="namespacemlpack_1_1tree_1a73c2146f8d1da65d927c7746bfe7e750" kindref="member">tree::KDTree</ref>,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RuleType&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DualTreeTraversalType<sp/>=</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TreeType&lt;MetricType,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearchStat" kindref="compound">NeighborSearchStat&lt;SortPolicy&gt;</ref>,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MatType&gt;::template<sp/>DualTreeTraverser,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RuleType&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SingleTreeTraversalType<sp/>=</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TreeType&lt;MetricType,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NeighborSearchStat&lt;SortPolicy&gt;,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MatType&gt;::template<sp/>SingleTreeTraverser&gt;</highlight></codeline>
<codeline lineno="88" refid="classmlpack_1_1neighbor_1_1NeighborSearch" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch" kindref="compound">NeighborSearch</ref></highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="92" refid="classmlpack_1_1neighbor_1_1NeighborSearch_1ae33127288015e4076598a66f1cbf9526" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TreeType&lt;MetricType,<sp/>NeighborSearchStat&lt;SortPolicy&gt;,<sp/>MatType&gt;<sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1ae33127288015e4076598a66f1cbf9526" kindref="member">Tree</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1affa7257868588792956a7f30493ae564" kindref="member">NeighborSearch</ref>(MatType<sp/>referenceSet,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15" kindref="member">NeighborSearchMode</ref><sp/>mode<sp/>=<sp/><ref refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15a902f8ca27975735ab2151d26152c6d2a" kindref="member">DUAL_TREE_MODE</ref>,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MetricType<sp/>metric<sp/>=<sp/>MetricType());</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1affa7257868588792956a7f30493ae564" kindref="member">NeighborSearch</ref>(Tree<sp/>referenceTree,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15" kindref="member">NeighborSearchMode</ref><sp/>mode<sp/>=<sp/><ref refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15a902f8ca27975735ab2151d26152c6d2a" kindref="member">DUAL_TREE_MODE</ref>,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MetricType<sp/>metric<sp/>=<sp/>MetricType());</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1affa7257868588792956a7f30493ae564" kindref="member">NeighborSearch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15" kindref="member">NeighborSearchMode</ref><sp/>mode<sp/>=<sp/><ref refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15a902f8ca27975735ab2151d26152c6d2a" kindref="member">DUAL_TREE_MODE</ref>,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MetricType<sp/>metric<sp/>=<sp/>MetricType());</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1affa7257868588792956a7f30493ae564" kindref="member">NeighborSearch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch" kindref="compound">NeighborSearch</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1affa7257868588792956a7f30493ae564" kindref="member">NeighborSearch</ref>(<ref refid="classmlpack_1_1neighbor_1_1NeighborSearch" kindref="compound">NeighborSearch</ref>&amp;&amp;<sp/>other);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch" kindref="compound">NeighborSearch</ref>&amp;<sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a63578ba36477ae9cd29b2a2f1ddeb4da" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch" kindref="compound">NeighborSearch</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch" kindref="compound">NeighborSearch</ref>&amp;<sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a63578ba36477ae9cd29b2a2f1ddeb4da" kindref="member">operator=</ref>(<ref refid="classmlpack_1_1neighbor_1_1NeighborSearch" kindref="compound">NeighborSearch</ref>&amp;&amp;<sp/>other);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a248061a2d110a8abb094008a0a50af2b" kindref="member">~NeighborSearch</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a27ba39af83e3cb01f2e6fbec159adf0e" kindref="member">Train</ref>(MatType<sp/>referenceSet);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a27ba39af83e3cb01f2e6fbec159adf0e" kindref="member">Train</ref>(Tree<sp/>referenceTree);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a0de302ca0602fe721ac01f073d5e630f" kindref="member">Search</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>querySet,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;size_t&gt;&amp;<sp/>neighbors,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>distances);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a0de302ca0602fe721ac01f073d5e630f" kindref="member">Search</ref>(Tree&amp;<sp/>queryTree,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;size_t&gt;&amp;<sp/>neighbors,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>distances,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sameSet<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a0de302ca0602fe721ac01f073d5e630f" kindref="member">Search</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;size_t&gt;&amp;<sp/>neighbors,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>distances);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1afe70b46abe9ea3b9033ae1ecf0834d9f" kindref="member">EffectiveError</ref>(arma::mat&amp;<sp/>foundDistances,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>realDistances);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1ae399494c0386750e39eeab310a1e22d2" kindref="member">Recall</ref>(arma::Mat&lt;size_t&gt;&amp;<sp/>foundNeighbors,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;size_t&gt;&amp;<sp/>realNeighbors);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a3f4bd5d0aa64ea090796725f7755287d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a3f4bd5d0aa64ea090796725f7755287d" kindref="member">BaseCases</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseCases;<sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a4d1e40c0bf406280a237ca1b487e3c62" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a4d1e40c0bf406280a237ca1b487e3c62" kindref="member">Scores</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scores;<sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a23cdc4b734a3dc41722aaded92244fd4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15" kindref="member">NeighborSearchMode</ref><sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a23cdc4b734a3dc41722aaded92244fd4" kindref="member">SearchMode</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>searchMode;<sp/>}</highlight></codeline>
<codeline lineno="322" refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a6071cc412821cb4ce4364fbc2a0a8533" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15" kindref="member">NeighborSearchMode</ref>&amp;<sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a6071cc412821cb4ce4364fbc2a0a8533" kindref="member">SearchMode</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>searchMode;<sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="classmlpack_1_1neighbor_1_1NeighborSearch_1af6d960193bb5db37e51416e12bf720de" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1af6d960193bb5db37e51416e12bf720de" kindref="member">Epsilon</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>epsilon;<sp/>}</highlight></codeline>
<codeline lineno="327" refid="classmlpack_1_1neighbor_1_1NeighborSearch_1ab6a080993b32456443eced5df2f8b9b9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1ab6a080993b32456443eced5df2f8b9b9" kindref="member">Epsilon</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>epsilon;<sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a0a975940b302b4efec85bbe2d8b36251" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a0a975940b302b4efec85bbe2d8b36251" kindref="member">ReferenceSet</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*referenceSet;<sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a6a609f8eeba6eae0c8d0f53a18562cd6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tree&amp;<sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a6a609f8eeba6eae0c8d0f53a18562cd6" kindref="member">ReferenceTree</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*referenceTree;<sp/>}</highlight></codeline>
<codeline lineno="335" refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a87852e0bc1eb566c799b68ebcddfe4f4" refkind="member"><highlight class="normal"><sp/><sp/>Tree&amp;<sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a87852e0bc1eb566c799b68ebcddfe4f4" kindref="member">ReferenceTree</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*referenceTree;<sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch_1a72d63b74c8166dff8e1a9006905ad9ca" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>version);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>std::vector&lt;size_t&gt;<sp/>oldFromNewReferences;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>Tree*<sp/>referenceTree;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType*<sp/>referenceSet;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><ref refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15" kindref="member">NeighborSearchMode</ref><sp/>searchMode;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>MetricType<sp/>metric;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>baseCases;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>scores;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>treeNeedsReset;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1neighbor_1_1LeafSizeNSWrapper" kindref="compound">LeafSizeNSWrapper</ref>&lt;SortPolicy,<sp/>TreeType,<sp/>DualTreeTraversalType,</highlight></codeline>
<codeline lineno="368" refid="classmlpack_1_1neighbor_1_1NeighborSearch_1af1f7a5d8e6dbc008c92eaf979c80d843" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SingleTreeTraversalType&gt;;</highlight></codeline>
<codeline lineno="369"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>NeighborSearch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>neighbor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;neighbor_search_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>convenience<sp/>typedefs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="methods_2neighbor__search_2typedef_8hpp" kindref="compound">typedef.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search.hpp"/>
  </compounddef>
</doxygen>
