<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1regression_1_1SoftmaxRegression" kind="class" language="C++" prot="public">
    <compoundname>mlpack::regression::SoftmaxRegression</compoundname>
    <includes refid="softmax__regression_8hpp" local="no">softmax_regression.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1regression_1_1SoftmaxRegression_1ab584b1c722e6d7db3c7a85c57ea37a18" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fitIntercept</definition>
        <argsstring></argsstring>
        <name>fitIntercept</name>
        <briefdescription>
<para>Intercept term flag. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="251" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1regression_1_1SoftmaxRegression_1a3db359547eed8cfd48ca821d95f577af" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double lambda</definition>
        <argsstring></argsstring>
        <name>lambda</name>
        <briefdescription>
<para>L2-regularization constant. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="249" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1regression_1_1SoftmaxRegression_1a4dd554142bdfbb014ddcac55577facef" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t numClasses</definition>
        <argsstring></argsstring>
        <name>numClasses</name>
        <briefdescription>
<para>Number of classes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="247" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1regression_1_1SoftmaxRegression_1ac475c49ee5a4f316e1dbc6b7dab47b6f" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat parameters</definition>
        <argsstring></argsstring>
        <name>parameters</name>
        <briefdescription>
<para>Parameters after optimization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="245" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" bodystart="245" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1regression_1_1SoftmaxRegression_1ac58494dce3a8588ef3eab8a2a768a9b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SoftmaxRegression</definition>
        <argsstring>(const size_t inputSize=0, const size_t numClasses=0, const bool fitIntercept=false)</argsstring>
        <name>SoftmaxRegression</name>
        <param>
          <type>const size_t</type>
          <declname>inputSize</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const size_t</type>
          <declname>numClasses</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>fitIntercept</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Initialize the <ref refid="classmlpack_1_1regression_1_1SoftmaxRegression" kindref="compound">SoftmaxRegression</ref> without performing training. </para>        </briefdescription>
        <detaileddescription>
<para>Default value of lambda is 0.0001. Be sure to use <ref refid="classmlpack_1_1regression_1_1SoftmaxRegression_1a38907cc8f0a90a02d12c7675a49dc924" kindref="member">Train()</ref> before calling <ref refid="classmlpack_1_1regression_1_1SoftmaxRegression_1a25d8b43bbbdabff816a6769ab7b35557" kindref="member">Classify()</ref> or <ref refid="classmlpack_1_1regression_1_1SoftmaxRegression_1af5c25234688c75c84a65607e820985d1" kindref="member">ComputeAccuracy()</ref>, otherwise the results may be meaningless.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the input feature vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numClasses</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of classes for classification. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fitIntercept</parametername>
</parameternamelist>
<parameterdescription>
<para>add intercept term or not. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1SoftmaxRegression_1a9a597e9981cdce3d51df072db082ee44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OptimizerType</type>
            <defval>ens::L_BFGS</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>SoftmaxRegression</definition>
        <argsstring>(const arma::mat &amp;data, const arma::Row&lt; size_t &gt; &amp;labels, const size_t numClasses, const double lambda=0.0001, const bool fitIntercept=false, OptimizerType optimizer=OptimizerType())</argsstring>
        <name>SoftmaxRegression</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const arma::Row&lt; size_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>numClasses</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>lambda</declname>
          <defval>0.0001</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>fitIntercept</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>OptimizerType</type>
          <declname>optimizer</declname>
          <defval>OptimizerType()</defval>
        </param>
        <briefdescription>
<para>Construct the <ref refid="classmlpack_1_1regression_1_1SoftmaxRegression" kindref="compound">SoftmaxRegression</ref> class with the provided data and labels. </para>        </briefdescription>
        <detaileddescription>
<para>This will train the model. Optionally, the parameter &apos;lambda&apos; can be passed, which controls the amount of L2-regularization in the objective function. By default, the model takes a small value.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OptimizerType</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired optimizer type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Input training features. Each column associate with one sample </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Labels associated with the feature data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numClasses</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of classes for classification. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>optimizer</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired optimizer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambda</parametername>
</parameternamelist>
<parameterdescription>
<para>L2-regularization constant. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fitIntercept</parametername>
</parameternamelist>
<parameterdescription>
<para>add intercept term or not. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1SoftmaxRegression_1a8f923481e4c78c1b0a7d50cf6aed2bfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OptimizerType</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>CallbackTypes</declname>
            <defname>CallbackTypes</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>SoftmaxRegression</definition>
        <argsstring>(const arma::mat &amp;data, const arma::Row&lt; size_t &gt; &amp;labels, const size_t numClasses, const double lambda, const bool fitIntercept, OptimizerType optimizer, CallbackTypes &amp;&amp;... callbacks)</argsstring>
        <name>SoftmaxRegression</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const arma::Row&lt; size_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>numClasses</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>lambda</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>fitIntercept</declname>
        </param>
        <param>
          <type>OptimizerType</type>
          <declname>optimizer</declname>
        </param>
        <param>
          <type>CallbackTypes &amp;&amp;...</type>
          <declname>callbacks</declname>
        </param>
        <briefdescription>
<para>Construct the <ref refid="classmlpack_1_1regression_1_1SoftmaxRegression" kindref="compound">SoftmaxRegression</ref> class with the provided data and labels. </para>        </briefdescription>
        <detaileddescription>
<para>This will train the model. Optionally, the parameter &apos;lambda&apos; can be passed, which controls the amount of L2-regularization in the objective function. By default, the model takes a small value.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OptimizerType</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired optimizer type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CallbackTypes</parametername>
</parameternamelist>
<parameterdescription>
<para>Types of Callback Functions. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Input training features. Each column associate with one sample </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Labels associated with the feature data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numClasses</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of classes for classification. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambda</parametername>
</parameternamelist>
<parameterdescription>
<para>L2-regularization constant. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fitIntercept</parametername>
</parameternamelist>
<parameterdescription>
<para>add intercept term or not. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>optimizer</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired optimizer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callbacks</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function for ensmallen optimizer <computeroutput>OptimizerType</computeroutput>. See <ulink url="https://www.ensmallen.org/docs.html#callback-documentation">https://www.ensmallen.org/docs.html#callback-documentation</ulink>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1SoftmaxRegression_1a25d8b43bbbdabff816a6769ab7b35557" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Classify</definition>
        <argsstring>(const arma::mat &amp;dataset, arma::Row&lt; size_t &gt; &amp;labels) const</argsstring>
        <name>Classify</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>dataset</declname>
        </param>
        <param>
          <type>arma::Row&lt; size_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
<para>Classify the given points, returning the predicted labels for each point. </para>        </briefdescription>
        <detaileddescription>
<para>The function calculates the probabilities for every class, given a data point. It then chooses the class which has the highest probability among all. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataset</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of points to classify. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Predicted labels for each point. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1SoftmaxRegression_1aa610310b354b7badd88041ca07883569" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VecType</type>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t Classify</definition>
        <argsstring>(const VecType &amp;point) const</argsstring>
        <name>Classify</name>
        <param>
          <type>const VecType &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Classify the given point. </para>        </briefdescription>
        <detaileddescription>
<para>The predicted class label is returned. The function calculates the probabilites for every class, given the point. It then chooses the class which has the highest probability among all. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to be classified. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Predicted class label of the point. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1SoftmaxRegression_1a5ad08eb2229120c150692a9a72acbc78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Classify</definition>
        <argsstring>(const arma::mat &amp;dataset, arma::Row&lt; size_t &gt; &amp;labels, arma::mat &amp;probabilities) const</argsstring>
        <name>Classify</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>dataset</declname>
        </param>
        <param>
          <type>arma::Row&lt; size_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>probabilities</declname>
        </param>
        <briefdescription>
<para>Classify the given points, returning class probabilities and predicted class label for each point. </para>        </briefdescription>
        <detaileddescription>
<para>The function calculates the probabilities for every class, given a data point. It then chooses the class which has the highest probability among all.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataset</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix of data points to be classified. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Predicted labels for each point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>probabilities</parametername>
</parameternamelist>
<parameterdescription>
<para>Class probabilities for each point. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1SoftmaxRegression_1a69f3901bd0cb524d727a5273609456aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Classify</definition>
        <argsstring>(const arma::mat &amp;dataset, arma::mat &amp;probabilities) const</argsstring>
        <name>Classify</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>dataset</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>probabilities</declname>
        </param>
        <briefdescription>
<para>Classify the given points, returning class probabilities for each point. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataset</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix of data points to be classified. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>probabilities</parametername>
</parameternamelist>
<parameterdescription>
<para>Class probabilities for each point. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1SoftmaxRegression_1af5c25234688c75c84a65607e820985d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ComputeAccuracy</definition>
        <argsstring>(const arma::mat &amp;testData, const arma::Row&lt; size_t &gt; &amp;labels) const</argsstring>
        <name>ComputeAccuracy</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>testData</declname>
        </param>
        <param>
          <type>const arma::Row&lt; size_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
<para>Computes accuracy of the learned model given the feature data and the labels associated with each data point. </para>        </briefdescription>
        <detaileddescription>
<para>Predictions are made using the provided data and are compared with the actual labels.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>testData</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix of data points using which predictions are made. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of labels associated with the data. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1SoftmaxRegression_1a71c4a6c2db59e7a14196cc6e9846a29b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t FeatureSize</definition>
        <argsstring>() const</argsstring>
        <name>FeatureSize</name>
        <briefdescription>
<para>Gets the features size of the training data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="227" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" bodystart="227" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1SoftmaxRegression_1a2878e0828ecdc1d486b0f43a81f95059" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool FitIntercept</definition>
        <argsstring>() const</argsstring>
        <name>FitIntercept</name>
        <briefdescription>
<para>Gets the intercept term flag. We can&apos;t change this after training. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="219" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" bodystart="219" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1SoftmaxRegression_1aaf66629b989a326453647f42443c6a0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; Lambda</definition>
        <argsstring>()</argsstring>
        <name>Lambda</name>
        <briefdescription>
<para>Sets the regularization parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="214" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" bodystart="214" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1SoftmaxRegression_1a53535041275cedd0ec3de67ca032aa94" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Lambda</definition>
        <argsstring>() const</argsstring>
        <name>Lambda</name>
        <briefdescription>
<para>Gets the regularization parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="216" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" bodystart="216" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1SoftmaxRegression_1ac9b6fde1dc1604ba744b1e6ab5b1d499" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t &amp;</type>
        <definition>size_t&amp; NumClasses</definition>
        <argsstring>()</argsstring>
        <name>NumClasses</name>
        <briefdescription>
<para>Sets the number of classes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="209" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" bodystart="209" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1SoftmaxRegression_1a088ebfdf3c7a9e7eea81716d0c55b5a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t NumClasses</definition>
        <argsstring>() const</argsstring>
        <name>NumClasses</name>
        <briefdescription>
<para>Gets the number of classes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="211" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" bodystart="211" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1SoftmaxRegression_1a043f0ccd62e6711a18e0d81047be9a0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>arma::mat &amp;</type>
        <definition>arma::mat&amp; Parameters</definition>
        <argsstring>()</argsstring>
        <name>Parameters</name>
        <briefdescription>
<para>Get the model parameters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="222" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" bodystart="222" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1SoftmaxRegression_1aa68d74dc1e86e4352e00a3cab83a0e4a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::mat &amp;</type>
        <definition>const arma::mat&amp; Parameters</definition>
        <argsstring>() const</argsstring>
        <name>Parameters</name>
        <briefdescription>
<para>Get the model parameters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="224" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" bodystart="224" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1SoftmaxRegression_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the <ref refid="classmlpack_1_1regression_1_1SoftmaxRegression" kindref="compound">SoftmaxRegression</ref> model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="235" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" bodystart="235" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1SoftmaxRegression_1a38907cc8f0a90a02d12c7675a49dc924" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OptimizerType</type>
            <defval>ens::L_BFGS</defval>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double Train</definition>
        <argsstring>(const arma::mat &amp;data, const arma::Row&lt; size_t &gt; &amp;labels, const size_t numClasses, OptimizerType optimizer=OptimizerType())</argsstring>
        <name>Train</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const arma::Row&lt; size_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>numClasses</declname>
        </param>
        <param>
          <type>OptimizerType</type>
          <declname>optimizer</declname>
          <defval>OptimizerType()</defval>
        </param>
        <briefdescription>
<para>Train the softmax regression with the given training data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OptimizerType</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired optimizer type. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data with each column as one example. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Labels associated with the feature data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numClasses</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of classes for classification. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>optimizer</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired optimizer. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Objective value of the final point. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="184" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1SoftmaxRegression_1ad62fd3ac08f393bfea5ee854bfc582a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OptimizerType</type>
            <defval>ens::L_BFGS</defval>
          </param>
          <param>
            <type>typename...</type>
            <declname>CallbackTypes</declname>
            <defname>CallbackTypes</defname>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double Train</definition>
        <argsstring>(const arma::mat &amp;data, const arma::Row&lt; size_t &gt; &amp;labels, const size_t numClasses, OptimizerType optimizer, CallbackTypes &amp;&amp;... callbacks)</argsstring>
        <name>Train</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const arma::Row&lt; size_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>numClasses</declname>
        </param>
        <param>
          <type>OptimizerType</type>
          <declname>optimizer</declname>
        </param>
        <param>
          <type>CallbackTypes &amp;&amp;...</type>
          <declname>callbacks</declname>
        </param>
        <briefdescription>
<para>Train the softmax regression with the given training data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OptimizerType</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired optimizer type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CallbackTypes</parametername>
</parameternamelist>
<parameterdescription>
<para>Types of Callback Functions. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data with each column as one example. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Labels associated with the feature data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numClasses</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of classes for classification. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>optimizer</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired optimizer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callbacks</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function for ensmallen optimizer <computeroutput>OptimizerType</computeroutput>. See <ulink url="https://www.ensmallen.org/docs.html#callback-documentation">https://www.ensmallen.org/docs.html#callback-documentation</ulink>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Objective value of the final point. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="202" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Softmax Regression is a classifier which can be used for classification when the data available can take two or more class values. </para>    </briefdescription>
    <detaileddescription>
<para>It is a generalization of Logistic Regression (which is used only for binary classification). The model has a different set of parameters for each class, but can be easily converted into a vectorized implementation as has been done in this module. The model can be used for direct classification of feature data or in conjunction with unsupervised learning methods. More technical details about the model can be found on the following webpage:</para><para><ulink url="http://ufldl.stanford.edu/wiki/index.php/Softmax_Regression">http://ufldl.stanford.edu/wiki/index.php/Softmax_Regression</ulink></para><para>An example on how to use the interface is shown below:</para><para><programlisting><codeline><highlight class="normal">arma::mat<sp/>trainData;<sp/>//<sp/>Training<sp/>data<sp/>matrix.</highlight></codeline>
<codeline><highlight class="normal">arma::Row&lt;size_t&gt;<sp/>labels;<sp/>//<sp/>Labels<sp/>associated<sp/>with<sp/>the<sp/>data.</highlight></codeline>
<codeline><highlight class="normal">const<sp/>size_t<sp/>inputSize<sp/>=<sp/>1000;<sp/>//<sp/>Size<sp/>of<sp/>input<sp/>feature<sp/>vector.</highlight></codeline>
<codeline><highlight class="normal">const<sp/>size_t<sp/>numClasses<sp/>=<sp/>10;<sp/>//<sp/>Number<sp/>of<sp/>classes.</highlight></codeline>
<codeline><highlight class="normal">const<sp/>double<sp/>lambda<sp/>=<sp/>0.0001;<sp/>//<sp/>L2-Regularization<sp/>parameter.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">const<sp/>size_t<sp/>numBasis<sp/>=<sp/>5;<sp/>//<sp/>Parameter<sp/>required<sp/>for<sp/>L-BFGS<sp/>algorithm.</highlight></codeline>
<codeline><highlight class="normal">const<sp/>size_t<sp/>numIterations<sp/>=<sp/>100;<sp/>//<sp/>Maximum<sp/>number<sp/>of<sp/>iterations.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Train<sp/>the<sp/>model<sp/>using<sp/>an<sp/>instantiated<sp/>optimizer<sp/>for<sp/>the<sp/>training.</highlight></codeline>
<codeline><highlight class="normal">SoftmaxRegression<sp/>regressor(trainData.n_rows,<sp/>numClasses);</highlight></codeline>
<codeline><highlight class="normal">ens::L_BFGS<sp/>optimizer(numBasis,<sp/>numIterations);</highlight></codeline>
<codeline><highlight class="normal">regressor.Train(trainData,<sp/>labels,<sp/>numClasses,<sp/>std::move(optimizer));</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">arma::mat<sp/>testData;<sp/>//<sp/>Test<sp/>data<sp/>matrix.</highlight></codeline>
<codeline><highlight class="normal">arma::Row&lt;size_t&gt;<sp/>predictions;<sp/>//<sp/>Vectors<sp/>to<sp/>store<sp/>predictions<sp/>in.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Obtain<sp/>predictions<sp/>from<sp/>both<sp/>the<sp/>learned<sp/>models.</highlight></codeline>
<codeline><highlight class="normal">regressor.Classify(testData,<sp/>predictions);</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" line="60" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/softmax_regression/softmax_regression.hpp" bodystart="59" bodyend="252"/>
    <listofallmembers>
      <member refid="classmlpack_1_1regression_1_1SoftmaxRegression_1a25d8b43bbbdabff816a6769ab7b35557" prot="public" virt="non-virtual"><scope>mlpack::regression::SoftmaxRegression</scope><name>Classify</name></member>
      <member refid="classmlpack_1_1regression_1_1SoftmaxRegression_1aa610310b354b7badd88041ca07883569" prot="public" virt="non-virtual"><scope>mlpack::regression::SoftmaxRegression</scope><name>Classify</name></member>
      <member refid="classmlpack_1_1regression_1_1SoftmaxRegression_1a5ad08eb2229120c150692a9a72acbc78" prot="public" virt="non-virtual"><scope>mlpack::regression::SoftmaxRegression</scope><name>Classify</name></member>
      <member refid="classmlpack_1_1regression_1_1SoftmaxRegression_1a69f3901bd0cb524d727a5273609456aa" prot="public" virt="non-virtual"><scope>mlpack::regression::SoftmaxRegression</scope><name>Classify</name></member>
      <member refid="classmlpack_1_1regression_1_1SoftmaxRegression_1af5c25234688c75c84a65607e820985d1" prot="public" virt="non-virtual"><scope>mlpack::regression::SoftmaxRegression</scope><name>ComputeAccuracy</name></member>
      <member refid="classmlpack_1_1regression_1_1SoftmaxRegression_1a71c4a6c2db59e7a14196cc6e9846a29b" prot="public" virt="non-virtual"><scope>mlpack::regression::SoftmaxRegression</scope><name>FeatureSize</name></member>
      <member refid="classmlpack_1_1regression_1_1SoftmaxRegression_1a2878e0828ecdc1d486b0f43a81f95059" prot="public" virt="non-virtual"><scope>mlpack::regression::SoftmaxRegression</scope><name>FitIntercept</name></member>
      <member refid="classmlpack_1_1regression_1_1SoftmaxRegression_1ab584b1c722e6d7db3c7a85c57ea37a18" prot="private" virt="non-virtual"><scope>mlpack::regression::SoftmaxRegression</scope><name>fitIntercept</name></member>
      <member refid="classmlpack_1_1regression_1_1SoftmaxRegression_1a3db359547eed8cfd48ca821d95f577af" prot="private" virt="non-virtual"><scope>mlpack::regression::SoftmaxRegression</scope><name>lambda</name></member>
      <member refid="classmlpack_1_1regression_1_1SoftmaxRegression_1aaf66629b989a326453647f42443c6a0c" prot="public" virt="non-virtual"><scope>mlpack::regression::SoftmaxRegression</scope><name>Lambda</name></member>
      <member refid="classmlpack_1_1regression_1_1SoftmaxRegression_1a53535041275cedd0ec3de67ca032aa94" prot="public" virt="non-virtual"><scope>mlpack::regression::SoftmaxRegression</scope><name>Lambda</name></member>
      <member refid="classmlpack_1_1regression_1_1SoftmaxRegression_1ac9b6fde1dc1604ba744b1e6ab5b1d499" prot="public" virt="non-virtual"><scope>mlpack::regression::SoftmaxRegression</scope><name>NumClasses</name></member>
      <member refid="classmlpack_1_1regression_1_1SoftmaxRegression_1a088ebfdf3c7a9e7eea81716d0c55b5a3" prot="public" virt="non-virtual"><scope>mlpack::regression::SoftmaxRegression</scope><name>NumClasses</name></member>
      <member refid="classmlpack_1_1regression_1_1SoftmaxRegression_1a4dd554142bdfbb014ddcac55577facef" prot="private" virt="non-virtual"><scope>mlpack::regression::SoftmaxRegression</scope><name>numClasses</name></member>
      <member refid="classmlpack_1_1regression_1_1SoftmaxRegression_1ac475c49ee5a4f316e1dbc6b7dab47b6f" prot="private" virt="non-virtual"><scope>mlpack::regression::SoftmaxRegression</scope><name>parameters</name></member>
      <member refid="classmlpack_1_1regression_1_1SoftmaxRegression_1a043f0ccd62e6711a18e0d81047be9a0a" prot="public" virt="non-virtual"><scope>mlpack::regression::SoftmaxRegression</scope><name>Parameters</name></member>
      <member refid="classmlpack_1_1regression_1_1SoftmaxRegression_1aa68d74dc1e86e4352e00a3cab83a0e4a" prot="public" virt="non-virtual"><scope>mlpack::regression::SoftmaxRegression</scope><name>Parameters</name></member>
      <member refid="classmlpack_1_1regression_1_1SoftmaxRegression_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::regression::SoftmaxRegression</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1regression_1_1SoftmaxRegression_1ac58494dce3a8588ef3eab8a2a768a9b7" prot="public" virt="non-virtual"><scope>mlpack::regression::SoftmaxRegression</scope><name>SoftmaxRegression</name></member>
      <member refid="classmlpack_1_1regression_1_1SoftmaxRegression_1a9a597e9981cdce3d51df072db082ee44" prot="public" virt="non-virtual"><scope>mlpack::regression::SoftmaxRegression</scope><name>SoftmaxRegression</name></member>
      <member refid="classmlpack_1_1regression_1_1SoftmaxRegression_1a8f923481e4c78c1b0a7d50cf6aed2bfe" prot="public" virt="non-virtual"><scope>mlpack::regression::SoftmaxRegression</scope><name>SoftmaxRegression</name></member>
      <member refid="classmlpack_1_1regression_1_1SoftmaxRegression_1a38907cc8f0a90a02d12c7675a49dc924" prot="public" virt="non-virtual"><scope>mlpack::regression::SoftmaxRegression</scope><name>Train</name></member>
      <member refid="classmlpack_1_1regression_1_1SoftmaxRegression_1ad62fd3ac08f393bfea5ee854bfc582a0" prot="public" virt="non-virtual"><scope>mlpack::regression::SoftmaxRegression</scope><name>Train</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
