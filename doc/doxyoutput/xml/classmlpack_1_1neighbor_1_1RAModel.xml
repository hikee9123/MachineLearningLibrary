<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1neighbor_1_1RAModel" kind="class" language="C++" prot="public">
    <compoundname>mlpack::neighbor::RAModel</compoundname>
    <includes refid="ra__model_8hpp" local="no">ra_model.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8d" prot="public" static="no">
        <name>TreeTypes</name>
        <enumvalue id="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8daa688e9cd1158916bc183aa517724568c" prot="public">
          <name>KD_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8da92f172b47c8ae18ed401f8bf9f5ecad3" prot="public">
          <name>COVER_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8da2a93dc779a94d5f09b72ffbdc5ac9cd9" prot="public">
          <name>R_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8dae5b37a52c347bc7ef3d23fde0941d27b" prot="public">
          <name>R_STAR_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8da6560e35678b39452afce0f0fcc7f6059" prot="public">
          <name>X_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8da470c5bcf4135483a37e9a87f061e1c5c" prot="public">
          <name>HILBERT_R_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8da4e91a297c1504b34ca1a9cdcd6ba22ff" prot="public">
          <name>R_PLUS_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8da1208f6f2a7b337e4edbd02a8de98d3f5" prot="public">
          <name>R_PLUS_PLUS_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8dae36341db74fc7194b238cf7c528a7fbc" prot="public">
          <name>UB_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8daabefbb1ea7a801b1b00c9b0709dcec50" prot="public">
          <name>OCTREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The list of tree types we can use with <ref refid="classmlpack_1_1neighbor_1_1RASearch" kindref="compound">RASearch</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Does not include ball trees; see #338. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="265" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="264" bodyend="276"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1RAModel_1abffeae6dee4a6bad9885ba0f39d309f3" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t leafSize</definition>
        <argsstring></argsstring>
        <name>leafSize</name>
        <briefdescription>
<para>The leaf size of the tree being used (useful only for the kd-tree). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="282" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1RAModel_1a58d43069f572c93d4569d25c57a9cb6a" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat q</definition>
        <argsstring></argsstring>
        <name>q</name>
        <briefdescription>
<para>The basis to project into. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="287" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1RAModel_1a68c01c84182e9de56ad31dbf792d7a5b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool randomBasis</definition>
        <argsstring></argsstring>
        <name>randomBasis</name>
        <briefdescription>
<para>If true, randomly project into a new basis. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="285" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1RAModel_1aa17ad8c6ad935bb374deb5e02a6a76ad" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1neighbor_1_1RAWrapperBase" kindref="compound">RAWrapperBase</ref> *</type>
        <definition>RAWrapperBase* raSearch</definition>
        <argsstring></argsstring>
        <name>raSearch</name>
        <briefdescription>
<para>The rank-approximate model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="290" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1RAModel_1a4c037c9b8e9f3f7d429a0f3f4326a067" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8d" kindref="member">TreeTypes</ref></type>
        <definition>TreeTypes treeType</definition>
        <argsstring></argsstring>
        <name>treeType</name>
        <briefdescription>
<para>The type of tree being used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="280" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="280" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1aa46e3dcacefb0a08694fb0521c2d05b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RAModel</definition>
        <argsstring>(TreeTypes treeType=TreeTypes::KD_TREE, bool randomBasis=false)</argsstring>
        <name>RAModel</name>
        <param>
          <type><ref refid="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8d" kindref="member">TreeTypes</ref></type>
          <declname>treeType</declname>
          <defval>TreeTypes::KD_TREE</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>randomBasis</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Initialize the <ref refid="classmlpack_1_1neighbor_1_1RAModel" kindref="compound">RAModel</ref> with the given type and whether or not a random basis should be used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="297" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1a8ef591cea1595a3b3ddd49c91bd9c6ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RAModel</definition>
        <argsstring>(const RAModel &amp;other)</argsstring>
        <name>RAModel</name>
        <param>
          <type>const <ref refid="classmlpack_1_1neighbor_1_1RAModel" kindref="compound">RAModel</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy the given <ref refid="classmlpack_1_1neighbor_1_1RAModel" kindref="compound">RAModel</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classmlpack_1_1neighbor_1_1RAModel" kindref="compound">RAModel</ref> to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="304" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1a26c8c355e98626832fb83d58fd47e79b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>RAModel</definition>
        <argsstring>(RAModel &amp;&amp;other)</argsstring>
        <name>RAModel</name>
        <param>
          <type><ref refid="classmlpack_1_1neighbor_1_1RAModel" kindref="compound">RAModel</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Take ownership of the given <ref refid="classmlpack_1_1neighbor_1_1RAModel" kindref="compound">RAModel</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classmlpack_1_1neighbor_1_1RAModel" kindref="compound">RAModel</ref> to take ownership of. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="311" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1a86741564b1d28a800d1c52993f36b8b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~RAModel</definition>
        <argsstring>()</argsstring>
        <name>~RAModel</name>
        <briefdescription>
<para>Clean memory, if necessary. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="328" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1a500ecd077d5cc5fdbf6ceb095d8de9e1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Alpha</definition>
        <argsstring>() const</argsstring>
        <name>Alpha</name>
        <briefdescription>
<para>Get the desired success probability. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="353" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="353" bodyend="353"/>
        <references refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a82b4d70edcf506e24a36702731bb1d8c">RAWrapperBase::Alpha</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1acbb0e4747a3a307bee88bad71e5eeaf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; Alpha</definition>
        <argsstring>()</argsstring>
        <name>Alpha</name>
        <briefdescription>
<para>Modify the desired success probability. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="355" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="355" bodyend="355"/>
        <references refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a82b4d70edcf506e24a36702731bb1d8c">RAWrapperBase::Alpha</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1a394d212c5373090724aaea3ba24b482e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BuildModel</definition>
        <argsstring>(arma::mat &amp;&amp;referenceSet, const size_t leafSize, const bool naive, const bool singleMode)</argsstring>
        <name>BuildModel</name>
        <param>
          <type>arma::mat &amp;&amp;</type>
          <declname>referenceSet</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>leafSize</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>naive</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>singleMode</declname>
        </param>
        <briefdescription>
<para>Build the reference tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="392" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1aff320b9a86b77a150e630c01d5888273" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::mat &amp;</type>
        <definition>const arma::mat&amp; Dataset</definition>
        <argsstring>() const</argsstring>
        <name>Dataset</name>
        <briefdescription>
<para>Expose the dataset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="335" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="335" bodyend="335"/>
        <references refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a2effd31755e4ae5f85e14ed94e7fab8e">RAWrapperBase::Dataset</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1a17ec6e467897eb8aee3b519e0758e77d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool FirstLeafExact</definition>
        <argsstring>() const</argsstring>
        <name>FirstLeafExact</name>
        <briefdescription>
<para>Get whether or not we traverse to the first leaf without approximation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="363" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="363" bodyend="363"/>
        <references refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1afeeb9495ce89199f8c68a11b1ed03c62">RAWrapperBase::FirstLeafExact</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1aca2eb648feb965d3bcb0b0b73f8b2b0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool &amp;</type>
        <definition>bool&amp; FirstLeafExact</definition>
        <argsstring>()</argsstring>
        <name>FirstLeafExact</name>
        <briefdescription>
<para>Modify whether or not we traverse to the first leaf without approximation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="365" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="365" bodyend="365"/>
        <references refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1afeeb9495ce89199f8c68a11b1ed03c62">RAWrapperBase::FirstLeafExact</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1a7f40b35e0dbe4860397eeeda65197d64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InitializeModel</definition>
        <argsstring>(const bool naive, const bool singleMode)</argsstring>
        <name>InitializeModel</name>
        <param>
          <type>const bool</type>
          <declname>naive</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>singleMode</declname>
        </param>
        <briefdescription>
<para>Initialize the model&apos;s memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="389" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1ab81b93ebb200783ca4c5747f31889fa0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t LeafSize</definition>
        <argsstring>() const</argsstring>
        <name>LeafSize</name>
        <briefdescription>
<para>Get the leaf size (only relevant when the kd-tree is used). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="373" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="373" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1a0966773f5b7ef0c324ed40b1cf4b94d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t &amp;</type>
        <definition>size_t&amp; LeafSize</definition>
        <argsstring>()</argsstring>
        <name>LeafSize</name>
        <briefdescription>
<para>Modify the leaf size (only relevant when the kd-tree is used). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="375" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="375" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1a343230e7d7344e3f7d5f5f2eb89cf2c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Naive</definition>
        <argsstring>() const</argsstring>
        <name>Naive</name>
        <briefdescription>
<para>Get whether or not naive search is being used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="343" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="343" bodyend="343"/>
        <references refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a76bdb2e751927f38210e7111c15cba08">RAWrapperBase::Naive</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1af7d397adca3f411b4e2d2f977b280ce6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool &amp;</type>
        <definition>bool&amp; Naive</definition>
        <argsstring>()</argsstring>
        <name>Naive</name>
        <briefdescription>
<para>Modify whether or not naive search is being used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="345" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="345" bodyend="345"/>
        <references refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a76bdb2e751927f38210e7111c15cba08">RAWrapperBase::Naive</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1af3824273bd64946059c529f5c7ecb846" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1neighbor_1_1RAModel" kindref="compound">RAModel</ref> &amp;</type>
        <definition>RAModel&amp; operator=</definition>
        <argsstring>(const RAModel &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmlpack_1_1neighbor_1_1RAModel" kindref="compound">RAModel</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy the given <ref refid="classmlpack_1_1neighbor_1_1RAModel" kindref="compound">RAModel</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classmlpack_1_1neighbor_1_1RAModel" kindref="compound">RAModel</ref> to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="318" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1a9a431b4c5f393618c059481e1dc15db3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1neighbor_1_1RAModel" kindref="compound">RAModel</ref> &amp;</type>
        <definition>RAModel&amp; operator=</definition>
        <argsstring>(RAModel &amp;&amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classmlpack_1_1neighbor_1_1RAModel" kindref="compound">RAModel</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Take ownership of the given <ref refid="classmlpack_1_1neighbor_1_1RAModel" kindref="compound">RAModel</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classmlpack_1_1neighbor_1_1RAModel" kindref="compound">RAModel</ref> to take ownership of. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="325" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1ae3053ad1e3b42eb1ae4105aecd060cf6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool RandomBasis</definition>
        <argsstring>() const</argsstring>
        <name>RandomBasis</name>
        <briefdescription>
<para>Get whether or not a random basis is being used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="383" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="383" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1a8111114602e748b38c0875f82f323544" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool &amp;</type>
        <definition>bool&amp; RandomBasis</definition>
        <argsstring>()</argsstring>
        <name>RandomBasis</name>
        <briefdescription>
<para>Modify whether or not a random basis is being used. </para>        </briefdescription>
        <detaileddescription>
<para>Be sure to rebuild the model using <ref refid="classmlpack_1_1neighbor_1_1RAModel_1a394d212c5373090724aaea3ba24b482e" kindref="member">BuildModel()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="386" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="386" bodyend="386"/>
        <references refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1ac54eb02407917fdaa1725b77fd65c766">RAWrapperBase::Search</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1aa9dd91d6b96e1d0b343c3cec27372036" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SampleAtLeaves</definition>
        <argsstring>() const</argsstring>
        <name>SampleAtLeaves</name>
        <briefdescription>
<para>Get whether or not sampling is done at the leaves. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="358" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="358" bodyend="358"/>
        <references refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a66a953e46f9ad0cfd8d6641816370614">RAWrapperBase::SampleAtLeaves</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1a9f6d54dd0424f827becc2e2e9969b1bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool &amp;</type>
        <definition>bool&amp; SampleAtLeaves</definition>
        <argsstring>()</argsstring>
        <name>SampleAtLeaves</name>
        <briefdescription>
<para>Modify whether or not sampling is done at the leaves. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="360" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="360" bodyend="360"/>
        <references refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a66a953e46f9ad0cfd8d6641816370614">RAWrapperBase::SampleAtLeaves</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1af621a93ffd3ff29728b4f4d2380ccfd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Search</definition>
        <argsstring>(arma::mat &amp;&amp;querySet, const size_t k, arma::Mat&lt; size_t &gt; &amp;neighbors, arma::mat &amp;distances)</argsstring>
        <name>Search</name>
        <param>
          <type>arma::mat &amp;&amp;</type>
          <declname>querySet</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>neighbors</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>distances</declname>
        </param>
        <briefdescription>
<para>Perform rank-approximate neighbor search, taking ownership of the query set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="399" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1a619c7d4931e628a0c199159c57b34cbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Search</definition>
        <argsstring>(const size_t k, arma::Mat&lt; size_t &gt; &amp;neighbors, arma::mat &amp;distances)</argsstring>
        <name>Search</name>
        <param>
          <type>const size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>neighbors</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>distances</declname>
        </param>
        <briefdescription>
<para>Perform rank-approximate neighbor search, using the reference set as the query set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="408" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="332" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1a7477b3e8499a6158bbe177e7f30d4947" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SingleMode</definition>
        <argsstring>() const</argsstring>
        <name>SingleMode</name>
        <briefdescription>
<para>Get whether or not single-tree search is being used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="338" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="338" bodyend="338"/>
        <references refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a66d221dd25418821f76bb66bd9c98bce">RAWrapperBase::SingleMode</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1adadacd63ddeadf138d834b1fdc632773" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool &amp;</type>
        <definition>bool&amp; SingleMode</definition>
        <argsstring>()</argsstring>
        <name>SingleMode</name>
        <briefdescription>
<para>Modify whether or not single-tree search is being used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="340" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="340" bodyend="340"/>
        <references refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a66d221dd25418821f76bb66bd9c98bce">RAWrapperBase::SingleMode</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1a3a2580f686a9de3078e499b1280e2a9f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t SingleSampleLimit</definition>
        <argsstring>() const</argsstring>
        <name>SingleSampleLimit</name>
        <briefdescription>
<para>Get the limit on the size of a node that can be approximated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="368" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="368" bodyend="368"/>
        <references refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a9732af23ee467fcf80889261e2a29047">RAWrapperBase::SingleSampleLimit</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1ae78a7b8e9c96a2dbf646a27efee047b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t &amp;</type>
        <definition>size_t&amp; SingleSampleLimit</definition>
        <argsstring>()</argsstring>
        <name>SingleSampleLimit</name>
        <briefdescription>
<para>Modify the limit on the size of a node that can be approximation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="370" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="370" bodyend="370"/>
        <references refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1a9732af23ee467fcf80889261e2a29047">RAWrapperBase::SingleSampleLimit</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1a4a4b0fafde4cc4c856a53025dc8c4c21" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Tau</definition>
        <argsstring>() const</argsstring>
        <name>Tau</name>
        <briefdescription>
<para>Get the rank-approximation in percentile of the data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="348" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="348" bodyend="348"/>
        <references refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1ae0bfd2fa9956cc64af4ded5d0a497c89">RAWrapperBase::Tau</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1ad522d61ed716a322376adea25ebdbc90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; Tau</definition>
        <argsstring>()</argsstring>
        <name>Tau</name>
        <briefdescription>
<para>Modify the rank-approximation in percentile of the data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="350" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="350" bodyend="350"/>
        <references refid="classmlpack_1_1neighbor_1_1RAWrapperBase_1ae0bfd2fa9956cc64af4ded5d0a497c89">RAWrapperBase::Tau</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1a98cbe53c61f1681514056f78a89a57b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string TreeName</definition>
        <argsstring>() const</argsstring>
        <name>TreeName</name>
        <briefdescription>
<para>Get the name of the tree type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="413" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1adb3d0b75d7754ec6741d890232576ffc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8d" kindref="member">TreeTypes</ref></type>
        <definition>TreeTypes TreeType</definition>
        <argsstring>() const</argsstring>
        <name>TreeType</name>
        <briefdescription>
<para>Get the type of tree being used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="378" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="378" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAModel_1a56b0460c7769ea1ef9d8314026ef36c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8d" kindref="member">TreeTypes</ref> &amp;</type>
        <definition>TreeTypes&amp; TreeType</definition>
        <argsstring>()</argsstring>
        <name>TreeType</name>
        <briefdescription>
<para>Modify the type of tree being used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="380" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="380" bodyend="380"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classmlpack_1_1neighbor_1_1RAModel" kindref="compound">RAModel</ref> class provides an abstraction for the <ref refid="classmlpack_1_1neighbor_1_1RASearch" kindref="compound">RASearch</ref> class, abstracting away the TreeType parameter and allowing it to be specified at runtime in this class. </para>    </briefdescription>
    <detaileddescription>
<para>This class is written for the sake of the &apos;allkrann&apos; program, but is not necessarily restricted to that use. </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" line="258" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp" bodystart="257" bodyend="414"/>
    <listofallmembers>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a500ecd077d5cc5fdbf6ceb095d8de9e1" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>Alpha</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1acbb0e4747a3a307bee88bad71e5eeaf1" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>Alpha</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a394d212c5373090724aaea3ba24b482e" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>BuildModel</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8da92f172b47c8ae18ed401f8bf9f5ecad3" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>COVER_TREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1aff320b9a86b77a150e630c01d5888273" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>Dataset</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a17ec6e467897eb8aee3b519e0758e77d" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>FirstLeafExact</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1aca2eb648feb965d3bcb0b0b73f8b2b0f" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>FirstLeafExact</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8da470c5bcf4135483a37e9a87f061e1c5c" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>HILBERT_R_TREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a7f40b35e0dbe4860397eeeda65197d64" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>InitializeModel</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8daa688e9cd1158916bc183aa517724568c" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>KD_TREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1abffeae6dee4a6bad9885ba0f39d309f3" prot="private" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>leafSize</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1ab81b93ebb200783ca4c5747f31889fa0" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>LeafSize</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a0966773f5b7ef0c324ed40b1cf4b94d1" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>LeafSize</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a343230e7d7344e3f7d5f5f2eb89cf2c5" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>Naive</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1af7d397adca3f411b4e2d2f977b280ce6" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>Naive</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8daabefbb1ea7a801b1b00c9b0709dcec50" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>OCTREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1af3824273bd64946059c529f5c7ecb846" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>operator=</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a9a431b4c5f393618c059481e1dc15db3" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>operator=</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a58d43069f572c93d4569d25c57a9cb6a" prot="private" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>q</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8da1208f6f2a7b337e4edbd02a8de98d3f5" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>R_PLUS_PLUS_TREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8da4e91a297c1504b34ca1a9cdcd6ba22ff" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>R_PLUS_TREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8dae5b37a52c347bc7ef3d23fde0941d27b" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>R_STAR_TREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8da2a93dc779a94d5f09b72ffbdc5ac9cd9" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>R_TREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1aa46e3dcacefb0a08694fb0521c2d05b3" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>RAModel</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a8ef591cea1595a3b3ddd49c91bd9c6ed" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>RAModel</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a26c8c355e98626832fb83d58fd47e79b" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>RAModel</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a68c01c84182e9de56ad31dbf792d7a5b" prot="private" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>randomBasis</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1ae3053ad1e3b42eb1ae4105aecd060cf6" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>RandomBasis</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a8111114602e748b38c0875f82f323544" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>RandomBasis</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1aa17ad8c6ad935bb374deb5e02a6a76ad" prot="private" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>raSearch</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1aa9dd91d6b96e1d0b343c3cec27372036" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>SampleAtLeaves</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a9f6d54dd0424f827becc2e2e9969b1bb" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>SampleAtLeaves</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1af621a93ffd3ff29728b4f4d2380ccfd5" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>Search</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a619c7d4931e628a0c199159c57b34cbd" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>Search</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a7477b3e8499a6158bbe177e7f30d4947" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>SingleMode</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1adadacd63ddeadf138d834b1fdc632773" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>SingleMode</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a3a2580f686a9de3078e499b1280e2a9f" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>SingleSampleLimit</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1ae78a7b8e9c96a2dbf646a27efee047b1" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>SingleSampleLimit</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a4a4b0fafde4cc4c856a53025dc8c4c21" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>Tau</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1ad522d61ed716a322376adea25ebdbc90" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>Tau</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a98cbe53c61f1681514056f78a89a57b8" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>TreeName</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a4c037c9b8e9f3f7d429a0f3f4326a067" prot="private" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>treeType</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1adb3d0b75d7754ec6741d890232576ffc" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>TreeType</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a56b0460c7769ea1ef9d8314026ef36c6" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>TreeType</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8d" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>TreeTypes</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8dae36341db74fc7194b238cf7c528a7fbc" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>UB_TREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a6597b8539c6114170dc185d332ba4c8da6560e35678b39452afce0f0fcc7f6059" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>X_TREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAModel_1a86741564b1d28a800d1c52993f36b8b6" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAModel</scope><name>~RAModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
