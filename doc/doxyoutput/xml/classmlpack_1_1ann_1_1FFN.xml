<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1ann_1_1FFN" kind="class" language="C++" prot="public">
    <compoundname>mlpack::ann::FFN</compoundname>
    <includes refid="ffn_8hpp" local="no">ffn.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>OutputLayerType</declname>
        <defname>OutputLayerType</defname>
        <defval><ref refid="classmlpack_1_1ann_1_1NegativeLogLikelihood" kindref="compound">NegativeLogLikelihood</ref>&lt;&gt;</defval>
      </param>
      <param>
        <type>typename</type>
        <declname>InitializationRuleType</declname>
        <defname>InitializationRuleType</defname>
        <defval><ref refid="classmlpack_1_1ann_1_1RandomInitialization" kindref="compound">RandomInitialization</ref></defval>
      </param>
      <param>
        <type>typename...</type>
        <declname>CustomLayers</declname>
        <defname>CustomLayers</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmlpack_1_1ann_1_1FFN_1aa628987cefe24b56f3c1551d0588a329" prot="public" static="no">
        <type><ref refid="classmlpack_1_1ann_1_1FFN" kindref="compound">FFN</ref>&lt; OutputLayerType, InitializationRuleType &gt;</type>
        <definition>using NetworkType =  FFN&lt;OutputLayerType, InitializationRuleType&gt;</definition>
        <argsstring></argsstring>
        <name>NetworkType</name>
        <briefdescription>
<para>Convenience typedef for the internal model construction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="56" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1a44acc65c2a210407f1d1e148d37c4de7" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1ann_1_1CopyVisitor" kindref="compound">CopyVisitor</ref>&lt; CustomLayers... &gt;</type>
        <definition>CopyVisitor&lt;CustomLayers...&gt; copyVisitor</definition>
        <argsstring></argsstring>
        <name>copyVisitor</name>
        <briefdescription>
<para>Locally-stored copy visitor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="510" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="510" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1abbabe3c59b3519f27cb9f29d2c24ec20" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1ann_1_1DeleteVisitor" kindref="compound">DeleteVisitor</ref></type>
        <definition>DeleteVisitor deleteVisitor</definition>
        <argsstring></argsstring>
        <name>deleteVisitor</name>
        <briefdescription>
<para>Locally-stored delete visitor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="492" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="492" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1a485828065bb182ff026080c251fa30cb" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat delta</definition>
        <argsstring></argsstring>
        <name>delta</name>
        <briefdescription>
<para>Locally-stored delta object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="498" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1a48fa7f67b4a442fe10b64e7b505d3db9" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1ann_1_1DeltaVisitor" kindref="compound">DeltaVisitor</ref></type>
        <definition>DeltaVisitor deltaVisitor</definition>
        <argsstring></argsstring>
        <name>deltaVisitor</name>
        <briefdescription>
<para>Locally-stored delta visitor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="471" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1a02bda2c80b22d0c2507c7a74febb93bf" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool deterministic</definition>
        <argsstring></argsstring>
        <name>deterministic</name>
        <briefdescription>
<para>The current evaluation mode (training or testing). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="495" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1a893fd342fdd6c99efe6265b58e4c38f9" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat error</definition>
        <argsstring></argsstring>
        <name>error</name>
        <briefdescription>
<para>The current error for the backward pass. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="468" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1ab0363181a4587dea6da67d3d13f75479" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat gradient</definition>
        <argsstring></argsstring>
        <name>gradient</name>
        <briefdescription>
<para>Locally-stored gradient parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="507" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1a02afeaaf8574e7a78d6b466ff2695052" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t height</definition>
        <argsstring></argsstring>
        <name>height</name>
        <briefdescription>
<para>The input height. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="447" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1afe2a6ce1565af9e715f04dc42338e439" prot="private" static="no" mutable="no">
        <type>InitializationRuleType</type>
        <definition>InitializationRuleType initializeRule</definition>
        <argsstring></argsstring>
        <name>initializeRule</name>
        <briefdescription>
<para>Instantiated InitializationRule object for initializing the network parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="441" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1a0a54df62a3b0f5d0e5a0f98d4bed0ba7" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat inputParameter</definition>
        <argsstring></argsstring>
        <name>inputParameter</name>
        <briefdescription>
<para>Locally-stored input parameter object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="501" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1aff298b4393afb0b1d47db7aec2277c46" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1ann_1_1LossVisitor" kindref="compound">LossVisitor</ref></type>
        <definition>LossVisitor lossVisitor</definition>
        <argsstring></argsstring>
        <name>lossVisitor</name>
        <briefdescription>
<para>Locally-stored loss visitor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="486" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1af8e080a320fdd3f532283b8305bd2391" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespacemlpack_1_1ann_1ac93be13f0d072573d93e2756ef478ab6" kindref="member">LayerTypes</ref>&lt; CustomLayers... &gt; &gt;</type>
        <definition>std::vector&lt;LayerTypes&lt;CustomLayers...&gt; &gt; network</definition>
        <argsstring></argsstring>
        <name>network</name>
        <briefdescription>
<para>Locally-stored model modules. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="453" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1aaab494c30f729e32dc742dc5f65ecddb" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t numFunctions</definition>
        <argsstring></argsstring>
        <name>numFunctions</name>
        <briefdescription>
<para>The number of separable functions (the number of predictor points). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="465" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="465" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1abd24d500081b1de00513cf2fc9cee83f" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1ann_1_1OutputHeightVisitor" kindref="compound">OutputHeightVisitor</ref></type>
        <definition>OutputHeightVisitor outputHeightVisitor</definition>
        <argsstring></argsstring>
        <name>outputHeightVisitor</name>
        <briefdescription>
<para>Locally-stored output height visitor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="483" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="483" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1ad557109a3691cbbf8f69d91e26b483c2" prot="private" static="no" mutable="no">
        <type>OutputLayerType</type>
        <definition>OutputLayerType outputLayer</definition>
        <argsstring></argsstring>
        <name>outputLayer</name>
        <briefdescription>
<para>Instantiated outputlayer used to evaluate the network. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="437" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1a3c4f390e15f61d10caafccbb37bd5be8" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat outputParameter</definition>
        <argsstring></argsstring>
        <name>outputParameter</name>
        <briefdescription>
<para>Locally-stored output parameter object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="504" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="504" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1a7f09046b5ba5aad2923f8a3e6cd8445f" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1ann_1_1OutputParameterVisitor" kindref="compound">OutputParameterVisitor</ref></type>
        <definition>OutputParameterVisitor outputParameterVisitor</definition>
        <argsstring></argsstring>
        <name>outputParameterVisitor</name>
        <briefdescription>
<para>Locally-stored output parameter visitor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="474" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1ad3606b38a6688053937ab6abe95cc44a" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1ann_1_1OutputWidthVisitor" kindref="compound">OutputWidthVisitor</ref></type>
        <definition>OutputWidthVisitor outputWidthVisitor</definition>
        <argsstring></argsstring>
        <name>outputWidthVisitor</name>
        <briefdescription>
<para>Locally-stored output width visitor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="480" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1a2924723bf8a366fda069c12cf9d56162" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat parameter</definition>
        <argsstring></argsstring>
        <name>parameter</name>
        <briefdescription>
<para>Matrix of (trained) parameters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="462" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1a9a0a22d09c6d4e6f5f266dddb3d343ff" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat predictors</definition>
        <argsstring></argsstring>
        <name>predictors</name>
        <briefdescription>
<para>The matrix of data points (predictors). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="456" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1a8409a0d351d4fba2eeef26a7dcc585a8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool reset</definition>
        <argsstring></argsstring>
        <name>reset</name>
        <briefdescription>
<para>Indicator if we already trained the model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="450" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="450" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1af66d8a7f7a2a8b54158e3702f429ae9f" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1ann_1_1ResetVisitor" kindref="compound">ResetVisitor</ref></type>
        <definition>ResetVisitor resetVisitor</definition>
        <argsstring></argsstring>
        <name>resetVisitor</name>
        <briefdescription>
<para>Locally-stored reset visitor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="489" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1aacca3d02f3223febf3063ec704cc63f7" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat responses</definition>
        <argsstring></argsstring>
        <name>responses</name>
        <briefdescription>
<para>The matrix of responses to the input data points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="459" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="459" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1a625937d2a4a808227ad16ea09908d8cd" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1ann_1_1WeightSizeVisitor" kindref="compound">WeightSizeVisitor</ref></type>
        <definition>WeightSizeVisitor weightSizeVisitor</definition>
        <argsstring></argsstring>
        <name>weightSizeVisitor</name>
        <briefdescription>
<para>Locally-stored weight size visitor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="477" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1FFN_1a02bed8590a9ddf520e58a060059518ec" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <briefdescription>
<para>The input width. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="444" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="444" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classmlpack_1_1ann_1_1FFN_1a49ebaf66926b5dfd90c9828c92a93ac1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename <ref refid="classmlpack_1_1ann_1_1FFN_1a13efc1008a3923a70c7785e9470853a7" kindref="member">Model</ref></type>
          </param>
          <param>
            <type>typename InitializerType</type>
          </param>
          <param>
            <type>typename NoiseType</type>
          </param>
          <param>
            <type>typename PolicyType</type>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class GAN</definition>
        <argsstring></argsstring>
        <name>GAN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="519" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="519" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a8a1597bba65304f53ae1cecd73b395a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FFN</definition>
        <argsstring>(OutputLayerType outputLayer=OutputLayerType(), InitializationRuleType initializeRule=InitializationRuleType())</argsstring>
        <name>FFN</name>
        <param>
          <type>OutputLayerType</type>
          <declname>outputLayer</declname>
          <defval>OutputLayerType()</defval>
        </param>
        <param>
          <type>InitializationRuleType</type>
          <declname>initializeRule</declname>
          <defval>InitializationRuleType()</defval>
        </param>
        <briefdescription>
<para>Create the <ref refid="classmlpack_1_1ann_1_1FFN" kindref="compound">FFN</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>Optionally, specify which initialize rule and performance function should be used.</para><para>If you want to pass in a parameter and discard the original parameter object, be sure to use std::move to avoid unnecessary copy.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outputLayer</parametername>
</parameternamelist>
<parameterdescription>
<para>Output layer used to evaluate the network. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initializeRule</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional instantiated InitializationRule object for initializing the network parameter. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a747c838260bf79c9b08e310660792800" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FFN</definition>
        <argsstring>(const FFN &amp;)</argsstring>
        <name>FFN</name>
        <param>
          <type>const <ref refid="classmlpack_1_1ann_1_1FFN" kindref="compound">FFN</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a8aa14d013d2855c06df5d78b31a126ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FFN</definition>
        <argsstring>(FFN &amp;&amp;)</argsstring>
        <name>FFN</name>
        <param>
          <type><ref refid="classmlpack_1_1ann_1_1FFN" kindref="compound">FFN</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Move constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a45450c5c89a5be407cbaa16523c1533d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~FFN</definition>
        <argsstring>()</argsstring>
        <name>~FFN</name>
        <briefdescription>
<para>Destructor to release allocated memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a8b5234495846c00f6b2c8296ca6bc718" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class LayerType</type>
          </param>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Add</definition>
        <argsstring>(Args... args)</argsstring>
        <name>Add</name>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="290" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="290" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a503a807740e6c729be9efc89520db728" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Add</definition>
        <argsstring>(LayerTypes&lt; CustomLayers... &gt; layer)</argsstring>
        <name>Add</name>
        <param>
          <type><ref refid="namespacemlpack_1_1ann_1ac93be13f0d072573d93e2756ef478ab6" kindref="member">LayerTypes</ref>&lt; CustomLayers... &gt;</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="297" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="297" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1aa470bcf2d35a2b8489ee1be4d0485bf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PredictorsType</type>
          </param>
          <param>
            <type>typename TargetsType</type>
          </param>
          <param>
            <type>typename GradientsType</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double Backward</definition>
        <argsstring>(const PredictorsType &amp;inputs, const TargetsType &amp;targets, GradientsType &amp;gradients)</argsstring>
        <name>Backward</name>
        <param>
          <type>const PredictorsType &amp;</type>
          <declname>inputs</declname>
        </param>
        <param>
          <type>const TargetsType &amp;</type>
          <declname>targets</declname>
        </param>
        <param>
          <type>GradientsType &amp;</type>
          <declname>gradients</declname>
        </param>
        <briefdescription>
<para>Perform the backward pass of the data in real batch mode. </para>        </briefdescription>
        <detaileddescription>
<para>Forward and Backward should be used as a pair, and they are designed mainly for advanced users. User should try to use Predict and Train unless those two functions can&apos;t satisfy some special requirements.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputs</parametername>
</parameternamelist>
<parameterdescription>
<para>Inputs of current pass. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>targets</parametername>
</parameternamelist>
<parameterdescription>
<para>The training target. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gradients</parametername>
</parameternamelist>
<parameterdescription>
<para>Computed gradients. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Training error of the current pass. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="381" column="1"/>
        <referencedby refid="classmlpack_1_1ann_1_1FFN_1a5b2b9103f156a387b74164f143e63ce7" compoundref="ffn_8hpp" startline="325" endline="325">FFN&lt; OutputLayerType, InitializationRuleType, CustomLayers &gt;::Predictors</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a3eb237d1741e9c450dd695a84d9e8f50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PredictorsType</type>
          </param>
          <param>
            <type>typename ResponsesType</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double Evaluate</definition>
        <argsstring>(const PredictorsType &amp;predictors, const ResponsesType &amp;responses)</argsstring>
        <name>Evaluate</name>
        <param>
          <type>const PredictorsType &amp;</type>
          <declname>predictors</declname>
        </param>
        <param>
          <type>const ResponsesType &amp;</type>
          <declname>responses</declname>
        </param>
        <briefdescription>
<para>Evaluate the feedforward network with the given predictors and responses. </para>        </briefdescription>
        <detaileddescription>
<para>This functions is usually used to monitor progress while training.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>predictors</parametername>
</parameternamelist>
<parameterdescription>
<para>Input variables. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>responses</parametername>
</parameternamelist>
<parameterdescription>
<para>Target outputs for input variables. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a1ca0efaedbc2e7e7542c89901cdcf2ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Evaluate</definition>
        <argsstring>(const arma::mat &amp;parameters)</argsstring>
        <name>Evaluate</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
<para>Evaluate the feedforward network with the given parameters. </para>        </briefdescription>
        <detaileddescription>
<para>This function is usually called by the optimizer to train the model.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix model parameters. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a3e02a8743fd14b2a902a2e090da2df47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Evaluate</definition>
        <argsstring>(const arma::mat &amp;parameters, const size_t begin, const size_t batchSize, const bool deterministic)</argsstring>
        <name>Evaluate</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>batchSize</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>deterministic</declname>
        </param>
        <briefdescription>
<para>Evaluate the feedforward network with the given parameters, but using only a number of data points. </para>        </briefdescription>
        <detaileddescription>
<para>This is useful for optimizers such as SGD, which require a separable objective function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix model parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the starting point to use for objective function evaluation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>batchSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points to be passed at a time to use for objective function evaluation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deterministic</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not to train or test the model. Note some layer act differently in training or testing mode. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="211" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a8a04cfd951b52327d7f2e148c68f365d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Evaluate</definition>
        <argsstring>(const arma::mat &amp;parameters, const size_t begin, const size_t batchSize)</argsstring>
        <name>Evaluate</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>batchSize</declname>
        </param>
        <briefdescription>
<para>Evaluate the feedforward network with the given parameters, but using only a number of data points. </para>        </briefdescription>
        <detaileddescription>
<para>This is useful for optimizers such as SGD, which require a separable objective function. This just calls the overload of <ref refid="classmlpack_1_1ann_1_1FFN_1a3eb237d1741e9c450dd695a84d9e8f50" kindref="member">Evaluate()</ref> with deterministic = true.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix model parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the starting point to use for objective function evaluation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>batchSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points to be passed at a time to use for objective function evaluation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="228" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a8e99a4877511dea38ab32a2de7afe125" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GradType</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double EvaluateWithGradient</definition>
        <argsstring>(const arma::mat &amp;parameters, GradType &amp;gradient)</argsstring>
        <name>EvaluateWithGradient</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>GradType &amp;</type>
          <declname>gradient</declname>
        </param>
        <briefdescription>
<para>Evaluate the feedforward network with the given parameters. </para>        </briefdescription>
        <detaileddescription>
<para>This function is usually called by the optimizer to train the model. This just calls the overload of <ref refid="classmlpack_1_1ann_1_1FFN_1a8e99a4877511dea38ab32a2de7afe125" kindref="member">EvaluateWithGradient()</ref> with batchSize = 1.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix model parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gradient</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to output gradient into. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="241" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a3e01e9e3fe4f5bd8cfc78521567a0f5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GradType</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double EvaluateWithGradient</definition>
        <argsstring>(const arma::mat &amp;parameters, const size_t begin, GradType &amp;gradient, const size_t batchSize)</argsstring>
        <name>EvaluateWithGradient</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>GradType &amp;</type>
          <declname>gradient</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>batchSize</declname>
        </param>
        <briefdescription>
<para>Evaluate the feedforward network with the given parameters, but using only a number of data points. </para>        </briefdescription>
        <detaileddescription>
<para>This is useful for optimizers such as SGD, which require a separable objective function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix model parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the starting point to use for objective function evaluation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gradient</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to output gradient into. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>batchSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points to be passed at a time to use for objective function evaluation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="256" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a2f9b7c651427add841fa6ce2fa3f68e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PredictorsType</type>
          </param>
          <param>
            <type>typename ResponsesType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Forward</definition>
        <argsstring>(const PredictorsType &amp;inputs, ResponsesType &amp;results)</argsstring>
        <name>Forward</name>
        <param>
          <type>const PredictorsType &amp;</type>
          <declname>inputs</declname>
        </param>
        <param>
          <type>ResponsesType &amp;</type>
          <declname>results</declname>
        </param>
        <briefdescription>
<para>Perform the forward pass of the data in real batch mode. </para>        </briefdescription>
        <detaileddescription>
<para>Forward and Backward should be used as a pair, and they are designed mainly for advanced users. User should try to use Predict and Train unless those two functions can&apos;t satisfy some special requirements.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputs</parametername>
</parameternamelist>
<parameterdescription>
<para>The input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>results</parametername>
</parameternamelist>
<parameterdescription>
<para>The predicted results. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="347" column="1"/>
        <referencedby refid="classmlpack_1_1ann_1_1FFN_1a5b2b9103f156a387b74164f143e63ce7" compoundref="ffn_8hpp" startline="325" endline="325">FFN&lt; OutputLayerType, InitializationRuleType, CustomLayers &gt;::Predictors</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a5f146cf28feb9ad8cb4891114536d97d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PredictorsType</type>
          </param>
          <param>
            <type>typename ResponsesType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Forward</definition>
        <argsstring>(const PredictorsType &amp;inputs, ResponsesType &amp;results, const size_t begin, const size_t end)</argsstring>
        <name>Forward</name>
        <param>
          <type>const PredictorsType &amp;</type>
          <declname>inputs</declname>
        </param>
        <param>
          <type>ResponsesType &amp;</type>
          <declname>results</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Perform a partial forward pass of the data. </para>        </briefdescription>
        <detaileddescription>
<para>This function is meant for the cases when users require a forward pass only through certain layers and not the entire network.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputs</parametername>
</parameternamelist>
<parameterdescription>
<para>The input data for the specified first layer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>results</parametername>
</parameternamelist>
<parameterdescription>
<para>The predicted results from the specified last layer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the first layer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the last layer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="361" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1aca73798d93d56b280185c01502d8bd13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gradient</definition>
        <argsstring>(const arma::mat &amp;parameters, const size_t begin, arma::mat &amp;gradient, const size_t batchSize)</argsstring>
        <name>Gradient</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>gradient</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>batchSize</declname>
        </param>
        <briefdescription>
<para>Evaluate the gradient of the feedforward network with the given parameters, and with respect to only a number of points in the dataset. </para>        </briefdescription>
        <detaileddescription>
<para>This is useful for optimizers such as SGD, which require a separable objective function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix of the model parameters to be optimized. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the starting point to use for objective function gradient evaluation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gradient</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to output gradient into. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>batchSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points to be processed as a batch for objective function gradient evaluation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="273" column="1"/>
        <referencedby refid="classmlpack_1_1ann_1_1FFN_1a5b2b9103f156a387b74164f143e63ce7" compoundref="ffn_8hpp" startline="325" endline="325">FFN&lt; OutputLayerType, InitializationRuleType, CustomLayers &gt;::Predictors</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a13efc1008a3923a70c7785e9470853a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespacemlpack_1_1ann_1ac93be13f0d072573d93e2756ef478ab6" kindref="member">LayerTypes</ref>&lt; CustomLayers... &gt; &gt; &amp;</type>
        <definition>const std::vector&lt;LayerTypes&lt;CustomLayers...&gt; &gt;&amp; Model</definition>
        <argsstring>() const</argsstring>
        <name>Model</name>
        <briefdescription>
<para>Get the network model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="300" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="300" bodyend="303"/>
        <referencedby refid="classmlpack_1_1ann_1_1FFN_1a5b2b9103f156a387b74164f143e63ce7" compoundref="ffn_8hpp" startline="325" endline="325">FFN&lt; OutputLayerType, InitializationRuleType, CustomLayers &gt;::Predictors</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a4cb1e93bff99ccf1f8f974065a3b13c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespacemlpack_1_1ann_1ac93be13f0d072573d93e2756ef478ab6" kindref="member">LayerTypes</ref>&lt; CustomLayers... &gt; &gt; &amp;</type>
        <definition>std::vector&lt;LayerTypes&lt;CustomLayers...&gt; &gt;&amp; Model</definition>
        <argsstring>()</argsstring>
        <name>Model</name>
        <briefdescription>
<para>Modify the network model. </para>        </briefdescription>
        <detaileddescription>
<para>Be careful! If you change the structure of the network or parameters for layers, its state may become invalid, so be sure to call <ref refid="classmlpack_1_1ann_1_1FFN_1a7178038c3cb8d247eadb94cd2058c432" kindref="member">ResetParameters()</ref> afterwards. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="307" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="307" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a1fa76af34a6e3ea927b307f0c318ee4b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t NumFunctions</definition>
        <argsstring>() const</argsstring>
        <name>NumFunctions</name>
        <briefdescription>
<para>Return the number of separable functions (the number of predictor points). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="310" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="310" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1ad3218e6a988d7203fd6a0ced3e457057" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1ann_1_1FFN" kindref="compound">FFN</ref> &amp;</type>
        <definition>FFN&amp; operator=</definition>
        <argsstring>(FFN)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classmlpack_1_1ann_1_1FFN" kindref="compound">FFN</ref></type>
        </param>
        <briefdescription>
<para>Copy/move assignment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1aa68d74dc1e86e4352e00a3cab83a0e4a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::mat &amp;</type>
        <definition>const arma::mat&amp; Parameters</definition>
        <argsstring>() const</argsstring>
        <name>Parameters</name>
        <briefdescription>
<para>Return the initial point for the optimization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="313" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="313" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a043f0ccd62e6711a18e0d81047be9a0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>arma::mat &amp;</type>
        <definition>arma::mat&amp; Parameters</definition>
        <argsstring>()</argsstring>
        <name>Parameters</name>
        <briefdescription>
<para>Modify the initial point for the optimization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="315" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="315" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1abf82c92c2116f34fb36118155da42a4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Predict</definition>
        <argsstring>(arma::mat predictors, arma::mat &amp;results)</argsstring>
        <name>Predict</name>
        <param>
          <type>arma::mat</type>
          <declname>predictors</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>results</declname>
        </param>
        <briefdescription>
<para>Predict the responses to a given set of predictors. </para>        </briefdescription>
        <detaileddescription>
<para>The responses will reflect the output of the given output layer as returned by the output layer function.</para><para>If you want to pass in a parameter and discard the original parameter object, be sure to use std::move to avoid unnecessary copy.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>predictors</parametername>
</parameternamelist>
<parameterdescription>
<para>Input predictors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>results</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to put output predictions of responses into. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1af63d9ce84ba796336c0abce63ff9be1c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::mat &amp;</type>
        <definition>const arma::mat&amp; Predictors</definition>
        <argsstring>() const</argsstring>
        <name>Predictors</name>
        <briefdescription>
<para>Get the matrix of data points (predictors). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="323" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="323" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a5b2b9103f156a387b74164f143e63ce7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>arma::mat &amp;</type>
        <definition>arma::mat&amp; Predictors</definition>
        <argsstring>()</argsstring>
        <name>Predictors</name>
        <briefdescription>
<para>Modify the matrix of data points (predictors). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="325" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="325" bodyend="325"/>
        <references refid="classmlpack_1_1ann_1_1FFN_1aa470bcf2d35a2b8489ee1be4d0485bf7">FFN&lt; OutputLayerType, InitializationRuleType, CustomLayers &gt;::Backward</references>
        <references refid="classmlpack_1_1ann_1_1FFN_1a2f9b7c651427add841fa6ce2fa3f68e1">FFN&lt; OutputLayerType, InitializationRuleType, CustomLayers &gt;::Forward</references>
        <references refid="classmlpack_1_1ann_1_1FFN_1aca73798d93d56b280185c01502d8bd13">FFN&lt; OutputLayerType, InitializationRuleType, CustomLayers &gt;::Gradient</references>
        <references refid="classmlpack_1_1ann_1_1FFN_1a13efc1008a3923a70c7785e9470853a7" compoundref="ffn_8hpp" startline="300" endline="303">FFN&lt; OutputLayerType, InitializationRuleType, CustomLayers &gt;::Model</references>
        <references refid="classmlpack_1_1ann_1_1FFN_1a7178038c3cb8d247eadb94cd2058c432">FFN&lt; OutputLayerType, InitializationRuleType, CustomLayers &gt;::ResetParameters</references>
        <references refid="classmlpack_1_1ann_1_1FFN_1a65cba07328997659bec80b9879b15a51">FFN&lt; OutputLayerType, InitializationRuleType, CustomLayers &gt;::serialize</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a7178038c3cb8d247eadb94cd2058c432" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ResetParameters</definition>
        <argsstring>()</argsstring>
        <name>ResetParameters</name>
        <briefdescription>
<para>Reset the module infomration (weights/parameters). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="330" column="1"/>
        <referencedby refid="classmlpack_1_1ann_1_1FFN_1a5b2b9103f156a387b74164f143e63ce7" compoundref="ffn_8hpp" startline="325" endline="325">FFN&lt; OutputLayerType, InitializationRuleType, CustomLayers &gt;::Predictors</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a5702d7dbe418472e341da9c8d8ff0e01" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::mat &amp;</type>
        <definition>const arma::mat&amp; Responses</definition>
        <argsstring>() const</argsstring>
        <name>Responses</name>
        <briefdescription>
<para>Get the matrix of responses to the input data points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="318" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="318" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a94a56f6f545988833a4ae9906f8aa197" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>arma::mat &amp;</type>
        <definition>arma::mat&amp; Responses</definition>
        <argsstring>()</argsstring>
        <name>Responses</name>
        <briefdescription>
<para>Modify the matrix of responses to the input data points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="320" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="320" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="334" column="1"/>
        <referencedby refid="classmlpack_1_1ann_1_1FFN_1a5b2b9103f156a387b74164f143e63ce7" compoundref="ffn_8hpp" startline="325" endline="325">FFN&lt; OutputLayerType, InitializationRuleType, CustomLayers &gt;::Predictors</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a2697cc8b37d7bca7c055228382a9b208" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Shuffle</definition>
        <argsstring>()</argsstring>
        <name>Shuffle</name>
        <briefdescription>
<para>Shuffle the order of function visitation. </para>        </briefdescription>
        <detaileddescription>
<para>This may be called by the optimizer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="282" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1adafbb7eca07a0b852cca46b154c5aab8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OptimizerType</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>CallbackTypes</declname>
            <defname>CallbackTypes</defname>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double Train</definition>
        <argsstring>(arma::mat predictors, arma::mat responses, OptimizerType &amp;optimizer, CallbackTypes &amp;&amp;... callbacks)</argsstring>
        <name>Train</name>
        <param>
          <type>arma::mat</type>
          <declname>predictors</declname>
        </param>
        <param>
          <type>arma::mat</type>
          <declname>responses</declname>
        </param>
        <param>
          <type>OptimizerType &amp;</type>
          <declname>optimizer</declname>
        </param>
        <param>
          <type>CallbackTypes &amp;&amp;...</type>
          <declname>callbacks</declname>
        </param>
        <briefdescription>
<para>Train the feedforward network on the given input data using the given optimizer. </para>        </briefdescription>
        <detaileddescription>
<para>This will use the existing model parameters as a starting point for the optimization. If this is not what you want, then you should access the parameters vector directly with <ref refid="classmlpack_1_1ann_1_1FFN_1a043f0ccd62e6711a18e0d81047be9a0a" kindref="member">Parameters()</ref> and modify it as desired.</para><para>If you want to pass in a parameter and discard the original parameter object, be sure to use std::move to avoid unnecessary copy.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OptimizerType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of optimizer to use to train the model. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CallbackTypes</parametername>
</parameternamelist>
<parameterdescription>
<para>Types of Callback Functions. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>predictors</parametername>
</parameternamelist>
<parameterdescription>
<para>Input training variables. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>responses</parametername>
</parameternamelist>
<parameterdescription>
<para>Outputs results from input training variables. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>optimizer</parametername>
</parameternamelist>
<parameterdescription>
<para>Instantiated optimizer used to train the model. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callbacks</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function for ensmallen optimizer <computeroutput>OptimizerType</computeroutput>. See <ulink url="https://www.ensmallen.org/docs.html#callback-documentation">https://www.ensmallen.org/docs.html#callback-documentation</ulink>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The final objective of the trained model (NaN or Inf on error). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a4b7575e89c27b66658f50510ef2e639b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OptimizerType</type>
            <defval>ens::RMSProp</defval>
          </param>
          <param>
            <type>typename...</type>
            <declname>CallbackTypes</declname>
            <defname>CallbackTypes</defname>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double Train</definition>
        <argsstring>(arma::mat predictors, arma::mat responses, CallbackTypes &amp;&amp;... callbacks)</argsstring>
        <name>Train</name>
        <param>
          <type>arma::mat</type>
          <declname>predictors</declname>
        </param>
        <param>
          <type>arma::mat</type>
          <declname>responses</declname>
        </param>
        <param>
          <type>CallbackTypes &amp;&amp;...</type>
          <declname>callbacks</declname>
        </param>
        <briefdescription>
<para>Train the feedforward network on the given input data. </para>        </briefdescription>
        <detaileddescription>
<para>By default, the RMSProp optimization algorithm is used, but others can be specified (such as ens::SGD).</para><para>This will use the existing model parameters as a starting point for the optimization. If this is not what you want, then you should access the parameters vector directly with <ref refid="classmlpack_1_1ann_1_1FFN_1a043f0ccd62e6711a18e0d81047be9a0a" kindref="member">Parameters()</ref> and modify it as desired.</para><para>If you want to pass in a parameter and discard the original parameter object, be sure to use std::move to avoid unnecessary copy.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OptimizerType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of optimizer to use to train the model. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>predictors</parametername>
</parameternamelist>
<parameterdescription>
<para>Input training variables. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CallbackTypes</parametername>
</parameternamelist>
<parameterdescription>
<para>Types of Callback Functions. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>responses</parametername>
</parameternamelist>
<parameterdescription>
<para>Outputs results from input training variables. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callbacks</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function for ensmallen optimizer <computeroutput>OptimizerType</computeroutput>. See <ulink url="https://www.ensmallen.org/docs.html#callback-documentation">https://www.ensmallen.org/docs.html#callback-documentation</ulink>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The final objective of the trained model (NaN or Inf on error). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a5a15e2d0145f9a32c5b439d9d1949908" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OptimizerType</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; HasMaxIterations&lt; OptimizerType, size_t &amp;(OptimizerType::*)()&gt;::value, void &gt;::type</type>
        <definition>std::enable_if&lt; HasMaxIterations&lt;OptimizerType, size_t&amp;(OptimizerType::*)()&gt;::value, void&gt;::type WarnMessageMaxIterations</definition>
        <argsstring>(OptimizerType &amp;optimizer, size_t samples) const</argsstring>
        <name>WarnMessageMaxIterations</name>
        <param>
          <type>OptimizerType &amp;</type>
          <declname>optimizer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>samples</declname>
        </param>
        <briefdescription>
<para>Check if the optimizer has MaxIterations() parameter, if it does then check if it&apos;s value is less than the number of datapoints in the dataset. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OptimizerType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of optimizer to use to train the model. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>optimizer</parametername>
</parameternamelist>
<parameterdescription>
<para>optimizer used in the training process. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>samples</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of datapoints in the dataset. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a02d59875a99c37ae210353881619d1af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OptimizerType</type>
          </param>
        </templateparamlist>
        <type>std::enable_if&lt; !HasMaxIterations&lt; OptimizerType, size_t &amp;(OptimizerType::*)()&gt;::value, void &gt;::type</type>
        <definition>std::enable_if&lt; !HasMaxIterations&lt;OptimizerType, size_t&amp;(OptimizerType::*)()&gt;::value, void&gt;::type WarnMessageMaxIterations</definition>
        <argsstring>(OptimizerType &amp;optimizer, size_t samples) const</argsstring>
        <name>WarnMessageMaxIterations</name>
        <param>
          <type>OptimizerType &amp;</type>
          <declname>optimizer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>samples</declname>
        </param>
        <briefdescription>
<para>Check if the optimizer has MaxIterations() parameter, if it doesn&apos;t then simply return from the function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OptimizerType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of optimizer to use to train the model. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>optimizer</parametername>
</parameternamelist>
<parameterdescription>
<para>optimizer used in the training process. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>samples</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of datapoints in the dataset. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="113" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1ad54c31cad2f48f3255c3b374392cdddc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Backward</definition>
        <argsstring>()</argsstring>
        <name>Backward</name>
        <briefdescription>
<para>The Backward algorithm (part of the Forward-Backward algorithm). </para>        </briefdescription>
        <detaileddescription>
<para>Computes backward pass for module. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="409" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a4370e2d9804d138fcf429bd45be34f49" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Forward</definition>
        <argsstring>(const InputType &amp;input)</argsstring>
        <name>Forward</name>
        <param>
          <type>const InputType &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>The Forward algorithm (part of the Forward-Backward algorithm). </para>        </briefdescription>
        <detaileddescription>
<para>Computes forward probabilities for each module.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>Data sequence to compute probabilities for. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="394" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a288ac3edacee34b32d4982660e4b202f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Gradient</definition>
        <argsstring>(const InputType &amp;input)</argsstring>
        <name>Gradient</name>
        <param>
          <type>const InputType &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Iterate through all layer modules and update the the gradient using the layer defined optimizer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="416" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1af8e21f37b3d54322557e2e9e29bd2afa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ResetData</definition>
        <argsstring>(arma::mat predictors, arma::mat responses)</argsstring>
        <name>ResetData</name>
        <param>
          <type>arma::mat</type>
          <declname>predictors</declname>
        </param>
        <param>
          <type>arma::mat</type>
          <declname>responses</declname>
        </param>
        <briefdescription>
<para>Prepare the network for the given data. </para>        </briefdescription>
        <detaileddescription>
<para>This function won&apos;t actually trigger training process.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>predictors</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data variables. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>responses</parametername>
</parameternamelist>
<parameterdescription>
<para>Outputs results from input data variables. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="403" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1aba60409c4645df448f0b15702f39e363" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ResetDeterministic</definition>
        <argsstring>()</argsstring>
        <name>ResetDeterministic</name>
        <briefdescription>
<para>Reset the module status by setting the current deterministic parameter for all modules that implement the Deterministic function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="422" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1a5b9e938db8ecc6f890598b6a616fe5a8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ResetGradients</definition>
        <argsstring>(arma::mat &amp;gradient)</argsstring>
        <name>ResetGradients</name>
        <param>
          <type>arma::mat &amp;</type>
          <declname>gradient</declname>
        </param>
        <briefdescription>
<para>Reset the gradient for all modules that implement the Gradient function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="427" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1FFN_1ac6977b58d19dc44bf08ce5c80030ed2d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Swap</definition>
        <argsstring>(FFN &amp;network)</argsstring>
        <name>Swap</name>
        <param>
          <type><ref refid="classmlpack_1_1ann_1_1FFN" kindref="compound">FFN</ref> &amp;</type>
          <declname>network</declname>
        </param>
        <briefdescription>
<para>Swap the content of this network with given network. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>network</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired source network. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="434" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implementation of a standard feed forward network. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OutputLayerType</parametername>
</parameternamelist>
<parameterdescription>
<para>The output layer type used to evaluate the network. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InitializationRuleType</parametername>
</parameternamelist>
<parameterdescription>
<para>Rule used to initialize the weight matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CustomLayers</parametername>
</parameternamelist>
<parameterdescription>
<para>Any set of custom layers that could be a part of the feed forward network. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" line="53" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp" bodystart="52" bodyend="520"/>
    <listofallmembers>
      <member refid="classmlpack_1_1ann_1_1FFN_1a8b5234495846c00f6b2c8296ca6bc718" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Add</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a503a807740e6c729be9efc89520db728" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Add</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1aa470bcf2d35a2b8489ee1be4d0485bf7" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Backward</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1ad54c31cad2f48f3255c3b374392cdddc" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Backward</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a44acc65c2a210407f1d1e148d37c4de7" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>copyVisitor</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1abbabe3c59b3519f27cb9f29d2c24ec20" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>deleteVisitor</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a485828065bb182ff026080c251fa30cb" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>delta</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a48fa7f67b4a442fe10b64e7b505d3db9" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>deltaVisitor</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a02bda2c80b22d0c2507c7a74febb93bf" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>deterministic</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a893fd342fdd6c99efe6265b58e4c38f9" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>error</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a3eb237d1741e9c450dd695a84d9e8f50" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Evaluate</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a1ca0efaedbc2e7e7542c89901cdcf2ee" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Evaluate</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a3e02a8743fd14b2a902a2e090da2df47" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Evaluate</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a8a04cfd951b52327d7f2e148c68f365d" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Evaluate</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a8e99a4877511dea38ab32a2de7afe125" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>EvaluateWithGradient</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a3e01e9e3fe4f5bd8cfc78521567a0f5a" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>EvaluateWithGradient</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a8a1597bba65304f53ae1cecd73b395a6" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>FFN</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a747c838260bf79c9b08e310660792800" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>FFN</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a8aa14d013d2855c06df5d78b31a126ef" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>FFN</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a2f9b7c651427add841fa6ce2fa3f68e1" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Forward</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a5f146cf28feb9ad8cb4891114536d97d" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Forward</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a4370e2d9804d138fcf429bd45be34f49" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Forward</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1aca73798d93d56b280185c01502d8bd13" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Gradient</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a288ac3edacee34b32d4982660e4b202f" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Gradient</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1ab0363181a4587dea6da67d3d13f75479" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>gradient</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a02afeaaf8574e7a78d6b466ff2695052" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>height</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1afe2a6ce1565af9e715f04dc42338e439" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>initializeRule</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a0a54df62a3b0f5d0e5a0f98d4bed0ba7" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>inputParameter</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1aff298b4393afb0b1d47db7aec2277c46" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>lossVisitor</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a13efc1008a3923a70c7785e9470853a7" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Model</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a4cb1e93bff99ccf1f8f974065a3b13c3" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Model</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1af8e080a320fdd3f532283b8305bd2391" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>network</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1aa628987cefe24b56f3c1551d0588a329" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>NetworkType</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a1fa76af34a6e3ea927b307f0c318ee4b" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>NumFunctions</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1aaab494c30f729e32dc742dc5f65ecddb" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>numFunctions</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1ad3218e6a988d7203fd6a0ced3e457057" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>operator=</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1abd24d500081b1de00513cf2fc9cee83f" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>outputHeightVisitor</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1ad557109a3691cbbf8f69d91e26b483c2" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>outputLayer</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a3c4f390e15f61d10caafccbb37bd5be8" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>outputParameter</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a7f09046b5ba5aad2923f8a3e6cd8445f" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>outputParameterVisitor</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1ad3606b38a6688053937ab6abe95cc44a" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>outputWidthVisitor</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a2924723bf8a366fda069c12cf9d56162" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>parameter</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1aa68d74dc1e86e4352e00a3cab83a0e4a" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Parameters</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a043f0ccd62e6711a18e0d81047be9a0a" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Parameters</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1abf82c92c2116f34fb36118155da42a4e" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Predict</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a9a0a22d09c6d4e6f5f266dddb3d343ff" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>predictors</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1af63d9ce84ba796336c0abce63ff9be1c" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Predictors</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a5b2b9103f156a387b74164f143e63ce7" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Predictors</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a8409a0d351d4fba2eeef26a7dcc585a8" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>reset</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1af8e21f37b3d54322557e2e9e29bd2afa" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>ResetData</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1aba60409c4645df448f0b15702f39e363" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>ResetDeterministic</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a5b9e938db8ecc6f890598b6a616fe5a8" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>ResetGradients</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a7178038c3cb8d247eadb94cd2058c432" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>ResetParameters</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1af66d8a7f7a2a8b54158e3702f429ae9f" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>resetVisitor</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1aacca3d02f3223febf3063ec704cc63f7" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>responses</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a5702d7dbe418472e341da9c8d8ff0e01" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Responses</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a94a56f6f545988833a4ae9906f8aa197" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Responses</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a2697cc8b37d7bca7c055228382a9b208" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Shuffle</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1ac6977b58d19dc44bf08ce5c80030ed2d" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Swap</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1adafbb7eca07a0b852cca46b154c5aab8" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Train</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a4b7575e89c27b66658f50510ef2e639b" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>Train</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a5a15e2d0145f9a32c5b439d9d1949908" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>WarnMessageMaxIterations</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a02d59875a99c37ae210353881619d1af" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>WarnMessageMaxIterations</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a625937d2a4a808227ad16ea09908d8cd" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>weightSizeVisitor</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a02bed8590a9ddf520e58a060059518ec" prot="private" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>width</name></member>
      <member refid="classmlpack_1_1ann_1_1FFN_1a45450c5c89a5be407cbaa16523c1533d" prot="public" virt="non-virtual"><scope>mlpack::ann::FFN</scope><name>~FFN</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
