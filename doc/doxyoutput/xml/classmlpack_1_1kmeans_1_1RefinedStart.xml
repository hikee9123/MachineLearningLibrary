<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1kmeans_1_1RefinedStart" kind="class" language="C++" prot="public">
    <compoundname>mlpack::kmeans::RefinedStart</compoundname>
    <includes refid="refined__start_8hpp" local="no">refined_start.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1kmeans_1_1RefinedStart_1ae3223de0b2ea069b61f0864b99d69c0b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double percentage</definition>
        <argsstring></argsstring>
        <name>percentage</name>
        <briefdescription>
<para>The percentage of the data to use for each subsampling. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kmeans/refined_start.hpp" line="104" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kmeans/refined_start.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1kmeans_1_1RefinedStart_1a5e22fc262046f30ee0f4bbbcb4ddace0" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t samplings</definition>
        <argsstring></argsstring>
        <name>samplings</name>
        <briefdescription>
<para>The number of samplings to perform. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kmeans/refined_start.hpp" line="102" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kmeans/refined_start.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1kmeans_1_1RefinedStart_1a48edc64d074ae194a1c1cad975a05ae1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>RefinedStart</definition>
        <argsstring>(const size_t samplings=100, const double percentage=0.02)</argsstring>
        <name>RefinedStart</name>
        <param>
          <type>const size_t</type>
          <declname>samplings</declname>
          <defval>100</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>percentage</declname>
          <defval>0.02</defval>
        </param>
        <briefdescription>
<para>Create the <ref refid="classmlpack_1_1kmeans_1_1RefinedStart" kindref="compound">RefinedStart</ref> object, optionally specifying parameters for the number of samplings to perform and the percentage of the dataset to use in each sampling. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kmeans/refined_start.hpp" line="47" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kmeans/refined_start.hpp" bodystart="47" bodyend="49"/>
        <references refid="classmlpack_1_1kmeans_1_1RefinedStart_1abfcf87684e847573cafa7308df8556d6">RefinedStart::Cluster</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kmeans_1_1RefinedStart_1abfcf87684e847573cafa7308df8556d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MatType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Cluster</definition>
        <argsstring>(const MatType &amp;data, const size_t clusters, arma::mat &amp;centroids) const</argsstring>
        <name>Cluster</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>clusters</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>centroids</declname>
        </param>
        <briefdescription>
<para>Partition the given dataset into the given number of clusters according to the random sampling scheme outlined in Bradley and Fayyad&apos;s paper, and return centroids. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MatType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of data (arma::mat or arma::sp_mat). </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Dataset to partition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clusters</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of clusters to split dataset into. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>centroids</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to store centroids into. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kmeans/refined_start.hpp" line="62" column="1"/>
        <referencedby refid="classmlpack_1_1kmeans_1_1RefinedStart_1a48edc64d074ae194a1c1cad975a05ae1" compoundref="refined__start_8hpp" startline="47" endline="49">RefinedStart::RefinedStart</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kmeans_1_1RefinedStart_1a7966edf99e192d87b200fd1bb6221fd7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MatType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Cluster</definition>
        <argsstring>(const MatType &amp;data, const size_t clusters, arma::Row&lt; size_t &gt; &amp;assignments) const</argsstring>
        <name>Cluster</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>clusters</declname>
        </param>
        <param>
          <type>arma::Row&lt; size_t &gt; &amp;</type>
          <declname>assignments</declname>
        </param>
        <briefdescription>
<para>Partition the given dataset into the given number of clusters according to the random sampling scheme outlined in Bradley and Fayyad&apos;s paper, and return point assignments. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MatType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of data (arma::mat or arma::sp_mat). </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Dataset to partition. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>clusters</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of clusters to split dataset into. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>assignments</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to store cluster assignments into. Values will be between 0 and (clusters - 1). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kmeans/refined_start.hpp" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kmeans_1_1RefinedStart_1acdda97f316f0d4cdfaed698d3e2238fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Percentage</definition>
        <argsstring>() const</argsstring>
        <name>Percentage</name>
        <briefdescription>
<para>Get the percentage of the data used by each subsampling. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kmeans/refined_start.hpp" line="88" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kmeans/refined_start.hpp" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kmeans_1_1RefinedStart_1a1d19a253aece77d4ceae959c7d258599" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; Percentage</definition>
        <argsstring>()</argsstring>
        <name>Percentage</name>
        <briefdescription>
<para>Modify the percentage of the data used by each subsampling. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kmeans/refined_start.hpp" line="90" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kmeans/refined_start.hpp" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kmeans_1_1RefinedStart_1abff9dd5e965cd5747ae7b92ab92ad4f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Samplings</definition>
        <argsstring>() const</argsstring>
        <name>Samplings</name>
        <briefdescription>
<para>Get the number of samplings that will be performed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kmeans/refined_start.hpp" line="83" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kmeans/refined_start.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kmeans_1_1RefinedStart_1aa6b6f2fd794693a5b6481b2b64ac8f8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t &amp;</type>
        <definition>size_t&amp; Samplings</definition>
        <argsstring>()</argsstring>
        <name>Samplings</name>
        <briefdescription>
<para>Modify the number of samplings that will be performed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kmeans/refined_start.hpp" line="85" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kmeans/refined_start.hpp" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kmeans_1_1RefinedStart_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kmeans/refined_start.hpp" line="94" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kmeans/refined_start.hpp" bodystart="94" bodyend="98"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A refined approach for choosing initial points for k-means clustering. </para>    </briefdescription>
    <detaileddescription>
<para>This approach runs k-means several times on random subsets of the data, and then clusters those solutions to select refined initial cluster assignments. It is an implementation of the following paper:</para><para><programlisting><codeline><highlight class="normal">@inproceedings{bradley1998refining,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>title={Refining<sp/>initial<sp/>points<sp/>for<sp/>k-means<sp/>clustering},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>author={Bradley,<sp/>Paul<sp/>S<sp/>and<sp/>Fayyad,<sp/>Usama<sp/>M},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>booktitle={Proceedings<sp/>of<sp/>the<sp/>Fifteenth<sp/>International<sp/>Conference<sp/>on<sp/>Machine</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Learning<sp/>(ICML<sp/>1998)},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>volume={66},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>year={1998}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/kmeans/refined_start.hpp" line="40" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kmeans/refined_start.hpp" bodystart="39" bodyend="105"/>
    <listofallmembers>
      <member refid="classmlpack_1_1kmeans_1_1RefinedStart_1abfcf87684e847573cafa7308df8556d6" prot="public" virt="non-virtual"><scope>mlpack::kmeans::RefinedStart</scope><name>Cluster</name></member>
      <member refid="classmlpack_1_1kmeans_1_1RefinedStart_1a7966edf99e192d87b200fd1bb6221fd7" prot="public" virt="non-virtual"><scope>mlpack::kmeans::RefinedStart</scope><name>Cluster</name></member>
      <member refid="classmlpack_1_1kmeans_1_1RefinedStart_1ae3223de0b2ea069b61f0864b99d69c0b" prot="private" virt="non-virtual"><scope>mlpack::kmeans::RefinedStart</scope><name>percentage</name></member>
      <member refid="classmlpack_1_1kmeans_1_1RefinedStart_1acdda97f316f0d4cdfaed698d3e2238fe" prot="public" virt="non-virtual"><scope>mlpack::kmeans::RefinedStart</scope><name>Percentage</name></member>
      <member refid="classmlpack_1_1kmeans_1_1RefinedStart_1a1d19a253aece77d4ceae959c7d258599" prot="public" virt="non-virtual"><scope>mlpack::kmeans::RefinedStart</scope><name>Percentage</name></member>
      <member refid="classmlpack_1_1kmeans_1_1RefinedStart_1a48edc64d074ae194a1c1cad975a05ae1" prot="public" virt="non-virtual"><scope>mlpack::kmeans::RefinedStart</scope><name>RefinedStart</name></member>
      <member refid="classmlpack_1_1kmeans_1_1RefinedStart_1a5e22fc262046f30ee0f4bbbcb4ddace0" prot="private" virt="non-virtual"><scope>mlpack::kmeans::RefinedStart</scope><name>samplings</name></member>
      <member refid="classmlpack_1_1kmeans_1_1RefinedStart_1abff9dd5e965cd5747ae7b92ab92ad4f8" prot="public" virt="non-virtual"><scope>mlpack::kmeans::RefinedStart</scope><name>Samplings</name></member>
      <member refid="classmlpack_1_1kmeans_1_1RefinedStart_1aa6b6f2fd794693a5b6481b2b64ac8f8e" prot="public" virt="non-virtual"><scope>mlpack::kmeans::RefinedStart</scope><name>Samplings</name></member>
      <member refid="classmlpack_1_1kmeans_1_1RefinedStart_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::kmeans::RefinedStart</scope><name>serialize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
