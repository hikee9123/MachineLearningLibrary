<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="gini__gain_8hpp" kind="file" language="C++">
    <compoundname>gini_gain.hpp</compoundname>
    <includes refid="core_8hpp" local="no">mlpack/core.hpp</includes>
    <includedby refid="decision__tree_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/decision_tree/decision_tree.hpp</includedby>
    <incdepgraph>
      <node id="48515">
        <label>list</label>
      </node>
      <node id="48544">
        <label>save_impl.hpp</label>
      </node>
      <node id="48512">
        <label>atomic</label>
      </node>
      <node id="48536">
        <label>dataset_mapper_impl.hpp</label>
      </node>
      <node id="48542">
        <label>load_image_impl.hpp</label>
      </node>
      <node id="48502">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="48478">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="48514">
        <label>iomanip</label>
      </node>
      <node id="48574">
        <label>mlpack/core/kernels/linear_kernel.hpp</label>
        <link refid="linear__kernel_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
      </node>
      <node id="48569">
        <label>mlpack/core/data/confusion_matrix.hpp</label>
        <link refid="confusion__matrix_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48570" relation="include">
        </childnode>
      </node>
      <node id="48584">
        <label>mlpack/core/kernels/laplacian_kernel.hpp</label>
        <link refid="laplacian__kernel_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
      </node>
      <node id="48551">
        <label>float.h</label>
      </node>
      <node id="48580">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="48487">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="48488" relation="include">
        </childnode>
        <childnode refid="48490" relation="include">
        </childnode>
      </node>
      <node id="48470">
        <label>cstdint</label>
      </node>
      <node id="48582">
        <label>epanechnikov_kernel_impl.hpp</label>
      </node>
      <node id="48573">
        <label>mlpack/core/kernels/kernel_traits.hpp</label>
        <link refid="kernel__traits_8hpp"/>
      </node>
      <node id="48479">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="48486">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="48567">
        <label>mlpack/core/dists/gamma_distribution.hpp</label>
        <link refid="gamma__distribution_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48552" relation="include">
        </childnode>
      </node>
      <node id="48531">
        <label>mlpack/core/data/load.hpp</label>
        <link refid="load_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48510" relation="include">
        </childnode>
        <childnode refid="48518" relation="include">
        </childnode>
        <childnode refid="48532" relation="include">
        </childnode>
        <childnode refid="48533" relation="include">
        </childnode>
        <childnode refid="48537" relation="include">
        </childnode>
        <childnode refid="48540" relation="include">
        </childnode>
        <childnode refid="48541" relation="include">
        </childnode>
        <childnode refid="48542" relation="include">
        </childnode>
      </node>
      <node id="48526">
        <label>program_doc.hpp</label>
        <link refid="program__doc_8hpp"/>
      </node>
      <node id="48549">
        <label>stdlib.h</label>
      </node>
      <node id="48553">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="48509">
        <label>arma_config.hpp</label>
      </node>
      <node id="48588">
        <label>mlpack/core/kernels/spherical_kernel.hpp</label>
        <link refid="spherical__kernel_8hpp"/>
        <childnode refid="48589" relation="include">
        </childnode>
        <childnode refid="48465" relation="include">
        </childnode>
      </node>
      <node id="48529">
        <label>params.hpp</label>
        <link refid="params_8hpp"/>
        <childnode refid="48528" relation="include">
        </childnode>
        <childnode refid="48525" relation="include">
        </childnode>
        <childnode refid="48530" relation="include">
        </childnode>
      </node>
      <node id="48557">
        <label>lin_alg_impl.hpp</label>
      </node>
      <node id="48583">
        <label>mlpack/core/kernels/hyperbolic_tangent_kernel.hpp</label>
        <link refid="hyperbolic__tangent__kernel_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
      </node>
      <node id="48464">
        <label>mlpack/core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48478" relation="include">
        </childnode>
        <childnode refid="48510" relation="include">
        </childnode>
        <childnode refid="48522" relation="include">
        </childnode>
        <childnode refid="48520" relation="include">
        </childnode>
        <childnode refid="48531" relation="include">
        </childnode>
        <childnode refid="48543" relation="include">
        </childnode>
        <childnode refid="48546" relation="include">
        </childnode>
        <childnode refid="48548" relation="include">
        </childnode>
        <childnode refid="48552" relation="include">
        </childnode>
        <childnode refid="48555" relation="include">
        </childnode>
        <childnode refid="48556" relation="include">
        </childnode>
        <childnode refid="48558" relation="include">
        </childnode>
        <childnode refid="48559" relation="include">
        </childnode>
        <childnode refid="48560" relation="include">
        </childnode>
        <childnode refid="48561" relation="include">
        </childnode>
        <childnode refid="48563" relation="include">
        </childnode>
        <childnode refid="48564" relation="include">
        </childnode>
        <childnode refid="48565" relation="include">
        </childnode>
        <childnode refid="48566" relation="include">
        </childnode>
        <childnode refid="48567" relation="include">
        </childnode>
        <childnode refid="48568" relation="include">
        </childnode>
        <childnode refid="48569" relation="include">
        </childnode>
        <childnode refid="48571" relation="include">
        </childnode>
        <childnode refid="48573" relation="include">
        </childnode>
        <childnode refid="48574" relation="include">
        </childnode>
        <childnode refid="48575" relation="include">
        </childnode>
        <childnode refid="48576" relation="include">
        </childnode>
        <childnode refid="48578" relation="include">
        </childnode>
        <childnode refid="48581" relation="include">
        </childnode>
        <childnode refid="48583" relation="include">
        </childnode>
        <childnode refid="48584" relation="include">
        </childnode>
        <childnode refid="48585" relation="include">
        </childnode>
        <childnode refid="48588" relation="include">
        </childnode>
        <childnode refid="48590" relation="include">
        </childnode>
        <childnode refid="48591" relation="include">
        </childnode>
      </node>
      <node id="48545">
        <label>io_impl.hpp</label>
      </node>
      <node id="48499">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="48571">
        <label>mlpack/core/data/one_hot_encoding.hpp</label>
        <link refid="one__hot__encoding_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48464" relation="include">
        </childnode>
        <childnode refid="48572" relation="include">
        </childnode>
      </node>
      <node id="48466">
        <label>cmath</label>
      </node>
      <node id="48485">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="48474">
        <label>stdexcept</label>
      </node>
      <node id="48494">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="48479" relation="include">
        </childnode>
        <childnode refid="48481" relation="include">
        </childnode>
        <childnode refid="48482" relation="include">
        </childnode>
        <childnode refid="48480" relation="include">
        </childnode>
      </node>
      <node id="48558">
        <label>mlpack/core/math/range.hpp</label>
      </node>
      <node id="48577">
        <label>cosine_distance_impl.hpp</label>
      </node>
      <node id="48535">
        <label>mlpack/core/data/map_policies/datatype.hpp</label>
        <link refid="datatype_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
      </node>
      <node id="48518">
        <label>string</label>
      </node>
      <node id="48506">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="48507" relation="include">
        </childnode>
        <childnode refid="48473" relation="include">
        </childnode>
      </node>
      <node id="48576">
        <label>mlpack/core/kernels/cosine_distance.hpp</label>
        <link refid="cosine__distance_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48573" relation="include">
        </childnode>
        <childnode refid="48577" relation="include">
        </childnode>
      </node>
      <node id="48516">
        <label>map</label>
      </node>
      <node id="48556">
        <label>mlpack/core/math/lin_alg.hpp</label>
        <link refid="lin__alg_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48557" relation="include">
        </childnode>
      </node>
      <node id="48468">
        <label>cfloat</label>
      </node>
      <node id="48525">
        <label>binding_details.hpp</label>
        <link refid="binding__details_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48526" relation="include">
        </childnode>
      </node>
      <node id="48498">
        <label>boost/variant.hpp</label>
      </node>
      <node id="48566">
        <label>mlpack/core/dists/laplace_distribution.hpp</label>
        <link refid="laplace__distribution_8hpp"/>
      </node>
      <node id="48520">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="48482">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="48505">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="48506" relation="include">
        </childnode>
        <childnode refid="48482" relation="include">
        </childnode>
        <childnode refid="48489" relation="include">
        </childnode>
        <childnode refid="48507" relation="include">
        </childnode>
      </node>
      <node id="48495">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="48563">
        <label>mlpack/core/math/make_alias.hpp</label>
        <link refid="make__alias_8hpp"/>
      </node>
      <node id="48581">
        <label>mlpack/core/kernels/epanechnikov_kernel.hpp</label>
        <link refid="epanechnikov__kernel_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48573" relation="include">
        </childnode>
        <childnode refid="48582" relation="include">
        </childnode>
      </node>
      <node id="48568">
        <label>mlpack/core/dists/diagonal_gaussian_distribution.hpp</label>
        <link refid="diagonal__gaussian__distribution_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
      </node>
      <node id="48493">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="48479" relation="include">
        </childnode>
        <childnode refid="48481" relation="include">
        </childnode>
        <childnode refid="48482" relation="include">
        </childnode>
        <childnode refid="48480" relation="include">
        </childnode>
      </node>
      <node id="48496">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="48479" relation="include">
        </childnode>
        <childnode refid="48481" relation="include">
        </childnode>
        <childnode refid="48482" relation="include">
        </childnode>
        <childnode refid="48480" relation="include">
        </childnode>
      </node>
      <node id="48555">
        <label>mlpack/core/math/random_basis.hpp</label>
        <link refid="random__basis_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
      </node>
      <node id="48524">
        <label>boost/any.hpp</label>
      </node>
      <node id="48484">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="48504">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="48480" relation="include">
        </childnode>
        <childnode refid="48481" relation="include">
        </childnode>
        <childnode refid="48482" relation="include">
        </childnode>
        <childnode refid="48492" relation="include">
        </childnode>
        <childnode refid="48501" relation="include">
        </childnode>
      </node>
      <node id="48508">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="48509" relation="include">
        </childnode>
      </node>
      <node id="48510">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="48465">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="48466" relation="include">
        </childnode>
        <childnode refid="48467" relation="include">
        </childnode>
        <childnode refid="48468" relation="include">
        </childnode>
        <childnode refid="48469" relation="include">
        </childnode>
        <childnode refid="48470" relation="include">
        </childnode>
        <childnode refid="48471" relation="include">
        </childnode>
        <childnode refid="48472" relation="include">
        </childnode>
        <childnode refid="48473" relation="include">
        </childnode>
        <childnode refid="48474" relation="include">
        </childnode>
        <childnode refid="48475" relation="include">
        </childnode>
        <childnode refid="48476" relation="include">
        </childnode>
        <childnode refid="48477" relation="include">
        </childnode>
        <childnode refid="48478" relation="include">
        </childnode>
        <childnode refid="48479" relation="include">
        </childnode>
        <childnode refid="48480" relation="include">
        </childnode>
        <childnode refid="48481" relation="include">
        </childnode>
        <childnode refid="48482" relation="include">
        </childnode>
        <childnode refid="48483" relation="include">
        </childnode>
        <childnode refid="48484" relation="include">
        </childnode>
        <childnode refid="48485" relation="include">
        </childnode>
        <childnode refid="48486" relation="include">
        </childnode>
        <childnode refid="48487" relation="include">
        </childnode>
        <childnode refid="48491" relation="include">
        </childnode>
        <childnode refid="48492" relation="include">
        </childnode>
        <childnode refid="48493" relation="include">
        </childnode>
        <childnode refid="48494" relation="include">
        </childnode>
        <childnode refid="48495" relation="include">
        </childnode>
        <childnode refid="48496" relation="include">
        </childnode>
        <childnode refid="48497" relation="include">
        </childnode>
        <childnode refid="48503" relation="include">
        </childnode>
        <childnode refid="48504" relation="include">
        </childnode>
        <childnode refid="48501" relation="include">
        </childnode>
        <childnode refid="48505" relation="include">
        </childnode>
        <childnode refid="48508" relation="include">
        </childnode>
        <childnode refid="48510" relation="include">
        </childnode>
        <childnode refid="48511" relation="include">
        </childnode>
        <childnode refid="48520" relation="include">
        </childnode>
        <childnode refid="48521" relation="include">
        </childnode>
      </node>
      <node id="48547">
        <label>normalize_labels_impl.hpp</label>
      </node>
      <node id="48572">
        <label>one_hot_encoding_impl.hpp</label>
      </node>
      <node id="48554">
        <label>random</label>
      </node>
      <node id="48578">
        <label>mlpack/core/kernels/gaussian_kernel.hpp</label>
        <link refid="gaussian__kernel_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48579" relation="include">
        </childnode>
        <childnode refid="48573" relation="include">
        </childnode>
      </node>
      <node id="48534">
        <label>map_policies/increment_policy.hpp</label>
        <link refid="increment__policy_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48490" relation="include">
        </childnode>
        <childnode refid="48535" relation="include">
        </childnode>
      </node>
      <node id="48471">
        <label>cstdio</label>
      </node>
      <node id="48538">
        <label>extension.hpp</label>
        <link refid="extension_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
      </node>
      <node id="48475">
        <label>tuple</label>
      </node>
      <node id="48480">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="48497">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="48480" relation="include">
        </childnode>
        <childnode refid="48481" relation="include">
        </childnode>
        <childnode refid="48482" relation="include">
        </childnode>
        <childnode refid="48484" relation="include">
        </childnode>
        <childnode refid="48498" relation="include">
        </childnode>
        <childnode refid="48499" relation="include">
        </childnode>
        <childnode refid="48500" relation="include">
        </childnode>
        <childnode refid="48501" relation="include">
        </childnode>
      </node>
      <node id="48539">
        <label>image_info_impl.hpp</label>
      </node>
      <node id="48586">
        <label>vector</label>
      </node>
      <node id="48541">
        <label>load_vec_impl.hpp</label>
      </node>
      <node id="48527">
        <label>version.hpp</label>
        <link refid="src_2mlpack_2core_2util_2version_8hpp"/>
        <childnode refid="48518" relation="include">
        </childnode>
      </node>
      <node id="48548">
        <label>mlpack/core/math/clamp.hpp</label>
        <link refid="clamp_8hpp"/>
        <childnode refid="48549" relation="include">
        </childnode>
        <childnode refid="48550" relation="include">
        </childnode>
        <childnode refid="48551" relation="include">
        </childnode>
      </node>
      <node id="48552">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48554" relation="include">
        </childnode>
      </node>
      <node id="48476">
        <label>utility</label>
      </node>
      <node id="48500">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="48540">
        <label>load_model_impl.hpp</label>
      </node>
      <node id="48491">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="48488">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="48489" relation="include">
        </childnode>
      </node>
      <node id="48585">
        <label>mlpack/core/kernels/pspectrum_string_kernel.hpp</label>
        <link refid="pspectrum__string__kernel_8hpp"/>
        <childnode refid="48516" relation="include">
        </childnode>
        <childnode refid="48518" relation="include">
        </childnode>
        <childnode refid="48586" relation="include">
        </childnode>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48510" relation="include">
        </childnode>
        <childnode refid="48587" relation="include">
        </childnode>
      </node>
      <node id="48560">
        <label>mlpack/core/math/shuffle_data.hpp</label>
        <link refid="shuffle__data_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
      </node>
      <node id="48546">
        <label>mlpack/core/data/normalize_labels.hpp</label>
        <link refid="normalize__labels_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48547" relation="include">
        </childnode>
      </node>
      <node id="48511">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="48512" relation="include">
        </childnode>
        <childnode refid="48513" relation="include">
        </childnode>
        <childnode refid="48514" relation="include">
        </childnode>
        <childnode refid="48515" relation="include">
        </childnode>
        <childnode refid="48516" relation="include">
        </childnode>
        <childnode refid="48517" relation="include">
        </childnode>
        <childnode refid="48518" relation="include">
        </childnode>
        <childnode refid="48519" relation="include">
        </childnode>
      </node>
      <node id="48489">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="48503">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="48501" relation="include">
        </childnode>
        <childnode refid="48497" relation="include">
        </childnode>
        <childnode refid="48504" relation="include">
        </childnode>
      </node>
      <node id="48550">
        <label>math.h</label>
      </node>
      <node id="48528">
        <label>param_data.hpp</label>
        <link refid="param__data_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48524" relation="include">
        </childnode>
      </node>
      <node id="48472">
        <label>cstdlib</label>
      </node>
      <node id="48564">
        <label>mlpack/core/dists/discrete_distribution.hpp</label>
        <link refid="discrete__distribution_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48510" relation="include">
        </childnode>
        <childnode refid="48552" relation="include">
        </childnode>
      </node>
      <node id="48467">
        <label>cctype</label>
      </node>
      <node id="48523">
        <label>iostream</label>
      </node>
      <node id="48575">
        <label>mlpack/core/kernels/polynomial_kernel.hpp</label>
        <link refid="polynomial__kernel_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
      </node>
      <node id="48570">
        <label>confusion_matrix_impl.hpp</label>
      </node>
      <node id="48490">
        <label>unordered_map</label>
      </node>
      <node id="48537">
        <label>image_info.hpp</label>
        <link refid="image__info_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48538" relation="include">
        </childnode>
        <childnode refid="48539" relation="include">
        </childnode>
      </node>
      <node id="48469">
        <label>climits</label>
      </node>
      <node id="48533">
        <label>dataset_mapper.hpp</label>
        <link refid="dataset__mapper_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48490" relation="include">
        </childnode>
        <childnode refid="48534" relation="include">
        </childnode>
        <childnode refid="48536" relation="include">
        </childnode>
      </node>
      <node id="48561">
        <label>mlpack/core/math/ccov.hpp</label>
        <link refid="ccov_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48562" relation="include">
        </childnode>
      </node>
      <node id="48517">
        <label>mutex</label>
      </node>
      <node id="48543">
        <label>mlpack/core/data/save.hpp</label>
        <link refid="save_8hpp"/>
        <childnode refid="48510" relation="include">
        </childnode>
        <childnode refid="48477" relation="include">
        </childnode>
        <childnode refid="48518" relation="include">
        </childnode>
        <childnode refid="48532" relation="include">
        </childnode>
        <childnode refid="48537" relation="include">
        </childnode>
        <childnode refid="48544" relation="include">
        </childnode>
      </node>
      <node id="48513">
        <label>chrono</label>
      </node>
      <node id="48521">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="48562">
        <label>ccov_impl.hpp</label>
      </node>
      <node id="48589">
        <label>boost/math/special_functions/gamma.hpp</label>
      </node>
      <node id="48519">
        <label>thread</label>
      </node>
      <node id="48591">
        <label>mlpack/core/kernels/cauchy_kernel.hpp</label>
        <link refid="cauchy__kernel_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48579" relation="include">
        </childnode>
        <childnode refid="48573" relation="include">
        </childnode>
      </node>
      <node id="48530">
        <label>params_impl.hpp</label>
      </node>
      <node id="48507">
        <label>type_traits</label>
      </node>
      <node id="48483">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="48587">
        <label>pspectrum_string_kernel_impl.hpp</label>
      </node>
      <node id="48477">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="48501">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="48479" relation="include">
        </childnode>
        <childnode refid="48480" relation="include">
        </childnode>
        <childnode refid="48481" relation="include">
        </childnode>
        <childnode refid="48482" relation="include">
        </childnode>
        <childnode refid="48502" relation="include">
        </childnode>
      </node>
      <node id="48559">
        <label>mlpack/core/math/round.hpp</label>
        <link refid="round_8hpp"/>
      </node>
      <node id="48463">
        <label>/home/aakash/mlpack/src/mlpack/methods/decision_tree/gini_gain.hpp</label>
        <link refid="gini__gain_8hpp"/>
        <childnode refid="48464" relation="include">
        </childnode>
      </node>
      <node id="48590">
        <label>mlpack/core/kernels/triangular_kernel.hpp</label>
        <link refid="triangular__kernel_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48579" relation="include">
        </childnode>
      </node>
      <node id="48473">
        <label>cstring</label>
      </node>
      <node id="48492">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="48522">
        <label>mlpack/core/util/io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="48523" relation="include">
        </childnode>
        <childnode refid="48515" relation="include">
        </childnode>
        <childnode refid="48516" relation="include">
        </childnode>
        <childnode refid="48518" relation="include">
        </childnode>
        <childnode refid="48524" relation="include">
        </childnode>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48511" relation="include">
        </childnode>
        <childnode refid="48525" relation="include">
        </childnode>
        <childnode refid="48526" relation="include">
        </childnode>
        <childnode refid="48527" relation="include">
        </childnode>
        <childnode refid="48528" relation="include">
        </childnode>
        <childnode refid="48529" relation="include">
        </childnode>
        <childnode refid="48531" relation="include">
        </childnode>
        <childnode refid="48543" relation="include">
        </childnode>
        <childnode refid="48545" relation="include">
        </childnode>
      </node>
      <node id="48481">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="48565">
        <label>mlpack/core/dists/gaussian_distribution.hpp</label>
        <link refid="gaussian__distribution_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
      </node>
      <node id="48579">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48580" relation="include">
        </childnode>
      </node>
      <node id="48532">
        <label>format.hpp</label>
        <link refid="format_8hpp"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="48593">
        <label>/home/aakash/mlpack/src/mlpack/methods/decision_tree/decision_tree.hpp</label>
        <link refid="decision__tree_8hpp"/>
        <childnode refid="48594" relation="include">
        </childnode>
        <childnode refid="48595" relation="include">
        </childnode>
      </node>
      <node id="48594">
        <label>/home/aakash/mlpack/src/mlpack/methods/adaboost/adaboost.hpp</label>
        <link refid="adaboost_8hpp"/>
      </node>
      <node id="48595">
        <label>/home/aakash/mlpack/src/mlpack/methods/random_forest/random_forest.hpp</label>
        <link refid="random__forest_8hpp"/>
      </node>
      <node id="48592">
        <label>/home/aakash/mlpack/src/mlpack/methods/decision_tree/gini_gain.hpp</label>
        <link refid="gini__gain_8hpp"/>
        <childnode refid="48593" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1tree_1_1GiniGain" prot="public">mlpack::tree::GiniGain</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1tree">mlpack::tree</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ryan Curtin</para></simplesect>
The GiniGain class, which is a fitness function (FitnessFunction) for decision trees.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_DECISION_TREE_GINI_GAIN_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_DECISION_TREE_GINI_GAIN_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="core_8hpp" kindref="compound">mlpack/core.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tree<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classmlpack_1_1tree_1_1GiniGain" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1tree_1_1GiniGain" kindref="compound">GiniGain</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UseWeights,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CountType&gt;</highlight></codeline>
<codeline lineno="34" refid="classmlpack_1_1tree_1_1GiniGain_1a67d1277fdaf085606937d4b523f615ba" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1GiniGain_1a67d1277fdaf085606937d4b523f615ba" kindref="member">EvaluatePtr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CountType*<sp/>counts,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>countLength,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CountType<sp/>totalCount)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(totalCount<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>CountType<sp/>impurity<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>countLength;<sp/>++i)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>impurity<sp/>+=<sp/>counts[i]<sp/>*<sp/>(totalCount<sp/>-<sp/>counts[i]);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-((double)<sp/>impurity<sp/>/<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>std::pow(totalCount,<sp/>2)));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UseWeights,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RowType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WeightVecType&gt;</highlight></codeline>
<codeline lineno="62" refid="classmlpack_1_1tree_1_1GiniGain_1a55301b1d670a7627f34d9a9e03b02cfb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1GiniGain_1a55301b1d670a7627f34d9a9e03b02cfb" kindref="member">Evaluate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RowType&amp;<sp/>labels,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numClasses,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>WeightVecType&amp;<sp/>weights)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Corner<sp/>case:<sp/>if<sp/>there<sp/>are<sp/>no<sp/>elements,<sp/>the<sp/>impurity<sp/>is<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(labels.n_elem<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>the<sp/>number<sp/>of<sp/>elements<sp/>in<sp/>each<sp/>class.<sp/><sp/>Use<sp/>four<sp/>auxiliary<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>exploit<sp/>SIMD<sp/>instructions<sp/>if<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::vec<sp/>countSpace(4<sp/>*<sp/>numClasses,<sp/>arma::fill::zeros);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::vec<sp/>counts(countSpace.memptr(),<sp/>numClasses,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::vec<sp/>counts2(countSpace.memptr()<sp/>+<sp/>numClasses,<sp/>numClasses,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::vec<sp/>counts3(countSpace.memptr()<sp/>+<sp/>2<sp/>*<sp/>numClasses,<sp/>numClasses,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::vec<sp/>counts4(countSpace.memptr()<sp/>+<sp/>3<sp/>*<sp/>numClasses,<sp/>numClasses,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>Gini<sp/>impurity<sp/>of<sp/>the<sp/>un-split<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>impurity<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UseWeights)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sum<sp/>all<sp/>the<sp/>weights<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>accWeights[4]<sp/>=<sp/>{<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0<sp/>};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SIMD<sp/>loop:<sp/>add<sp/>counts<sp/>for<sp/>four<sp/>elements<sp/>simultaneously<sp/>(if<sp/>the<sp/>compiler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>manages<sp/>to<sp/>vectorize<sp/>the<sp/>loop).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>3;<sp/>i<sp/>&lt;<sp/>labels.n_elem;<sp/>i<sp/>+=<sp/>4)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight1<sp/>=<sp/>weights[i<sp/>-<sp/>3];</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight2<sp/>=<sp/>weights[i<sp/>-<sp/>2];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight3<sp/>=<sp/>weights[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight4<sp/>=<sp/>weights[i];</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts[labels[i<sp/>-<sp/>3]]<sp/>+=<sp/>weight1;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts2[labels[i<sp/>-<sp/>2]]<sp/>+=<sp/>weight2;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts3[labels[i<sp/>-<sp/>1]]<sp/>+=<sp/>weight3;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts4[labels[i]]<sp/>+=<sp/>weight4;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accWeights[0]<sp/>+=<sp/>weight1;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accWeights[1]<sp/>+=<sp/>weight2;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accWeights[2]<sp/>+=<sp/>weight3;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accWeights[3]<sp/>+=<sp/>weight4;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>leftovers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(labels.n_elem<sp/>%<sp/>4<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight1<sp/>=<sp/>weights[labels.n_elem<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts[labels[labels.n_elem<sp/>-<sp/>1]]<sp/>+=<sp/>weight1;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accWeights[0]<sp/>+=<sp/>weight1;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(labels.n_elem<sp/>%<sp/>4<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight1<sp/>=<sp/>weights[labels.n_elem<sp/>-<sp/>2];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight2<sp/>=<sp/>weights[labels.n_elem<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts[labels[labels.n_elem<sp/>-<sp/>2]]<sp/>+=<sp/>weight1;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts2[labels[labels.n_elem<sp/>-<sp/>1]]<sp/>+=<sp/>weight2;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accWeights[0]<sp/>+=<sp/>weight1;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accWeights[1]<sp/>+=<sp/>weight2;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(labels.n_elem<sp/>%<sp/>4<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight1<sp/>=<sp/>weights[labels.n_elem<sp/>-<sp/>3];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight2<sp/>=<sp/>weights[labels.n_elem<sp/>-<sp/>2];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight3<sp/>=<sp/>weights[labels.n_elem<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts[labels[labels.n_elem<sp/>-<sp/>3]]<sp/>+=<sp/>weight1;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts2[labels[labels.n_elem<sp/>-<sp/>2]]<sp/>+=<sp/>weight2;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts3[labels[labels.n_elem<sp/>-<sp/>1]]<sp/>+=<sp/>weight3;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accWeights[0]<sp/>+=<sp/>weight1;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accWeights[1]<sp/>+=<sp/>weight2;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accWeights[2]<sp/>+=<sp/>weight3;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>accWeights[0]<sp/>+=<sp/>accWeights[1]<sp/>+<sp/>accWeights[2]<sp/>+<sp/>accWeights[3];</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>counts<sp/>+=<sp/>counts2<sp/>+<sp/>counts3<sp/>+<sp/>counts4;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Catch<sp/>edge<sp/>case:<sp/>if<sp/>there<sp/>are<sp/>no<sp/>weights,<sp/>the<sp/>impurity<sp/>is<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(accWeights[0]<sp/>==<sp/>0.0)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numClasses;<sp/>++i)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>((double)<sp/>counts[i]<sp/>/<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>accWeights[0]);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>impurity<sp/>+=<sp/>f<sp/>*<sp/>(1.0<sp/>-<sp/>f);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SIMD<sp/>loop:<sp/>add<sp/>counts<sp/>for<sp/>four<sp/>elements<sp/>simultaneously<sp/>(if<sp/>the<sp/>compiler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>manages<sp/>to<sp/>vectorize<sp/>the<sp/>loop).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>3;<sp/>i<sp/>&lt;<sp/>labels.n_elem;<sp/>i<sp/>+=<sp/>4)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts[labels[i<sp/>-<sp/>3]]++;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts2[labels[i<sp/>-<sp/>2]]++;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts3[labels[i<sp/>-<sp/>1]]++;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts4[labels[i]]++;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>leftovers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(labels.n_elem<sp/>%<sp/>4<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts[labels[labels.n_elem<sp/>-<sp/>1]]++;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(labels.n_elem<sp/>%<sp/>4<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts[labels[labels.n_elem<sp/>-<sp/>2]]++;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts2[labels[labels.n_elem<sp/>-<sp/>1]]++;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(labels.n_elem<sp/>%<sp/>4<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts[labels[labels.n_elem<sp/>-<sp/>3]]++;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts2[labels[labels.n_elem<sp/>-<sp/>2]]++;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counts3[labels[labels.n_elem<sp/>-<sp/>1]]++;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>counts<sp/>+=<sp/>counts2<sp/>+<sp/>counts3<sp/>+<sp/>counts4;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numClasses;<sp/>++i)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>((double)<sp/>counts[i]<sp/>/<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>labels.n_elem);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>impurity<sp/>+=<sp/>f<sp/>*<sp/>(1.0<sp/>-<sp/>f);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-impurity;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="classmlpack_1_1tree_1_1GiniGain_1a9d801bb1be5db5207213f846f224458f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1GiniGain_1a9d801bb1be5db5207213f846f224458f" kindref="member">Range</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numClasses)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>best<sp/>possible<sp/>case<sp/>is<sp/>that<sp/>only<sp/>one<sp/>class<sp/>exists,<sp/>which<sp/>gives<sp/>a<sp/>Gini</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>impurity<sp/>of<sp/>0.<sp/><sp/>The<sp/>worst<sp/>possible<sp/>case<sp/>is<sp/>that<sp/>the<sp/>classes<sp/>are<sp/>evenly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>distributed,<sp/>which<sp/>gives<sp/>n<sp/>*<sp/>(1/n<sp/>*<sp/>(1<sp/>-<sp/>1/n))<sp/>=<sp/>1<sp/>-<sp/>1/n.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0<sp/>-<sp/>(1.0<sp/>/<sp/>double(numClasses));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal">};</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/decision_tree/gini_gain.hpp"/>
  </compounddef>
</doxygen>
