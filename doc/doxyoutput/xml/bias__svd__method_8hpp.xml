<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="bias__svd__method_8hpp" kind="file" language="C++">
    <compoundname>bias_svd_method.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="bias__svd_8hpp" local="no">mlpack/methods/bias_svd/bias_svd.hpp</includes>
    <incdepgraph>
      <node id="46100">
        <label>list</label>
      </node>
      <node id="46156">
        <label>breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="46148">
        <label>binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46145" relation="include">
        </childnode>
        <childnode refid="46149" relation="include">
        </childnode>
      </node>
      <node id="46158">
        <label>binary_space_tree/traits.hpp</label>
        <link refid="binary__space__tree_2traits_8hpp"/>
        <childnode refid="46159" relation="include">
        </childnode>
        <childnode refid="46120" relation="include">
        </childnode>
      </node>
      <node id="46097">
        <label>atomic</label>
      </node>
      <node id="46191">
        <label>bias_svd_function.hpp</label>
        <link refid="bias__svd__function_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46108" relation="include">
        </childnode>
        <childnode refid="46192" relation="include">
        </childnode>
      </node>
      <node id="46087">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="46063">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="46099">
        <label>iomanip</label>
      </node>
      <node id="46155">
        <label>queue</label>
      </node>
      <node id="46169">
        <label>typedef.hpp</label>
        <link refid="methods_2neighbor__search_2typedef_8hpp"/>
        <childnode refid="46110" relation="include">
        </childnode>
        <childnode refid="46115" relation="include">
        </childnode>
        <childnode refid="46163" relation="include">
        </childnode>
        <childnode refid="46170" relation="include">
        </childnode>
      </node>
      <node id="46165">
        <label>neighbor_search_rules.hpp</label>
        <link refid="neighbor__search__rules_8hpp"/>
        <childnode refid="46166" relation="include">
        </childnode>
        <childnode refid="46155" relation="include">
        </childnode>
        <childnode refid="46167" relation="include">
        </childnode>
      </node>
      <node id="46117">
        <label>bound_traits.hpp</label>
        <link refid="bound__traits_8hpp"/>
      </node>
      <node id="46130">
        <label>binary_space_tree/mean_split.hpp</label>
        <link refid="mean__split_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46128" relation="include">
        </childnode>
        <childnode refid="46131" relation="include">
        </childnode>
      </node>
      <node id="46116">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="46161">
        <label>mlpack/core/tree/rectangle_tree.hpp</label>
      </node>
      <node id="46172">
        <label>mlpack/methods/amf/amf.hpp</label>
        <link refid="amf_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46173" relation="include">
        </childnode>
        <childnode refid="46174" relation="include">
        </childnode>
        <childnode refid="46175" relation="include">
        </childnode>
        <childnode refid="46176" relation="include">
        </childnode>
        <childnode refid="46177" relation="include">
        </childnode>
        <childnode refid="46178" relation="include">
        </childnode>
        <childnode refid="46179" relation="include">
        </childnode>
        <childnode refid="46180" relation="include">
        </childnode>
        <childnode refid="46181" relation="include">
        </childnode>
        <childnode refid="46182" relation="include">
        </childnode>
      </node>
      <node id="46072">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="46073" relation="include">
        </childnode>
        <childnode refid="46075" relation="include">
        </childnode>
      </node>
      <node id="46055">
        <label>cstdint</label>
      </node>
      <node id="46064">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="46071">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="46157">
        <label>binary_space_tree/breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="46164">
        <label>nearest_neighbor_sort_impl.hpp</label>
      </node>
      <node id="46134">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="46131">
        <label>mean_split_impl.hpp</label>
      </node>
      <node id="46094">
        <label>arma_config.hpp</label>
      </node>
      <node id="46122">
        <label>hollow_ball_bound.hpp</label>
        <link refid="hollow__ball__bound_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46115" relation="include">
        </childnode>
        <childnode refid="46117" relation="include">
        </childnode>
        <childnode refid="46123" relation="include">
        </childnode>
      </node>
      <node id="46146">
        <label>../statistic.hpp</label>
        <link refid="statistic_8hpp"/>
      </node>
      <node id="46162">
        <label>neighbor_search_stat.hpp</label>
        <link refid="neighbor__search__stat_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
      </node>
      <node id="46141">
        <label>lin_alg_impl.hpp</label>
      </node>
      <node id="46084">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="46051">
        <label>cmath</label>
      </node>
      <node id="46113">
        <label>bounds.hpp</label>
        <link refid="bounds_8hpp"/>
        <childnode refid="46114" relation="include">
        </childnode>
        <childnode refid="46115" relation="include">
        </childnode>
        <childnode refid="46117" relation="include">
        </childnode>
        <childnode refid="46118" relation="include">
        </childnode>
        <childnode refid="46120" relation="include">
        </childnode>
        <childnode refid="46122" relation="include">
        </childnode>
        <childnode refid="46124" relation="include">
        </childnode>
      </node>
      <node id="46070">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="46059">
        <label>stdexcept</label>
      </node>
      <node id="46151">
        <label>binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46145" relation="include">
        </childnode>
        <childnode refid="46152" relation="include">
        </childnode>
      </node>
      <node id="46079">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="46064" relation="include">
        </childnode>
        <childnode refid="46066" relation="include">
        </childnode>
        <childnode refid="46067" relation="include">
        </childnode>
        <childnode refid="46065" relation="include">
        </childnode>
      </node>
      <node id="46114">
        <label>mlpack/core/math/range.hpp</label>
      </node>
      <node id="46049">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/bias_svd_method.hpp</label>
        <link refid="bias__svd__method_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46107" relation="include">
        </childnode>
      </node>
      <node id="46103">
        <label>string</label>
      </node>
      <node id="46137">
        <label>binary_space_tree/rp_tree_max_split.hpp</label>
        <link refid="rp__tree__max__split_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46128" relation="include">
        </childnode>
        <childnode refid="46138" relation="include">
        </childnode>
      </node>
      <node id="46129">
        <label>midpoint_split_impl.hpp</label>
      </node>
      <node id="46091">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="46092" relation="include">
        </childnode>
        <childnode refid="46058" relation="include">
        </childnode>
      </node>
      <node id="46109">
        <label>mlpack/methods/cf/cf.hpp</label>
        <link refid="cf_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46110" relation="include">
        </childnode>
        <childnode refid="46172" relation="include">
        </childnode>
        <childnode refid="46174" relation="include">
        </childnode>
        <childnode refid="46180" relation="include">
        </childnode>
        <childnode refid="46183" relation="include">
        </childnode>
        <childnode refid="46184" relation="include">
        </childnode>
        <childnode refid="46186" relation="include">
        </childnode>
        <childnode refid="46187" relation="include">
        </childnode>
        <childnode refid="46188" relation="include">
        </childnode>
        <childnode refid="46101" relation="include">
        </childnode>
        <childnode refid="46189" relation="include">
        </childnode>
        <childnode refid="46190" relation="include">
        </childnode>
      </node>
      <node id="46101">
        <label>map</label>
      </node>
      <node id="46152">
        <label>dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="46140">
        <label>mlpack/core/math/lin_alg.hpp</label>
        <link refid="lin__alg_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46141" relation="include">
        </childnode>
      </node>
      <node id="46053">
        <label>cfloat</label>
      </node>
      <node id="46183">
        <label>mlpack/methods/cf/normalization/no_normalization.hpp</label>
        <link refid="no__normalization_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
      </node>
      <node id="46083">
        <label>boost/variant.hpp</label>
      </node>
      <node id="46105">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="46067">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="46090">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="46091" relation="include">
        </childnode>
        <childnode refid="46067" relation="include">
        </childnode>
        <childnode refid="46074" relation="include">
        </childnode>
        <childnode refid="46092" relation="include">
        </childnode>
      </node>
      <node id="46080">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="46078">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="46064" relation="include">
        </childnode>
        <childnode refid="46066" relation="include">
        </childnode>
        <childnode refid="46067" relation="include">
        </childnode>
        <childnode refid="46065" relation="include">
        </childnode>
      </node>
      <node id="46081">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="46064" relation="include">
        </childnode>
        <childnode refid="46066" relation="include">
        </childnode>
        <childnode refid="46067" relation="include">
        </childnode>
        <childnode refid="46065" relation="include">
        </childnode>
      </node>
      <node id="46147">
        <label>binary_space_tree_impl.hpp</label>
      </node>
      <node id="46069">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="46182">
        <label>amf_impl.hpp</label>
      </node>
      <node id="46089">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="46065" relation="include">
        </childnode>
        <childnode refid="46066" relation="include">
        </childnode>
        <childnode refid="46067" relation="include">
        </childnode>
        <childnode refid="46077" relation="include">
        </childnode>
        <childnode refid="46086" relation="include">
        </childnode>
      </node>
      <node id="46093">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="46094" relation="include">
        </childnode>
      </node>
      <node id="46153">
        <label>binary_space_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="46167">
        <label>neighbor_search_rules_impl.hpp</label>
      </node>
      <node id="46095">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="46050">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="46051" relation="include">
        </childnode>
        <childnode refid="46052" relation="include">
        </childnode>
        <childnode refid="46053" relation="include">
        </childnode>
        <childnode refid="46054" relation="include">
        </childnode>
        <childnode refid="46055" relation="include">
        </childnode>
        <childnode refid="46056" relation="include">
        </childnode>
        <childnode refid="46057" relation="include">
        </childnode>
        <childnode refid="46058" relation="include">
        </childnode>
        <childnode refid="46059" relation="include">
        </childnode>
        <childnode refid="46060" relation="include">
        </childnode>
        <childnode refid="46061" relation="include">
        </childnode>
        <childnode refid="46062" relation="include">
        </childnode>
        <childnode refid="46063" relation="include">
        </childnode>
        <childnode refid="46064" relation="include">
        </childnode>
        <childnode refid="46065" relation="include">
        </childnode>
        <childnode refid="46066" relation="include">
        </childnode>
        <childnode refid="46067" relation="include">
        </childnode>
        <childnode refid="46068" relation="include">
        </childnode>
        <childnode refid="46069" relation="include">
        </childnode>
        <childnode refid="46070" relation="include">
        </childnode>
        <childnode refid="46071" relation="include">
        </childnode>
        <childnode refid="46072" relation="include">
        </childnode>
        <childnode refid="46076" relation="include">
        </childnode>
        <childnode refid="46077" relation="include">
        </childnode>
        <childnode refid="46078" relation="include">
        </childnode>
        <childnode refid="46079" relation="include">
        </childnode>
        <childnode refid="46080" relation="include">
        </childnode>
        <childnode refid="46081" relation="include">
        </childnode>
        <childnode refid="46082" relation="include">
        </childnode>
        <childnode refid="46088" relation="include">
        </childnode>
        <childnode refid="46089" relation="include">
        </childnode>
        <childnode refid="46086" relation="include">
        </childnode>
        <childnode refid="46090" relation="include">
        </childnode>
        <childnode refid="46093" relation="include">
        </childnode>
        <childnode refid="46095" relation="include">
        </childnode>
        <childnode refid="46096" relation="include">
        </childnode>
        <childnode refid="46105" relation="include">
        </childnode>
        <childnode refid="46106" relation="include">
        </childnode>
      </node>
      <node id="46149">
        <label>single_tree_traverser_impl.hpp</label>
      </node>
      <node id="46171">
        <label>furthest_neighbor_sort_impl.hpp</label>
      </node>
      <node id="46127">
        <label>binary_space_tree/midpoint_split.hpp</label>
        <link refid="midpoint__split_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46128" relation="include">
        </childnode>
        <childnode refid="46129" relation="include">
        </childnode>
      </node>
      <node id="46135">
        <label>random</label>
      </node>
      <node id="46121">
        <label>ballbound_impl.hpp</label>
      </node>
      <node id="46193">
        <label>bias_svd_impl.hpp</label>
      </node>
      <node id="46150">
        <label>binary_space_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="46175">
        <label>mlpack/methods/amf/update_rules/svd_batch_learning.hpp</label>
        <link refid="svd__batch__learning_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
      </node>
      <node id="46056">
        <label>cstdio</label>
      </node>
      <node id="46186">
        <label>mlpack/methods/cf/neighbor_search_policies/lmetric_search.hpp</label>
        <link refid="lmetric__search_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46110" relation="include">
        </childnode>
        <childnode refid="46115" relation="include">
        </childnode>
      </node>
      <node id="46125">
        <label>address.hpp</label>
        <link refid="address_8hpp"/>
      </node>
      <node id="46159">
        <label>mlpack/core/tree/tree_traits.hpp</label>
        <link refid="tree__traits_8hpp"/>
      </node>
      <node id="46173">
        <label>mlpack/methods/amf/update_rules/nmf_mult_dist.hpp</label>
        <link refid="nmf__mult__dist_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
      </node>
      <node id="46107">
        <label>mlpack/methods/bias_svd/bias_svd.hpp</label>
        <link refid="bias__svd_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46108" relation="include">
        </childnode>
        <childnode refid="46109" relation="include">
        </childnode>
        <childnode refid="46191" relation="include">
        </childnode>
        <childnode refid="46193" relation="include">
        </childnode>
      </node>
      <node id="46060">
        <label>tuple</label>
      </node>
      <node id="46065">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="46143">
        <label>binary_space_tree/ub_tree_split.hpp</label>
        <link refid="ub__tree__split_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46125" relation="include">
        </childnode>
        <childnode refid="46144" relation="include">
        </childnode>
      </node>
      <node id="46082">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="46065" relation="include">
        </childnode>
        <childnode refid="46066" relation="include">
        </childnode>
        <childnode refid="46067" relation="include">
        </childnode>
        <childnode refid="46069" relation="include">
        </childnode>
        <childnode refid="46083" relation="include">
        </childnode>
        <childnode refid="46084" relation="include">
        </childnode>
        <childnode refid="46085" relation="include">
        </childnode>
        <childnode refid="46086" relation="include">
        </childnode>
      </node>
      <node id="46145">
        <label>binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46146" relation="include">
        </childnode>
        <childnode refid="46127" relation="include">
        </childnode>
        <childnode refid="46147" relation="include">
        </childnode>
        <childnode refid="46112" relation="include">
        </childnode>
      </node>
      <node id="46118">
        <label>hrectbound.hpp</label>
        <link refid="hrectbound_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46114" relation="include">
        </childnode>
        <childnode refid="46115" relation="include">
        </childnode>
        <childnode refid="46117" relation="include">
        </childnode>
        <childnode refid="46119" relation="include">
        </childnode>
      </node>
      <node id="46111">
        <label>vector</label>
      </node>
      <node id="46142">
        <label>rp_tree_mean_split_impl.hpp</label>
      </node>
      <node id="46133">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46134" relation="include">
        </childnode>
        <childnode refid="46135" relation="include">
        </childnode>
      </node>
      <node id="46181">
        <label>mlpack/methods/amf/termination_policies/simple_tolerance_termination.hpp</label>
        <link refid="simple__tolerance__termination_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
      </node>
      <node id="46061">
        <label>utility</label>
      </node>
      <node id="46085">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="46076">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="46112">
        <label>mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46113" relation="include">
        </childnode>
        <childnode refid="46127" relation="include">
        </childnode>
        <childnode refid="46130" relation="include">
        </childnode>
        <childnode refid="46132" relation="include">
        </childnode>
        <childnode refid="46137" relation="include">
        </childnode>
        <childnode refid="46139" relation="include">
        </childnode>
        <childnode refid="46143" relation="include">
        </childnode>
        <childnode refid="46145" relation="include">
        </childnode>
        <childnode refid="46148" relation="include">
        </childnode>
        <childnode refid="46150" relation="include">
        </childnode>
        <childnode refid="46151" relation="include">
        </childnode>
        <childnode refid="46153" relation="include">
        </childnode>
        <childnode refid="46154" relation="include">
        </childnode>
        <childnode refid="46157" relation="include">
        </childnode>
        <childnode refid="46158" relation="include">
        </childnode>
        <childnode refid="46160" relation="include">
        </childnode>
      </node>
      <node id="46178">
        <label>mlpack/methods/amf/init_rules/random_init.hpp</label>
        <link refid="amf_2init__rules_2random__init_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
      </node>
      <node id="46163">
        <label>sort_policies/nearest_neighbor_sort.hpp</label>
        <link refid="nearest__neighbor__sort_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46164" relation="include">
        </childnode>
      </node>
      <node id="46073">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="46074" relation="include">
        </childnode>
      </node>
      <node id="46096">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="46097" relation="include">
        </childnode>
        <childnode refid="46098" relation="include">
        </childnode>
        <childnode refid="46099" relation="include">
        </childnode>
        <childnode refid="46100" relation="include">
        </childnode>
        <childnode refid="46101" relation="include">
        </childnode>
        <childnode refid="46102" relation="include">
        </childnode>
        <childnode refid="46103" relation="include">
        </childnode>
        <childnode refid="46104" relation="include">
        </childnode>
      </node>
      <node id="46074">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="46110">
        <label>mlpack/methods/neighbor_search/neighbor_search.hpp</label>
        <link refid="neighbor__search_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46111" relation="include">
        </childnode>
        <childnode refid="46103" relation="include">
        </childnode>
        <childnode refid="46112" relation="include">
        </childnode>
        <childnode refid="46161" relation="include">
        </childnode>
        <childnode refid="46145" relation="include">
        </childnode>
        <childnode refid="46162" relation="include">
        </childnode>
        <childnode refid="46163" relation="include">
        </childnode>
        <childnode refid="46165" relation="include">
        </childnode>
        <childnode refid="46168" relation="include">
        </childnode>
        <childnode refid="46169" relation="include">
        </childnode>
      </node>
      <node id="46088">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="46086" relation="include">
        </childnode>
        <childnode refid="46082" relation="include">
        </childnode>
        <childnode refid="46089" relation="include">
        </childnode>
      </node>
      <node id="46057">
        <label>cstdlib</label>
      </node>
      <node id="46177">
        <label>mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp</label>
        <link refid="svd__complete__incremental__learning_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
      </node>
      <node id="46168">
        <label>neighbor_search_impl.hpp</label>
      </node>
      <node id="46052">
        <label>cctype</label>
      </node>
      <node id="46189">
        <label>iostream</label>
      </node>
      <node id="46190">
        <label>cf_impl.hpp</label>
      </node>
      <node id="46170">
        <label>sort_policies/furthest_neighbor_sort.hpp</label>
        <link refid="furthest__neighbor__sort_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46171" relation="include">
        </childnode>
      </node>
      <node id="46174">
        <label>mlpack/methods/amf/update_rules/nmf_als.hpp</label>
        <link refid="nmf__als_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
      </node>
      <node id="46192">
        <label>bias_svd_function_impl.hpp</label>
      </node>
      <node id="46075">
        <label>unordered_map</label>
      </node>
      <node id="46054">
        <label>climits</label>
      </node>
      <node id="46102">
        <label>mutex</label>
      </node>
      <node id="46187">
        <label>mlpack/methods/cf/interpolation_policies/average_interpolation.hpp</label>
        <link refid="average__interpolation_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
      </node>
      <node id="46098">
        <label>chrono</label>
      </node>
      <node id="46166">
        <label>mlpack/core/tree/traversal_info.hpp</label>
        <link refid="traversal__info_8hpp"/>
      </node>
      <node id="46119">
        <label>hrectbound_impl.hpp</label>
      </node>
      <node id="46106">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="46139">
        <label>binary_space_tree/rp_tree_mean_split.hpp</label>
        <link refid="rp__tree__mean__split_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46137" relation="include">
        </childnode>
        <childnode refid="46128" relation="include">
        </childnode>
        <childnode refid="46140" relation="include">
        </childnode>
        <childnode refid="46142" relation="include">
        </childnode>
      </node>
      <node id="46136">
        <label>vantage_point_split_impl.hpp</label>
      </node>
      <node id="46104">
        <label>thread</label>
      </node>
      <node id="46120">
        <label>ballbound.hpp</label>
        <link refid="ballbound_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46115" relation="include">
        </childnode>
        <childnode refid="46117" relation="include">
        </childnode>
        <childnode refid="46121" relation="include">
        </childnode>
      </node>
      <node id="46176">
        <label>mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp</label>
        <link refid="svd__incomplete__incremental__learning_8hpp"/>
      </node>
      <node id="46138">
        <label>rp_tree_max_split_impl.hpp</label>
      </node>
      <node id="46128">
        <label>mlpack/core/tree/perform_split.hpp</label>
        <link refid="perform__split_8hpp"/>
      </node>
      <node id="46185">
        <label>mlpack/methods/amf/termination_policies/max_iteration_termination.hpp</label>
        <link refid="max__iteration__termination_8hpp"/>
      </node>
      <node id="46180">
        <label>mlpack/methods/amf/termination_policies/simple_residue_termination.hpp</label>
        <link refid="simple__residue__termination_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
      </node>
      <node id="46092">
        <label>type_traits</label>
      </node>
      <node id="46179">
        <label>mlpack/methods/amf/init_rules/random_acol_init.hpp</label>
        <link refid="random__acol__init_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46133" relation="include">
        </childnode>
      </node>
      <node id="46188">
        <label>set</label>
      </node>
      <node id="46154">
        <label>binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46155" relation="include">
        </childnode>
        <childnode refid="46112" relation="include">
        </childnode>
        <childnode refid="46156" relation="include">
        </childnode>
      </node>
      <node id="46068">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="46160">
        <label>binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="46112" relation="include">
        </childnode>
      </node>
      <node id="46062">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="46086">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="46064" relation="include">
        </childnode>
        <childnode refid="46065" relation="include">
        </childnode>
        <childnode refid="46066" relation="include">
        </childnode>
        <childnode refid="46067" relation="include">
        </childnode>
        <childnode refid="46087" relation="include">
        </childnode>
      </node>
      <node id="46123">
        <label>hollow_ball_bound_impl.hpp</label>
      </node>
      <node id="46058">
        <label>cstring</label>
      </node>
      <node id="46077">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="46126">
        <label>cellbound_impl.hpp</label>
      </node>
      <node id="46144">
        <label>ub_tree_split_impl.hpp</label>
      </node>
      <node id="46124">
        <label>cellbound.hpp</label>
        <link refid="cellbound_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46114" relation="include">
        </childnode>
        <childnode refid="46115" relation="include">
        </childnode>
        <childnode refid="46117" relation="include">
        </childnode>
        <childnode refid="46125" relation="include">
        </childnode>
        <childnode refid="46126" relation="include">
        </childnode>
      </node>
      <node id="46108">
        <label>ensmallen.hpp</label>
      </node>
      <node id="46066">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="46115">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46116" relation="include">
        </childnode>
      </node>
      <node id="46132">
        <label>binary_space_tree/vantage_point_split.hpp</label>
        <link refid="vantage__point__split_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46128" relation="include">
        </childnode>
        <childnode refid="46133" relation="include">
        </childnode>
        <childnode refid="46136" relation="include">
        </childnode>
      </node>
      <node id="46184">
        <label>mlpack/methods/cf/decomposition_policies/nmf_method.hpp</label>
        <link refid="nmf__method_8hpp"/>
        <childnode refid="46050" relation="include">
        </childnode>
        <childnode refid="46172" relation="include">
        </childnode>
        <childnode refid="46174" relation="include">
        </childnode>
        <childnode refid="46185" relation="include">
        </childnode>
        <childnode refid="46180" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1cf_1_1BiasSVDPolicy" prot="public">mlpack::cf::BiasSVDPolicy</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1cf">mlpack::cf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Wenhao Huang</para></simplesect>
Implementation of the bias svd method for use in the Collaborative Filtering.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="14"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_CF_DECOMPOSITION_POLICIES_BIAS_SVD_METHOD_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_CF_DECOMPOSITION_POLICIES_BIAS_SVD_METHOD_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="bias__svd_8hpp" kindref="compound">mlpack/methods/bias_svd/bias_svd.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cf<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classmlpack_1_1cf_1_1BiasSVDPolicy" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1cf_1_1BiasSVDPolicy" kindref="compound">BiasSVDPolicy</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51" refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1a84017b53f2a6df3270eecceb8a4aec85" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1a84017b53f2a6df3270eecceb8a4aec85" kindref="member">BiasSVDPolicy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations<sp/>=<sp/>10,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha<sp/>=<sp/>0.02,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda<sp/>=<sp/>0.05)<sp/>:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maxIterations(maxIterations),</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alpha(alpha),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lambda(lambda)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1a3b3962a80d1217a799cfab110b487cea" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1a3b3962a80d1217a799cfab110b487cea" kindref="member">Apply</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::sp_mat&amp;<sp/></highlight><highlight class="comment">/*<sp/>cleanedData<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rank,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>minResidue<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>mit<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>decomposition<sp/>using<sp/>the<sp/>bias<sp/>SVD<sp/>algorithm.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1svd_1_1BiasSVD" kindref="compound">svd::BiasSVD&lt;&gt;</ref><sp/>biassvd(maxIterations,<sp/>alpha,<sp/>lambda);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>biassvd.<ref refid="classmlpack_1_1svd_1_1BiasSVD_1a2cda95c3460611ea7af141f8db7fb3eb" kindref="member">Apply</ref>(data,<sp/>rank,<sp/>w,<sp/>h,<sp/>p,<sp/>q);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1a0c3e16d73c8b25b8934cbc36ac161619" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1a0c3e16d73c8b25b8934cbc36ac161619" kindref="member">GetRating</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>user,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>item)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="92"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rating<sp/>=</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::as_scalar(w.row(item)<sp/>*<sp/>h.col(user))<sp/>+<sp/>p(item)<sp/>+<sp/>q(user);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rating;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1ae5dc3895f0294bf054cb2ea58084a426" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1ae5dc3895f0294bf054cb2ea58084a426" kindref="member">GetRatingOfUser</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>user,<sp/>arma::vec&amp;<sp/>rating)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="105"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>rating<sp/>=<sp/>w<sp/>*<sp/>h.col(user)<sp/>+<sp/>p<sp/>+<sp/>q(user);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NeighborSearchPolicy&gt;</highlight></codeline>
<codeline lineno="122" refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1a35bca7a6e09f4fb35b9945a9368711e4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1a35bca7a6e09f4fb35b9945a9368711e4" kindref="member">GetNeighborhood</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Col&lt;size_t&gt;&amp;<sp/>users,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numUsersForSimilarity,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;size_t&gt;&amp;<sp/>neighborhood,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>similarities)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="126"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>User<sp/>latent<sp/>vectors<sp/>(matrix<sp/>H)<sp/>are<sp/>used<sp/>for<sp/>neighbor<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporarily<sp/>store<sp/>feature<sp/>vector<sp/>of<sp/>queried<sp/>users.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::mat<sp/>query(h.n_rows,<sp/>users.n_elem);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>feature<sp/>vectors<sp/>of<sp/>queried<sp/>users.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>users.n_elem;<sp/>++i)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>query.col(i)<sp/>=<sp/>h.col(users(i));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>NeighborSearchPolicy<sp/>neighborSearch(h);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>neighborSearch.Search(</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>query,<sp/>numUsersForSimilarity,<sp/>neighborhood,<sp/>similarities);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1a0f733dde66e23287758de984b5151e36" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/><ref refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1a0f733dde66e23287758de984b5151e36" kindref="member">W</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w;<sp/>}</highlight></codeline>
<codeline lineno="142" refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1a71e6a6119b9efde17f4112c6d82d9233" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/><ref refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1a71e6a6119b9efde17f4112c6d82d9233" kindref="member">H</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h;<sp/>}</highlight></codeline>
<codeline lineno="144" refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1a833b773328ccaf79c06f39e4fb12a993" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/><ref refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1a833b773328ccaf79c06f39e4fb12a993" kindref="member">Q</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>q;<sp/>}</highlight></codeline>
<codeline lineno="146" refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1ae9a18ef885ed4222645dad9b7b15c3ef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/><ref refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1ae9a18ef885ed4222645dad9b7b15c3ef" kindref="member">P</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;<sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1a420770944a5b0c7a852c4ec372c4a2d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1a420770944a5b0c7a852c4ec372c4a2d1" kindref="member">MaxIterations</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxIterations;<sp/>}</highlight></codeline>
<codeline lineno="151" refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1acda675ab4ab86b95c92bc33bc391a61b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1acda675ab4ab86b95c92bc33bc391a61b" kindref="member">MaxIterations</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxIterations;<sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1a500ecd077d5cc5fdbf6ceb095d8de9e1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1a500ecd077d5cc5fdbf6ceb095d8de9e1" kindref="member">Alpha</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>alpha;<sp/>}</highlight></codeline>
<codeline lineno="156" refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1acbb0e4747a3a307bee88bad71e5eeaf1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1acbb0e4747a3a307bee88bad71e5eeaf1" kindref="member">Alpha</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>alpha;<sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1a53535041275cedd0ec3de67ca032aa94" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1a53535041275cedd0ec3de67ca032aa94" kindref="member">Lambda</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lambda;<sp/>}</highlight></codeline>
<codeline lineno="161" refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1aaf66629b989a326453647f42443c6a0c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1aaf66629b989a326453647f42443c6a0c" kindref="member">Lambda</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lambda;<sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="167" refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1a65cba07328997659bec80b9879b15a51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1BiasSVDPolicy_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(maxIterations));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(alpha));</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(lambda));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(w));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(h));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(p));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(q));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>arma::mat<sp/>w;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>arma::mat<sp/>h;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>arma::vec<sp/>p;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>arma::vec<sp/>q;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">};</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/bias_svd_method.hpp"/>
  </compounddef>
</doxygen>
