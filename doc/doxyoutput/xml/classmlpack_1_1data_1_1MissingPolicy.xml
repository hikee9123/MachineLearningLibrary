<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1data_1_1MissingPolicy" kind="class" language="C++" prot="public">
    <compoundname>mlpack::data::MissingPolicy</compoundname>
    <includes refid="missing__policy_8hpp" local="no">missing_policy.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmlpack_1_1data_1_1MissingPolicy_1a0265262ad1f0df167b2f48524b20b3e7" prot="public" static="no">
        <type>double</type>
        <definition>using MappedType =  double</definition>
        <argsstring></argsstring>
        <name>MappedType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/map_policies/missing_policy.hpp" line="35" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/map_policies/missing_policy.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classmlpack_1_1data_1_1MissingPolicy_1a6ef7d83a1da0e9f1d02b61f62e852079" prot="public" static="yes" mutable="no">
        <type>const bool</type>
        <definition>const bool NeedsFirstPass</definition>
        <argsstring></argsstring>
        <name>NeedsFirstPass</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>This doesn&apos;t need a first pass over the data to set up. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/map_policies/missing_policy.hpp" line="56" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/map_policies/missing_policy.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1data_1_1MissingPolicy_1a69f31774481286de03a5bd296a7ec34b" prot="private" static="no" mutable="no">
        <type>std::set&lt; std::string &gt;</type>
        <definition>std::set&lt;std::string&gt; missingSet</definition>
        <argsstring></argsstring>
        <name>missingSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/map_policies/missing_policy.hpp" line="141" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/map_policies/missing_policy.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1data_1_1MissingPolicy_1a90cec8cd33b9f03c43fb3ea28989e129" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MissingPolicy</definition>
        <argsstring>()</argsstring>
        <name>MissingPolicy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/map_policies/missing_policy.hpp" line="37" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/map_policies/missing_policy.hpp" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1data_1_1MissingPolicy_1a35006875c42df50a4adc4968e817a471" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MissingPolicy</definition>
        <argsstring>(std::set&lt; std::string &gt; missingSet)</argsstring>
        <name>MissingPolicy</name>
        <param>
          <type>std::set&lt; std::string &gt;</type>
          <declname>missingSet</declname>
        </param>
        <briefdescription>
<para>Create the <ref refid="classmlpack_1_1data_1_1MissingPolicy" kindref="compound">MissingPolicy</ref> object with the given missingSet. </para>        </briefdescription>
        <detaileddescription>
<para>Note that the missingSet cannot be changed later; you will have to create a new <ref refid="classmlpack_1_1data_1_1MissingPolicy" kindref="compound">MissingPolicy</ref> object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>missingSet</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of strings that should be mapped. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/map_policies/missing_policy.hpp" line="49" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/map_policies/missing_policy.hpp" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1data_1_1MissingPolicy_1a230e07e59bf0cfdcf5d75cc459c8b759" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void MapFirstPass</definition>
        <argsstring>(const std::string &amp;, const size_t)</argsstring>
        <name>MapFirstPass</name>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <param>
          <type>const size_t</type>
        </param>
        <briefdescription>
<para>There is nothing for us to do here, but this is required by the MapPolicy type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/map_policies/missing_policy.hpp" line="63" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/map_policies/missing_policy.hpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1data_1_1MissingPolicy_1a93a368288d49f1902675d2f3ff47227a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MapType</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T MapString</definition>
        <argsstring>(const std::string &amp;string, const size_t dimension, MapType &amp;maps, std::vector&lt; Datatype &gt; &amp;)</argsstring>
        <name>MapString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>dimension</declname>
        </param>
        <param>
          <type>MapType &amp;</type>
          <declname>maps</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespacemlpack_1_1data_1aa7714fa0b7efc7b31cbda21da607c5b6" kindref="member">Datatype</ref> &gt; &amp;</type>
        </param>
        <briefdescription>
<para>Given the string and the dimension to which it belongs by the user, and the maps and types given by the <ref refid="classmlpack_1_1data_1_1DatasetMapper" kindref="compound">DatasetMapper</ref> class, returns its numeric mapping. </para>        </briefdescription>
        <detaileddescription>
<para>If no mapping yet exists and the string is included in the missingSet, the string is added to the list of mappings for the given dimension. This function is used as a helper function for <ref refid="classmlpack_1_1data_1_1DatasetMapper" kindref="compound">DatasetMapper</ref> class.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MapType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of unordered_map that contains mapped value pairs </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>String to find/create mapping for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dimension</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the dimension of the string. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maps</parametername>
</parameternamelist>
<parameterdescription>
<para>Unordered map given by the <ref refid="classmlpack_1_1data_1_1DatasetMapper" kindref="compound">DatasetMapper</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(types) Vector containing the type information about each dimensions. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/map_policies/missing_policy.hpp" line="84" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/map_policies/missing_policy.hpp" bodystart="84" bodyend="135"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classmlpack_1_1data_1_1MissingPolicy" kindref="compound">MissingPolicy</ref> is used as a helper class for <ref refid="classmlpack_1_1data_1_1DatasetMapper" kindref="compound">DatasetMapper</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>It tells how the strings should be mapped. Purpose of this policy is to map all user-defined missing variables into maps so that users can decide what to do with the corrupted data. User-defined missing variables are given by the missingSet. Note that <ref refid="classmlpack_1_1data_1_1MissingPolicy" kindref="compound">MissingPolicy</ref> does not change type of features. </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/core/data/map_policies/missing_policy.hpp" line="32" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/map_policies/missing_policy.hpp" bodystart="31" bodyend="142"/>
    <listofallmembers>
      <member refid="classmlpack_1_1data_1_1MissingPolicy_1a230e07e59bf0cfdcf5d75cc459c8b759" prot="public" virt="non-virtual"><scope>mlpack::data::MissingPolicy</scope><name>MapFirstPass</name></member>
      <member refid="classmlpack_1_1data_1_1MissingPolicy_1a0265262ad1f0df167b2f48524b20b3e7" prot="public" virt="non-virtual"><scope>mlpack::data::MissingPolicy</scope><name>MappedType</name></member>
      <member refid="classmlpack_1_1data_1_1MissingPolicy_1a93a368288d49f1902675d2f3ff47227a" prot="public" virt="non-virtual"><scope>mlpack::data::MissingPolicy</scope><name>MapString</name></member>
      <member refid="classmlpack_1_1data_1_1MissingPolicy_1a90cec8cd33b9f03c43fb3ea28989e129" prot="public" virt="non-virtual"><scope>mlpack::data::MissingPolicy</scope><name>MissingPolicy</name></member>
      <member refid="classmlpack_1_1data_1_1MissingPolicy_1a35006875c42df50a4adc4968e817a471" prot="public" virt="non-virtual"><scope>mlpack::data::MissingPolicy</scope><name>MissingPolicy</name></member>
      <member refid="classmlpack_1_1data_1_1MissingPolicy_1a69f31774481286de03a5bd296a7ec34b" prot="private" virt="non-virtual"><scope>mlpack::data::MissingPolicy</scope><name>missingSet</name></member>
      <member refid="classmlpack_1_1data_1_1MissingPolicy_1a6ef7d83a1da0e9f1d02b61f62e852079" prot="public" virt="non-virtual"><scope>mlpack::data::MissingPolicy</scope><name>NeedsFirstPass</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
