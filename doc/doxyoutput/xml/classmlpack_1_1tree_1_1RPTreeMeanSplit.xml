<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1tree_1_1RPTreeMeanSplit" kind="class" language="C++" prot="public">
    <compoundname>mlpack::tree::RPTreeMeanSplit</compoundname>
    <includes refid="rp__tree__mean__split_8hpp" local="no">rp_tree_mean_split.hpp</includes>
    <innerclass refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo" prot="public">mlpack::tree::RPTreeMeanSplit::SplitInfo</innerclass>
    <templateparamlist>
      <param>
        <type>typename BoundType</type>
      </param>
      <param>
        <type>typename MatType</type>
        <defval>arma::mat</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmlpack_1_1tree_1_1RPTreeMeanSplit_1a227d0c7e23e98fcd6c81ecab357a791f" prot="public" static="no">
        <type>MatType::elem_type</type>
        <definition>typedef MatType::elem_type ElemType</definition>
        <argsstring></argsstring>
        <name>ElemType</name>
        <briefdescription>
<para>The element type held by the matrix type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_mean_split.hpp" line="37" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_mean_split.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1RPTreeMeanSplit_1af0fc61f469596cb8796d1966564ecbcb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VecType</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool AssignToLeftNode</definition>
        <argsstring>(const VecType &amp;point, const SplitInfo &amp;splitInfo)</argsstring>
        <name>AssignToLeftNode</name>
        <param>
          <type>const VecType &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const <ref refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref> &amp;</type>
          <declname>splitInfo</declname>
        </param>
        <briefdescription>
<para>Indicates that a point should be assigned to the left subtree. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>The point that is being assigned. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>splitInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>An information about the split. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_mean_split.hpp" line="123" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_mean_split.hpp" bodystart="123" bodyend="130"/>
        <references refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo_1a620f4f39e225b65a841f34c53b94515f" compoundref="rp__tree__mean__split_8hpp" startline="42">RPTreeMeanSplit&lt; BoundType, MatType &gt;::SplitInfo::direction</references>
        <references refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo_1a12759ca9cb67acd78d9f84691d3dbca2" compoundref="rp__tree__mean__split_8hpp" startline="44">RPTreeMeanSplit&lt; BoundType, MatType &gt;::SplitInfo::mean</references>
        <references refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo_1a66c386fb84a207f57aace1b0b527780d" compoundref="rp__tree__mean__split_8hpp" startline="49">RPTreeMeanSplit&lt; BoundType, MatType &gt;::SplitInfo::meanSplit</references>
        <references refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo_1a0940adf91ff7f1747d68384a012683d3" compoundref="rp__tree__mean__split_8hpp" startline="46">RPTreeMeanSplit&lt; BoundType, MatType &gt;::SplitInfo::splitVal</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1RPTreeMeanSplit_1aace8240352cb3ea61c975987b91a80a6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t PerformSplit</definition>
        <argsstring>(MatType &amp;data, const size_t begin, const size_t count, const SplitInfo &amp;splitInfo)</argsstring>
        <name>PerformSplit</name>
        <param>
          <type>MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const <ref refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref> &amp;</type>
          <declname>splitInfo</declname>
        </param>
        <briefdescription>
<para>Perform the split process according to the information about the split. </para>        </briefdescription>
        <detaileddescription>
<para>This will order the dataset such that points that belong to the left subtree are on the left of the split column, and points from the right subtree are on the right side of the split column.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The dataset used by the binary space tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the starting point in the dataset that belongs to this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points in this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>splitInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>The information about the split. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_mean_split.hpp" line="82" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_mean_split.hpp" bodystart="82" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1RPTreeMeanSplit_1af99e13e8418a8bb6b602435fbd7e4e64" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t PerformSplit</definition>
        <argsstring>(MatType &amp;data, const size_t begin, const size_t count, const SplitInfo &amp;splitInfo, std::vector&lt; size_t &gt; &amp;oldFromNew)</argsstring>
        <name>PerformSplit</name>
        <param>
          <type>MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const <ref refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref> &amp;</type>
          <declname>splitInfo</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; &amp;</type>
          <declname>oldFromNew</declname>
        </param>
        <briefdescription>
<para>Perform the split process according to the information about the split and return the list of changed indices. </para>        </briefdescription>
        <detaileddescription>
<para>This will order the dataset such that points that belong to the left subtree are on the left of the split column, and points from the right subtree are on the right side of the split column.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The dataset used by the binary space tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the starting point in the dataset that belongs to this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points in this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>splitInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>The information about the split. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldFromNew</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector which will be filled with the old positions for each new point. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_mean_split.hpp" line="106" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_mean_split.hpp" bodystart="106" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1RPTreeMeanSplit_1a563632ed24c69523f20a12d9a28eaeaa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SplitNode</definition>
        <argsstring>(const BoundType &amp;, MatType &amp;data, const size_t begin, const size_t count, SplitInfo &amp;splitInfo)</argsstring>
        <name>SplitNode</name>
        <param>
          <type>const BoundType &amp;</type>
        </param>
        <param>
          <type>MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="structmlpack_1_1tree_1_1RPTreeMeanSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref> &amp;</type>
          <declname>splitInfo</declname>
        </param>
        <briefdescription>
<para>Split the node according to the mean value in the dimension with maximum width. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(bound) The bound used for this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The dataset used by the binary space tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the starting point in the dataset that belongs to this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points in this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>splitInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>An information about the split. This information contains the direction and the value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_mean_split.hpp" line="64" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1RPTreeMeanSplit_1a0aac75f82bcb77aa32250f1a165b41ce" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1RPTreeMeanSplit_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>static ElemType GetAveragePointDistance</definition>
        <argsstring>(MatType &amp;data, const arma::uvec &amp;samples)</argsstring>
        <name>GetAveragePointDistance</name>
        <param>
          <type>MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const arma::uvec &amp;</type>
          <declname>samples</declname>
        </param>
        <briefdescription>
<para>Get the average distance between points in the dataset. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The dataset used by the binary space tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>samples</parametername>
</parameternamelist>
<parameterdescription>
<para>The indices of points that will be used for the calculation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_mean_split.hpp" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1RPTreeMeanSplit_1ad20d3747668bb06a9415b3a87a65b71d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool GetDotMedian</definition>
        <argsstring>(const MatType &amp;data, const arma::uvec &amp;samples, const arma::Col&lt; ElemType &gt; &amp;direction, ElemType &amp;splitVal)</argsstring>
        <name>GetDotMedian</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const arma::uvec &amp;</type>
          <declname>samples</declname>
        </param>
        <param>
          <type>const arma::Col&lt; <ref refid="classmlpack_1_1tree_1_1RPTreeMeanSplit_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref> &gt; &amp;</type>
          <declname>direction</declname>
        </param>
        <param>
          <type><ref refid="classmlpack_1_1tree_1_1RPTreeMeanSplit_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref> &amp;</type>
          <declname>splitVal</declname>
        </param>
        <briefdescription>
<para>Get the median of scalar products of the sampled points and the normal to the hyperplane (i.e. </para>        </briefdescription>
        <detaileddescription>
<para>the position of the hyperplane).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The dataset used by the binary space tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>samples</parametername>
</parameternamelist>
<parameterdescription>
<para>The indices of points that will be used for the calculation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>The normal to the hyperplane. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>splitVal</parametername>
</parameternamelist>
<parameterdescription>
<para>The median value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_mean_split.hpp" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1RPTreeMeanSplit_1ad0f89f95371c8e8e6ff0ea08423b5238" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool GetMeanMedian</definition>
        <argsstring>(const MatType &amp;data, const arma::uvec &amp;samples, arma::Col&lt; ElemType &gt; &amp;mean, ElemType &amp;splitVal)</argsstring>
        <name>GetMeanMedian</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const arma::uvec &amp;</type>
          <declname>samples</declname>
        </param>
        <param>
          <type>arma::Col&lt; <ref refid="classmlpack_1_1tree_1_1RPTreeMeanSplit_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref> &gt; &amp;</type>
          <declname>mean</declname>
        </param>
        <param>
          <type><ref refid="classmlpack_1_1tree_1_1RPTreeMeanSplit_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref> &amp;</type>
          <declname>splitVal</declname>
        </param>
        <briefdescription>
<para>Get the mean point and the median of distance from the mean to any point of the dataset. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The dataset used by the binary space tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>samples</parametername>
</parameternamelist>
<parameterdescription>
<para>The indices of points that will be used for the calculation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mean</parametername>
</parameternamelist>
<parameterdescription>
<para>The mean point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>splitVal</parametername>
</parameternamelist>
<parameterdescription>
<para>The median value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_mean_split.hpp" line="165" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class splits a binary space tree. </para>    </briefdescription>
    <detaileddescription>
<para>This class provides two different kinds of split. The mean split (i.e. all points are split by the median of their distance to the mean point) is performed if the average distance between points multiplied by a constant is greater than the diameter of the node. Otherwise, the median split (i.e. the node is split by a random hyperplane) is performed. </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_mean_split.hpp" line="34" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_mean_split.hpp" bodystart="33" bodyend="169"/>
    <listofallmembers>
      <member refid="classmlpack_1_1tree_1_1RPTreeMeanSplit_1af0fc61f469596cb8796d1966564ecbcb" prot="public" virt="non-virtual"><scope>mlpack::tree::RPTreeMeanSplit</scope><name>AssignToLeftNode</name></member>
      <member refid="classmlpack_1_1tree_1_1RPTreeMeanSplit_1a227d0c7e23e98fcd6c81ecab357a791f" prot="public" virt="non-virtual"><scope>mlpack::tree::RPTreeMeanSplit</scope><name>ElemType</name></member>
      <member refid="classmlpack_1_1tree_1_1RPTreeMeanSplit_1a0aac75f82bcb77aa32250f1a165b41ce" prot="private" virt="non-virtual"><scope>mlpack::tree::RPTreeMeanSplit</scope><name>GetAveragePointDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1RPTreeMeanSplit_1ad20d3747668bb06a9415b3a87a65b71d" prot="private" virt="non-virtual"><scope>mlpack::tree::RPTreeMeanSplit</scope><name>GetDotMedian</name></member>
      <member refid="classmlpack_1_1tree_1_1RPTreeMeanSplit_1ad0f89f95371c8e8e6ff0ea08423b5238" prot="private" virt="non-virtual"><scope>mlpack::tree::RPTreeMeanSplit</scope><name>GetMeanMedian</name></member>
      <member refid="classmlpack_1_1tree_1_1RPTreeMeanSplit_1aace8240352cb3ea61c975987b91a80a6" prot="public" virt="non-virtual"><scope>mlpack::tree::RPTreeMeanSplit</scope><name>PerformSplit</name></member>
      <member refid="classmlpack_1_1tree_1_1RPTreeMeanSplit_1af99e13e8418a8bb6b602435fbd7e4e64" prot="public" virt="non-virtual"><scope>mlpack::tree::RPTreeMeanSplit</scope><name>PerformSplit</name></member>
      <member refid="classmlpack_1_1tree_1_1RPTreeMeanSplit_1a563632ed24c69523f20a12d9a28eaeaa" prot="public" virt="non-virtual"><scope>mlpack::tree::RPTreeMeanSplit</scope><name>SplitNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
