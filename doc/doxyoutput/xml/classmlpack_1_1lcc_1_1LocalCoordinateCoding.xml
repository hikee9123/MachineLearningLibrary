<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1lcc_1_1LocalCoordinateCoding" kind="class" language="C++" prot="public">
    <compoundname>mlpack::lcc::LocalCoordinateCoding</compoundname>
    <includes refid="lcc_8hpp" local="no">lcc.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a609c2a583fdbf2e467572e1b2c707e1a" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t atoms</definition>
        <argsstring></argsstring>
        <name>atoms</name>
        <briefdescription>
<para>Number of atoms in dictionary. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" line="212" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1afed8259a67349d88581e1e2e88e7d320" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat dictionary</definition>
        <argsstring></argsstring>
        <name>dictionary</name>
        <briefdescription>
<para>Dictionary (columns are atoms). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" line="215" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a3db359547eed8cfd48ca821d95f577af" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double lambda</definition>
        <argsstring></argsstring>
        <name>lambda</name>
        <briefdescription>
<para>l1 regularization term. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" line="218" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1adb3fa2e38847b23885acf3833f28538e" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t maxIterations</definition>
        <argsstring></argsstring>
        <name>maxIterations</name>
        <briefdescription>
<para>Maximum number of iterations during training. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" line="221" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a97eab6d709b80585fe9e8a54b1e3da27" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tolerance</definition>
        <argsstring></argsstring>
        <name>tolerance</name>
        <briefdescription>
<para>Tolerance for main objective. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" line="223" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" bodystart="223" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a15b0241f026927b7cfdf007d97cf6548" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DictionaryInitializer</type>
            <defval><ref refid="classmlpack_1_1sparse__coding_1_1DataDependentRandomInitializer" kindref="compound">sparse_coding::DataDependentRandomInitializer</ref></defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>LocalCoordinateCoding</definition>
        <argsstring>(const arma::mat &amp;data, const size_t atoms, const double lambda, const size_t maxIterations=0, const double tolerance=0.01, const DictionaryInitializer &amp;initializer=DictionaryInitializer())</argsstring>
        <name>LocalCoordinateCoding</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>atoms</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>lambda</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>maxIterations</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>tolerance</declname>
          <defval>0.01</defval>
        </param>
        <param>
          <type>const DictionaryInitializer &amp;</type>
          <declname>initializer</declname>
          <defval>DictionaryInitializer()</defval>
        </param>
        <briefdescription>
<para>Set the parameters to <ref refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding" kindref="compound">LocalCoordinateCoding</ref>, and train the dictionary. </para>        </briefdescription>
        <detaileddescription>
<para>This constructor will also initialize the dictionary using the given DictionaryInitializer before training.</para><para>If you want to initialize the dictionary to a custom matrix, consider either writing your own DictionaryInitializer class (with void Initialize(const arma::mat&amp; data, arma::mat&amp; dictionary) function), or call the constructor that does not take a data matrix, then call <ref refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a3146526cfc85ff339121972d67c73f62" kindref="member">Dictionary()</ref> to set the dictionary matrix to a matrix of your choosing, and then call <ref refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a69503a211de26a7b35e7e7867cf20246" kindref="member">Train()</ref> with <ref refid="classmlpack_1_1sparse__coding_1_1NothingInitializer" kindref="compound">sparse_coding::NothingInitializer</ref> (i.e. Train&lt;sparse_coding::NothingInitializer&gt;(data)).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>atoms</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of atoms in dictionary. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambda</parametername>
</parameternamelist>
<parameterdescription>
<para>Regularization parameter for weighted l1-norm penalty. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxIterations</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of iterations for training (0 runs until convergence). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>Tolerance for the objective function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initializer</parametername>
</parameternamelist>
<parameterdescription>
<para>Intializer to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a8329ff2638ecb900188bb72f1826678a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LocalCoordinateCoding</definition>
        <argsstring>(const size_t atoms=0, const double lambda=0.0, const size_t maxIterations=0, const double tolerance=0.01)</argsstring>
        <name>LocalCoordinateCoding</name>
        <param>
          <type>const size_t</type>
          <declname>atoms</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>lambda</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const size_t</type>
          <declname>maxIterations</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>tolerance</declname>
          <defval>0.01</defval>
        </param>
        <briefdescription>
<para>Set the parameters to <ref refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding" kindref="compound">LocalCoordinateCoding</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>This constructor will not train the model, and a subsequent call to <ref refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a69503a211de26a7b35e7e7867cf20246" kindref="member">Train()</ref> will be required before the model can encode points with <ref refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a4b2741b0e146d6eb6a09e30f228ea309" kindref="member">Encode()</ref>. The default values for atoms and lambda should be changed if you intend to train the model!</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>atoms</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of atoms in dictionary. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambda</parametername>
</parameternamelist>
<parameterdescription>
<para>Regularization parameter for weighted l1-norm penalty. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxIterations</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of iterations for training (0 runs until convergence). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>Tolerance for the objective function. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1ac1a924c2cc0b117283fc8aba76a92a07" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Atoms</definition>
        <argsstring>() const</argsstring>
        <name>Atoms</name>
        <briefdescription>
<para>Get the number of atoms. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" line="182" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" bodystart="182" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a30a05b58ad809476c03aba6df5970b52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t &amp;</type>
        <definition>size_t&amp; Atoms</definition>
        <argsstring>()</argsstring>
        <name>Atoms</name>
        <briefdescription>
<para>Modify the number of atoms. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" line="184" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" bodystart="184" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a29bceb0b46c45a45594c9feb0e743171" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::mat &amp;</type>
        <definition>const arma::mat&amp; Dictionary</definition>
        <argsstring>() const</argsstring>
        <name>Dictionary</name>
        <briefdescription>
<para>Accessor for dictionary. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" line="187" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" bodystart="187" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a3146526cfc85ff339121972d67c73f62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>arma::mat &amp;</type>
        <definition>arma::mat&amp; Dictionary</definition>
        <argsstring>()</argsstring>
        <name>Dictionary</name>
        <briefdescription>
<para>Mutator for dictionary. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" line="189" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" bodystart="189" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a4b2741b0e146d6eb6a09e30f228ea309" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Encode</definition>
        <argsstring>(const arma::mat &amp;data, arma::mat &amp;codes)</argsstring>
        <name>Encode</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>codes</declname>
        </param>
        <briefdescription>
<para>Code each point via distance-weighted LARS. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix containing points to encode. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>codes</parametername>
</parameternamelist>
<parameterdescription>
<para>Output matrix to store codes in. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a53535041275cedd0ec3de67ca032aa94" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Lambda</definition>
        <argsstring>() const</argsstring>
        <name>Lambda</name>
        <briefdescription>
<para>Get the L1 regularization parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" line="192" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" bodystart="192" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1aaf66629b989a326453647f42443c6a0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; Lambda</definition>
        <argsstring>()</argsstring>
        <name>Lambda</name>
        <briefdescription>
<para>Modify the L1 regularization parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" line="194" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" bodystart="194" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a420770944a5b0c7a852c4ec372c4a2d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t MaxIterations</definition>
        <argsstring>() const</argsstring>
        <name>MaxIterations</name>
        <briefdescription>
<para>Get the maximum number of iterations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" line="197" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" bodystart="197" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1acda675ab4ab86b95c92bc33bc391a61b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t &amp;</type>
        <definition>size_t&amp; MaxIterations</definition>
        <argsstring>()</argsstring>
        <name>MaxIterations</name>
        <briefdescription>
<para>Modify the maximum number of iterations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" line="199" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" bodystart="199" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1aced0f8934c63965a4553f21487ef4c8e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Objective</definition>
        <argsstring>(const arma::mat &amp;data, const arma::mat &amp;codes, const arma::uvec &amp;adjacencies) const</argsstring>
        <name>Objective</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>codes</declname>
        </param>
        <param>
          <type>const arma::uvec &amp;</type>
          <declname>adjacencies</declname>
        </param>
        <briefdescription>
<para>Compute objective function given the list of adjacencies. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix containing points to encode. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>codes</parametername>
</parameternamelist>
<parameterdescription>
<para>Output matrix to store codes in. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>adjacencies</parametername>
</parameternamelist>
<parameterdescription>
<para>Indices of entries (unrolled column by column) of the coding matrix Z that are non-zero (the adjacency matrix for the bipartite graph of points and atoms) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" line="177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a7c8eaa20c6d04664f81f262e480b9f63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OptimizeDictionary</definition>
        <argsstring>(const arma::mat &amp;data, const arma::mat &amp;codes, const arma::uvec &amp;adjacencies)</argsstring>
        <name>OptimizeDictionary</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>codes</declname>
        </param>
        <param>
          <type>const arma::uvec &amp;</type>
          <declname>adjacencies</declname>
        </param>
        <briefdescription>
<para>Learn dictionary by solving linear system. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix containing points to encode. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>codes</parametername>
</parameternamelist>
<parameterdescription>
<para>Output matrix to store codes in. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>adjacencies</parametername>
</parameternamelist>
<parameterdescription>
<para>Indices of entries (unrolled column by column) of the coding matrix Z that are non-zero (the adjacency matrix for the bipartite graph of points and atoms) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" line="208" column="1"/>
        <referencedby refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a3d9fac84af16250f5a3689692e8f2173" compoundref="lcc_8hpp" startline="204" endline="204">LocalCoordinateCoding::Tolerance</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a7b5af5c1a84c507cbaa7f999ea5a4fda" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Tolerance</definition>
        <argsstring>() const</argsstring>
        <name>Tolerance</name>
        <briefdescription>
<para>Get the objective tolerance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" line="202" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" bodystart="202" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a3d9fac84af16250f5a3689692e8f2173" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; Tolerance</definition>
        <argsstring>()</argsstring>
        <name>Tolerance</name>
        <briefdescription>
<para>Modify the objective tolerance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" line="204" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" bodystart="204" bodyend="204"/>
        <references refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a65cba07328997659bec80b9879b15a51">LocalCoordinateCoding::serialize</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a69503a211de26a7b35e7e7867cf20246" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DictionaryInitializer</type>
            <defval><ref refid="classmlpack_1_1sparse__coding_1_1DataDependentRandomInitializer" kindref="compound">sparse_coding::DataDependentRandomInitializer</ref></defval>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double Train</definition>
        <argsstring>(const arma::mat &amp;data, const DictionaryInitializer &amp;initializer=DictionaryInitializer())</argsstring>
        <name>Train</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const DictionaryInitializer &amp;</type>
          <declname>initializer</declname>
          <defval>DictionaryInitializer()</defval>
        </param>
        <briefdescription>
<para>Run local coordinate coding. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initializer</parametername>
</parameternamelist>
<parameterdescription>
<para>Intializer to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The final objective value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" line="143" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An implementation of Local Coordinate Coding (LCC) that codes data which approximately lives on a manifold using a variation of l1-norm regularized sparse coding; in LCC, the penalty on the absolute value of each point&apos;s coefficient for each atom is weighted by the squared distance of that point to that atom. </para>    </briefdescription>
    <detaileddescription>
<para>Let d be the number of dimensions in the original space, m the number of training points, and k the number of atoms in the dictionary (the dimension of the learned feature space). The training data X is a d-by-m matrix where each column is a point and each row is a dimension. The dictionary D is a d-by-k matrix, and the sparse codes matrix Z is a k-by-m matrix. This program seeks to minimize the objective: min_{D,Z} ||X - D Z||_{Fro}^2<itemizedlist>
<listitem><para>lambda sum_{i=1}^m sum_{j=1}^k dist(X_i,D_j)^2 Z_i^j where lambda &gt; 0.</para></listitem></itemizedlist>
</para><para>This problem is solved by an algorithm that alternates between a dictionary learning step and a sparse coding step. The dictionary learning step updates the dictionary D by solving a linear system (note that the objective is a positive definite quadratic program). The sparse coding step involves solving a large number of weighted l1-norm regularized linear regression problems problems; this can be done efficiently using LARS, an algorithm that can solve the LASSO (paper below).</para><para>The papers are listed below.</para><para><programlisting><codeline><highlight class="normal">@incollection{NIPS2009_0719,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>title<sp/>=<sp/>{Nonlinear<sp/>Learning<sp/>using<sp/>Local<sp/>Coordinate<sp/>Coding},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>author<sp/>=<sp/>{Kai<sp/>Yu<sp/>and<sp/>Tong<sp/>Zhang<sp/>and<sp/>Yihong<sp/>Gong},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>booktitle<sp/>=<sp/>{Advances<sp/>in<sp/>Neural<sp/>Information<sp/>Processing<sp/>Systems<sp/>22},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>editor<sp/>=<sp/>{Y.<sp/>Bengio<sp/>and<sp/>D.<sp/>Schuurmans<sp/>and<sp/>J.<sp/>Lafferty<sp/>and<sp/>C.<sp/>K.<sp/>I.<sp/>Williams</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>A.<sp/>Culotta},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>pages<sp/>=<sp/>{2223--2231},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>year<sp/>=<sp/>{2009}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para><programlisting><codeline><highlight class="normal">@article{efron2004least,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>title={Least<sp/>angle<sp/>regression},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>author={Efron,<sp/>B.<sp/>and<sp/>Hastie,<sp/>T.<sp/>and<sp/>Johnstone,<sp/>I.<sp/>and<sp/>Tibshirani,<sp/>R.},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>journal={The<sp/>Annals<sp/>of<sp/>statistics},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>volume={32},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>number={2},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>pages={407--499},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>year={2004},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>publisher={Institute<sp/>of<sp/>Mathematical<sp/>Statistics}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" line="80" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/local_coordinate_coding/lcc.hpp" bodystart="79" bodyend="224"/>
    <listofallmembers>
      <member refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a609c2a583fdbf2e467572e1b2c707e1a" prot="private" virt="non-virtual"><scope>mlpack::lcc::LocalCoordinateCoding</scope><name>atoms</name></member>
      <member refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1ac1a924c2cc0b117283fc8aba76a92a07" prot="public" virt="non-virtual"><scope>mlpack::lcc::LocalCoordinateCoding</scope><name>Atoms</name></member>
      <member refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a30a05b58ad809476c03aba6df5970b52" prot="public" virt="non-virtual"><scope>mlpack::lcc::LocalCoordinateCoding</scope><name>Atoms</name></member>
      <member refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1afed8259a67349d88581e1e2e88e7d320" prot="private" virt="non-virtual"><scope>mlpack::lcc::LocalCoordinateCoding</scope><name>dictionary</name></member>
      <member refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a29bceb0b46c45a45594c9feb0e743171" prot="public" virt="non-virtual"><scope>mlpack::lcc::LocalCoordinateCoding</scope><name>Dictionary</name></member>
      <member refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a3146526cfc85ff339121972d67c73f62" prot="public" virt="non-virtual"><scope>mlpack::lcc::LocalCoordinateCoding</scope><name>Dictionary</name></member>
      <member refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a4b2741b0e146d6eb6a09e30f228ea309" prot="public" virt="non-virtual"><scope>mlpack::lcc::LocalCoordinateCoding</scope><name>Encode</name></member>
      <member refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a3db359547eed8cfd48ca821d95f577af" prot="private" virt="non-virtual"><scope>mlpack::lcc::LocalCoordinateCoding</scope><name>lambda</name></member>
      <member refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a53535041275cedd0ec3de67ca032aa94" prot="public" virt="non-virtual"><scope>mlpack::lcc::LocalCoordinateCoding</scope><name>Lambda</name></member>
      <member refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1aaf66629b989a326453647f42443c6a0c" prot="public" virt="non-virtual"><scope>mlpack::lcc::LocalCoordinateCoding</scope><name>Lambda</name></member>
      <member refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a15b0241f026927b7cfdf007d97cf6548" prot="public" virt="non-virtual"><scope>mlpack::lcc::LocalCoordinateCoding</scope><name>LocalCoordinateCoding</name></member>
      <member refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a8329ff2638ecb900188bb72f1826678a" prot="public" virt="non-virtual"><scope>mlpack::lcc::LocalCoordinateCoding</scope><name>LocalCoordinateCoding</name></member>
      <member refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1adb3fa2e38847b23885acf3833f28538e" prot="private" virt="non-virtual"><scope>mlpack::lcc::LocalCoordinateCoding</scope><name>maxIterations</name></member>
      <member refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a420770944a5b0c7a852c4ec372c4a2d1" prot="public" virt="non-virtual"><scope>mlpack::lcc::LocalCoordinateCoding</scope><name>MaxIterations</name></member>
      <member refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1acda675ab4ab86b95c92bc33bc391a61b" prot="public" virt="non-virtual"><scope>mlpack::lcc::LocalCoordinateCoding</scope><name>MaxIterations</name></member>
      <member refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1aced0f8934c63965a4553f21487ef4c8e" prot="public" virt="non-virtual"><scope>mlpack::lcc::LocalCoordinateCoding</scope><name>Objective</name></member>
      <member refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a7c8eaa20c6d04664f81f262e480b9f63" prot="public" virt="non-virtual"><scope>mlpack::lcc::LocalCoordinateCoding</scope><name>OptimizeDictionary</name></member>
      <member refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::lcc::LocalCoordinateCoding</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a97eab6d709b80585fe9e8a54b1e3da27" prot="private" virt="non-virtual"><scope>mlpack::lcc::LocalCoordinateCoding</scope><name>tolerance</name></member>
      <member refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a7b5af5c1a84c507cbaa7f999ea5a4fda" prot="public" virt="non-virtual"><scope>mlpack::lcc::LocalCoordinateCoding</scope><name>Tolerance</name></member>
      <member refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a3d9fac84af16250f5a3689692e8f2173" prot="public" virt="non-virtual"><scope>mlpack::lcc::LocalCoordinateCoding</scope><name>Tolerance</name></member>
      <member refid="classmlpack_1_1lcc_1_1LocalCoordinateCoding_1a69503a211de26a7b35e7e7867cf20246" prot="public" virt="non-virtual"><scope>mlpack::lcc::LocalCoordinateCoding</scope><name>Train</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
