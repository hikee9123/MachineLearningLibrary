<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="hoeffding__tree_8hpp" kind="file" language="C++">
    <compoundname>hoeffding_tree.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="dataset__mapper_8hpp" local="no">mlpack/core/data/dataset_mapper.hpp</includes>
    <includes refid="gini__impurity_8hpp" local="yes">gini_impurity.hpp</includes>
    <includes refid="hoeffding__numeric__split_8hpp" local="yes">hoeffding_numeric_split.hpp</includes>
    <includes refid="hoeffding__categorical__split_8hpp" local="yes">hoeffding_categorical_split.hpp</includes>
    <includes local="yes">hoeffding_tree_impl.hpp</includes>
    <includedby refid="hoeffding__tree__model_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/hoeffding_tree_model.hpp</includedby>
    <includedby refid="methods_2hoeffding__trees_2typedef_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/typedef.hpp</includedby>
    <incdepgraph>
      <node id="51028">
        <label>list</label>
      </node>
      <node id="51025">
        <label>atomic</label>
      </node>
      <node id="51038">
        <label>dataset_mapper_impl.hpp</label>
      </node>
      <node id="51015">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="50991">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="51027">
        <label>iomanip</label>
      </node>
      <node id="51044">
        <label>categorical_split_info.hpp</label>
        <link refid="categorical__split__info_8hpp"/>
        <childnode refid="50978" relation="include">
        </childnode>
      </node>
      <node id="51000">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="51001" relation="include">
        </childnode>
        <childnode refid="51003" relation="include">
        </childnode>
      </node>
      <node id="50983">
        <label>cstdint</label>
      </node>
      <node id="50992">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="50999">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="51022">
        <label>arma_config.hpp</label>
      </node>
      <node id="51012">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="50979">
        <label>cmath</label>
      </node>
      <node id="50998">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="50987">
        <label>stdexcept</label>
      </node>
      <node id="50977">
        <label>/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/hoeffding_tree.hpp</label>
        <link refid="hoeffding__tree_8hpp"/>
        <childnode refid="50978" relation="include">
        </childnode>
        <childnode refid="51035" relation="include">
        </childnode>
        <childnode refid="51039" relation="include">
        </childnode>
        <childnode refid="51040" relation="include">
        </childnode>
        <childnode refid="51043" relation="include">
        </childnode>
        <childnode refid="51046" relation="include">
        </childnode>
      </node>
      <node id="51007">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="50992" relation="include">
        </childnode>
        <childnode refid="50994" relation="include">
        </childnode>
        <childnode refid="50995" relation="include">
        </childnode>
        <childnode refid="50993" relation="include">
        </childnode>
      </node>
      <node id="51037">
        <label>mlpack/core/data/map_policies/datatype.hpp</label>
        <link refid="datatype_8hpp"/>
        <childnode refid="50978" relation="include">
        </childnode>
      </node>
      <node id="51031">
        <label>string</label>
      </node>
      <node id="51019">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="51020" relation="include">
        </childnode>
        <childnode refid="50986" relation="include">
        </childnode>
      </node>
      <node id="51029">
        <label>map</label>
      </node>
      <node id="50981">
        <label>cfloat</label>
      </node>
      <node id="51011">
        <label>boost/variant.hpp</label>
      </node>
      <node id="51033">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="50995">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="51018">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="51019" relation="include">
        </childnode>
        <childnode refid="50995" relation="include">
        </childnode>
        <childnode refid="51002" relation="include">
        </childnode>
        <childnode refid="51020" relation="include">
        </childnode>
      </node>
      <node id="51008">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="51006">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="50992" relation="include">
        </childnode>
        <childnode refid="50994" relation="include">
        </childnode>
        <childnode refid="50995" relation="include">
        </childnode>
        <childnode refid="50993" relation="include">
        </childnode>
      </node>
      <node id="51009">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="50992" relation="include">
        </childnode>
        <childnode refid="50994" relation="include">
        </childnode>
        <childnode refid="50995" relation="include">
        </childnode>
        <childnode refid="50993" relation="include">
        </childnode>
      </node>
      <node id="50997">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="51017">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="50993" relation="include">
        </childnode>
        <childnode refid="50994" relation="include">
        </childnode>
        <childnode refid="50995" relation="include">
        </childnode>
        <childnode refid="51005" relation="include">
        </childnode>
        <childnode refid="51014" relation="include">
        </childnode>
      </node>
      <node id="51021">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="51022" relation="include">
        </childnode>
      </node>
      <node id="51043">
        <label>hoeffding_categorical_split.hpp</label>
        <link refid="hoeffding__categorical__split_8hpp"/>
        <childnode refid="50978" relation="include">
        </childnode>
        <childnode refid="51044" relation="include">
        </childnode>
        <childnode refid="51045" relation="include">
        </childnode>
      </node>
      <node id="51023">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="50978">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="50979" relation="include">
        </childnode>
        <childnode refid="50980" relation="include">
        </childnode>
        <childnode refid="50981" relation="include">
        </childnode>
        <childnode refid="50982" relation="include">
        </childnode>
        <childnode refid="50983" relation="include">
        </childnode>
        <childnode refid="50984" relation="include">
        </childnode>
        <childnode refid="50985" relation="include">
        </childnode>
        <childnode refid="50986" relation="include">
        </childnode>
        <childnode refid="50987" relation="include">
        </childnode>
        <childnode refid="50988" relation="include">
        </childnode>
        <childnode refid="50989" relation="include">
        </childnode>
        <childnode refid="50990" relation="include">
        </childnode>
        <childnode refid="50991" relation="include">
        </childnode>
        <childnode refid="50992" relation="include">
        </childnode>
        <childnode refid="50993" relation="include">
        </childnode>
        <childnode refid="50994" relation="include">
        </childnode>
        <childnode refid="50995" relation="include">
        </childnode>
        <childnode refid="50996" relation="include">
        </childnode>
        <childnode refid="50997" relation="include">
        </childnode>
        <childnode refid="50998" relation="include">
        </childnode>
        <childnode refid="50999" relation="include">
        </childnode>
        <childnode refid="51000" relation="include">
        </childnode>
        <childnode refid="51004" relation="include">
        </childnode>
        <childnode refid="51005" relation="include">
        </childnode>
        <childnode refid="51006" relation="include">
        </childnode>
        <childnode refid="51007" relation="include">
        </childnode>
        <childnode refid="51008" relation="include">
        </childnode>
        <childnode refid="51009" relation="include">
        </childnode>
        <childnode refid="51010" relation="include">
        </childnode>
        <childnode refid="51016" relation="include">
        </childnode>
        <childnode refid="51017" relation="include">
        </childnode>
        <childnode refid="51014" relation="include">
        </childnode>
        <childnode refid="51018" relation="include">
        </childnode>
        <childnode refid="51021" relation="include">
        </childnode>
        <childnode refid="51023" relation="include">
        </childnode>
        <childnode refid="51024" relation="include">
        </childnode>
        <childnode refid="51033" relation="include">
        </childnode>
        <childnode refid="51034" relation="include">
        </childnode>
      </node>
      <node id="51041">
        <label>numeric_split_info.hpp</label>
        <link refid="numeric__split__info_8hpp"/>
        <childnode refid="50978" relation="include">
        </childnode>
      </node>
      <node id="51045">
        <label>hoeffding_categorical_split_impl.hpp</label>
      </node>
      <node id="51036">
        <label>map_policies/increment_policy.hpp</label>
        <link refid="increment__policy_8hpp"/>
        <childnode refid="50978" relation="include">
        </childnode>
        <childnode refid="51003" relation="include">
        </childnode>
        <childnode refid="51037" relation="include">
        </childnode>
      </node>
      <node id="50984">
        <label>cstdio</label>
      </node>
      <node id="50988">
        <label>tuple</label>
      </node>
      <node id="50993">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="51010">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="50993" relation="include">
        </childnode>
        <childnode refid="50994" relation="include">
        </childnode>
        <childnode refid="50995" relation="include">
        </childnode>
        <childnode refid="50997" relation="include">
        </childnode>
        <childnode refid="51011" relation="include">
        </childnode>
        <childnode refid="51012" relation="include">
        </childnode>
        <childnode refid="51013" relation="include">
        </childnode>
        <childnode refid="51014" relation="include">
        </childnode>
      </node>
      <node id="50989">
        <label>utility</label>
      </node>
      <node id="51013">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="51004">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="51001">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="51002" relation="include">
        </childnode>
      </node>
      <node id="51024">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="51025" relation="include">
        </childnode>
        <childnode refid="51026" relation="include">
        </childnode>
        <childnode refid="51027" relation="include">
        </childnode>
        <childnode refid="51028" relation="include">
        </childnode>
        <childnode refid="51029" relation="include">
        </childnode>
        <childnode refid="51030" relation="include">
        </childnode>
        <childnode refid="51031" relation="include">
        </childnode>
        <childnode refid="51032" relation="include">
        </childnode>
      </node>
      <node id="51002">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="51016">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="51014" relation="include">
        </childnode>
        <childnode refid="51010" relation="include">
        </childnode>
        <childnode refid="51017" relation="include">
        </childnode>
      </node>
      <node id="50985">
        <label>cstdlib</label>
      </node>
      <node id="50980">
        <label>cctype</label>
      </node>
      <node id="51003">
        <label>unordered_map</label>
      </node>
      <node id="50982">
        <label>climits</label>
      </node>
      <node id="51040">
        <label>hoeffding_numeric_split.hpp</label>
        <link refid="hoeffding__numeric__split_8hpp"/>
        <childnode refid="50978" relation="include">
        </childnode>
        <childnode refid="51041" relation="include">
        </childnode>
        <childnode refid="51042" relation="include">
        </childnode>
      </node>
      <node id="51039">
        <label>gini_impurity.hpp</label>
        <link refid="gini__impurity_8hpp"/>
        <childnode refid="50978" relation="include">
        </childnode>
      </node>
      <node id="51042">
        <label>hoeffding_numeric_split_impl.hpp</label>
      </node>
      <node id="51035">
        <label>mlpack/core/data/dataset_mapper.hpp</label>
        <link refid="dataset__mapper_8hpp"/>
        <childnode refid="50978" relation="include">
        </childnode>
        <childnode refid="51003" relation="include">
        </childnode>
        <childnode refid="51036" relation="include">
        </childnode>
        <childnode refid="51038" relation="include">
        </childnode>
      </node>
      <node id="51030">
        <label>mutex</label>
      </node>
      <node id="51026">
        <label>chrono</label>
      </node>
      <node id="51034">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="51032">
        <label>thread</label>
      </node>
      <node id="51020">
        <label>type_traits</label>
      </node>
      <node id="50996">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="51046">
        <label>hoeffding_tree_impl.hpp</label>
      </node>
      <node id="50990">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="51014">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="50992" relation="include">
        </childnode>
        <childnode refid="50993" relation="include">
        </childnode>
        <childnode refid="50994" relation="include">
        </childnode>
        <childnode refid="50995" relation="include">
        </childnode>
        <childnode refid="51015" relation="include">
        </childnode>
      </node>
      <node id="50986">
        <label>cstring</label>
      </node>
      <node id="51005">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="50994">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="51047">
        <label>/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/hoeffding_tree.hpp</label>
        <link refid="hoeffding__tree_8hpp"/>
        <childnode refid="51048" relation="include">
        </childnode>
        <childnode refid="51049" relation="include">
        </childnode>
      </node>
      <node id="51049">
        <label>/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/typedef.hpp</label>
        <link refid="methods_2hoeffding__trees_2typedef_8hpp"/>
      </node>
      <node id="51048">
        <label>/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/hoeffding_tree_model.hpp</label>
        <link refid="hoeffding__tree__model_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1tree_1_1HoeffdingTree" prot="public">mlpack::tree::HoeffdingTree</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1tree">mlpack::tree</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ryan Curtin</para></simplesect>
An implementation of the standard Hoeffding tree by Pedro Domingos and Geoff Hulten in ``Mining High-Speed Data Streams&apos;&apos;.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_HOEFFDING_TREES_HOEFFDING_TREE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_HOEFFDING_TREES_HOEFFDING_TREE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="dataset__mapper_8hpp" kindref="compound">mlpack/core/data/dataset_mapper.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gini__impurity_8hpp" kindref="compound">gini_impurity.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hoeffding__numeric__split_8hpp" kindref="compound">hoeffding_numeric_split.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hoeffding__categorical__split_8hpp" kindref="compound">hoeffding_categorical_split.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tree<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FitnessFunction<sp/>=<sp/>GiniImpurity,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">NumericSplitType<sp/>=</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemlpack_1_1tree_1adab87fde9829454616f519ea70291b62" kindref="member">HoeffdingDoubleNumericSplit</ref>,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CategoricalSplitType<sp/>=</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HoeffdingCategoricalSplit</highlight></codeline>
<codeline lineno="60"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="61" refid="classmlpack_1_1tree_1_1HoeffdingTree" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1tree_1_1HoeffdingTree" kindref="compound">HoeffdingTree</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65" refid="classmlpack_1_1tree_1_1HoeffdingTree_1aaa2e2873f405118872db87975cce0124" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>NumericSplitType&lt;FitnessFunction&gt;<sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1aaa2e2873f405118872db87975cce0124" kindref="member">NumericSplit</ref>;</highlight></codeline>
<codeline lineno="67" refid="classmlpack_1_1tree_1_1HoeffdingTree_1ac6a633f57efba5e2893f58ee9ad549d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>CategoricalSplitType&lt;FitnessFunction&gt;<sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1ac6a633f57efba5e2893f58ee9ad549d1" kindref="member">CategoricalSplit</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1aac1ba531eabbb50e0c340880c6c4e7de" kindref="member">HoeffdingTree</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1DatasetMapper" kindref="compound">data::DatasetInfo</ref>&amp;<sp/>datasetInfo,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Row&lt;size_t&gt;&amp;<sp/>labels,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numClasses,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>batchTraining<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>successProbability<sp/>=<sp/>0.95,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxSamples<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>checkInterval<sp/>=<sp/>100,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>minSamples<sp/>=<sp/>100,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CategoricalSplitType&lt;FitnessFunction&gt;&amp;<sp/>categoricalSplitIn</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>CategoricalSplitType&lt;FitnessFunction&gt;(0,<sp/>0),</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NumericSplitType&lt;FitnessFunction&gt;&amp;<sp/>numericSplitIn<sp/>=</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumericSplitType&lt;FitnessFunction&gt;(0));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1aac1ba531eabbb50e0c340880c6c4e7de" kindref="member">HoeffdingTree</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1DatasetMapper" kindref="compound">data::DatasetInfo</ref>&amp;<sp/>datasetInfo,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numClasses,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>successProbability<sp/>=<sp/>0.95,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxSamples<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>checkInterval<sp/>=<sp/>100,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>minSamples<sp/>=<sp/>100,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CategoricalSplitType&lt;FitnessFunction&gt;&amp;<sp/>categoricalSplitIn</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>CategoricalSplitType&lt;FitnessFunction&gt;(0,<sp/>0),</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NumericSplitType&lt;FitnessFunction&gt;&amp;<sp/>numericSplitIn<sp/>=</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumericSplitType&lt;FitnessFunction&gt;(0),</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">,<sp/>std::pair&lt;size_t,<sp/>size_t&gt;&gt;*</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimensionMappings<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copyDatasetInfo<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1aac1ba531eabbb50e0c340880c6c4e7de" kindref="member">HoeffdingTree</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1aac1ba531eabbb50e0c340880c6c4e7de" kindref="member">HoeffdingTree</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree" kindref="compound">HoeffdingTree</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1aac1ba531eabbb50e0c340880c6c4e7de" kindref="member">HoeffdingTree</ref>(<ref refid="classmlpack_1_1tree_1_1HoeffdingTree" kindref="compound">HoeffdingTree</ref>&amp;&amp;<sp/>other);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree" kindref="compound">HoeffdingTree</ref>&amp;<sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1af74b457da6b4b83725776bb4873f8257" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree" kindref="compound">HoeffdingTree</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree" kindref="compound">HoeffdingTree</ref>&amp;<sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1af74b457da6b4b83725776bb4873f8257" kindref="member">operator=</ref>(<ref refid="classmlpack_1_1tree_1_1HoeffdingTree" kindref="compound">HoeffdingTree</ref>&amp;&amp;<sp/>other);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1a2e454de523755b8d31ccf2cc58d76039" kindref="member">~HoeffdingTree</ref>();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1a3e179af081a7fa6ea02e48025c7671f4" kindref="member">Train</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Row&lt;size_t&gt;&amp;<sp/>labels,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>batchTraining<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>resetTree<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numClasses<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1a3e179af081a7fa6ea02e48025c7671f4" kindref="member">Train</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1DatasetMapper" kindref="compound">data::DatasetInfo</ref>&amp;<sp/>info,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Row&lt;size_t&gt;&amp;<sp/>labels,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>batchTraining<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numClasses<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType&gt;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1a3e179af081a7fa6ea02e48025c7671f4" kindref="member">Train</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>point,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>label);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1a8f65d2bc3361efb913b6e169b3994a60" kindref="member">SplitCheck</ref>();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="classmlpack_1_1tree_1_1HoeffdingTree_1a92f55f07c1a09552ef79c8d8b9484af5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1a92f55f07c1a09552ef79c8d8b9484af5" kindref="member">SplitDimension</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>splitDimension;<sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="classmlpack_1_1tree_1_1HoeffdingTree_1a2fbf818eb68075c92655a22904b7ee1a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1a2fbf818eb68075c92655a22904b7ee1a" kindref="member">MajorityClass</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>majorityClass;<sp/>}</highlight></codeline>
<codeline lineno="253" refid="classmlpack_1_1tree_1_1HoeffdingTree_1ae199c935b2978454a2775a5dae0bd7d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1ae199c935b2978454a2775a5dae0bd7d8" kindref="member">MajorityClass</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>majorityClass;<sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="classmlpack_1_1tree_1_1HoeffdingTree_1a68e5f5a4d8c6194482a83440619be83b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1a68e5f5a4d8c6194482a83440619be83b" kindref="member">MajorityProbability</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>majorityProbability;<sp/>}</highlight></codeline>
<codeline lineno="258" refid="classmlpack_1_1tree_1_1HoeffdingTree_1aa2bbbde0090c614316d5c8bf88ac69ce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1aa2bbbde0090c614316d5c8bf88ac69ce" kindref="member">MajorityProbability</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>majorityProbability;<sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="classmlpack_1_1tree_1_1HoeffdingTree_1a1f7ec083be66d58a3e02e12956bf005e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1a1f7ec083be66d58a3e02e12956bf005e" kindref="member">NumChildren</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>children.size();<sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="classmlpack_1_1tree_1_1HoeffdingTree_1a99e81a5c647c0c5c32c1f9f90a158d8b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree" kindref="compound">HoeffdingTree</ref>&amp;<sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1a99e81a5c647c0c5c32c1f9f90a158d8b" kindref="member">Child</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*children[i];<sp/>}</highlight></codeline>
<codeline lineno="266" refid="classmlpack_1_1tree_1_1HoeffdingTree_1ac862eca4b9417c16131284709c45ab53" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree" kindref="compound">HoeffdingTree</ref>&amp;<sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1ac862eca4b9417c16131284709c45ab53" kindref="member">Child</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*children[i];<sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="classmlpack_1_1tree_1_1HoeffdingTree_1ae74313c4769005a25f7b2ef1749d88f1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1ae74313c4769005a25f7b2ef1749d88f1" kindref="member">SuccessProbability</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>successProbability;<sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1ae74313c4769005a25f7b2ef1749d88f1" kindref="member">SuccessProbability</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>successProbability);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="classmlpack_1_1tree_1_1HoeffdingTree_1afc8cf684935878c953b8adaeae5d8b01" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1afc8cf684935878c953b8adaeae5d8b01" kindref="member">MinSamples</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>minSamples;<sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1afc8cf684935878c953b8adaeae5d8b01" kindref="member">MinSamples</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>minSamples);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="classmlpack_1_1tree_1_1HoeffdingTree_1a521a83a74375f482507d99c913300386" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1a521a83a74375f482507d99c913300386" kindref="member">MaxSamples</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxSamples;<sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1a521a83a74375f482507d99c913300386" kindref="member">MaxSamples</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxSamples);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="classmlpack_1_1tree_1_1HoeffdingTree_1a2655285daed526882041f78ef006d76d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1a2655285daed526882041f78ef006d76d" kindref="member">CheckInterval</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>checkInterval;<sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1a2655285daed526882041f78ef006d76d" kindref="member">CheckInterval</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>checkInterval);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType&gt;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1a9a3cc06b52728325bd6402f7175f28e5" kindref="member">CalculateDirection</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>point)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType&gt;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1aa610310b354b7badd88041ca07883569" kindref="member">Classify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>point)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1a2a85eb34222f1fc073940e8c89274e81" kindref="member">NumDescendants</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType&gt;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1aa610310b354b7badd88041ca07883569" kindref="member">Classify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>point,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>prediction,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>probability)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1aa610310b354b7badd88041ca07883569" kindref="member">Classify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data,<sp/>arma::Row&lt;size_t&gt;&amp;<sp/>predictions)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1aa610310b354b7badd88041ca07883569" kindref="member">Classify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Row&lt;size_t&gt;&amp;<sp/>predictions,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::rowvec&amp;<sp/>probabilities)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1aa97b2f77f4c7888a38b2aadc7ff7b286" kindref="member">CreateChildren</ref>();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1HoeffdingTree_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>keep<sp/>some<sp/>information<sp/>for<sp/>before<sp/>we<sp/>have<sp/>split.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>std::vector&lt;NumericSplitType&lt;FitnessFunction&gt;&gt;<sp/>numericSplits;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>std::vector&lt;CategoricalSplitType&lt;FitnessFunction&gt;&gt;<sp/>categoricalSplits;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;size_t,<sp/>std::pair&lt;size_t,<sp/>size_t&gt;&gt;*<sp/>dimensionMappings;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ownsMappings;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numSamples;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numClasses;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxSamples;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>checkInterval;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>minSamples;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1data_1_1DatasetMapper" kindref="compound">data::DatasetInfo</ref>*<sp/>datasetInfo;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ownsInfo;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>successProbability;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>we<sp/>need<sp/>to<sp/>keep<sp/>some<sp/>information<sp/>for<sp/>after<sp/>we<sp/>have<sp/>split.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>splitDimension;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>majorityClass;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>majorityProbability;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CategoricalSplitType&lt;FitnessFunction&gt;::SplitInfo<sp/>categoricalSplit;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NumericSplitType&lt;FitnessFunction&gt;::SplitInfo<sp/>numericSplit;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>std::vector&lt;HoeffdingTree*&gt;<sp/>children;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrainInternal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Row&lt;size_t&gt;&amp;<sp/>labels,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>batchTraining);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResetTree(</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CategoricalSplitType&lt;FitnessFunction&gt;&amp;<sp/>categoricalSplitIn<sp/>=</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CategoricalSplitType&lt;FitnessFunction&gt;(0,<sp/>0),</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NumericSplitType&lt;FitnessFunction&gt;&amp;<sp/>numericSplitIn<sp/>=</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumericSplitType&lt;FitnessFunction&gt;(0));</highlight></codeline>
<codeline lineno="424"><highlight class="normal">};</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;hoeffding_tree_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/hoeffding_tree.hpp"/>
  </compounddef>
</doxygen>
