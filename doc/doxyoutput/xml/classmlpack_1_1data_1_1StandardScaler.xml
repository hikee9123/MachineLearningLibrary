<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1data_1_1StandardScaler" kind="class" language="C++" prot="public">
    <compoundname>mlpack::data::StandardScaler</compoundname>
    <includes refid="standard__scaler_8hpp" local="no">standard_scaler.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1data_1_1StandardScaler_1a6674e861321b05e270678c6382f11c5a" prot="private" static="no" mutable="no">
        <type>arma::vec</type>
        <definition>arma::vec itemMean</definition>
        <argsstring></argsstring>
        <name>itemMean</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/standard_scaler.hpp" line="110" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/standard_scaler.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1data_1_1StandardScaler_1a73a95d7d6fb20b14f1d232421f14a463" prot="private" static="no" mutable="no">
        <type>arma::vec</type>
        <definition>arma::vec itemStdDev</definition>
        <argsstring></argsstring>
        <name>itemStdDev</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/standard_scaler.hpp" line="112" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/standard_scaler.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1data_1_1StandardScaler_1a0b68c1a39a21e56e10f5b9250b056244" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MatType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Fit</definition>
        <argsstring>(const MatType &amp;input)</argsstring>
        <name>Fit</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Function to fit features, to find out the min max and scale. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>Dataset to fit. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/standard_scaler.hpp" line="56" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/standard_scaler.hpp" bodystart="56" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1data_1_1StandardScaler_1afb0e67c6fbf5a527f63469bbbf07066c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MatType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void InverseTransform</definition>
        <argsstring>(const MatType &amp;input, MatType &amp;output)</argsstring>
        <name>InverseTransform</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>MatType &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Function to retrieve original dataset. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>Scaled dataset. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Output matrix with original Dataset. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/standard_scaler.hpp" line="90" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/standard_scaler.hpp" bodystart="90" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1data_1_1StandardScaler_1a95996a797e721bc9acc0c9a5d697fdcf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::vec &amp;</type>
        <definition>const arma::vec&amp; ItemMean</definition>
        <argsstring>() const</argsstring>
        <name>ItemMean</name>
        <briefdescription>
<para>Get the mean row vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/standard_scaler.hpp" line="97" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/standard_scaler.hpp" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1data_1_1StandardScaler_1ae87a954fbaec076dbe0ca5c0f286ba09" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::vec &amp;</type>
        <definition>const arma::vec&amp; ItemStdDev</definition>
        <argsstring>() const</argsstring>
        <name>ItemStdDev</name>
        <briefdescription>
<para>Get the standard deviation row vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/standard_scaler.hpp" line="99" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/standard_scaler.hpp" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1data_1_1StandardScaler_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/standard_scaler.hpp" line="102" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/standard_scaler.hpp" bodystart="102" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1data_1_1StandardScaler_1a7bc470a1e097f5b0aaf2396691432b3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MatType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Transform</definition>
        <argsstring>(const MatType &amp;input, MatType &amp;output)</argsstring>
        <name>Transform</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>MatType &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Function to scale features. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>Dataset to scale features. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Output matrix with scaled features. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/standard_scaler.hpp" line="72" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/standard_scaler.hpp" bodystart="72" bodyend="81"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A simple Standard Scaler class. </para>    </briefdescription>
    <detaileddescription>
<para>Given an input dataset this class helps you to Standardize features by removing the mean and scaling to unit variance.</para><para>[z = (x - u) / s]</para><para>where u is the mean of the training samples and s is the standard deviation of the training samples.</para><para><programlisting><codeline><highlight class="normal">arma::mat<sp/>input;</highlight></codeline>
<codeline><highlight class="normal">Load(&quot;train.csv&quot;,<sp/>input);</highlight></codeline>
<codeline><highlight class="normal">arma::mat<sp/>output;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Fit<sp/>the<sp/>features.</highlight></codeline>
<codeline><highlight class="normal">StandardScaler<sp/>scale;</highlight></codeline>
<codeline><highlight class="normal">scale.Fit(input)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Scale<sp/>the<sp/>features.</highlight></codeline>
<codeline><highlight class="normal">scale.Transform(input,<sp/>output);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Retransform<sp/>the<sp/>input.</highlight></codeline>
<codeline><highlight class="normal">scale.InverseTransform(output,<sp/>input);</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/standard_scaler.hpp" line="48" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/standard_scaler.hpp" bodystart="47" bodyend="113"/>
    <listofallmembers>
      <member refid="classmlpack_1_1data_1_1StandardScaler_1a0b68c1a39a21e56e10f5b9250b056244" prot="public" virt="non-virtual"><scope>mlpack::data::StandardScaler</scope><name>Fit</name></member>
      <member refid="classmlpack_1_1data_1_1StandardScaler_1afb0e67c6fbf5a527f63469bbbf07066c" prot="public" virt="non-virtual"><scope>mlpack::data::StandardScaler</scope><name>InverseTransform</name></member>
      <member refid="classmlpack_1_1data_1_1StandardScaler_1a6674e861321b05e270678c6382f11c5a" prot="private" virt="non-virtual"><scope>mlpack::data::StandardScaler</scope><name>itemMean</name></member>
      <member refid="classmlpack_1_1data_1_1StandardScaler_1a95996a797e721bc9acc0c9a5d697fdcf" prot="public" virt="non-virtual"><scope>mlpack::data::StandardScaler</scope><name>ItemMean</name></member>
      <member refid="classmlpack_1_1data_1_1StandardScaler_1a73a95d7d6fb20b14f1d232421f14a463" prot="private" virt="non-virtual"><scope>mlpack::data::StandardScaler</scope><name>itemStdDev</name></member>
      <member refid="classmlpack_1_1data_1_1StandardScaler_1ae87a954fbaec076dbe0ca5c0f286ba09" prot="public" virt="non-virtual"><scope>mlpack::data::StandardScaler</scope><name>ItemStdDev</name></member>
      <member refid="classmlpack_1_1data_1_1StandardScaler_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::data::StandardScaler</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1data_1_1StandardScaler_1a7bc470a1e097f5b0aaf2396691432b3f" prot="public" virt="non-virtual"><scope>mlpack::data::StandardScaler</scope><name>Transform</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
