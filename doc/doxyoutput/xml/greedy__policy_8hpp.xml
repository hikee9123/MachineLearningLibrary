<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="greedy__policy_8hpp" kind="file" language="C++">
    <compoundname>greedy_policy.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <incdepgraph>
      <node id="57638">
        <label>list</label>
      </node>
      <node id="57635">
        <label>atomic</label>
      </node>
      <node id="57625">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="57601">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="57637">
        <label>iomanip</label>
      </node>
      <node id="57610">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="57611" relation="include">
        </childnode>
        <childnode refid="57613" relation="include">
        </childnode>
      </node>
      <node id="57593">
        <label>cstdint</label>
      </node>
      <node id="57602">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="57609">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="57632">
        <label>arma_config.hpp</label>
      </node>
      <node id="57622">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="57589">
        <label>cmath</label>
      </node>
      <node id="57608">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="57597">
        <label>stdexcept</label>
      </node>
      <node id="57617">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="57602" relation="include">
        </childnode>
        <childnode refid="57604" relation="include">
        </childnode>
        <childnode refid="57605" relation="include">
        </childnode>
        <childnode refid="57603" relation="include">
        </childnode>
      </node>
      <node id="57641">
        <label>string</label>
      </node>
      <node id="57629">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="57630" relation="include">
        </childnode>
        <childnode refid="57596" relation="include">
        </childnode>
      </node>
      <node id="57639">
        <label>map</label>
      </node>
      <node id="57591">
        <label>cfloat</label>
      </node>
      <node id="57621">
        <label>boost/variant.hpp</label>
      </node>
      <node id="57643">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="57605">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="57628">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="57629" relation="include">
        </childnode>
        <childnode refid="57605" relation="include">
        </childnode>
        <childnode refid="57612" relation="include">
        </childnode>
        <childnode refid="57630" relation="include">
        </childnode>
      </node>
      <node id="57618">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="57616">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="57602" relation="include">
        </childnode>
        <childnode refid="57604" relation="include">
        </childnode>
        <childnode refid="57605" relation="include">
        </childnode>
        <childnode refid="57603" relation="include">
        </childnode>
      </node>
      <node id="57619">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="57602" relation="include">
        </childnode>
        <childnode refid="57604" relation="include">
        </childnode>
        <childnode refid="57605" relation="include">
        </childnode>
        <childnode refid="57603" relation="include">
        </childnode>
      </node>
      <node id="57607">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="57587">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/policy/greedy_policy.hpp</label>
        <link refid="greedy__policy_8hpp"/>
        <childnode refid="57588" relation="include">
        </childnode>
      </node>
      <node id="57627">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="57603" relation="include">
        </childnode>
        <childnode refid="57604" relation="include">
        </childnode>
        <childnode refid="57605" relation="include">
        </childnode>
        <childnode refid="57615" relation="include">
        </childnode>
        <childnode refid="57624" relation="include">
        </childnode>
      </node>
      <node id="57631">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="57632" relation="include">
        </childnode>
      </node>
      <node id="57633">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="57588">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="57589" relation="include">
        </childnode>
        <childnode refid="57590" relation="include">
        </childnode>
        <childnode refid="57591" relation="include">
        </childnode>
        <childnode refid="57592" relation="include">
        </childnode>
        <childnode refid="57593" relation="include">
        </childnode>
        <childnode refid="57594" relation="include">
        </childnode>
        <childnode refid="57595" relation="include">
        </childnode>
        <childnode refid="57596" relation="include">
        </childnode>
        <childnode refid="57597" relation="include">
        </childnode>
        <childnode refid="57598" relation="include">
        </childnode>
        <childnode refid="57599" relation="include">
        </childnode>
        <childnode refid="57600" relation="include">
        </childnode>
        <childnode refid="57601" relation="include">
        </childnode>
        <childnode refid="57602" relation="include">
        </childnode>
        <childnode refid="57603" relation="include">
        </childnode>
        <childnode refid="57604" relation="include">
        </childnode>
        <childnode refid="57605" relation="include">
        </childnode>
        <childnode refid="57606" relation="include">
        </childnode>
        <childnode refid="57607" relation="include">
        </childnode>
        <childnode refid="57608" relation="include">
        </childnode>
        <childnode refid="57609" relation="include">
        </childnode>
        <childnode refid="57610" relation="include">
        </childnode>
        <childnode refid="57614" relation="include">
        </childnode>
        <childnode refid="57615" relation="include">
        </childnode>
        <childnode refid="57616" relation="include">
        </childnode>
        <childnode refid="57617" relation="include">
        </childnode>
        <childnode refid="57618" relation="include">
        </childnode>
        <childnode refid="57619" relation="include">
        </childnode>
        <childnode refid="57620" relation="include">
        </childnode>
        <childnode refid="57626" relation="include">
        </childnode>
        <childnode refid="57627" relation="include">
        </childnode>
        <childnode refid="57624" relation="include">
        </childnode>
        <childnode refid="57628" relation="include">
        </childnode>
        <childnode refid="57631" relation="include">
        </childnode>
        <childnode refid="57633" relation="include">
        </childnode>
        <childnode refid="57634" relation="include">
        </childnode>
        <childnode refid="57643" relation="include">
        </childnode>
        <childnode refid="57644" relation="include">
        </childnode>
      </node>
      <node id="57594">
        <label>cstdio</label>
      </node>
      <node id="57598">
        <label>tuple</label>
      </node>
      <node id="57603">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="57620">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="57603" relation="include">
        </childnode>
        <childnode refid="57604" relation="include">
        </childnode>
        <childnode refid="57605" relation="include">
        </childnode>
        <childnode refid="57607" relation="include">
        </childnode>
        <childnode refid="57621" relation="include">
        </childnode>
        <childnode refid="57622" relation="include">
        </childnode>
        <childnode refid="57623" relation="include">
        </childnode>
        <childnode refid="57624" relation="include">
        </childnode>
      </node>
      <node id="57599">
        <label>utility</label>
      </node>
      <node id="57623">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="57614">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="57611">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="57612" relation="include">
        </childnode>
      </node>
      <node id="57634">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="57635" relation="include">
        </childnode>
        <childnode refid="57636" relation="include">
        </childnode>
        <childnode refid="57637" relation="include">
        </childnode>
        <childnode refid="57638" relation="include">
        </childnode>
        <childnode refid="57639" relation="include">
        </childnode>
        <childnode refid="57640" relation="include">
        </childnode>
        <childnode refid="57641" relation="include">
        </childnode>
        <childnode refid="57642" relation="include">
        </childnode>
      </node>
      <node id="57612">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="57626">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="57624" relation="include">
        </childnode>
        <childnode refid="57620" relation="include">
        </childnode>
        <childnode refid="57627" relation="include">
        </childnode>
      </node>
      <node id="57595">
        <label>cstdlib</label>
      </node>
      <node id="57590">
        <label>cctype</label>
      </node>
      <node id="57613">
        <label>unordered_map</label>
      </node>
      <node id="57592">
        <label>climits</label>
      </node>
      <node id="57640">
        <label>mutex</label>
      </node>
      <node id="57636">
        <label>chrono</label>
      </node>
      <node id="57644">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="57642">
        <label>thread</label>
      </node>
      <node id="57630">
        <label>type_traits</label>
      </node>
      <node id="57606">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="57600">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="57624">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="57602" relation="include">
        </childnode>
        <childnode refid="57603" relation="include">
        </childnode>
        <childnode refid="57604" relation="include">
        </childnode>
        <childnode refid="57605" relation="include">
        </childnode>
        <childnode refid="57625" relation="include">
        </childnode>
      </node>
      <node id="57596">
        <label>cstring</label>
      </node>
      <node id="57615">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="57604">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1rl_1_1GreedyPolicy" prot="public">mlpack::rl::GreedyPolicy</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1rl">mlpack::rl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Shangtong Zhang </para></simplesect>
<simplesect kind="author"><para>Abhinav Sagar</para></simplesect>
This file is an implementation of epsilon greedy policy.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_RL_POLICY_GREEDY_POLICY_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_RL_POLICY_GREEDY_POLICY_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">rl<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>EnvironmentType&gt;</highlight></codeline>
<codeline lineno="31" refid="classmlpack_1_1rl_1_1GreedyPolicy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1rl_1_1GreedyPolicy" kindref="compound">GreedyPolicy</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35" refid="classmlpack_1_1rl_1_1GreedyPolicy_1aaf7b2dc5d49d01961601c7c16be76777" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1GreedyPolicy_1aaf7b2dc5d49d01961601c7c16be76777" kindref="member">ActionType</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>EnvironmentType::Action;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classmlpack_1_1rl_1_1GreedyPolicy_1a7e04af56c8b5bb57890640e7fcb6b676" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1rl_1_1GreedyPolicy_1a7e04af56c8b5bb57890640e7fcb6b676" kindref="member">GreedyPolicy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initialEpsilon,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>annealInterval,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minEpsilon,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>decayRate<sp/>=<sp/>1.0)<sp/>:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>epsilon(initialEpsilon),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>minEpsilon(minEpsilon),</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>delta(((initialEpsilon<sp/>-<sp/>minEpsilon)<sp/>*<sp/>decayRate)<sp/>/<sp/>annealInterval)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do<sp/>here.<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classmlpack_1_1rl_1_1GreedyPolicy_1ab0b01a3a4864c348b0c97ba92bae45c4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1rl_1_1GreedyPolicy_1aaf7b2dc5d49d01961601c7c16be76777" kindref="member">ActionType</ref><sp/><ref refid="classmlpack_1_1rl_1_1GreedyPolicy_1ab0b01a3a4864c348b0c97ba92bae45c4" kindref="member">Sample</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::colvec&amp;<sp/>actionValue,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deterministic<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isNoisy<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>exploration<sp/>=<sp/><ref refid="namespacemlpack_1_1math_1a305db122ade561ba1fe874bd51e9797d" kindref="member">math::Random</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1rl_1_1GreedyPolicy_1aaf7b2dc5d49d01961601c7c16be76777" kindref="member">ActionType</ref><sp/>action;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>the<sp/>action<sp/>randomly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!deterministic<sp/>&amp;&amp;<sp/>exploration<sp/>&lt;<sp/>epsilon<sp/>&amp;&amp;<sp/>isNoisy<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>action.action<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">decltype(action.action)</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="namespacemlpack_1_1math_1aad090ac225728d74c1b66bcf52f3ab95" kindref="member">math::RandInt</ref>(ActionType::size));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>the<sp/>action<sp/>greedily.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>action.action<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">decltype(action.action)</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::as_scalar(arma::find(actionValue<sp/>==<sp/>actionValue.max(),<sp/>1)));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>action;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classmlpack_1_1rl_1_1GreedyPolicy_1a280278726ff7d32f2b7eff5c92a1767a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1GreedyPolicy_1a280278726ff7d32f2b7eff5c92a1767a" kindref="member">Anneal</ref>()</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>epsilon<sp/>-=<sp/>delta;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>epsilon<sp/>=<sp/>std::max(minEpsilon,<sp/>epsilon);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classmlpack_1_1rl_1_1GreedyPolicy_1a3ababd597760bb1f9782ad2c17aadb41" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1rl_1_1GreedyPolicy_1a3ababd597760bb1f9782ad2c17aadb41" kindref="member">Epsilon</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>epsilon;<sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>epsilon;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minEpsilon;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>rl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/policy/greedy_policy.hpp"/>
  </compounddef>
</doxygen>
