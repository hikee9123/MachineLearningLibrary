<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="randomized__block__krylov__svd_8hpp" kind="file" language="C++">
    <compoundname>randomized_block_krylov_svd.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includedby refid="randomized__block__krylov__method_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/pca/decomposition_policies/randomized_block_krylov_method.hpp</includedby>
    <incdepgraph>
      <node id="45616">
        <label>list</label>
      </node>
      <node id="45613">
        <label>atomic</label>
      </node>
      <node id="45603">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="45579">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="45615">
        <label>iomanip</label>
      </node>
      <node id="45588">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="45589" relation="include">
        </childnode>
        <childnode refid="45591" relation="include">
        </childnode>
      </node>
      <node id="45571">
        <label>cstdint</label>
      </node>
      <node id="45580">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="45587">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="45565">
        <label>/home/aakash/mlpack/src/mlpack/methods/block_krylov_svd/randomized_block_krylov_svd.hpp</label>
        <link refid="randomized__block__krylov__svd_8hpp"/>
        <childnode refid="45566" relation="include">
        </childnode>
      </node>
      <node id="45610">
        <label>arma_config.hpp</label>
      </node>
      <node id="45600">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="45567">
        <label>cmath</label>
      </node>
      <node id="45586">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="45575">
        <label>stdexcept</label>
      </node>
      <node id="45595">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="45580" relation="include">
        </childnode>
        <childnode refid="45582" relation="include">
        </childnode>
        <childnode refid="45583" relation="include">
        </childnode>
        <childnode refid="45581" relation="include">
        </childnode>
      </node>
      <node id="45619">
        <label>string</label>
      </node>
      <node id="45607">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="45608" relation="include">
        </childnode>
        <childnode refid="45574" relation="include">
        </childnode>
      </node>
      <node id="45617">
        <label>map</label>
      </node>
      <node id="45569">
        <label>cfloat</label>
      </node>
      <node id="45599">
        <label>boost/variant.hpp</label>
      </node>
      <node id="45621">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="45583">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="45606">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="45607" relation="include">
        </childnode>
        <childnode refid="45583" relation="include">
        </childnode>
        <childnode refid="45590" relation="include">
        </childnode>
        <childnode refid="45608" relation="include">
        </childnode>
      </node>
      <node id="45596">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="45594">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="45580" relation="include">
        </childnode>
        <childnode refid="45582" relation="include">
        </childnode>
        <childnode refid="45583" relation="include">
        </childnode>
        <childnode refid="45581" relation="include">
        </childnode>
      </node>
      <node id="45597">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="45580" relation="include">
        </childnode>
        <childnode refid="45582" relation="include">
        </childnode>
        <childnode refid="45583" relation="include">
        </childnode>
        <childnode refid="45581" relation="include">
        </childnode>
      </node>
      <node id="45585">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="45605">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="45581" relation="include">
        </childnode>
        <childnode refid="45582" relation="include">
        </childnode>
        <childnode refid="45583" relation="include">
        </childnode>
        <childnode refid="45593" relation="include">
        </childnode>
        <childnode refid="45602" relation="include">
        </childnode>
      </node>
      <node id="45609">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="45610" relation="include">
        </childnode>
      </node>
      <node id="45611">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="45566">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="45567" relation="include">
        </childnode>
        <childnode refid="45568" relation="include">
        </childnode>
        <childnode refid="45569" relation="include">
        </childnode>
        <childnode refid="45570" relation="include">
        </childnode>
        <childnode refid="45571" relation="include">
        </childnode>
        <childnode refid="45572" relation="include">
        </childnode>
        <childnode refid="45573" relation="include">
        </childnode>
        <childnode refid="45574" relation="include">
        </childnode>
        <childnode refid="45575" relation="include">
        </childnode>
        <childnode refid="45576" relation="include">
        </childnode>
        <childnode refid="45577" relation="include">
        </childnode>
        <childnode refid="45578" relation="include">
        </childnode>
        <childnode refid="45579" relation="include">
        </childnode>
        <childnode refid="45580" relation="include">
        </childnode>
        <childnode refid="45581" relation="include">
        </childnode>
        <childnode refid="45582" relation="include">
        </childnode>
        <childnode refid="45583" relation="include">
        </childnode>
        <childnode refid="45584" relation="include">
        </childnode>
        <childnode refid="45585" relation="include">
        </childnode>
        <childnode refid="45586" relation="include">
        </childnode>
        <childnode refid="45587" relation="include">
        </childnode>
        <childnode refid="45588" relation="include">
        </childnode>
        <childnode refid="45592" relation="include">
        </childnode>
        <childnode refid="45593" relation="include">
        </childnode>
        <childnode refid="45594" relation="include">
        </childnode>
        <childnode refid="45595" relation="include">
        </childnode>
        <childnode refid="45596" relation="include">
        </childnode>
        <childnode refid="45597" relation="include">
        </childnode>
        <childnode refid="45598" relation="include">
        </childnode>
        <childnode refid="45604" relation="include">
        </childnode>
        <childnode refid="45605" relation="include">
        </childnode>
        <childnode refid="45602" relation="include">
        </childnode>
        <childnode refid="45606" relation="include">
        </childnode>
        <childnode refid="45609" relation="include">
        </childnode>
        <childnode refid="45611" relation="include">
        </childnode>
        <childnode refid="45612" relation="include">
        </childnode>
        <childnode refid="45621" relation="include">
        </childnode>
        <childnode refid="45622" relation="include">
        </childnode>
      </node>
      <node id="45572">
        <label>cstdio</label>
      </node>
      <node id="45576">
        <label>tuple</label>
      </node>
      <node id="45581">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="45598">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="45581" relation="include">
        </childnode>
        <childnode refid="45582" relation="include">
        </childnode>
        <childnode refid="45583" relation="include">
        </childnode>
        <childnode refid="45585" relation="include">
        </childnode>
        <childnode refid="45599" relation="include">
        </childnode>
        <childnode refid="45600" relation="include">
        </childnode>
        <childnode refid="45601" relation="include">
        </childnode>
        <childnode refid="45602" relation="include">
        </childnode>
      </node>
      <node id="45577">
        <label>utility</label>
      </node>
      <node id="45601">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="45592">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="45589">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="45590" relation="include">
        </childnode>
      </node>
      <node id="45612">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="45613" relation="include">
        </childnode>
        <childnode refid="45614" relation="include">
        </childnode>
        <childnode refid="45615" relation="include">
        </childnode>
        <childnode refid="45616" relation="include">
        </childnode>
        <childnode refid="45617" relation="include">
        </childnode>
        <childnode refid="45618" relation="include">
        </childnode>
        <childnode refid="45619" relation="include">
        </childnode>
        <childnode refid="45620" relation="include">
        </childnode>
      </node>
      <node id="45590">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="45604">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="45602" relation="include">
        </childnode>
        <childnode refid="45598" relation="include">
        </childnode>
        <childnode refid="45605" relation="include">
        </childnode>
      </node>
      <node id="45573">
        <label>cstdlib</label>
      </node>
      <node id="45568">
        <label>cctype</label>
      </node>
      <node id="45591">
        <label>unordered_map</label>
      </node>
      <node id="45570">
        <label>climits</label>
      </node>
      <node id="45618">
        <label>mutex</label>
      </node>
      <node id="45614">
        <label>chrono</label>
      </node>
      <node id="45622">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="45620">
        <label>thread</label>
      </node>
      <node id="45608">
        <label>type_traits</label>
      </node>
      <node id="45584">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="45578">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="45602">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="45580" relation="include">
        </childnode>
        <childnode refid="45581" relation="include">
        </childnode>
        <childnode refid="45582" relation="include">
        </childnode>
        <childnode refid="45583" relation="include">
        </childnode>
        <childnode refid="45603" relation="include">
        </childnode>
      </node>
      <node id="45574">
        <label>cstring</label>
      </node>
      <node id="45593">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="45582">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="45623">
        <label>/home/aakash/mlpack/src/mlpack/methods/block_krylov_svd/randomized_block_krylov_svd.hpp</label>
        <link refid="randomized__block__krylov__svd_8hpp"/>
        <childnode refid="45624" relation="include">
        </childnode>
      </node>
      <node id="45624">
        <label>/home/aakash/mlpack/src/mlpack/methods/pca/decomposition_policies/randomized_block_krylov_method.hpp</label>
        <link refid="randomized__block__krylov__method_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1svd_1_1RandomizedBlockKrylovSVD" prot="public">mlpack::svd::RandomizedBlockKrylovSVD</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1svd">mlpack::svd</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Marcus Edel</para></simplesect>
An implementation of the randomized block krylov SVD method.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_BLOCK_KRYLOV_SVD_RANDOMIZED_BLOCK_KRYLOV_SVD_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_BLOCK_KRYLOV_SVD_RANDOMIZED_BLOCK_KRYLOV_SVD_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">svd<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classmlpack_1_1svd_1_1RandomizedBlockKrylovSVD" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1svd_1_1RandomizedBlockKrylovSVD" kindref="compound">RandomizedBlockKrylovSVD</ref></highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1svd_1_1RandomizedBlockKrylovSVD_1aa1fb3c7372e3ca685cf926865c214150" kindref="member">RandomizedBlockKrylovSVD</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>u,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>s,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>v,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>blockSize<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1svd_1_1RandomizedBlockKrylovSVD_1aa1fb3c7372e3ca685cf926865c214150" kindref="member">RandomizedBlockKrylovSVD</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>blockSize<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1svd_1_1RandomizedBlockKrylovSVD_1a880f86693b7d486206c2f69ad8d9c59a" kindref="member">Apply</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>u,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>s,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>v,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rank);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classmlpack_1_1svd_1_1RandomizedBlockKrylovSVD_1a420770944a5b0c7a852c4ec372c4a2d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1svd_1_1RandomizedBlockKrylovSVD_1a420770944a5b0c7a852c4ec372c4a2d1" kindref="member">MaxIterations</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxIterations;<sp/>}</highlight></codeline>
<codeline lineno="110" refid="classmlpack_1_1svd_1_1RandomizedBlockKrylovSVD_1acda675ab4ab86b95c92bc33bc391a61b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1svd_1_1RandomizedBlockKrylovSVD_1acda675ab4ab86b95c92bc33bc391a61b" kindref="member">MaxIterations</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxIterations;<sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="classmlpack_1_1svd_1_1RandomizedBlockKrylovSVD_1a3abd143be875c389ea92c4d54057c591" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1svd_1_1RandomizedBlockKrylovSVD_1a3abd143be875c389ea92c4d54057c591" kindref="member">BlockSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blockSize;<sp/>}</highlight></codeline>
<codeline lineno="115" refid="classmlpack_1_1svd_1_1RandomizedBlockKrylovSVD_1a3380590a2f71ed10c3e81242b7e0faeb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1svd_1_1RandomizedBlockKrylovSVD_1a3380590a2f71ed10c3e81242b7e0faeb" kindref="member">BlockSize</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blockSize;<sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>blockSize;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>svd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/block_krylov_svd/randomized_block_krylov_svd.hpp"/>
  </compounddef>
</doxygen>
