<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1distribution_1_1GaussianDistribution" kind="class" language="C++" prot="public">
    <compoundname>mlpack::distribution::GaussianDistribution</compoundname>
    <includes refid="gaussian__distribution_8hpp" local="no">gaussian_distribution.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1distribution_1_1GaussianDistribution_1a3be1162e6a85f9898970ec5cc26f2b54" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat covariance</definition>
        <argsstring></argsstring>
        <name>covariance</name>
        <briefdescription>
<para>Positive definite covariance of the distribution. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="30" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1distribution_1_1GaussianDistribution_1ad0f273906697e7d395a77650d93474f4" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat covLower</definition>
        <argsstring></argsstring>
        <name>covLower</name>
        <briefdescription>
<para>Lower triangular factor of cov (e.g. cov = LL^T). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="32" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1distribution_1_1GaussianDistribution_1a85ee79b03d39b39f1452225b423a5d92" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat invCov</definition>
        <argsstring></argsstring>
        <name>invCov</name>
        <briefdescription>
<para>Cached inverse of covariance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="34" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1distribution_1_1GaussianDistribution_1a933ee01aed64526add3b92184fe356e3" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double logDetCov</definition>
        <argsstring></argsstring>
        <name>logDetCov</name>
        <briefdescription>
<para>Cached logdet(cov). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="36" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1distribution_1_1GaussianDistribution_1ab4b037af44fcecb75381f2bc4e14d5a3" prot="private" static="no" mutable="no">
        <type>arma::vec</type>
        <definition>arma::vec mean</definition>
        <argsstring></argsstring>
        <name>mean</name>
        <briefdescription>
<para>Mean of the distribution. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="28" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classmlpack_1_1distribution_1_1GaussianDistribution_1a9165d8d96d8c5d13d5aa0d2df18b557d" prot="private" static="yes" mutable="no">
        <type>const constexpr double</type>
        <definition>const constexpr double log2pi</definition>
        <argsstring></argsstring>
        <name>log2pi</name>
        <initializer>= 1.83787706640934533908193770912475883</initializer>
        <briefdescription>
<para>log(2pi) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="39" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GaussianDistribution_1a53336d1b90883f2d488956588e1b3a92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GaussianDistribution</definition>
        <argsstring>()</argsstring>
        <name>GaussianDistribution</name>
        <briefdescription>
<para>Default constructor, which creates a Gaussian with zero dimension. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="45" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" bodystart="45" bodyend="45"/>
        <referencedby refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a050cc3343306ceecd93f1ac9681c5e9f" compoundref="gaussian__distribution_8hpp" startline="51" endline="57">GaussianDistribution::GaussianDistribution</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GaussianDistribution_1a050cc3343306ceecd93f1ac9681c5e9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GaussianDistribution</definition>
        <argsstring>(const size_t dimension)</argsstring>
        <name>GaussianDistribution</name>
        <param>
          <type>const size_t</type>
          <declname>dimension</declname>
        </param>
        <briefdescription>
<para>Create a Gaussian distribution with zero mean and identity covariance with the given dimensionality. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="51" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" bodystart="51" bodyend="57"/>
        <references refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a53336d1b90883f2d488956588e1b3a92" compoundref="gaussian__distribution_8hpp" startline="45" endline="45">GaussianDistribution::GaussianDistribution</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GaussianDistribution_1af7cc39bc7a94d9714077d9806bc5bd8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GaussianDistribution</definition>
        <argsstring>(const arma::vec &amp;mean, const arma::mat &amp;covariance)</argsstring>
        <name>GaussianDistribution</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>mean</declname>
        </param>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>covariance</declname>
        </param>
        <briefdescription>
<para>Create a Gaussian distribution with the given mean and covariance. </para>        </briefdescription>
        <detaileddescription>
<para>covariance is expected to be positive definite. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GaussianDistribution_1a7cab8a0b8c0deac1833f3e489fa52daf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::mat &amp;</type>
        <definition>const arma::mat&amp; Covariance</definition>
        <argsstring>() const</argsstring>
        <name>Covariance</name>
        <briefdescription>
<para>Return the covariance matrix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="156" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GaussianDistribution_1a46cee4ce00705ebf88f655a0c29e4f18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Covariance</definition>
        <argsstring>(const arma::mat &amp;covariance)</argsstring>
        <name>Covariance</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>covariance</declname>
        </param>
        <briefdescription>
<para>Set the covariance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GaussianDistribution_1a6420d8fe7bf6a71560c29f9182d1630b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Covariance</definition>
        <argsstring>(arma::mat &amp;&amp;covariance)</argsstring>
        <name>Covariance</name>
        <param>
          <type>arma::mat &amp;&amp;</type>
          <declname>covariance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GaussianDistribution_1a78eda6bfb9e9462afa0fc85e32abe1af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Dimensionality</definition>
        <argsstring>() const</argsstring>
        <name>Dimensionality</name>
        <briefdescription>
<para>Return the dimensionality of this distribution. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="69" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GaussianDistribution_1a0f98cea1a02c1da3ac5bc8415578642b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::mat &amp;</type>
        <definition>const arma::mat&amp; InvCov</definition>
        <argsstring>() const</argsstring>
        <name>InvCov</name>
        <briefdescription>
<para>Return the invCov. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="166" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" bodystart="166" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GaussianDistribution_1abe34707f59b9f2193bbd38cf8df9ad28" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double LogDetCov</definition>
        <argsstring>() const</argsstring>
        <name>LogDetCov</name>
        <briefdescription>
<para>Return the logDetCov. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="169" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" bodystart="169" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GaussianDistribution_1a7063c1fb92f512f32bf44542c7528739" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double LogProbability</definition>
        <argsstring>(const arma::vec &amp;observation) const</argsstring>
        <name>LogProbability</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>observation</declname>
        </param>
        <briefdescription>
<para>Return the log probability of the given observation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="82" column="1"/>
        <referencedby refid="classmlpack_1_1distribution_1_1GaussianDistribution_1ab72935d592516e77511d0b5e703c0d41" compoundref="gaussian__distribution_8hpp" startline="74" endline="77">GaussianDistribution::Probability</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GaussianDistribution_1aabd4dbf56bd3d719aede447516d68296" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LogProbability</definition>
        <argsstring>(const arma::mat &amp;x, arma::vec &amp;logProbabilities) const</argsstring>
        <name>LogProbability</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>logProbabilities</declname>
        </param>
        <briefdescription>
<para>Returns the Log probability of the given matrix. </para>        </briefdescription>
        <detaileddescription>
<para>These values are stored in logProbabilities.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>List of observations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>logProbabilities</parametername>
</parameternamelist>
<parameterdescription>
<para>Output log probabilities for each input observation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="108" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" bodystart="108" bodyend="118"/>
        <references refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a2c6f8d5bb4eacf7de767d2172b320756">GaussianDistribution::Random</references>
        <references refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a269c6f8a40ce41a5f7b6d035aef58238">GaussianDistribution::Train</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GaussianDistribution_1a6db5f5d76cbd055347cecd9ca90eea86" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::vec &amp;</type>
        <definition>const arma::vec&amp; Mean</definition>
        <argsstring>() const</argsstring>
        <name>Mean</name>
        <briefdescription>
<para>Return the mean. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="146" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GaussianDistribution_1a94becb1cd872c0334328c37f130db253" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>arma::vec &amp;</type>
        <definition>arma::vec&amp; Mean</definition>
        <argsstring>()</argsstring>
        <name>Mean</name>
        <briefdescription>
<para>Return a modifiable copy of the mean. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="151" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GaussianDistribution_1ab72935d592516e77511d0b5e703c0d41" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Probability</definition>
        <argsstring>(const arma::vec &amp;observation) const</argsstring>
        <name>Probability</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>observation</declname>
        </param>
        <briefdescription>
<para>Return the probability of the given observation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="74" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" bodystart="74" bodyend="77"/>
        <references refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a7063c1fb92f512f32bf44542c7528739">GaussianDistribution::LogProbability</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GaussianDistribution_1a1e516aca34e9c99caf1431a822d87fc6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Probability</definition>
        <argsstring>(const arma::mat &amp;x, arma::vec &amp;probabilities) const</argsstring>
        <name>Probability</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>probabilities</declname>
        </param>
        <briefdescription>
<para>Calculates the multivariate Gaussian probability density function for each data point (column) in the given matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>List of observations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>probabilities</parametername>
</parameternamelist>
<parameterdescription>
<para>Output probabilities for each input observation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="91" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" bodystart="91" bodyend="98"/>
        <references refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a7063c1fb92f512f32bf44542c7528739">GaussianDistribution::LogProbability</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GaussianDistribution_1a2c6f8d5bb4eacf7de767d2172b320756" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>arma::vec</type>
        <definition>arma::vec Random</definition>
        <argsstring>() const</argsstring>
        <name>Random</name>
        <briefdescription>
<para>Return a randomly generated observation according to the probability distribution defined by this object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Random observation from this Gaussian distribution. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="126" column="1"/>
        <referencedby refid="test__function__tools_8hpp_1a4fca855ff4c9772ee30ed0a171812953" compoundref="test__function__tools_8hpp" startline="34" endline="82">LogisticRegressionTestData</referencedby>
        <referencedby refid="classmlpack_1_1distribution_1_1GaussianDistribution_1aabd4dbf56bd3d719aede447516d68296" compoundref="gaussian__distribution_8hpp" startline="108" endline="118">GaussianDistribution::LogProbability</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GaussianDistribution_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the distribution. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="175" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" bodystart="175" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GaussianDistribution_1a269c6f8a40ce41a5f7b6d035aef58238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Train</definition>
        <argsstring>(const arma::mat &amp;observations)</argsstring>
        <name>Train</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>observations</declname>
        </param>
        <briefdescription>
<para>Estimate the Gaussian distribution directly from the given observations. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observations</parametername>
</parameternamelist>
<parameterdescription>
<para>List of observations. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="133" column="1"/>
        <referencedby refid="classmlpack_1_1distribution_1_1GaussianDistribution_1aabd4dbf56bd3d719aede447516d68296" compoundref="gaussian__distribution_8hpp" startline="108" endline="118">GaussianDistribution::LogProbability</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GaussianDistribution_1ad71152f8853ac60c92a165ed72384125" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Train</definition>
        <argsstring>(const arma::mat &amp;observations, const arma::vec &amp;probabilities)</argsstring>
        <name>Train</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>observations</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>probabilities</declname>
        </param>
        <briefdescription>
<para>Estimate the Gaussian distribution from the given observations, taking into account the probability of each observation actually being from this distribution. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="140" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GaussianDistribution_1aae4ca3a32e8dc11617c9ea3b09b3d158" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FactorCovariance</definition>
        <argsstring>()</argsstring>
        <name>FactorCovariance</name>
        <briefdescription>
<para>This factors the covariance using arma::chol(). </para>        </briefdescription>
        <detaileddescription>
<para>The function assumes that the given matrix is factorizable via the Cholesky decomposition. If not, a std::runtime_error will be thrown. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="191" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A single multivariate Gaussian distribution. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" line="25" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gaussian_distribution.hpp" bodystart="24" bodyend="192"/>
    <listofallmembers>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a3be1162e6a85f9898970ec5cc26f2b54" prot="private" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>covariance</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a7cab8a0b8c0deac1833f3e489fa52daf" prot="public" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>Covariance</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a46cee4ce00705ebf88f655a0c29e4f18" prot="public" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>Covariance</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a6420d8fe7bf6a71560c29f9182d1630b" prot="public" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>Covariance</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1ad0f273906697e7d395a77650d93474f4" prot="private" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>covLower</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a78eda6bfb9e9462afa0fc85e32abe1af" prot="public" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>Dimensionality</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1aae4ca3a32e8dc11617c9ea3b09b3d158" prot="private" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>FactorCovariance</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a53336d1b90883f2d488956588e1b3a92" prot="public" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>GaussianDistribution</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a050cc3343306ceecd93f1ac9681c5e9f" prot="public" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>GaussianDistribution</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1af7cc39bc7a94d9714077d9806bc5bd8c" prot="public" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>GaussianDistribution</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a85ee79b03d39b39f1452225b423a5d92" prot="private" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>invCov</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a0f98cea1a02c1da3ac5bc8415578642b" prot="public" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>InvCov</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a9165d8d96d8c5d13d5aa0d2df18b557d" prot="private" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>log2pi</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1abe34707f59b9f2193bbd38cf8df9ad28" prot="public" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>LogDetCov</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a933ee01aed64526add3b92184fe356e3" prot="private" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>logDetCov</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a7063c1fb92f512f32bf44542c7528739" prot="public" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>LogProbability</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1aabd4dbf56bd3d719aede447516d68296" prot="public" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>LogProbability</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a6db5f5d76cbd055347cecd9ca90eea86" prot="public" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>Mean</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a94becb1cd872c0334328c37f130db253" prot="public" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>Mean</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1ab4b037af44fcecb75381f2bc4e14d5a3" prot="private" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>mean</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1ab72935d592516e77511d0b5e703c0d41" prot="public" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>Probability</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a1e516aca34e9c99caf1431a822d87fc6" prot="public" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>Probability</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a2c6f8d5bb4eacf7de767d2172b320756" prot="public" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>Random</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1a269c6f8a40ce41a5f7b6d035aef58238" prot="public" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>Train</name></member>
      <member refid="classmlpack_1_1distribution_1_1GaussianDistribution_1ad71152f8853ac60c92a165ed72384125" prot="public" virt="non-virtual"><scope>mlpack::distribution::GaussianDistribution</scope><name>Train</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
