<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="spill__tree_2spill__tree_8hpp" kind="file" language="C++">
    <compoundname>spill_tree.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="midpoint__space__split_8hpp" local="yes">../space_split/midpoint_space_split.hpp</includes>
    <includes refid="statistic_8hpp" local="yes">../statistic.hpp</includes>
    <includes local="yes">spill_tree_impl.hpp</includes>
    <includes refid="spill__tree_8hpp" local="yes">../spill_tree.hpp</includes>
    <includedby refid="is__spill__tree_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/core/tree/spill_tree/is_spill_tree.hpp</includedby>
    <includedby refid="spill__tree_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/core/tree/spill_tree.hpp</includedby>
    <includedby refid="spill__single__tree__traverser_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/core/tree/spill_tree/spill_single_tree_traverser.hpp</includedby>
    <includedby refid="spill__dual__tree__traverser_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/core/tree/spill_tree/spill_dual_tree_traverser.hpp</includedby>
    <incdepgraph>
      <node id="18833">
        <label>list</label>
      </node>
      <node id="18865">
        <label>spill_tree/spill_dual_tree_traverser.hpp</label>
        <link refid="spill__dual__tree__traverser_8hpp"/>
        <childnode refid="18783" relation="include">
        </childnode>
        <childnode refid="18782" relation="include">
        </childnode>
        <childnode refid="18866" relation="include">
        </childnode>
      </node>
      <node id="18830">
        <label>atomic</label>
      </node>
      <node id="18842">
        <label>projection_vector.hpp</label>
        <link refid="projection__vector_8hpp"/>
        <childnode refid="18783" relation="include">
        </childnode>
        <childnode refid="18843" relation="include">
        </childnode>
      </node>
      <node id="18820">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="18796">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="18870">
        <label>spill_tree/typedef.hpp</label>
        <link refid="core_2tree_2spill__tree_2typedef_8hpp"/>
        <childnode refid="18871" relation="include">
        </childnode>
        <childnode refid="18840" relation="include">
        </childnode>
      </node>
      <node id="18832">
        <label>iomanip</label>
      </node>
      <node id="18847">
        <label>bound_traits.hpp</label>
        <link refid="bound__traits_8hpp"/>
      </node>
      <node id="18841">
        <label>hyperplane.hpp</label>
        <link refid="hyperplane_8hpp"/>
        <childnode refid="18783" relation="include">
        </childnode>
        <childnode refid="18842" relation="include">
        </childnode>
      </node>
      <node id="18846">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="18805">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="18806" relation="include">
        </childnode>
        <childnode refid="18808" relation="include">
        </childnode>
      </node>
      <node id="18788">
        <label>cstdint</label>
      </node>
      <node id="18840">
        <label>../space_split/midpoint_space_split.hpp</label>
        <link refid="midpoint__space__split_8hpp"/>
        <childnode refid="18783" relation="include">
        </childnode>
        <childnode refid="18841" relation="include">
        </childnode>
        <childnode refid="18857" relation="include">
        </childnode>
      </node>
      <node id="18797">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="18804">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="18872">
        <label>mean_space_split_impl.hpp</label>
      </node>
      <node id="18827">
        <label>arma_config.hpp</label>
      </node>
      <node id="18852">
        <label>hollow_ball_bound.hpp</label>
        <link refid="hollow__ball__bound_8hpp"/>
        <childnode refid="18783" relation="include">
        </childnode>
        <childnode refid="18845" relation="include">
        </childnode>
        <childnode refid="18847" relation="include">
        </childnode>
        <childnode refid="18853" relation="include">
        </childnode>
      </node>
      <node id="18858">
        <label>../statistic.hpp</label>
        <link refid="statistic_8hpp"/>
      </node>
      <node id="18860">
        <label>../spill_tree.hpp</label>
        <link refid="spill__tree_8hpp"/>
        <childnode refid="18783" relation="include">
        </childnode>
        <childnode refid="18843" relation="include">
        </childnode>
        <childnode refid="18861" relation="include">
        </childnode>
        <childnode refid="18782" relation="include">
        </childnode>
        <childnode refid="18862" relation="include">
        </childnode>
        <childnode refid="18864" relation="include">
        </childnode>
        <childnode refid="18865" relation="include">
        </childnode>
        <childnode refid="18867" relation="include">
        </childnode>
        <childnode refid="18868" relation="include">
        </childnode>
        <childnode refid="18870" relation="include">
        </childnode>
      </node>
      <node id="18817">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="18784">
        <label>cmath</label>
      </node>
      <node id="18843">
        <label>../bounds.hpp</label>
        <link refid="bounds_8hpp"/>
        <childnode refid="18844" relation="include">
        </childnode>
        <childnode refid="18845" relation="include">
        </childnode>
        <childnode refid="18847" relation="include">
        </childnode>
        <childnode refid="18848" relation="include">
        </childnode>
        <childnode refid="18850" relation="include">
        </childnode>
        <childnode refid="18852" relation="include">
        </childnode>
        <childnode refid="18854" relation="include">
        </childnode>
      </node>
      <node id="18803">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="18792">
        <label>stdexcept</label>
      </node>
      <node id="18812">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="18797" relation="include">
        </childnode>
        <childnode refid="18799" relation="include">
        </childnode>
        <childnode refid="18800" relation="include">
        </childnode>
        <childnode refid="18798" relation="include">
        </childnode>
      </node>
      <node id="18844">
        <label>mlpack/core/math/range.hpp</label>
      </node>
      <node id="18836">
        <label>string</label>
      </node>
      <node id="18824">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="18825" relation="include">
        </childnode>
        <childnode refid="18791" relation="include">
        </childnode>
      </node>
      <node id="18834">
        <label>map</label>
      </node>
      <node id="18868">
        <label>spill_tree/traits.hpp</label>
        <link refid="spill__tree_2traits_8hpp"/>
        <childnode refid="18869" relation="include">
        </childnode>
      </node>
      <node id="18786">
        <label>cfloat</label>
      </node>
      <node id="18816">
        <label>boost/variant.hpp</label>
      </node>
      <node id="18838">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="18800">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="18823">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="18824" relation="include">
        </childnode>
        <childnode refid="18800" relation="include">
        </childnode>
        <childnode refid="18807" relation="include">
        </childnode>
        <childnode refid="18825" relation="include">
        </childnode>
      </node>
      <node id="18862">
        <label>spill_tree/spill_single_tree_traverser.hpp</label>
        <link refid="spill__single__tree__traverser_8hpp"/>
        <childnode refid="18783" relation="include">
        </childnode>
        <childnode refid="18782" relation="include">
        </childnode>
        <childnode refid="18863" relation="include">
        </childnode>
      </node>
      <node id="18813">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="18811">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="18797" relation="include">
        </childnode>
        <childnode refid="18799" relation="include">
        </childnode>
        <childnode refid="18800" relation="include">
        </childnode>
        <childnode refid="18798" relation="include">
        </childnode>
      </node>
      <node id="18814">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="18797" relation="include">
        </childnode>
        <childnode refid="18799" relation="include">
        </childnode>
        <childnode refid="18800" relation="include">
        </childnode>
        <childnode refid="18798" relation="include">
        </childnode>
      </node>
      <node id="18802">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="18822">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="18798" relation="include">
        </childnode>
        <childnode refid="18799" relation="include">
        </childnode>
        <childnode refid="18800" relation="include">
        </childnode>
        <childnode refid="18810" relation="include">
        </childnode>
        <childnode refid="18819" relation="include">
        </childnode>
      </node>
      <node id="18826">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="18827" relation="include">
        </childnode>
      </node>
      <node id="18828">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="18783">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="18784" relation="include">
        </childnode>
        <childnode refid="18785" relation="include">
        </childnode>
        <childnode refid="18786" relation="include">
        </childnode>
        <childnode refid="18787" relation="include">
        </childnode>
        <childnode refid="18788" relation="include">
        </childnode>
        <childnode refid="18789" relation="include">
        </childnode>
        <childnode refid="18790" relation="include">
        </childnode>
        <childnode refid="18791" relation="include">
        </childnode>
        <childnode refid="18792" relation="include">
        </childnode>
        <childnode refid="18793" relation="include">
        </childnode>
        <childnode refid="18794" relation="include">
        </childnode>
        <childnode refid="18795" relation="include">
        </childnode>
        <childnode refid="18796" relation="include">
        </childnode>
        <childnode refid="18797" relation="include">
        </childnode>
        <childnode refid="18798" relation="include">
        </childnode>
        <childnode refid="18799" relation="include">
        </childnode>
        <childnode refid="18800" relation="include">
        </childnode>
        <childnode refid="18801" relation="include">
        </childnode>
        <childnode refid="18802" relation="include">
        </childnode>
        <childnode refid="18803" relation="include">
        </childnode>
        <childnode refid="18804" relation="include">
        </childnode>
        <childnode refid="18805" relation="include">
        </childnode>
        <childnode refid="18809" relation="include">
        </childnode>
        <childnode refid="18810" relation="include">
        </childnode>
        <childnode refid="18811" relation="include">
        </childnode>
        <childnode refid="18812" relation="include">
        </childnode>
        <childnode refid="18813" relation="include">
        </childnode>
        <childnode refid="18814" relation="include">
        </childnode>
        <childnode refid="18815" relation="include">
        </childnode>
        <childnode refid="18821" relation="include">
        </childnode>
        <childnode refid="18822" relation="include">
        </childnode>
        <childnode refid="18819" relation="include">
        </childnode>
        <childnode refid="18823" relation="include">
        </childnode>
        <childnode refid="18826" relation="include">
        </childnode>
        <childnode refid="18828" relation="include">
        </childnode>
        <childnode refid="18829" relation="include">
        </childnode>
        <childnode refid="18838" relation="include">
        </childnode>
        <childnode refid="18839" relation="include">
        </childnode>
      </node>
      <node id="18863">
        <label>spill_single_tree_traverser_impl.hpp</label>
      </node>
      <node id="18851">
        <label>ballbound_impl.hpp</label>
      </node>
      <node id="18864">
        <label>spill_tree/spill_single_tree_traverser_impl.hpp</label>
      </node>
      <node id="18782">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/spill_tree/spill_tree.hpp</label>
        <link refid="spill__tree_2spill__tree_8hpp"/>
        <childnode refid="18783" relation="include">
        </childnode>
        <childnode refid="18840" relation="include">
        </childnode>
        <childnode refid="18858" relation="include">
        </childnode>
        <childnode refid="18859" relation="include">
        </childnode>
        <childnode refid="18860" relation="include">
        </childnode>
      </node>
      <node id="18789">
        <label>cstdio</label>
      </node>
      <node id="18855">
        <label>address.hpp</label>
        <link refid="address_8hpp"/>
      </node>
      <node id="18869">
        <label>mlpack/core/tree/tree_traits.hpp</label>
        <link refid="tree__traits_8hpp"/>
      </node>
      <node id="18859">
        <label>spill_tree_impl.hpp</label>
      </node>
      <node id="18793">
        <label>tuple</label>
      </node>
      <node id="18798">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="18815">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="18798" relation="include">
        </childnode>
        <childnode refid="18799" relation="include">
        </childnode>
        <childnode refid="18800" relation="include">
        </childnode>
        <childnode refid="18802" relation="include">
        </childnode>
        <childnode refid="18816" relation="include">
        </childnode>
        <childnode refid="18817" relation="include">
        </childnode>
        <childnode refid="18818" relation="include">
        </childnode>
        <childnode refid="18819" relation="include">
        </childnode>
      </node>
      <node id="18848">
        <label>hrectbound.hpp</label>
        <link refid="hrectbound_8hpp"/>
        <childnode refid="18783" relation="include">
        </childnode>
        <childnode refid="18844" relation="include">
        </childnode>
        <childnode refid="18845" relation="include">
        </childnode>
        <childnode refid="18847" relation="include">
        </childnode>
        <childnode refid="18849" relation="include">
        </childnode>
      </node>
      <node id="18867">
        <label>spill_tree/spill_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="18794">
        <label>utility</label>
      </node>
      <node id="18818">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="18809">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="18806">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="18807" relation="include">
        </childnode>
      </node>
      <node id="18857">
        <label>midpoint_space_split_impl.hpp</label>
      </node>
      <node id="18829">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="18830" relation="include">
        </childnode>
        <childnode refid="18831" relation="include">
        </childnode>
        <childnode refid="18832" relation="include">
        </childnode>
        <childnode refid="18833" relation="include">
        </childnode>
        <childnode refid="18834" relation="include">
        </childnode>
        <childnode refid="18835" relation="include">
        </childnode>
        <childnode refid="18836" relation="include">
        </childnode>
        <childnode refid="18837" relation="include">
        </childnode>
      </node>
      <node id="18861">
        <label>spill_tree/is_spill_tree.hpp</label>
        <link refid="is__spill__tree_8hpp"/>
        <childnode refid="18782" relation="include">
        </childnode>
      </node>
      <node id="18807">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="18821">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="18819" relation="include">
        </childnode>
        <childnode refid="18815" relation="include">
        </childnode>
        <childnode refid="18822" relation="include">
        </childnode>
      </node>
      <node id="18790">
        <label>cstdlib</label>
      </node>
      <node id="18785">
        <label>cctype</label>
      </node>
      <node id="18808">
        <label>unordered_map</label>
      </node>
      <node id="18787">
        <label>climits</label>
      </node>
      <node id="18835">
        <label>mutex</label>
      </node>
      <node id="18831">
        <label>chrono</label>
      </node>
      <node id="18849">
        <label>hrectbound_impl.hpp</label>
      </node>
      <node id="18839">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="18837">
        <label>thread</label>
      </node>
      <node id="18850">
        <label>ballbound.hpp</label>
        <link refid="ballbound_8hpp"/>
        <childnode refid="18783" relation="include">
        </childnode>
        <childnode refid="18845" relation="include">
        </childnode>
        <childnode refid="18847" relation="include">
        </childnode>
        <childnode refid="18851" relation="include">
        </childnode>
      </node>
      <node id="18866">
        <label>spill_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="18825">
        <label>type_traits</label>
      </node>
      <node id="18801">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="18795">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="18819">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="18797" relation="include">
        </childnode>
        <childnode refid="18798" relation="include">
        </childnode>
        <childnode refid="18799" relation="include">
        </childnode>
        <childnode refid="18800" relation="include">
        </childnode>
        <childnode refid="18820" relation="include">
        </childnode>
      </node>
      <node id="18853">
        <label>hollow_ball_bound_impl.hpp</label>
      </node>
      <node id="18791">
        <label>cstring</label>
      </node>
      <node id="18810">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="18856">
        <label>cellbound_impl.hpp</label>
      </node>
      <node id="18871">
        <label>../space_split/mean_space_split.hpp</label>
        <link refid="mean__space__split_8hpp"/>
        <childnode refid="18783" relation="include">
        </childnode>
        <childnode refid="18841" relation="include">
        </childnode>
        <childnode refid="18872" relation="include">
        </childnode>
      </node>
      <node id="18854">
        <label>cellbound.hpp</label>
        <link refid="cellbound_8hpp"/>
        <childnode refid="18783" relation="include">
        </childnode>
        <childnode refid="18844" relation="include">
        </childnode>
        <childnode refid="18845" relation="include">
        </childnode>
        <childnode refid="18847" relation="include">
        </childnode>
        <childnode refid="18855" relation="include">
        </childnode>
        <childnode refid="18856" relation="include">
        </childnode>
      </node>
      <node id="18799">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="18845">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="18783" relation="include">
        </childnode>
        <childnode refid="18846" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="18878">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/spill_tree/spill_dual_tree_traverser.hpp</label>
        <link refid="spill__dual__tree__traverser_8hpp"/>
        <childnode refid="18875" relation="include">
        </childnode>
      </node>
      <node id="18875">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/spill_tree.hpp</label>
        <link refid="spill__tree_8hpp"/>
        <childnode refid="18873" relation="include">
        </childnode>
        <childnode refid="18876" relation="include">
        </childnode>
      </node>
      <node id="18877">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/spill_tree/spill_single_tree_traverser.hpp</label>
        <link refid="spill__single__tree__traverser_8hpp"/>
        <childnode refid="18875" relation="include">
        </childnode>
      </node>
      <node id="18876">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp</label>
        <link refid="ns__model_8hpp"/>
      </node>
      <node id="18873">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/spill_tree/spill_tree.hpp</label>
        <link refid="spill__tree_2spill__tree_8hpp"/>
        <childnode refid="18874" relation="include">
        </childnode>
        <childnode refid="18875" relation="include">
        </childnode>
        <childnode refid="18877" relation="include">
        </childnode>
        <childnode refid="18878" relation="include">
        </childnode>
      </node>
      <node id="18874">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/spill_tree/is_spill_tree.hpp</label>
        <link refid="is__spill__tree_8hpp"/>
        <childnode refid="18875" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1tree_1_1SpillTree" prot="public">mlpack::tree::SpillTree</innerclass>
    <innerclass refid="classmlpack_1_1tree_1_1SpillTree_1_1SpillDualTreeTraverser" prot="public">mlpack::tree::SpillTree::SpillDualTreeTraverser</innerclass>
    <innerclass refid="classmlpack_1_1tree_1_1SpillTree_1_1SpillSingleTreeTraverser" prot="public">mlpack::tree::SpillTree::SpillSingleTreeTraverser</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1tree">mlpack::tree</innernamespace>
    <briefdescription>
<para>Definition of generalized hybrid spill tree (SpillTree). </para>    </briefdescription>
    <detaileddescription>
<para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_TREE_SPILL_TREE_SPILL_TREE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_TREE_SPILL_TREE_SPILL_TREE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../space_split/midpoint_space_split.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../statistic.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tree<sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MetricType,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>StatisticType<sp/>=<sp/>EmptyStatistic,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType<sp/>=<sp/>arma::mat,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>HyperplaneMetricType&gt;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">HyperplaneType<sp/>=<sp/><ref refid="namespacemlpack_1_1tree_1afa85d70df69e258859143d448fbe0553" kindref="member">AxisOrthogonalHyperplane</ref>,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SplitMetricType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>SplitMatType&gt;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SplitType<sp/>=<sp/>MidpointSpaceSplit&gt;</highlight></codeline>
<codeline lineno="73" refid="classmlpack_1_1tree_1_1SpillTree" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref></highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77" refid="classmlpack_1_1tree_1_1SpillTree_1a57758caa2e58c3fe05d1284eeabae523" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>MatType<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a57758caa2e58c3fe05d1284eeabae523" kindref="member">Mat</ref>;</highlight></codeline>
<codeline lineno="79" refid="classmlpack_1_1tree_1_1SpillTree_1a227d0c7e23e98fcd6c81ecab357a791f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType::elem_type<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref>;</highlight></codeline>
<codeline lineno="81" refid="classmlpack_1_1tree_1_1SpillTree_1afb7ac4d7ba253be481b886d3ae52cf81" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>HyperplaneType&lt;MetricType&gt;::BoundType<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1afb7ac4d7ba253be481b886d3ae52cf81" kindref="member">BoundType</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref>*<sp/>left;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref>*<sp/>right;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref>*<sp/>parent;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>arma::Col&lt;size_t&gt;*<sp/>pointsIndex;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overlappingNode;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>HyperplaneType&lt;MetricType&gt;<sp/>hyperplane;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>BoundType<sp/>bound;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>StatisticType<sp/>stat;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>ElemType<sp/>parentDistance;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>ElemType<sp/>furthestDescendantDistance;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>ElemType<sp/>minimumBoundDistance;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType*<sp/>dataset;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>localDataset;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RuleType,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Defeatist<sp/>=<sp/>false&gt;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1tree_1_1SpillTree_1_1SpillSingleTreeTraverser" kindref="compound">SpillSingleTreeTraverser</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RuleType,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Defeatist<sp/>=<sp/>false&gt;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1tree_1_1SpillTree_1_1SpillDualTreeTraverser" kindref="compound">SpillDualTreeTraverser</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RuleType&gt;</highlight></codeline>
<codeline lineno="134" refid="classmlpack_1_1tree_1_1SpillTree_1ae95fd7c19ba7e882936c55b022384887" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1_1SpillSingleTreeTraverser" kindref="compound">SingleTreeTraverser</ref><sp/>=<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1_1SpillSingleTreeTraverser" kindref="compound">SpillSingleTreeTraverser&lt;RuleType, false&gt;</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RuleType&gt;</highlight></codeline>
<codeline lineno="138" refid="classmlpack_1_1tree_1_1SpillTree_1a70567cc69a2425783765a87845ec9e03" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1_1SpillSingleTreeTraverser" kindref="compound">DefeatistSingleTreeTraverser</ref><sp/>=<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1_1SpillSingleTreeTraverser" kindref="compound">SpillSingleTreeTraverser&lt;RuleType, true&gt;</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RuleType&gt;</highlight></codeline>
<codeline lineno="142" refid="classmlpack_1_1tree_1_1SpillTree_1a63f559cd634d9be24db5b041e74169db" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1_1SpillDualTreeTraverser" kindref="compound">DualTreeTraverser</ref><sp/>=<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1_1SpillDualTreeTraverser" kindref="compound">SpillDualTreeTraverser&lt;RuleType, false&gt;</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RuleType&gt;</highlight></codeline>
<codeline lineno="146" refid="classmlpack_1_1tree_1_1SpillTree_1a1ed327205f09a5f798f411a41ed94ce3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1_1SpillDualTreeTraverser" kindref="compound">DefeatistDualTreeTraverser</ref><sp/>=<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1_1SpillDualTreeTraverser" kindref="compound">SpillDualTreeTraverser&lt;RuleType, true&gt;</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1afa475b761ce701406b530e35bf30e5d9" kindref="member">SpillTree</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxLeafSize<sp/>=<sp/>20,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rho<sp/>=<sp/>0.7);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1afa475b761ce701406b530e35bf30e5d9" kindref="member">SpillTree</ref>(MatType&amp;&amp;<sp/>data,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxLeafSize<sp/>=<sp/>20,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rho<sp/>=<sp/>0.7);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1afa475b761ce701406b530e35bf30e5d9" kindref="member">SpillTree</ref>(<ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref>*<sp/>parent,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Col&lt;size_t&gt;&amp;<sp/>points,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxLeafSize<sp/>=<sp/>20,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rho<sp/>=<sp/>0.7);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1afa475b761ce701406b530e35bf30e5d9" kindref="member">SpillTree</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1afa475b761ce701406b530e35bf30e5d9" kindref="member">SpillTree</ref>(<ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref>&amp;&amp;<sp/>other);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref>&amp;<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1ab792f299d368b4dd0e01cfd170f7d9b0" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref>&amp;<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1ab792f299d368b4dd0e01cfd170f7d9b0" kindref="member">operator=</ref>(<ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref>&amp;&amp;<sp/>other);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1afa475b761ce701406b530e35bf30e5d9" kindref="member">SpillTree</ref>(</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Archive&amp;<sp/>ar,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt;cereal::is_loading&lt;Archive&gt;()&gt;*<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a61630a42d6ba37cb1b0f38126443795e" kindref="member">~SpillTree</ref>();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="classmlpack_1_1tree_1_1SpillTree_1ad8aa68339c34c1ac00dc24012e2904ca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoundType&amp;<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1ad8aa68339c34c1ac00dc24012e2904ca" kindref="member">Bound</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bound;<sp/>}</highlight></codeline>
<codeline lineno="246" refid="classmlpack_1_1tree_1_1SpillTree_1a10137711613ed872f3efef934e0ee069" refkind="member"><highlight class="normal"><sp/><sp/>BoundType&amp;<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a10137711613ed872f3efef934e0ee069" kindref="member">Bound</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bound;<sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="classmlpack_1_1tree_1_1SpillTree_1ad8b29c84ac793742cd15834f9f4c4f31" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StatisticType&amp;<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1ad8b29c84ac793742cd15834f9f4c4f31" kindref="member">Stat</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;<sp/>}</highlight></codeline>
<codeline lineno="251" refid="classmlpack_1_1tree_1_1SpillTree_1aac2d3c104b89109f3df4a9a8cad244da" refkind="member"><highlight class="normal"><sp/><sp/>StatisticType&amp;<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1aac2d3c104b89109f3df4a9a8cad244da" kindref="member">Stat</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stat;<sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1aa0f4813924e6cdee43b45050bb947abe" kindref="member">IsLeaf</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="classmlpack_1_1tree_1_1SpillTree_1aa843b534cdaa91d21da8da06233436e3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref>*<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1aa843b534cdaa91d21da8da06233436e3" kindref="member">Left</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>left;<sp/>}</highlight></codeline>
<codeline lineno="259" refid="classmlpack_1_1tree_1_1SpillTree_1a3791d521a3b192caee1551195af1a45b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref>*&amp;<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a3791d521a3b192caee1551195af1a45b" kindref="member">Left</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>left;<sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="classmlpack_1_1tree_1_1SpillTree_1af26c4d9ed44411f6d8de9a6186b53406" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref>*<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1af26c4d9ed44411f6d8de9a6186b53406" kindref="member">Right</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>right;<sp/>}</highlight></codeline>
<codeline lineno="264" refid="classmlpack_1_1tree_1_1SpillTree_1ad165dc6342ee5b3bc02c90faa9d787ee" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref>*&amp;<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1ad165dc6342ee5b3bc02c90faa9d787ee" kindref="member">Right</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>right;<sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="classmlpack_1_1tree_1_1SpillTree_1a95f7cd8e2d7f028a2f0f409f3ab7d4b8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref>*<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a95f7cd8e2d7f028a2f0f409f3ab7d4b8" kindref="member">Parent</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parent;<sp/>}</highlight></codeline>
<codeline lineno="269" refid="classmlpack_1_1tree_1_1SpillTree_1a1cbf92ac63899f610e6b4cd28008e7bf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref>*&amp;<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a1cbf92ac63899f610e6b4cd28008e7bf" kindref="member">Parent</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parent;<sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="classmlpack_1_1tree_1_1SpillTree_1a4c3764c98d5804083a9ec2c867eb9366" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a4c3764c98d5804083a9ec2c867eb9366" kindref="member">Dataset</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*dataset;<sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="classmlpack_1_1tree_1_1SpillTree_1a3a882fb5101c0772a7e49762fac0ebd0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a3a882fb5101c0772a7e49762fac0ebd0" kindref="member">Overlap</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>overlappingNode;<sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="classmlpack_1_1tree_1_1SpillTree_1a8634496d0672235fadbd9a9a47b2d344" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HyperplaneType&lt;MetricType&gt;&amp;<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a8634496d0672235fadbd9a9a47b2d344" kindref="member">Hyperplane</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hyperplane;<sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="classmlpack_1_1tree_1_1SpillTree_1ab7cdd810a507e4a0aa262ea0fa8a322c" refkind="member"><highlight class="normal"><sp/><sp/>MetricType<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1ab7cdd810a507e4a0aa262ea0fa8a322c" kindref="member">Metric</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MetricType();<sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a1f7ec083be66d58a3e02e12956bf005e" kindref="member">NumChildren</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType&gt;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a19b9a5fd41d8e192b62effb1445bd410" kindref="member">GetNearestChild</ref>(</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>point,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt;<ref refid="structIsVector" kindref="compound">IsVector&lt;VecType&gt;::value</ref>&gt;*<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType&gt;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a0257281722537c7916db7763623f67f7" kindref="member">GetFurthestChild</ref>(</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>point,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt;<ref refid="structIsVector" kindref="compound">IsVector&lt;VecType&gt;::value</ref>&gt;*<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a19b9a5fd41d8e192b62effb1445bd410" kindref="member">GetNearestChild</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref>&amp;<sp/>queryNode);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a0257281722537c7916db7763623f67f7" kindref="member">GetFurthestChild</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref>&amp;<sp/>queryNode);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>ElemType<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1acbe82a6439f71405b5801ca7d941cbfb" kindref="member">FurthestPointDistance</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>ElemType<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1adc597088eadfcfa3060336d0484ab573" kindref="member">FurthestDescendantDistance</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>ElemType<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a20a4e92da6066eb335a576b7f9cd0415" kindref="member">MinimumBoundDistance</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="classmlpack_1_1tree_1_1SpillTree_1af44ed4e7bfea088689caed082da67e17" refkind="member"><highlight class="normal"><sp/><sp/>ElemType<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1af44ed4e7bfea088689caed082da67e17" kindref="member">ParentDistance</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parentDistance;<sp/>}</highlight></codeline>
<codeline lineno="347" refid="classmlpack_1_1tree_1_1SpillTree_1aa22ead21ac809efb970b90ec014dc318" refkind="member"><highlight class="normal"><sp/><sp/>ElemType&amp;<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1aa22ead21ac809efb970b90ec014dc318" kindref="member">ParentDistance</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parentDistance;<sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref>&amp;<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a2bd6ef4c06f38a780238a8dd74e590b5" kindref="member">Child</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>child)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="classmlpack_1_1tree_1_1SpillTree_1ae6b405ea3bdeaf218e90ebb324bd012b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref>*&amp;<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1ae6b405ea3bdeaf218e90ebb324bd012b" kindref="member">ChildPtr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>child)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(child<sp/>==<sp/>0)<sp/>?<sp/>left<sp/>:<sp/>right;<sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a352077c26368da0ee570c0b7f062b1e3" kindref="member">NumPoints</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a2a85eb34222f1fc073940e8c89274e81" kindref="member">NumDescendants</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1aa732ea3eeb38529c549fd4d15d8655be" kindref="member">Descendant</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a559eede5ea60f68634f8e7e72c3c68d2" kindref="member">Point</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="classmlpack_1_1tree_1_1SpillTree_1a11831de21b4ea2d02761cdd869efddee" refkind="member"><highlight class="normal"><sp/><sp/>ElemType<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a11831de21b4ea2d02761cdd869efddee" kindref="member">MinDistance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="391"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bound.MinDistance(other.<ref refid="classmlpack_1_1tree_1_1SpillTree_1ad8aa68339c34c1ac00dc24012e2904ca" kindref="member">Bound</ref>());</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="classmlpack_1_1tree_1_1SpillTree_1a750cfba0005bdde7bec9a0b38727e987" refkind="member"><highlight class="normal"><sp/><sp/>ElemType<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a750cfba0005bdde7bec9a0b38727e987" kindref="member">MaxDistance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="397"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bound.MaxDistance(other.<ref refid="classmlpack_1_1tree_1_1SpillTree_1ad8aa68339c34c1ac00dc24012e2904ca" kindref="member">Bound</ref>());</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="classmlpack_1_1tree_1_1SpillTree_1afeaa6c846c856693e5f73272b94bd8b8" refkind="member"><highlight class="normal"><sp/><sp/>math::RangeType&lt;ElemType&gt;<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1afeaa6c846c856693e5f73272b94bd8b8" kindref="member">RangeDistance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree" kindref="compound">SpillTree</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="403"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bound.RangeDistance(other.<ref refid="classmlpack_1_1tree_1_1SpillTree_1ad8aa68339c34c1ac00dc24012e2904ca" kindref="member">Bound</ref>());</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType&gt;</highlight></codeline>
<codeline lineno="409" refid="classmlpack_1_1tree_1_1SpillTree_1a73bf99a433e88a31d98b46bf4c0da147" refkind="member"><highlight class="normal"><sp/><sp/>ElemType<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a73bf99a433e88a31d98b46bf4c0da147" kindref="member">MinDistance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>point,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt;<ref refid="structIsVector" kindref="compound">IsVector&lt;VecType&gt;::value</ref>&gt;*<sp/>=<sp/>0)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="411"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/>const</highlight></codeline>
<codeline lineno="412"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bound.MinDistance(point);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType&gt;</highlight></codeline>
<codeline lineno="418" refid="classmlpack_1_1tree_1_1SpillTree_1ae764d88483236cc470f5abe0273df4c5" refkind="member"><highlight class="normal"><sp/><sp/>ElemType<sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1ae764d88483236cc470f5abe0273df4c5" kindref="member">MaxDistance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>point,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt;<ref refid="structIsVector" kindref="compound">IsVector&lt;VecType&gt;::value</ref>&gt;*<sp/>=<sp/>0)</highlight><highlight class="keyword"></highlight></codeline>
<codeline lineno="420"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/>const</highlight></codeline>
<codeline lineno="421"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bound.MaxDistance(point);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType&gt;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>math::RangeType&lt;ElemType&gt;</highlight></codeline>
<codeline lineno="428" refid="classmlpack_1_1tree_1_1SpillTree_1a60a550bf46aa1d7b858134ce41fd5a3a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a60a550bf46aa1d7b858134ce41fd5a3a" kindref="member">RangeDistance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>point,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt;<ref refid="structIsVector" kindref="compound">IsVector&lt;VecType&gt;::value</ref>&gt;*<sp/>=<sp/>0)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="430"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bound.RangeDistance(point);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="classmlpack_1_1tree_1_1SpillTree_1a550caa440c5847505a0065dfe4c67724" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a550caa440c5847505a0065dfe4c67724" kindref="member">HasSelfChildren</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="classmlpack_1_1tree_1_1SpillTree_1a16e556777ca3125ab3cdc16aed9e7885" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a16e556777ca3125ab3cdc16aed9e7885" kindref="member">Center</ref>(arma::vec&amp;<sp/>center)<sp/>{<sp/>bound.Center(center);<sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SplitNode(arma::Col&lt;size_t&gt;&amp;<sp/>points,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxLeafSize,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rho);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SplitPoints(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tau,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rho,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Col&lt;size_t&gt;&amp;<sp/>points,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Col&lt;size_t&gt;&amp;<sp/>leftPoints,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Col&lt;size_t&gt;&amp;<sp/>rightPoints);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1afa475b761ce701406b530e35bf30e5d9" kindref="member">SpillTree</ref>();</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="479" refid="classmlpack_1_1tree_1_1SpillTree_1ab2f44cbb59a08132f4c843e5225bba0e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">cereal::access;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1SpillTree_1a72d63b74c8166dff8e1a9006905ad9ca" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>version);</highlight></codeline>
<codeline lineno="487"><highlight class="normal">};</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;spill_tree_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>everything<sp/>else,<sp/>if<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../spill_tree.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/spill_tree/spill_tree.hpp"/>
  </compounddef>
</doxygen>
