<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1amf_1_1AverageInitialization" kind="class" language="C++" prot="public">
    <compoundname>mlpack::amf::AverageInitialization</compoundname>
    <includes refid="average__init_8hpp" local="no">average_init.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1amf_1_1AverageInitialization_1a202e4b31ec0c19e8d2980b08b099ba6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>AverageInitialization</definition>
        <argsstring>()</argsstring>
        <name>AverageInitialization</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/amf/init_rules/average_init.hpp" line="31" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/init_rules/average_init.hpp" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1amf_1_1AverageInitialization_1aa2ccb5a0533a6ba0abe6dfc1f98fbafb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the object (in this case, there is nothing to do). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/amf/init_rules/average_init.hpp" line="122" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/init_rules/average_init.hpp" bodystart="122" bodyend="122"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmlpack_1_1amf_1_1AverageInitialization_1a02a3610958f42b7dbef8bd5063ceaee7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MatType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void Initialize</definition>
        <argsstring>(const MatType &amp;V, const size_t r, arma::mat &amp;W, arma::mat &amp;H)</argsstring>
        <name>Initialize</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>V</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>r</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>W</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>H</declname>
        </param>
        <briefdescription>
<para>Initialize the matrices W and H to the average value of V with uniform random noise added. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>V</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>Rank of matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>W</parametername>
</parameternamelist>
<parameterdescription>
<para>W matrix, to be initialized. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>H</parametername>
</parameternamelist>
<parameterdescription>
<para>H matrix, to be initialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/amf/init_rules/average_init.hpp" line="43" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/init_rules/average_init.hpp" bodystart="43" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1amf_1_1AverageInitialization_1ac92b923632083ddeab1be9d2a33fb1af" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MatType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void InitializeOne</definition>
        <argsstring>(const MatType &amp;V, const size_t r, arma::mat &amp;M, const bool whichMatrix=true)</argsstring>
        <name>InitializeOne</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>V</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>r</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>M</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>whichMatrix</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Initialize the matrix W or H to the average value of V with uniform random noise added. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>V</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>Rank of matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>M</parametername>
</parameternamelist>
<parameterdescription>
<para>W or H matrix, to be initialized to the average value of V with uniform random noise added. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>whichMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, initialize W. Otherwise, initialize H. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/amf/init_rules/average_init.hpp" line="86" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/init_rules/average_init.hpp" bodystart="86" bodyend="118"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This initialization rule initializes matrix W and H to root of the average of V, perturbed with uniform noise. </para>    </briefdescription>
    <detaileddescription>
<para>Uniform noise is generated by Armadillo&apos;s &apos;randu&apos; function. For better performance, the lowest element of the matrix is subtracted from the average before dividing it by the factorization rank. This computed value is added with the random noise. </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/amf/init_rules/average_init.hpp" line="28" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/init_rules/average_init.hpp" bodystart="27" bodyend="123"/>
    <listofallmembers>
      <member refid="classmlpack_1_1amf_1_1AverageInitialization_1a202e4b31ec0c19e8d2980b08b099ba6a" prot="public" virt="non-virtual"><scope>mlpack::amf::AverageInitialization</scope><name>AverageInitialization</name></member>
      <member refid="classmlpack_1_1amf_1_1AverageInitialization_1a02a3610958f42b7dbef8bd5063ceaee7" prot="public" virt="non-virtual"><scope>mlpack::amf::AverageInitialization</scope><name>Initialize</name></member>
      <member refid="classmlpack_1_1amf_1_1AverageInitialization_1ac92b923632083ddeab1be9d2a33fb1af" prot="public" virt="non-virtual"><scope>mlpack::amf::AverageInitialization</scope><name>InitializeOne</name></member>
      <member refid="classmlpack_1_1amf_1_1AverageInitialization_1aa2ccb5a0533a6ba0abe6dfc1f98fbafb" prot="public" virt="non-virtual"><scope>mlpack::amf::AverageInitialization</scope><name>serialize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
