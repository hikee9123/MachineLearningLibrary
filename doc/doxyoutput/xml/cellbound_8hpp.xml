<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="cellbound_8hpp" kind="file" language="C++">
    <compoundname>cellbound.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="no">mlpack/core/math/range.hpp</includes>
    <includes refid="lmetric_8hpp" local="no">mlpack/core/metrics/lmetric.hpp</includes>
    <includes refid="bound__traits_8hpp" local="yes">bound_traits.hpp</includes>
    <includes refid="address_8hpp" local="yes">address.hpp</includes>
    <includes local="yes">cellbound_impl.hpp</includes>
    <includedby refid="bounds_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/core/tree/bounds.hpp</includedby>
    <incdepgraph>
      <node id="16254">
        <label>list</label>
      </node>
      <node id="16251">
        <label>atomic</label>
      </node>
      <node id="16241">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="16217">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="16253">
        <label>iomanip</label>
      </node>
      <node id="16264">
        <label>bound_traits.hpp</label>
        <link refid="bound__traits_8hpp"/>
      </node>
      <node id="16263">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="16226">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="16227" relation="include">
        </childnode>
        <childnode refid="16229" relation="include">
        </childnode>
      </node>
      <node id="16209">
        <label>cstdint</label>
      </node>
      <node id="16218">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="16225">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="16248">
        <label>arma_config.hpp</label>
      </node>
      <node id="16238">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="16205">
        <label>cmath</label>
      </node>
      <node id="16224">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="16213">
        <label>stdexcept</label>
      </node>
      <node id="16233">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="16218" relation="include">
        </childnode>
        <childnode refid="16220" relation="include">
        </childnode>
        <childnode refid="16221" relation="include">
        </childnode>
        <childnode refid="16219" relation="include">
        </childnode>
      </node>
      <node id="16261">
        <label>mlpack/core/math/range.hpp</label>
      </node>
      <node id="16257">
        <label>string</label>
      </node>
      <node id="16245">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="16246" relation="include">
        </childnode>
        <childnode refid="16212" relation="include">
        </childnode>
      </node>
      <node id="16255">
        <label>map</label>
      </node>
      <node id="16207">
        <label>cfloat</label>
      </node>
      <node id="16237">
        <label>boost/variant.hpp</label>
      </node>
      <node id="16259">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="16221">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="16244">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="16245" relation="include">
        </childnode>
        <childnode refid="16221" relation="include">
        </childnode>
        <childnode refid="16228" relation="include">
        </childnode>
        <childnode refid="16246" relation="include">
        </childnode>
      </node>
      <node id="16234">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="16232">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="16218" relation="include">
        </childnode>
        <childnode refid="16220" relation="include">
        </childnode>
        <childnode refid="16221" relation="include">
        </childnode>
        <childnode refid="16219" relation="include">
        </childnode>
      </node>
      <node id="16235">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="16218" relation="include">
        </childnode>
        <childnode refid="16220" relation="include">
        </childnode>
        <childnode refid="16221" relation="include">
        </childnode>
        <childnode refid="16219" relation="include">
        </childnode>
      </node>
      <node id="16223">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="16243">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="16219" relation="include">
        </childnode>
        <childnode refid="16220" relation="include">
        </childnode>
        <childnode refid="16221" relation="include">
        </childnode>
        <childnode refid="16231" relation="include">
        </childnode>
        <childnode refid="16240" relation="include">
        </childnode>
      </node>
      <node id="16247">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="16248" relation="include">
        </childnode>
      </node>
      <node id="16249">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="16204">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="16205" relation="include">
        </childnode>
        <childnode refid="16206" relation="include">
        </childnode>
        <childnode refid="16207" relation="include">
        </childnode>
        <childnode refid="16208" relation="include">
        </childnode>
        <childnode refid="16209" relation="include">
        </childnode>
        <childnode refid="16210" relation="include">
        </childnode>
        <childnode refid="16211" relation="include">
        </childnode>
        <childnode refid="16212" relation="include">
        </childnode>
        <childnode refid="16213" relation="include">
        </childnode>
        <childnode refid="16214" relation="include">
        </childnode>
        <childnode refid="16215" relation="include">
        </childnode>
        <childnode refid="16216" relation="include">
        </childnode>
        <childnode refid="16217" relation="include">
        </childnode>
        <childnode refid="16218" relation="include">
        </childnode>
        <childnode refid="16219" relation="include">
        </childnode>
        <childnode refid="16220" relation="include">
        </childnode>
        <childnode refid="16221" relation="include">
        </childnode>
        <childnode refid="16222" relation="include">
        </childnode>
        <childnode refid="16223" relation="include">
        </childnode>
        <childnode refid="16224" relation="include">
        </childnode>
        <childnode refid="16225" relation="include">
        </childnode>
        <childnode refid="16226" relation="include">
        </childnode>
        <childnode refid="16230" relation="include">
        </childnode>
        <childnode refid="16231" relation="include">
        </childnode>
        <childnode refid="16232" relation="include">
        </childnode>
        <childnode refid="16233" relation="include">
        </childnode>
        <childnode refid="16234" relation="include">
        </childnode>
        <childnode refid="16235" relation="include">
        </childnode>
        <childnode refid="16236" relation="include">
        </childnode>
        <childnode refid="16242" relation="include">
        </childnode>
        <childnode refid="16243" relation="include">
        </childnode>
        <childnode refid="16240" relation="include">
        </childnode>
        <childnode refid="16244" relation="include">
        </childnode>
        <childnode refid="16247" relation="include">
        </childnode>
        <childnode refid="16249" relation="include">
        </childnode>
        <childnode refid="16250" relation="include">
        </childnode>
        <childnode refid="16259" relation="include">
        </childnode>
        <childnode refid="16260" relation="include">
        </childnode>
      </node>
      <node id="16210">
        <label>cstdio</label>
      </node>
      <node id="16265">
        <label>address.hpp</label>
        <link refid="address_8hpp"/>
      </node>
      <node id="16214">
        <label>tuple</label>
      </node>
      <node id="16219">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="16236">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="16219" relation="include">
        </childnode>
        <childnode refid="16220" relation="include">
        </childnode>
        <childnode refid="16221" relation="include">
        </childnode>
        <childnode refid="16223" relation="include">
        </childnode>
        <childnode refid="16237" relation="include">
        </childnode>
        <childnode refid="16238" relation="include">
        </childnode>
        <childnode refid="16239" relation="include">
        </childnode>
        <childnode refid="16240" relation="include">
        </childnode>
      </node>
      <node id="16215">
        <label>utility</label>
      </node>
      <node id="16239">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="16230">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="16227">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="16228" relation="include">
        </childnode>
      </node>
      <node id="16250">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="16251" relation="include">
        </childnode>
        <childnode refid="16252" relation="include">
        </childnode>
        <childnode refid="16253" relation="include">
        </childnode>
        <childnode refid="16254" relation="include">
        </childnode>
        <childnode refid="16255" relation="include">
        </childnode>
        <childnode refid="16256" relation="include">
        </childnode>
        <childnode refid="16257" relation="include">
        </childnode>
        <childnode refid="16258" relation="include">
        </childnode>
      </node>
      <node id="16228">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="16242">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="16240" relation="include">
        </childnode>
        <childnode refid="16236" relation="include">
        </childnode>
        <childnode refid="16243" relation="include">
        </childnode>
      </node>
      <node id="16211">
        <label>cstdlib</label>
      </node>
      <node id="16206">
        <label>cctype</label>
      </node>
      <node id="16229">
        <label>unordered_map</label>
      </node>
      <node id="16208">
        <label>climits</label>
      </node>
      <node id="16256">
        <label>mutex</label>
      </node>
      <node id="16252">
        <label>chrono</label>
      </node>
      <node id="16260">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="16258">
        <label>thread</label>
      </node>
      <node id="16246">
        <label>type_traits</label>
      </node>
      <node id="16222">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="16216">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="16240">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="16218" relation="include">
        </childnode>
        <childnode refid="16219" relation="include">
        </childnode>
        <childnode refid="16220" relation="include">
        </childnode>
        <childnode refid="16221" relation="include">
        </childnode>
        <childnode refid="16241" relation="include">
        </childnode>
      </node>
      <node id="16212">
        <label>cstring</label>
      </node>
      <node id="16231">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="16266">
        <label>cellbound_impl.hpp</label>
      </node>
      <node id="16203">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/cellbound.hpp</label>
        <link refid="cellbound_8hpp"/>
        <childnode refid="16204" relation="include">
        </childnode>
        <childnode refid="16261" relation="include">
        </childnode>
        <childnode refid="16262" relation="include">
        </childnode>
        <childnode refid="16264" relation="include">
        </childnode>
        <childnode refid="16265" relation="include">
        </childnode>
        <childnode refid="16266" relation="include">
        </childnode>
      </node>
      <node id="16220">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="16262">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="16204" relation="include">
        </childnode>
        <childnode refid="16263" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="16271">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="16269" relation="include">
        </childnode>
      </node>
      <node id="16304">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/pelleg_moore_kmeans.hpp</label>
        <link refid="pelleg__moore__kmeans_8hpp"/>
      </node>
      <node id="16322">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/spill_tree/spill_dual_tree_traverser.hpp</label>
        <link refid="spill__dual__tree__traverser_8hpp"/>
        <childnode refid="16318" relation="include">
        </childnode>
      </node>
      <node id="16314">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/space_split/projection_vector.hpp</label>
        <link refid="projection__vector_8hpp"/>
        <childnode refid="16315" relation="include">
        </childnode>
      </node>
      <node id="16287">
        <label>/home/aakash/mlpack/src/mlpack/methods/lmnn/lmnn_function.hpp</label>
        <link refid="lmnn__function_8hpp"/>
        <childnode refid="16288" relation="include">
        </childnode>
      </node>
      <node id="16305">
        <label>/home/aakash/mlpack/src/mlpack/methods/range_search/range_search.hpp</label>
        <link refid="range__search_8hpp"/>
        <childnode refid="16306" relation="include">
        </childnode>
        <childnode refid="16307" relation="include">
        </childnode>
      </node>
      <node id="16317">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/spill_tree/typedef.hpp</label>
        <link refid="core_2tree_2spill__tree_2typedef_8hpp"/>
        <childnode refid="16318" relation="include">
        </childnode>
      </node>
      <node id="16289">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/typedef.hpp</label>
        <link refid="methods_2neighbor__search_2typedef_8hpp"/>
        <childnode refid="16273" relation="include">
        </childnode>
      </node>
      <node id="16315">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/space_split/hyperplane.hpp</label>
        <link refid="hyperplane_8hpp"/>
        <childnode refid="16316" relation="include">
        </childnode>
        <childnode refid="16323" relation="include">
        </childnode>
        <childnode refid="16324" relation="include">
        </childnode>
      </node>
      <node id="16277">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp</label>
        <link refid="cf__model_8hpp"/>
      </node>
      <node id="16323">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/space_split/midpoint_space_split.hpp</label>
        <link refid="midpoint__space__split_8hpp"/>
        <childnode refid="16319" relation="include">
        </childnode>
        <childnode refid="16317" relation="include">
        </childnode>
      </node>
      <node id="16279">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp</label>
        <link refid="regularized__svd__method_8hpp"/>
      </node>
      <node id="16318">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/spill_tree.hpp</label>
        <link refid="spill__tree_8hpp"/>
        <childnode refid="16319" relation="include">
        </childnode>
        <childnode refid="16290" relation="include">
        </childnode>
      </node>
      <node id="16324">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/space_split/space_split.hpp</label>
        <link refid="space__split_8hpp"/>
      </node>
      <node id="16268">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/bounds.hpp</label>
        <link refid="bounds_8hpp"/>
        <childnode refid="16269" relation="include">
        </childnode>
        <childnode refid="16313" relation="include">
        </childnode>
        <childnode refid="16314" relation="include">
        </childnode>
        <childnode refid="16318" relation="include">
        </childnode>
      </node>
      <node id="16272">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="16269" relation="include">
        </childnode>
      </node>
      <node id="16276">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/bias_svd_method.hpp</label>
        <link refid="bias__svd__method_8hpp"/>
      </node>
      <node id="16274">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf.hpp</label>
        <link refid="cf_8hpp"/>
        <childnode refid="16275" relation="include">
        </childnode>
        <childnode refid="16277" relation="include">
        </childnode>
        <childnode refid="16278" relation="include">
        </childnode>
        <childnode refid="16280" relation="include">
        </childnode>
      </node>
      <node id="16282">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/cosine_search.hpp</label>
        <link refid="cosine__search_8hpp"/>
      </node>
      <node id="16311">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_typedef.hpp</label>
        <link refid="ra__typedef_8hpp"/>
        <childnode refid="16310" relation="include">
        </childnode>
      </node>
      <node id="16306">
        <label>/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp</label>
        <link refid="dbscan_8hpp"/>
      </node>
      <node id="16300">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/gmm.hpp</label>
        <link refid="gmm_8hpp"/>
        <childnode refid="16299" relation="include">
        </childnode>
      </node>
      <node id="16308">
        <label>/home/aakash/mlpack/src/mlpack/tests/main_tests/range_search_utils.hpp</label>
        <link refid="range__search__utils_8hpp"/>
      </node>
      <node id="16285">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/dual_tree_kmeans.hpp</label>
        <link refid="dual__tree__kmeans_8hpp"/>
      </node>
      <node id="16321">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/spill_tree/spill_single_tree_traverser.hpp</label>
        <link refid="spill__single__tree__traverser_8hpp"/>
        <childnode refid="16318" relation="include">
        </childnode>
      </node>
      <node id="16280">
        <label>/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp</label>
        <link refid="svdplusplus_8hpp"/>
        <childnode refid="16281" relation="include">
        </childnode>
      </node>
      <node id="16298">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp</label>
        <link refid="diagonal__gmm_8hpp"/>
        <childnode refid="16299" relation="include">
        </childnode>
      </node>
      <node id="16290">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp</label>
        <link refid="ns__model_8hpp"/>
      </node>
      <node id="16310">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_search.hpp</label>
        <link refid="ra__search_8hpp"/>
        <childnode refid="16309" relation="include">
        </childnode>
        <childnode refid="16311" relation="include">
        </childnode>
      </node>
      <node id="16303">
        <label>/home/aakash/mlpack/src/mlpack/methods/nystroem_method/nystroem_method.hpp</label>
        <link refid="nystroem__method_2nystroem__method_8hpp"/>
        <childnode refid="16302" relation="include">
        </childnode>
      </node>
      <node id="16319">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/spill_tree/spill_tree.hpp</label>
        <link refid="spill__tree_2spill__tree_8hpp"/>
        <childnode refid="16320" relation="include">
        </childnode>
        <childnode refid="16318" relation="include">
        </childnode>
        <childnode refid="16321" relation="include">
        </childnode>
        <childnode refid="16322" relation="include">
        </childnode>
      </node>
      <node id="16286">
        <label>/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp</label>
        <link refid="constraints_8hpp"/>
        <childnode refid="16287" relation="include">
        </childnode>
      </node>
      <node id="16283">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/lmetric_search.hpp</label>
        <link refid="lmetric__search_8hpp"/>
        <childnode refid="16274" relation="include">
        </childnode>
      </node>
      <node id="16288">
        <label>/home/aakash/mlpack/src/mlpack/methods/lmnn/lmnn.hpp</label>
        <link refid="lmnn_8hpp"/>
      </node>
      <node id="16275">
        <label>/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp</label>
        <link refid="bias__svd_8hpp"/>
        <childnode refid="16276" relation="include">
        </childnode>
      </node>
      <node id="16270">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="16269" relation="include">
        </childnode>
        <childnode refid="16271" relation="include">
        </childnode>
        <childnode refid="16272" relation="include">
        </childnode>
        <childnode refid="16273" relation="include">
        </childnode>
      </node>
      <node id="16309">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp</label>
        <link refid="ra__model_8hpp"/>
      </node>
      <node id="16297">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/em_fit.hpp</label>
        <link refid="em__fit_8hpp"/>
        <childnode refid="16298" relation="include">
        </childnode>
        <childnode refid="16300" relation="include">
        </childnode>
      </node>
      <node id="16295">
        <label>/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp</label>
        <link refid="kde__model_8hpp"/>
      </node>
      <node id="16269">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="16270" relation="include">
        </childnode>
        <childnode refid="16291" relation="include">
        </childnode>
        <childnode refid="16292" relation="include">
        </childnode>
        <childnode refid="16293" relation="include">
        </childnode>
        <childnode refid="16294" relation="include">
        </childnode>
        <childnode refid="16295" relation="include">
        </childnode>
        <childnode refid="16285" relation="include">
        </childnode>
        <childnode refid="16296" relation="include">
        </childnode>
        <childnode refid="16304" relation="include">
        </childnode>
        <childnode refid="16273" relation="include">
        </childnode>
        <childnode refid="16290" relation="include">
        </childnode>
        <childnode refid="16305" relation="include">
        </childnode>
        <childnode refid="16307" relation="include">
        </childnode>
        <childnode refid="16309" relation="include">
        </childnode>
        <childnode refid="16310" relation="include">
        </childnode>
        <childnode refid="16312" relation="include">
        </childnode>
      </node>
      <node id="16281">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svdplusplus_method.hpp</label>
        <link refid="svdplusplus__method_8hpp"/>
      </node>
      <node id="16278">
        <label>/home/aakash/mlpack/src/mlpack/methods/regularized_svd/regularized_svd.hpp</label>
        <link refid="regularized__svd_8hpp"/>
        <childnode refid="16279" relation="include">
        </childnode>
      </node>
      <node id="16312">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_query_stat.hpp</label>
        <link refid="ra__query__stat_8hpp"/>
        <childnode refid="16310" relation="include">
        </childnode>
      </node>
      <node id="16320">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/spill_tree/is_spill_tree.hpp</label>
        <link refid="is__spill__tree_8hpp"/>
        <childnode refid="16318" relation="include">
        </childnode>
      </node>
      <node id="16273">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search.hpp</label>
        <link refid="neighbor__search_8hpp"/>
        <childnode refid="16274" relation="include">
        </childnode>
        <childnode refid="16282" relation="include">
        </childnode>
        <childnode refid="16283" relation="include">
        </childnode>
        <childnode refid="16284" relation="include">
        </childnode>
        <childnode refid="16285" relation="include">
        </childnode>
        <childnode refid="16286" relation="include">
        </childnode>
        <childnode refid="16289" relation="include">
        </childnode>
        <childnode refid="16290" relation="include">
        </childnode>
      </node>
      <node id="16307">
        <label>/home/aakash/mlpack/src/mlpack/methods/range_search/rs_model.hpp</label>
        <link refid="rs__model_8hpp"/>
        <childnode refid="16308" relation="include">
        </childnode>
      </node>
      <node id="16294">
        <label>/home/aakash/mlpack/src/mlpack/methods/kde/kde.hpp</label>
        <link refid="kde_8hpp"/>
        <childnode refid="16295" relation="include">
        </childnode>
      </node>
      <node id="16284">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/pearson_search.hpp</label>
        <link refid="pearson__search_8hpp"/>
      </node>
      <node id="16296">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/kmeans.hpp</label>
        <link refid="kmeans_8hpp"/>
        <childnode refid="16297" relation="include">
        </childnode>
        <childnode refid="16301" relation="include">
        </childnode>
      </node>
      <node id="16313">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/octree.hpp</label>
        <link refid="octree_8hpp"/>
        <childnode refid="16295" relation="include">
        </childnode>
        <childnode refid="16290" relation="include">
        </childnode>
        <childnode refid="16307" relation="include">
        </childnode>
        <childnode refid="16309" relation="include">
        </childnode>
      </node>
      <node id="16293">
        <label>/home/aakash/mlpack/src/mlpack/methods/emst/dtb.hpp</label>
        <link refid="dtb_8hpp"/>
      </node>
      <node id="16301">
        <label>/home/aakash/mlpack/src/mlpack/methods/nystroem_method/kmeans_selection.hpp</label>
        <link refid="kmeans__selection_8hpp"/>
        <childnode refid="16302" relation="include">
        </childnode>
        <childnode refid="16303" relation="include">
        </childnode>
      </node>
      <node id="16299">
        <label>/home/aakash/mlpack/src/mlpack/methods/hmm/hmm_model.hpp</label>
        <link refid="hmm__model_8hpp"/>
      </node>
      <node id="16302">
        <label>/home/aakash/mlpack/src/mlpack/methods/kernel_pca/kernel_rules/nystroem_method.hpp</label>
        <link refid="kernel__pca_2kernel__rules_2nystroem__method_8hpp"/>
      </node>
      <node id="16291">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="16269" relation="include">
        </childnode>
      </node>
      <node id="16292">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="16269" relation="include">
        </childnode>
      </node>
      <node id="16316">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/space_split/mean_space_split.hpp</label>
        <link refid="mean__space__split_8hpp"/>
        <childnode refid="16317" relation="include">
        </childnode>
      </node>
      <node id="16267">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/cellbound.hpp</label>
        <link refid="cellbound_8hpp"/>
        <childnode refid="16268" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structmlpack_1_1bound_1_1BoundTraits_3_01CellBound_3_01MetricType_00_01ElemType_01_4_01_4" prot="public">mlpack::bound::BoundTraits&lt; CellBound&lt; MetricType, ElemType &gt; &gt;</innerclass>
    <innerclass refid="classmlpack_1_1bound_1_1CellBound" prot="public">mlpack::bound::CellBound</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1bound">mlpack::bound</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Mikhail Lozhnikov</para></simplesect>
Definition of the CellBound class. The class describes a bound that consists of a number of hyperrectangles. These hyperrectangles do not overlap each other. The bound is limited by an outer hyperrectangle and two addresses, the lower address and the high address. Thus, the bound contains all points included between the lower and the high addresses.</para><para>The notion of addresses is described in the following paper. <programlisting><codeline><highlight class="normal">@inproceedings{bayer1997,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>author<sp/>=<sp/>{Bayer,<sp/>Rudolf},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>title<sp/>=<sp/>{The<sp/>Universal<sp/>B-Tree<sp/>for<sp/>Multidimensional<sp/>Indexing:<sp/>General</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Concepts},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>booktitle<sp/>=<sp/>{Proceedings<sp/>of<sp/>the<sp/>International<sp/>Conference<sp/>on<sp/>Worldwide</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Computing<sp/>and<sp/>Its<sp/>Applications},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>series<sp/>=<sp/>{WWCA<sp/>&apos;97},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>year<sp/>=<sp/>{1997},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>isbn<sp/>=<sp/>{3-540-63343-X},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>pages<sp/>=<sp/>{198--209},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>numpages<sp/>=<sp/>{12},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>publisher<sp/>=<sp/>{Springer-Verlag},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>address<sp/>=<sp/>{London,<sp/>UK,<sp/>UK},</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="34"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_TREE_CELLBOUND_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_TREE_CELLBOUND_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mlpack/core/math/range.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="lmetric_8hpp" kindref="compound">mlpack/core/metrics/lmetric.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bound__traits_8hpp" kindref="compound">bound_traits.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="address_8hpp" kindref="compound">address.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">bound<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MetricType<sp/>=<sp/>metric::LMetric&lt;2,<sp/>true&gt;,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ElemType<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="75" refid="classmlpack_1_1bound_1_1CellBound" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1bound_1_1CellBound" kindref="compound">CellBound</ref></highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::conditional&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ElemType)<sp/>*<sp/>CHAR_BIT<sp/>&lt;=<sp/>32,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t&gt;::type<sp/>AddressElemType;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1bound_1_1CellBound" kindref="compound">CellBound</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>CellBound(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimension);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>CellBound(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellBound&amp;<sp/>other);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>CellBound&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellBound&amp;<sp/>other);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>CellBound(CellBound&amp;&amp;<sp/>other);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>~CellBound();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clear();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Dim()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dim;<sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>math::RangeType&lt;ElemType&gt;&amp;<sp/>operator[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bounds[i];<sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>math::RangeType&lt;ElemType&gt;&amp;<sp/>operator[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="122"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bounds[i];<sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>arma::Col&lt;AddressElemType&gt;&amp;<sp/>LoAddress()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loAddress;<sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Col&lt;AddressElemType&gt;&amp;<sp/>LoAddress()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loAddress;<sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>arma::Col&lt;AddressElemType&gt;&amp;<sp/>HiAddress()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hiAddress;<sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Col&lt;AddressElemType&gt;&amp;<sp/>HiAddress()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hiAddress;<sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;ElemType&gt;&amp;<sp/>LoBound()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loBound;<sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;ElemType&gt;&amp;<sp/>HiBound()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hiBound;<sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>NumBounds()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numBounds;<sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>ElemType<sp/>MinWidth()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>minWidth;<sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>ElemType&amp;<sp/>MinWidth()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>minWidth;<sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MetricType&amp;<sp/>Metric()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>metric;<sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>MetricType&amp;<sp/>Metric()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>metric;<sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1math_1af20ca29adeac02601e8f4386bda3588e" kindref="member">Center</ref>(arma::Col&lt;ElemType&gt;&amp;<sp/>center)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType&gt;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>ElemType<sp/>MinDistance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>point,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt;<ref refid="structIsVector" kindref="compound">IsVector&lt;VecType&gt;::value</ref>&gt;*<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>ElemType<sp/>MinDistance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellBound&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType&gt;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>ElemType<sp/>MaxDistance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>point,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt;<ref refid="structIsVector" kindref="compound">IsVector&lt;VecType&gt;::value</ref>&gt;*<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>ElemType<sp/>MaxDistance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellBound&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>math::RangeType&lt;ElemType&gt;<sp/>RangeDistance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellBound&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType&gt;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>math::RangeType&lt;ElemType&gt;<sp/>RangeDistance(</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>point,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt;<ref refid="structIsVector" kindref="compound">IsVector&lt;VecType&gt;::value</ref>&gt;*<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>CellBound&amp;<sp/>operator|=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>CellBound&amp;<sp/>operator|=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CellBound&amp;<sp/>other);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType&gt;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1bound_1_1addr_1a64110a8c86f23288f4fef77ff8ac63a4" kindref="member">Contains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>point)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UpdateAddressBounds(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>ElemType<sp/>Diameter()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>version);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>order<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(AddressElemType)<sp/>*<sp/>CHAR_BIT;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxNumBounds<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dim;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>math::RangeType&lt;ElemType&gt;*<sp/>bounds;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>arma::Mat&lt;ElemType&gt;<sp/>loBound;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>arma::Mat&lt;ElemType&gt;<sp/>hiBound;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numBounds;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>arma::Col&lt;AddressElemType&gt;<sp/>loAddress;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>arma::Col&lt;AddressElemType&gt;<sp/>hiAddress;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>ElemType<sp/>minWidth;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>MetricType<sp/>metric;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddBound(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Col&lt;ElemType&gt;&amp;<sp/>loCorner,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Col&lt;ElemType&gt;&amp;<sp/>hiCorner,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InitHighBound(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numEqualBits,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InitLowerBound(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numEqualBits,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data);</highlight></codeline>
<codeline lineno="313"><highlight class="normal">};</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>specialization<sp/>of<sp/>BoundTraits<sp/>for<sp/>this<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MetricType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ElemType&gt;</highlight></codeline>
<codeline lineno="317" refid="structmlpack_1_1bound_1_1BoundTraits_3_01CellBound_3_01MetricType_00_01ElemType_01_4_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmlpack_1_1bound_1_1BoundTraits" kindref="compound">BoundTraits</ref>&lt;<ref refid="classmlpack_1_1bound_1_1CellBound" kindref="compound">CellBound</ref>&lt;MetricType,<sp/>ElemType&gt;&gt;</highlight></codeline>
<codeline lineno="318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="320" refid="structmlpack_1_1bound_1_1BoundTraits_3_01CellBound_3_01MetricType_00_01ElemType_01_4_01_4_1af41e456bf5ea6c0557730318fe660d2d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasTightBounds<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal">};</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cellbound_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>MLPACK_CORE_TREE_CELLBOUND_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/cellbound.hpp"/>
  </compounddef>
</doxygen>
