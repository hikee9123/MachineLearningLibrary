<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="binarize_8hpp" kind="file" language="C++">
    <compoundname>binarize.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <incdepgraph>
      <node id="6448">
        <label>list</label>
      </node>
      <node id="6445">
        <label>atomic</label>
      </node>
      <node id="6435">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="6411">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="6447">
        <label>iomanip</label>
      </node>
      <node id="6420">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="6421" relation="include">
        </childnode>
        <childnode refid="6423" relation="include">
        </childnode>
      </node>
      <node id="6403">
        <label>cstdint</label>
      </node>
      <node id="6412">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="6419">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="6442">
        <label>arma_config.hpp</label>
      </node>
      <node id="6432">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="6399">
        <label>cmath</label>
      </node>
      <node id="6418">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="6407">
        <label>stdexcept</label>
      </node>
      <node id="6427">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="6412" relation="include">
        </childnode>
        <childnode refid="6414" relation="include">
        </childnode>
        <childnode refid="6415" relation="include">
        </childnode>
        <childnode refid="6413" relation="include">
        </childnode>
      </node>
      <node id="6451">
        <label>string</label>
      </node>
      <node id="6439">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="6440" relation="include">
        </childnode>
        <childnode refid="6406" relation="include">
        </childnode>
      </node>
      <node id="6449">
        <label>map</label>
      </node>
      <node id="6401">
        <label>cfloat</label>
      </node>
      <node id="6431">
        <label>boost/variant.hpp</label>
      </node>
      <node id="6453">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="6415">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="6438">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="6439" relation="include">
        </childnode>
        <childnode refid="6415" relation="include">
        </childnode>
        <childnode refid="6422" relation="include">
        </childnode>
        <childnode refid="6440" relation="include">
        </childnode>
      </node>
      <node id="6428">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="6426">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="6412" relation="include">
        </childnode>
        <childnode refid="6414" relation="include">
        </childnode>
        <childnode refid="6415" relation="include">
        </childnode>
        <childnode refid="6413" relation="include">
        </childnode>
      </node>
      <node id="6429">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="6412" relation="include">
        </childnode>
        <childnode refid="6414" relation="include">
        </childnode>
        <childnode refid="6415" relation="include">
        </childnode>
        <childnode refid="6413" relation="include">
        </childnode>
      </node>
      <node id="6417">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="6437">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="6413" relation="include">
        </childnode>
        <childnode refid="6414" relation="include">
        </childnode>
        <childnode refid="6415" relation="include">
        </childnode>
        <childnode refid="6425" relation="include">
        </childnode>
        <childnode refid="6434" relation="include">
        </childnode>
      </node>
      <node id="6441">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="6442" relation="include">
        </childnode>
      </node>
      <node id="6443">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="6398">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="6399" relation="include">
        </childnode>
        <childnode refid="6400" relation="include">
        </childnode>
        <childnode refid="6401" relation="include">
        </childnode>
        <childnode refid="6402" relation="include">
        </childnode>
        <childnode refid="6403" relation="include">
        </childnode>
        <childnode refid="6404" relation="include">
        </childnode>
        <childnode refid="6405" relation="include">
        </childnode>
        <childnode refid="6406" relation="include">
        </childnode>
        <childnode refid="6407" relation="include">
        </childnode>
        <childnode refid="6408" relation="include">
        </childnode>
        <childnode refid="6409" relation="include">
        </childnode>
        <childnode refid="6410" relation="include">
        </childnode>
        <childnode refid="6411" relation="include">
        </childnode>
        <childnode refid="6412" relation="include">
        </childnode>
        <childnode refid="6413" relation="include">
        </childnode>
        <childnode refid="6414" relation="include">
        </childnode>
        <childnode refid="6415" relation="include">
        </childnode>
        <childnode refid="6416" relation="include">
        </childnode>
        <childnode refid="6417" relation="include">
        </childnode>
        <childnode refid="6418" relation="include">
        </childnode>
        <childnode refid="6419" relation="include">
        </childnode>
        <childnode refid="6420" relation="include">
        </childnode>
        <childnode refid="6424" relation="include">
        </childnode>
        <childnode refid="6425" relation="include">
        </childnode>
        <childnode refid="6426" relation="include">
        </childnode>
        <childnode refid="6427" relation="include">
        </childnode>
        <childnode refid="6428" relation="include">
        </childnode>
        <childnode refid="6429" relation="include">
        </childnode>
        <childnode refid="6430" relation="include">
        </childnode>
        <childnode refid="6436" relation="include">
        </childnode>
        <childnode refid="6437" relation="include">
        </childnode>
        <childnode refid="6434" relation="include">
        </childnode>
        <childnode refid="6438" relation="include">
        </childnode>
        <childnode refid="6441" relation="include">
        </childnode>
        <childnode refid="6443" relation="include">
        </childnode>
        <childnode refid="6444" relation="include">
        </childnode>
        <childnode refid="6453" relation="include">
        </childnode>
        <childnode refid="6454" relation="include">
        </childnode>
      </node>
      <node id="6404">
        <label>cstdio</label>
      </node>
      <node id="6408">
        <label>tuple</label>
      </node>
      <node id="6413">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="6430">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="6413" relation="include">
        </childnode>
        <childnode refid="6414" relation="include">
        </childnode>
        <childnode refid="6415" relation="include">
        </childnode>
        <childnode refid="6417" relation="include">
        </childnode>
        <childnode refid="6431" relation="include">
        </childnode>
        <childnode refid="6432" relation="include">
        </childnode>
        <childnode refid="6433" relation="include">
        </childnode>
        <childnode refid="6434" relation="include">
        </childnode>
      </node>
      <node id="6409">
        <label>utility</label>
      </node>
      <node id="6433">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="6424">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="6397">
        <label>/home/aakash/mlpack/src/mlpack/core/data/binarize.hpp</label>
        <link refid="binarize_8hpp"/>
        <childnode refid="6398" relation="include">
        </childnode>
      </node>
      <node id="6421">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="6422" relation="include">
        </childnode>
      </node>
      <node id="6444">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="6445" relation="include">
        </childnode>
        <childnode refid="6446" relation="include">
        </childnode>
        <childnode refid="6447" relation="include">
        </childnode>
        <childnode refid="6448" relation="include">
        </childnode>
        <childnode refid="6449" relation="include">
        </childnode>
        <childnode refid="6450" relation="include">
        </childnode>
        <childnode refid="6451" relation="include">
        </childnode>
        <childnode refid="6452" relation="include">
        </childnode>
      </node>
      <node id="6422">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="6436">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="6434" relation="include">
        </childnode>
        <childnode refid="6430" relation="include">
        </childnode>
        <childnode refid="6437" relation="include">
        </childnode>
      </node>
      <node id="6405">
        <label>cstdlib</label>
      </node>
      <node id="6400">
        <label>cctype</label>
      </node>
      <node id="6423">
        <label>unordered_map</label>
      </node>
      <node id="6402">
        <label>climits</label>
      </node>
      <node id="6450">
        <label>mutex</label>
      </node>
      <node id="6446">
        <label>chrono</label>
      </node>
      <node id="6454">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="6452">
        <label>thread</label>
      </node>
      <node id="6440">
        <label>type_traits</label>
      </node>
      <node id="6416">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="6410">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="6434">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="6412" relation="include">
        </childnode>
        <childnode refid="6413" relation="include">
        </childnode>
        <childnode refid="6414" relation="include">
        </childnode>
        <childnode refid="6415" relation="include">
        </childnode>
        <childnode refid="6435" relation="include">
        </childnode>
      </node>
      <node id="6406">
        <label>cstring</label>
      </node>
      <node id="6425">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="6414">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1data">mlpack::data</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Keon Kim</para></simplesect>
Defines <ref refid="namespacemlpack_1_1data_1a39606420520e81f5e87d6ea1e64c27ae" kindref="member">Binarize()</ref>, a utility function, sets values to 0 or 1 to a given threshold.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_DATA_BINARIZE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_DATA_BINARIZE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="19" refid="namespacemlpack_1_1data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">data<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="41" refid="namespacemlpack_1_1data_1a28da72e55467d0872681827b30b490ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1data_1a28da72e55467d0872681827b30b490ac" kindref="member">Binarize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;T&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;T&gt;&amp;<sp/>output,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>output.copy_size(input);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>*inPtr<sp/>=<sp/>input.memptr();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>T<sp/>*outPtr<sp/>=<sp/>output.memptr();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="prereqs_8hpp_1aabfb1575af92c0bf8bcaafdf1bfffb87" kindref="member">omp_size_t</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(<ref refid="prereqs_8hpp_1aabfb1575af92c0bf8bcaafdf1bfffb87" kindref="member">omp_size_t</ref>)<sp/>input.n_elem;<sp/>++i)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>outPtr[i]<sp/>=<sp/>inPtr[i]<sp/>&gt;<sp/>threshold;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="77" refid="namespacemlpack_1_1data_1a39606420520e81f5e87d6ea1e64c27ae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1data_1a28da72e55467d0872681827b30b490ac" kindref="member">Binarize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;T&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;T&gt;&amp;<sp/>output,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimension)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>output<sp/>=<sp/>input;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="prereqs_8hpp_1aabfb1575af92c0bf8bcaafdf1bfffb87" kindref="member">omp_size_t</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(<ref refid="prereqs_8hpp_1aabfb1575af92c0bf8bcaafdf1bfffb87" kindref="member">omp_size_t</ref>)<sp/>input.n_cols;<sp/>++i)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>output(dimension,<sp/>i)<sp/>=<sp/>input(dimension,<sp/>i)<sp/>&gt;<sp/>threshold;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/data/binarize.hpp"/>
  </compounddef>
</doxygen>
