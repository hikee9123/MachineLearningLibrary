<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="simple__tolerance__termination_8hpp" kind="file" language="C++">
    <compoundname>simple_tolerance_termination.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includedby refid="amf_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/amf/amf.hpp</includedby>
    <incdepgraph>
      <node id="23967">
        <label>list</label>
      </node>
      <node id="23964">
        <label>atomic</label>
      </node>
      <node id="23954">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="23930">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="23966">
        <label>iomanip</label>
      </node>
      <node id="23939">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="23940" relation="include">
        </childnode>
        <childnode refid="23942" relation="include">
        </childnode>
      </node>
      <node id="23922">
        <label>cstdint</label>
      </node>
      <node id="23931">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="23938">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="23961">
        <label>arma_config.hpp</label>
      </node>
      <node id="23951">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="23918">
        <label>cmath</label>
      </node>
      <node id="23937">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="23926">
        <label>stdexcept</label>
      </node>
      <node id="23946">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="23931" relation="include">
        </childnode>
        <childnode refid="23933" relation="include">
        </childnode>
        <childnode refid="23934" relation="include">
        </childnode>
        <childnode refid="23932" relation="include">
        </childnode>
      </node>
      <node id="23970">
        <label>string</label>
      </node>
      <node id="23958">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="23959" relation="include">
        </childnode>
        <childnode refid="23925" relation="include">
        </childnode>
      </node>
      <node id="23968">
        <label>map</label>
      </node>
      <node id="23920">
        <label>cfloat</label>
      </node>
      <node id="23950">
        <label>boost/variant.hpp</label>
      </node>
      <node id="23972">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="23934">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="23957">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="23958" relation="include">
        </childnode>
        <childnode refid="23934" relation="include">
        </childnode>
        <childnode refid="23941" relation="include">
        </childnode>
        <childnode refid="23959" relation="include">
        </childnode>
      </node>
      <node id="23947">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="23945">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="23931" relation="include">
        </childnode>
        <childnode refid="23933" relation="include">
        </childnode>
        <childnode refid="23934" relation="include">
        </childnode>
        <childnode refid="23932" relation="include">
        </childnode>
      </node>
      <node id="23948">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="23931" relation="include">
        </childnode>
        <childnode refid="23933" relation="include">
        </childnode>
        <childnode refid="23934" relation="include">
        </childnode>
        <childnode refid="23932" relation="include">
        </childnode>
      </node>
      <node id="23936">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="23956">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="23932" relation="include">
        </childnode>
        <childnode refid="23933" relation="include">
        </childnode>
        <childnode refid="23934" relation="include">
        </childnode>
        <childnode refid="23944" relation="include">
        </childnode>
        <childnode refid="23953" relation="include">
        </childnode>
      </node>
      <node id="23960">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="23961" relation="include">
        </childnode>
      </node>
      <node id="23962">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="23917">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="23918" relation="include">
        </childnode>
        <childnode refid="23919" relation="include">
        </childnode>
        <childnode refid="23920" relation="include">
        </childnode>
        <childnode refid="23921" relation="include">
        </childnode>
        <childnode refid="23922" relation="include">
        </childnode>
        <childnode refid="23923" relation="include">
        </childnode>
        <childnode refid="23924" relation="include">
        </childnode>
        <childnode refid="23925" relation="include">
        </childnode>
        <childnode refid="23926" relation="include">
        </childnode>
        <childnode refid="23927" relation="include">
        </childnode>
        <childnode refid="23928" relation="include">
        </childnode>
        <childnode refid="23929" relation="include">
        </childnode>
        <childnode refid="23930" relation="include">
        </childnode>
        <childnode refid="23931" relation="include">
        </childnode>
        <childnode refid="23932" relation="include">
        </childnode>
        <childnode refid="23933" relation="include">
        </childnode>
        <childnode refid="23934" relation="include">
        </childnode>
        <childnode refid="23935" relation="include">
        </childnode>
        <childnode refid="23936" relation="include">
        </childnode>
        <childnode refid="23937" relation="include">
        </childnode>
        <childnode refid="23938" relation="include">
        </childnode>
        <childnode refid="23939" relation="include">
        </childnode>
        <childnode refid="23943" relation="include">
        </childnode>
        <childnode refid="23944" relation="include">
        </childnode>
        <childnode refid="23945" relation="include">
        </childnode>
        <childnode refid="23946" relation="include">
        </childnode>
        <childnode refid="23947" relation="include">
        </childnode>
        <childnode refid="23948" relation="include">
        </childnode>
        <childnode refid="23949" relation="include">
        </childnode>
        <childnode refid="23955" relation="include">
        </childnode>
        <childnode refid="23956" relation="include">
        </childnode>
        <childnode refid="23953" relation="include">
        </childnode>
        <childnode refid="23957" relation="include">
        </childnode>
        <childnode refid="23960" relation="include">
        </childnode>
        <childnode refid="23962" relation="include">
        </childnode>
        <childnode refid="23963" relation="include">
        </childnode>
        <childnode refid="23972" relation="include">
        </childnode>
        <childnode refid="23973" relation="include">
        </childnode>
      </node>
      <node id="23923">
        <label>cstdio</label>
      </node>
      <node id="23927">
        <label>tuple</label>
      </node>
      <node id="23932">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="23949">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="23932" relation="include">
        </childnode>
        <childnode refid="23933" relation="include">
        </childnode>
        <childnode refid="23934" relation="include">
        </childnode>
        <childnode refid="23936" relation="include">
        </childnode>
        <childnode refid="23950" relation="include">
        </childnode>
        <childnode refid="23951" relation="include">
        </childnode>
        <childnode refid="23952" relation="include">
        </childnode>
        <childnode refid="23953" relation="include">
        </childnode>
      </node>
      <node id="23916">
        <label>/home/aakash/mlpack/src/mlpack/methods/amf/termination_policies/simple_tolerance_termination.hpp</label>
        <link refid="simple__tolerance__termination_8hpp"/>
        <childnode refid="23917" relation="include">
        </childnode>
      </node>
      <node id="23928">
        <label>utility</label>
      </node>
      <node id="23952">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="23943">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="23940">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="23941" relation="include">
        </childnode>
      </node>
      <node id="23963">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="23964" relation="include">
        </childnode>
        <childnode refid="23965" relation="include">
        </childnode>
        <childnode refid="23966" relation="include">
        </childnode>
        <childnode refid="23967" relation="include">
        </childnode>
        <childnode refid="23968" relation="include">
        </childnode>
        <childnode refid="23969" relation="include">
        </childnode>
        <childnode refid="23970" relation="include">
        </childnode>
        <childnode refid="23971" relation="include">
        </childnode>
      </node>
      <node id="23941">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="23955">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="23953" relation="include">
        </childnode>
        <childnode refid="23949" relation="include">
        </childnode>
        <childnode refid="23956" relation="include">
        </childnode>
      </node>
      <node id="23924">
        <label>cstdlib</label>
      </node>
      <node id="23919">
        <label>cctype</label>
      </node>
      <node id="23942">
        <label>unordered_map</label>
      </node>
      <node id="23921">
        <label>climits</label>
      </node>
      <node id="23969">
        <label>mutex</label>
      </node>
      <node id="23965">
        <label>chrono</label>
      </node>
      <node id="23973">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="23971">
        <label>thread</label>
      </node>
      <node id="23959">
        <label>type_traits</label>
      </node>
      <node id="23935">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="23929">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="23953">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="23931" relation="include">
        </childnode>
        <childnode refid="23932" relation="include">
        </childnode>
        <childnode refid="23933" relation="include">
        </childnode>
        <childnode refid="23934" relation="include">
        </childnode>
        <childnode refid="23954" relation="include">
        </childnode>
      </node>
      <node id="23925">
        <label>cstring</label>
      </node>
      <node id="23944">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="23933">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="23975">
        <label>/home/aakash/mlpack/src/mlpack/methods/amf/amf.hpp</label>
        <link refid="amf_8hpp"/>
        <childnode refid="23976" relation="include">
        </childnode>
        <childnode refid="23984" relation="include">
        </childnode>
        <childnode refid="23985" relation="include">
        </childnode>
        <childnode refid="23986" relation="include">
        </childnode>
        <childnode refid="23987" relation="include">
        </childnode>
      </node>
      <node id="23979">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp</label>
        <link refid="cf__model_8hpp"/>
      </node>
      <node id="23981">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp</label>
        <link refid="regularized__svd__method_8hpp"/>
      </node>
      <node id="23978">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/bias_svd_method.hpp</label>
        <link refid="bias__svd__method_8hpp"/>
      </node>
      <node id="23976">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf.hpp</label>
        <link refid="cf_8hpp"/>
        <childnode refid="23977" relation="include">
        </childnode>
        <childnode refid="23979" relation="include">
        </childnode>
        <childnode refid="23980" relation="include">
        </childnode>
        <childnode refid="23982" relation="include">
        </childnode>
      </node>
      <node id="23982">
        <label>/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp</label>
        <link refid="svdplusplus_8hpp"/>
        <childnode refid="23983" relation="include">
        </childnode>
      </node>
      <node id="23987">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svd_incomplete_method.hpp</label>
        <link refid="svd__incomplete__method_8hpp"/>
      </node>
      <node id="23984">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/batch_svd_method.hpp</label>
        <link refid="batch__svd__method_8hpp"/>
      </node>
      <node id="23977">
        <label>/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp</label>
        <link refid="bias__svd_8hpp"/>
        <childnode refid="23978" relation="include">
        </childnode>
      </node>
      <node id="23974">
        <label>/home/aakash/mlpack/src/mlpack/methods/amf/termination_policies/simple_tolerance_termination.hpp</label>
        <link refid="simple__tolerance__termination_8hpp"/>
        <childnode refid="23975" relation="include">
        </childnode>
      </node>
      <node id="23983">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svdplusplus_method.hpp</label>
        <link refid="svdplusplus__method_8hpp"/>
      </node>
      <node id="23980">
        <label>/home/aakash/mlpack/src/mlpack/methods/regularized_svd/regularized_svd.hpp</label>
        <link refid="regularized__svd_8hpp"/>
        <childnode refid="23981" relation="include">
        </childnode>
      </node>
      <node id="23986">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svd_complete_method.hpp</label>
        <link refid="svd__complete__method_8hpp"/>
      </node>
      <node id="23985">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/nmf_method.hpp</label>
        <link refid="nmf__method_8hpp"/>
        <childnode refid="23976" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1amf_1_1SimpleToleranceTermination" prot="public">mlpack::amf::SimpleToleranceTermination</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1amf">mlpack::amf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Sumedh Ghaisas</para></simplesect>
Termination policy used in AMF (Alternating Matrix Factorization).</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>_MLPACK_METHODS_AMF_SIMPLE_TOLERANCE_TERMINATION_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_MLPACK_METHODS_AMF_SIMPLE_TOLERANCE_TERMINATION_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">amf<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="31" refid="classmlpack_1_1amf_1_1SimpleToleranceTermination" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1amf_1_1SimpleToleranceTermination" kindref="compound">SimpleToleranceTermination</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35" refid="classmlpack_1_1amf_1_1SimpleToleranceTermination_1a8b485eec7b56aa4526a9c3749fd204dc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1amf_1_1SimpleToleranceTermination_1a8b485eec7b56aa4526a9c3749fd204dc" kindref="member">SimpleToleranceTermination</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tolerance<sp/>=<sp/>1e-5,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations<sp/>=<sp/>10000,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>reverseStepTolerance<sp/>=<sp/>3)<sp/>:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tolerance(tolerance),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maxIterations(maxIterations),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>V(nullptr),</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iteration(1),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>residueOld(DBL_MAX),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>residue(DBL_MIN),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reverseStepTolerance(reverseStepTolerance),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reverseStepCount(0),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isCopy(false),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c_indexOld(0),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c_index(0)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>{<sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classmlpack_1_1amf_1_1SimpleToleranceTermination_1a60bfe6387760b1d86552cce461d23099" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1SimpleToleranceTermination_1a60bfe6387760b1d86552cce461d23099" kindref="member">Initialize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>V)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>residueOld<sp/>=<sp/>DBL_MAX;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>iteration<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>residue<sp/>=<sp/>DBL_MIN;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>reverseStepCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>isCopy<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;V<sp/>=<sp/>&amp;V;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>c_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>c_indexOld<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classmlpack_1_1amf_1_1SimpleToleranceTermination_1a21aa00d1db37e94076e46c66313514df" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1SimpleToleranceTermination_1a21aa00d1db37e94076e46c66313514df" kindref="member">IsConverged</ref>(arma::mat&amp;<sp/>W,<sp/>arma::mat&amp;<sp/>H)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::mat<sp/>WH;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>WH<sp/>=<sp/>W<sp/>*<sp/>H;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>residue.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>residueOld<sp/>=<sp/>residue;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>V-&gt;n_rows;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>V-&gt;n_cols;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>m;<sp/>++j)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>temp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((temp<sp/>=<sp/>(*V)(i,<sp/>j))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>(temp<sp/>-<sp/>WH(i,<sp/>j));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>temp<sp/>*<sp/>temp;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>temp;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>residue<sp/>=<sp/>sum;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>residue<sp/>/=<sp/>count;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>residue<sp/>=<sp/>sqrt(residue);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>iteration<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>iteration++;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>Log::Info<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Iteration<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iteration<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;<sp/>residue<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>((residueOld<sp/>-<sp/>residue)<sp/>/<sp/>residueOld)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>residue<sp/>tolerance<sp/>is<sp/>not<sp/>satisfied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((residueOld<sp/>-<sp/>residue)<sp/>/<sp/>residueOld<sp/>&lt;<sp/>tolerance<sp/>&amp;&amp;<sp/>iteration<sp/>&gt;<sp/>4)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>this<sp/>is<sp/>a<sp/>first<sp/>of<sp/>successive<sp/>drops.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reverseStepCount<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>isCopy<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>a<sp/>copy<sp/>of<sp/>W<sp/>and<sp/>H<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isCopy<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;W<sp/>=<sp/>W;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;H<sp/>=<sp/>H;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>residue<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_index<sp/>=<sp/>residue;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_indexOld<sp/>=<sp/>residueOld;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increase<sp/>successive<sp/>drop<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reverseStepCount++;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>tolerance<sp/>is<sp/>satisfied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>successive<sp/>drop<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reverseStepCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>residue<sp/>is<sp/>droped<sp/>below<sp/>minimum<sp/>scrap<sp/>stored<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(residue<sp/>&lt;=<sp/>c_indexOld<sp/>&amp;&amp;<sp/>isCopy<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isCopy<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>termination<sp/>criterion<sp/>is<sp/>met.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reverseStepCount<sp/>==<sp/>reverseStepTolerance<sp/>||<sp/>iteration<sp/>&gt;<sp/>maxIterations)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>stored<sp/>values<sp/>are<sp/>present<sp/>replace<sp/>them<sp/>with<sp/>current<sp/>value<sp/>as<sp/>they</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>represent<sp/>the<sp/>minimum<sp/>residue<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isCopy)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W<sp/>=<sp/>this-&gt;W;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H<sp/>=<sp/>this-&gt;H;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>residue<sp/>=<sp/>c_index;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classmlpack_1_1amf_1_1SimpleToleranceTermination_1a866b70f9202a81d2bdbb116bc2683eb2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1amf_1_1SimpleToleranceTermination_1a866b70f9202a81d2bdbb116bc2683eb2" kindref="member">Index</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>residue;<sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="classmlpack_1_1amf_1_1SimpleToleranceTermination_1a5226c80136390904f5893e72749211e6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1amf_1_1SimpleToleranceTermination_1a5226c80136390904f5893e72749211e6" kindref="member">Iteration</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iteration;<sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="classmlpack_1_1amf_1_1SimpleToleranceTermination_1a26b939a18b15788ad266b8eda3f301e6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1amf_1_1SimpleToleranceTermination_1a26b939a18b15788ad266b8eda3f301e6" kindref="member">MaxIterations</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxIterations;<sp/>}</highlight></codeline>
<codeline lineno="167" refid="classmlpack_1_1amf_1_1SimpleToleranceTermination_1acda675ab4ab86b95c92bc33bc391a61b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1amf_1_1SimpleToleranceTermination_1acda675ab4ab86b95c92bc33bc391a61b" kindref="member">MaxIterations</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxIterations;<sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="classmlpack_1_1amf_1_1SimpleToleranceTermination_1aa3141c2547caeb826a4c221e10b8529e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1amf_1_1SimpleToleranceTermination_1aa3141c2547caeb826a4c221e10b8529e" kindref="member">Tolerance</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tolerance;<sp/>}</highlight></codeline>
<codeline lineno="171" refid="classmlpack_1_1amf_1_1SimpleToleranceTermination_1a3d9fac84af16250f5a3689692e8f2173" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1amf_1_1SimpleToleranceTermination_1a3d9fac84af16250f5a3689692e8f2173" kindref="member">Tolerance</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tolerance;<sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tolerance;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType*<sp/>V;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>iteration;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>residueOld;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>residue;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>reverseStepTolerance;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>reverseStepCount;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isCopy;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>arma::mat<sp/>W;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>arma::mat<sp/>H;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c_indexOld;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c_index;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>SimpleToleranceTermination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>amf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>_MLPACK_METHODS_AMF_SIMPLE_TOLERANCE_TERMINATION_HPP_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/amf/termination_policies/simple_tolerance_termination.hpp"/>
  </compounddef>
</doxygen>
