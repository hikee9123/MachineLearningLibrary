<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="kde__model_8hpp" kind="file" language="C++">
    <compoundname>kde_model.hpp</compoundname>
    <includes refid="binary__space__tree_8hpp" local="no">mlpack/core/tree/binary_space_tree.hpp</includes>
    <includes refid="octree_8hpp" local="no">mlpack/core/tree/octree.hpp</includes>
    <includes refid="cover__tree_8hpp" local="no">mlpack/core/tree/cover_tree.hpp</includes>
    <includes local="no">mlpack/core/tree/rectangle_tree.hpp</includes>
    <includes refid="core_8hpp" local="no">mlpack/core.hpp</includes>
    <includes refid="kde_8hpp" local="yes">kde.hpp</includes>
    <includes local="yes">kde_model_impl.hpp</includes>
    <incdepgraph>
      <node id="51352">
        <label>list</label>
      </node>
      <node id="51402">
        <label>breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="51394">
        <label>binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51391" relation="include">
        </childnode>
        <childnode refid="51395" relation="include">
        </childnode>
      </node>
      <node id="51447">
        <label>save_impl.hpp</label>
      </node>
      <node id="51404">
        <label>binary_space_tree/traits.hpp</label>
        <link refid="binary__space__tree_2traits_8hpp"/>
        <childnode refid="51405" relation="include">
        </childnode>
        <childnode refid="51366" relation="include">
        </childnode>
      </node>
      <node id="51349">
        <label>atomic</label>
      </node>
      <node id="51439">
        <label>dataset_mapper_impl.hpp</label>
      </node>
      <node id="51445">
        <label>load_image_impl.hpp</label>
      </node>
      <node id="51339">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="51315">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="51351">
        <label>iomanip</label>
      </node>
      <node id="51401">
        <label>queue</label>
      </node>
      <node id="51363">
        <label>bound_traits.hpp</label>
        <link refid="bound__traits_8hpp"/>
      </node>
      <node id="51471">
        <label>mlpack/core/kernels/linear_kernel.hpp</label>
        <link refid="linear__kernel_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
      </node>
      <node id="51376">
        <label>binary_space_tree/mean_split.hpp</label>
        <link refid="mean__split_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51374" relation="include">
        </childnode>
        <childnode refid="51377" relation="include">
        </childnode>
      </node>
      <node id="51466">
        <label>mlpack/core/data/confusion_matrix.hpp</label>
        <link refid="confusion__matrix_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51467" relation="include">
        </childnode>
      </node>
      <node id="51479">
        <label>mlpack/core/kernels/laplacian_kernel.hpp</label>
        <link refid="laplacian__kernel_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
      </node>
      <node id="51454">
        <label>float.h</label>
      </node>
      <node id="51362">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="51423">
        <label>mlpack/core/tree/rectangle_tree.hpp</label>
      </node>
      <node id="51324">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="51325" relation="include">
        </childnode>
        <childnode refid="51327" relation="include">
        </childnode>
      </node>
      <node id="51307">
        <label>cstdint</label>
      </node>
      <node id="51477">
        <label>epanechnikov_kernel_impl.hpp</label>
      </node>
      <node id="51470">
        <label>mlpack/core/kernels/kernel_traits.hpp</label>
        <link refid="kernel__traits_8hpp"/>
      </node>
      <node id="51316">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="51323">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="51403">
        <label>binary_space_tree/breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="51464">
        <label>mlpack/core/dists/gamma_distribution.hpp</label>
        <link refid="gamma__distribution_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51379" relation="include">
        </childnode>
      </node>
      <node id="51434">
        <label>mlpack/core/data/load.hpp</label>
        <link refid="load_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51347" relation="include">
        </childnode>
        <childnode refid="51355" relation="include">
        </childnode>
        <childnode refid="51435" relation="include">
        </childnode>
        <childnode refid="51436" relation="include">
        </childnode>
        <childnode refid="51440" relation="include">
        </childnode>
        <childnode refid="51443" relation="include">
        </childnode>
        <childnode refid="51444" relation="include">
        </childnode>
        <childnode refid="51445" relation="include">
        </childnode>
      </node>
      <node id="51429">
        <label>program_doc.hpp</label>
        <link refid="program__doc_8hpp"/>
      </node>
      <node id="51452">
        <label>stdlib.h</label>
      </node>
      <node id="51380">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="51377">
        <label>mean_split_impl.hpp</label>
      </node>
      <node id="51346">
        <label>arma_config.hpp</label>
      </node>
      <node id="51368">
        <label>hollow_ball_bound.hpp</label>
        <link refid="hollow__ball__bound_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51361" relation="include">
        </childnode>
        <childnode refid="51363" relation="include">
        </childnode>
        <childnode refid="51369" relation="include">
        </childnode>
      </node>
      <node id="51408">
        <label>octree/octree.hpp</label>
        <link refid="octree_2octree_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51364" relation="include">
        </childnode>
        <childnode refid="51392" relation="include">
        </childnode>
        <childnode refid="51409" relation="include">
        </childnode>
      </node>
      <node id="51392">
        <label>../statistic.hpp</label>
        <link refid="statistic_8hpp"/>
      </node>
      <node id="51483">
        <label>mlpack/core/kernels/spherical_kernel.hpp</label>
        <link refid="spherical__kernel_8hpp"/>
        <childnode refid="51484" relation="include">
        </childnode>
        <childnode refid="51302" relation="include">
        </childnode>
      </node>
      <node id="51432">
        <label>params.hpp</label>
        <link refid="params_8hpp"/>
        <childnode refid="51431" relation="include">
        </childnode>
        <childnode refid="51428" relation="include">
        </childnode>
        <childnode refid="51433" relation="include">
        </childnode>
      </node>
      <node id="51387">
        <label>lin_alg_impl.hpp</label>
      </node>
      <node id="51478">
        <label>mlpack/core/kernels/hyperbolic_tangent_kernel.hpp</label>
        <link refid="hyperbolic__tangent__kernel_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
      </node>
      <node id="51424">
        <label>mlpack/core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51315" relation="include">
        </childnode>
        <childnode refid="51347" relation="include">
        </childnode>
        <childnode refid="51425" relation="include">
        </childnode>
        <childnode refid="51357" relation="include">
        </childnode>
        <childnode refid="51434" relation="include">
        </childnode>
        <childnode refid="51446" relation="include">
        </childnode>
        <childnode refid="51449" relation="include">
        </childnode>
        <childnode refid="51451" relation="include">
        </childnode>
        <childnode refid="51379" relation="include">
        </childnode>
        <childnode refid="51455" relation="include">
        </childnode>
        <childnode refid="51386" relation="include">
        </childnode>
        <childnode refid="51360" relation="include">
        </childnode>
        <childnode refid="51456" relation="include">
        </childnode>
        <childnode refid="51457" relation="include">
        </childnode>
        <childnode refid="51458" relation="include">
        </childnode>
        <childnode refid="51460" relation="include">
        </childnode>
        <childnode refid="51461" relation="include">
        </childnode>
        <childnode refid="51462" relation="include">
        </childnode>
        <childnode refid="51463" relation="include">
        </childnode>
        <childnode refid="51464" relation="include">
        </childnode>
        <childnode refid="51465" relation="include">
        </childnode>
        <childnode refid="51466" relation="include">
        </childnode>
        <childnode refid="51468" relation="include">
        </childnode>
        <childnode refid="51470" relation="include">
        </childnode>
        <childnode refid="51471" relation="include">
        </childnode>
        <childnode refid="51472" relation="include">
        </childnode>
        <childnode refid="51473" relation="include">
        </childnode>
        <childnode refid="51475" relation="include">
        </childnode>
        <childnode refid="51476" relation="include">
        </childnode>
        <childnode refid="51478" relation="include">
        </childnode>
        <childnode refid="51479" relation="include">
        </childnode>
        <childnode refid="51480" relation="include">
        </childnode>
        <childnode refid="51483" relation="include">
        </childnode>
        <childnode refid="51485" relation="include">
        </childnode>
        <childnode refid="51486" relation="include">
        </childnode>
      </node>
      <node id="51448">
        <label>io_impl.hpp</label>
      </node>
      <node id="51336">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="51468">
        <label>mlpack/core/data/one_hot_encoding.hpp</label>
        <link refid="one__hot__encoding_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51424" relation="include">
        </childnode>
        <childnode refid="51469" relation="include">
        </childnode>
      </node>
      <node id="51303">
        <label>cmath</label>
      </node>
      <node id="51359">
        <label>bounds.hpp</label>
        <link refid="bounds_8hpp"/>
        <childnode refid="51360" relation="include">
        </childnode>
        <childnode refid="51361" relation="include">
        </childnode>
        <childnode refid="51363" relation="include">
        </childnode>
        <childnode refid="51364" relation="include">
        </childnode>
        <childnode refid="51366" relation="include">
        </childnode>
        <childnode refid="51368" relation="include">
        </childnode>
        <childnode refid="51370" relation="include">
        </childnode>
      </node>
      <node id="51322">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="51311">
        <label>stdexcept</label>
      </node>
      <node id="51397">
        <label>binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51391" relation="include">
        </childnode>
        <childnode refid="51398" relation="include">
        </childnode>
      </node>
      <node id="51331">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="51316" relation="include">
        </childnode>
        <childnode refid="51318" relation="include">
        </childnode>
        <childnode refid="51319" relation="include">
        </childnode>
        <childnode refid="51317" relation="include">
        </childnode>
      </node>
      <node id="51360">
        <label>mlpack/core/math/range.hpp</label>
      </node>
      <node id="51474">
        <label>cosine_distance_impl.hpp</label>
      </node>
      <node id="51422">
        <label>cover_tree/typedef.hpp</label>
        <link refid="core_2tree_2cover__tree_2typedef_8hpp"/>
        <childnode refid="51415" relation="include">
        </childnode>
      </node>
      <node id="51438">
        <label>mlpack/core/data/map_policies/datatype.hpp</label>
        <link refid="datatype_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
      </node>
      <node id="51355">
        <label>string</label>
      </node>
      <node id="51383">
        <label>binary_space_tree/rp_tree_max_split.hpp</label>
        <link refid="rp__tree__max__split_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51374" relation="include">
        </childnode>
        <childnode refid="51384" relation="include">
        </childnode>
      </node>
      <node id="51375">
        <label>midpoint_split_impl.hpp</label>
      </node>
      <node id="51343">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="51344" relation="include">
        </childnode>
        <childnode refid="51310" relation="include">
        </childnode>
      </node>
      <node id="51473">
        <label>mlpack/core/kernels/cosine_distance.hpp</label>
        <link refid="cosine__distance_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51470" relation="include">
        </childnode>
        <childnode refid="51474" relation="include">
        </childnode>
      </node>
      <node id="51353">
        <label>map</label>
      </node>
      <node id="51489">
        <label>kde_impl.hpp</label>
      </node>
      <node id="51398">
        <label>dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="51386">
        <label>mlpack/core/math/lin_alg.hpp</label>
        <link refid="lin__alg_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51387" relation="include">
        </childnode>
      </node>
      <node id="51305">
        <label>cfloat</label>
      </node>
      <node id="51428">
        <label>binding_details.hpp</label>
        <link refid="binding__details_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51429" relation="include">
        </childnode>
      </node>
      <node id="51335">
        <label>boost/variant.hpp</label>
      </node>
      <node id="51463">
        <label>mlpack/core/dists/laplace_distribution.hpp</label>
        <link refid="laplace__distribution_8hpp"/>
      </node>
      <node id="51357">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="51419">
        <label>cover_tree/dual_tree_traverser.hpp</label>
        <link refid="cover__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51401" relation="include">
        </childnode>
        <childnode refid="51398" relation="include">
        </childnode>
      </node>
      <node id="51319">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="51342">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="51343" relation="include">
        </childnode>
        <childnode refid="51319" relation="include">
        </childnode>
        <childnode refid="51326" relation="include">
        </childnode>
        <childnode refid="51344" relation="include">
        </childnode>
      </node>
      <node id="51332">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="51460">
        <label>mlpack/core/math/make_alias.hpp</label>
        <link refid="make__alias_8hpp"/>
      </node>
      <node id="51476">
        <label>mlpack/core/kernels/epanechnikov_kernel.hpp</label>
        <link refid="epanechnikov__kernel_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51470" relation="include">
        </childnode>
        <childnode refid="51477" relation="include">
        </childnode>
      </node>
      <node id="51465">
        <label>mlpack/core/dists/diagonal_gaussian_distribution.hpp</label>
        <link refid="diagonal__gaussian__distribution_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
      </node>
      <node id="51415">
        <label>cover_tree/cover_tree.hpp</label>
        <link refid="cover__tree_2cover__tree_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51360" relation="include">
        </childnode>
        <childnode refid="51392" relation="include">
        </childnode>
        <childnode refid="51414" relation="include">
        </childnode>
        <childnode refid="51416" relation="include">
        </childnode>
        <childnode refid="51413" relation="include">
        </childnode>
      </node>
      <node id="51330">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="51316" relation="include">
        </childnode>
        <childnode refid="51318" relation="include">
        </childnode>
        <childnode refid="51319" relation="include">
        </childnode>
        <childnode refid="51317" relation="include">
        </childnode>
      </node>
      <node id="51333">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="51316" relation="include">
        </childnode>
        <childnode refid="51318" relation="include">
        </childnode>
        <childnode refid="51319" relation="include">
        </childnode>
        <childnode refid="51317" relation="include">
        </childnode>
      </node>
      <node id="51393">
        <label>binary_space_tree_impl.hpp</label>
      </node>
      <node id="51455">
        <label>mlpack/core/math/random_basis.hpp</label>
        <link refid="random__basis_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
      </node>
      <node id="51427">
        <label>boost/any.hpp</label>
      </node>
      <node id="51321">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="51341">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="51317" relation="include">
        </childnode>
        <childnode refid="51318" relation="include">
        </childnode>
        <childnode refid="51319" relation="include">
        </childnode>
        <childnode refid="51329" relation="include">
        </childnode>
        <childnode refid="51338" relation="include">
        </childnode>
      </node>
      <node id="51345">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="51346" relation="include">
        </childnode>
      </node>
      <node id="51399">
        <label>binary_space_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="51347">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="51302">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="51303" relation="include">
        </childnode>
        <childnode refid="51304" relation="include">
        </childnode>
        <childnode refid="51305" relation="include">
        </childnode>
        <childnode refid="51306" relation="include">
        </childnode>
        <childnode refid="51307" relation="include">
        </childnode>
        <childnode refid="51308" relation="include">
        </childnode>
        <childnode refid="51309" relation="include">
        </childnode>
        <childnode refid="51310" relation="include">
        </childnode>
        <childnode refid="51311" relation="include">
        </childnode>
        <childnode refid="51312" relation="include">
        </childnode>
        <childnode refid="51313" relation="include">
        </childnode>
        <childnode refid="51314" relation="include">
        </childnode>
        <childnode refid="51315" relation="include">
        </childnode>
        <childnode refid="51316" relation="include">
        </childnode>
        <childnode refid="51317" relation="include">
        </childnode>
        <childnode refid="51318" relation="include">
        </childnode>
        <childnode refid="51319" relation="include">
        </childnode>
        <childnode refid="51320" relation="include">
        </childnode>
        <childnode refid="51321" relation="include">
        </childnode>
        <childnode refid="51322" relation="include">
        </childnode>
        <childnode refid="51323" relation="include">
        </childnode>
        <childnode refid="51324" relation="include">
        </childnode>
        <childnode refid="51328" relation="include">
        </childnode>
        <childnode refid="51329" relation="include">
        </childnode>
        <childnode refid="51330" relation="include">
        </childnode>
        <childnode refid="51331" relation="include">
        </childnode>
        <childnode refid="51332" relation="include">
        </childnode>
        <childnode refid="51333" relation="include">
        </childnode>
        <childnode refid="51334" relation="include">
        </childnode>
        <childnode refid="51340" relation="include">
        </childnode>
        <childnode refid="51341" relation="include">
        </childnode>
        <childnode refid="51338" relation="include">
        </childnode>
        <childnode refid="51342" relation="include">
        </childnode>
        <childnode refid="51345" relation="include">
        </childnode>
        <childnode refid="51347" relation="include">
        </childnode>
        <childnode refid="51348" relation="include">
        </childnode>
        <childnode refid="51357" relation="include">
        </childnode>
        <childnode refid="51358" relation="include">
        </childnode>
      </node>
      <node id="51395">
        <label>single_tree_traverser_impl.hpp</label>
      </node>
      <node id="51373">
        <label>binary_space_tree/midpoint_split.hpp</label>
        <link refid="midpoint__split_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51374" relation="include">
        </childnode>
        <childnode refid="51375" relation="include">
        </childnode>
      </node>
      <node id="51413">
        <label>mlpack/core/tree/cover_tree.hpp</label>
        <link refid="cover__tree_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51414" relation="include">
        </childnode>
        <childnode refid="51415" relation="include">
        </childnode>
        <childnode refid="51417" relation="include">
        </childnode>
        <childnode refid="51418" relation="include">
        </childnode>
        <childnode refid="51419" relation="include">
        </childnode>
        <childnode refid="51420" relation="include">
        </childnode>
        <childnode refid="51421" relation="include">
        </childnode>
        <childnode refid="51422" relation="include">
        </childnode>
      </node>
      <node id="51450">
        <label>normalize_labels_impl.hpp</label>
      </node>
      <node id="51469">
        <label>one_hot_encoding_impl.hpp</label>
      </node>
      <node id="51381">
        <label>random</label>
      </node>
      <node id="51367">
        <label>ballbound_impl.hpp</label>
      </node>
      <node id="51396">
        <label>binary_space_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="51475">
        <label>mlpack/core/kernels/gaussian_kernel.hpp</label>
        <link refid="gaussian__kernel_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51361" relation="include">
        </childnode>
        <childnode refid="51470" relation="include">
        </childnode>
      </node>
      <node id="51437">
        <label>map_policies/increment_policy.hpp</label>
        <link refid="increment__policy_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51327" relation="include">
        </childnode>
        <childnode refid="51438" relation="include">
        </childnode>
      </node>
      <node id="51308">
        <label>cstdio</label>
      </node>
      <node id="51441">
        <label>extension.hpp</label>
        <link refid="extension_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
      </node>
      <node id="51371">
        <label>address.hpp</label>
        <link refid="address_8hpp"/>
      </node>
      <node id="51405">
        <label>mlpack/core/tree/tree_traits.hpp</label>
        <link refid="tree__traits_8hpp"/>
      </node>
      <node id="51312">
        <label>tuple</label>
      </node>
      <node id="51317">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="51389">
        <label>binary_space_tree/ub_tree_split.hpp</label>
        <link refid="ub__tree__split_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51371" relation="include">
        </childnode>
        <childnode refid="51390" relation="include">
        </childnode>
      </node>
      <node id="51334">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="51317" relation="include">
        </childnode>
        <childnode refid="51318" relation="include">
        </childnode>
        <childnode refid="51319" relation="include">
        </childnode>
        <childnode refid="51321" relation="include">
        </childnode>
        <childnode refid="51335" relation="include">
        </childnode>
        <childnode refid="51336" relation="include">
        </childnode>
        <childnode refid="51337" relation="include">
        </childnode>
        <childnode refid="51338" relation="include">
        </childnode>
      </node>
      <node id="51391">
        <label>binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51392" relation="include">
        </childnode>
        <childnode refid="51373" relation="include">
        </childnode>
        <childnode refid="51393" relation="include">
        </childnode>
        <childnode refid="51301" relation="include">
        </childnode>
      </node>
      <node id="51488">
        <label>kde_stat.hpp</label>
        <link refid="kde__stat_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
      </node>
      <node id="51364">
        <label>hrectbound.hpp</label>
        <link refid="hrectbound_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51360" relation="include">
        </childnode>
        <childnode refid="51361" relation="include">
        </childnode>
        <childnode refid="51363" relation="include">
        </childnode>
        <childnode refid="51365" relation="include">
        </childnode>
      </node>
      <node id="51442">
        <label>image_info_impl.hpp</label>
      </node>
      <node id="51414">
        <label>cover_tree/first_point_is_root.hpp</label>
        <link refid="first__point__is__root_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
      </node>
      <node id="51481">
        <label>vector</label>
      </node>
      <node id="51444">
        <label>load_vec_impl.hpp</label>
      </node>
      <node id="51388">
        <label>rp_tree_mean_split_impl.hpp</label>
      </node>
      <node id="51430">
        <label>version.hpp</label>
        <link refid="src_2mlpack_2core_2util_2version_8hpp"/>
        <childnode refid="51355" relation="include">
        </childnode>
      </node>
      <node id="51451">
        <label>mlpack/core/math/clamp.hpp</label>
        <link refid="clamp_8hpp"/>
        <childnode refid="51452" relation="include">
        </childnode>
        <childnode refid="51453" relation="include">
        </childnode>
        <childnode refid="51454" relation="include">
        </childnode>
      </node>
      <node id="51300">
        <label>/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp</label>
        <link refid="kde__model_8hpp"/>
        <childnode refid="51301" relation="include">
        </childnode>
        <childnode refid="51407" relation="include">
        </childnode>
        <childnode refid="51413" relation="include">
        </childnode>
        <childnode refid="51423" relation="include">
        </childnode>
        <childnode refid="51424" relation="include">
        </childnode>
        <childnode refid="51487" relation="include">
        </childnode>
        <childnode refid="51490" relation="include">
        </childnode>
      </node>
      <node id="51417">
        <label>cover_tree/single_tree_traverser.hpp</label>
        <link refid="cover__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51415" relation="include">
        </childnode>
        <childnode refid="51395" relation="include">
        </childnode>
      </node>
      <node id="51379">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51380" relation="include">
        </childnode>
        <childnode refid="51381" relation="include">
        </childnode>
      </node>
      <node id="51313">
        <label>utility</label>
      </node>
      <node id="51337">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="51443">
        <label>load_model_impl.hpp</label>
      </node>
      <node id="51328">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="51301">
        <label>mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51359" relation="include">
        </childnode>
        <childnode refid="51373" relation="include">
        </childnode>
        <childnode refid="51376" relation="include">
        </childnode>
        <childnode refid="51378" relation="include">
        </childnode>
        <childnode refid="51383" relation="include">
        </childnode>
        <childnode refid="51385" relation="include">
        </childnode>
        <childnode refid="51389" relation="include">
        </childnode>
        <childnode refid="51391" relation="include">
        </childnode>
        <childnode refid="51394" relation="include">
        </childnode>
        <childnode refid="51396" relation="include">
        </childnode>
        <childnode refid="51397" relation="include">
        </childnode>
        <childnode refid="51399" relation="include">
        </childnode>
        <childnode refid="51400" relation="include">
        </childnode>
        <childnode refid="51403" relation="include">
        </childnode>
        <childnode refid="51404" relation="include">
        </childnode>
        <childnode refid="51406" relation="include">
        </childnode>
      </node>
      <node id="51325">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="51326" relation="include">
        </childnode>
      </node>
      <node id="51420">
        <label>cover_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="51416">
        <label>cover_tree_impl.hpp</label>
      </node>
      <node id="51480">
        <label>mlpack/core/kernels/pspectrum_string_kernel.hpp</label>
        <link refid="pspectrum__string__kernel_8hpp"/>
        <childnode refid="51353" relation="include">
        </childnode>
        <childnode refid="51355" relation="include">
        </childnode>
        <childnode refid="51481" relation="include">
        </childnode>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51347" relation="include">
        </childnode>
        <childnode refid="51482" relation="include">
        </childnode>
      </node>
      <node id="51457">
        <label>mlpack/core/math/shuffle_data.hpp</label>
        <link refid="shuffle__data_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
      </node>
      <node id="51449">
        <label>mlpack/core/data/normalize_labels.hpp</label>
        <link refid="normalize__labels_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51450" relation="include">
        </childnode>
      </node>
      <node id="51348">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="51349" relation="include">
        </childnode>
        <childnode refid="51350" relation="include">
        </childnode>
        <childnode refid="51351" relation="include">
        </childnode>
        <childnode refid="51352" relation="include">
        </childnode>
        <childnode refid="51353" relation="include">
        </childnode>
        <childnode refid="51354" relation="include">
        </childnode>
        <childnode refid="51355" relation="include">
        </childnode>
        <childnode refid="51356" relation="include">
        </childnode>
      </node>
      <node id="51326">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="51340">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="51338" relation="include">
        </childnode>
        <childnode refid="51334" relation="include">
        </childnode>
        <childnode refid="51341" relation="include">
        </childnode>
      </node>
      <node id="51453">
        <label>math.h</label>
      </node>
      <node id="51431">
        <label>param_data.hpp</label>
        <link refid="param__data_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51427" relation="include">
        </childnode>
      </node>
      <node id="51487">
        <label>kde.hpp</label>
        <link refid="kde_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51301" relation="include">
        </childnode>
        <childnode refid="51488" relation="include">
        </childnode>
        <childnode refid="51489" relation="include">
        </childnode>
      </node>
      <node id="51309">
        <label>cstdlib</label>
      </node>
      <node id="51461">
        <label>mlpack/core/dists/discrete_distribution.hpp</label>
        <link refid="discrete__distribution_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51347" relation="include">
        </childnode>
        <childnode refid="51379" relation="include">
        </childnode>
      </node>
      <node id="51304">
        <label>cctype</label>
      </node>
      <node id="51426">
        <label>iostream</label>
      </node>
      <node id="51409">
        <label>octree_impl.hpp</label>
      </node>
      <node id="51472">
        <label>mlpack/core/kernels/polynomial_kernel.hpp</label>
        <link refid="polynomial__kernel_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
      </node>
      <node id="51467">
        <label>confusion_matrix_impl.hpp</label>
      </node>
      <node id="51327">
        <label>unordered_map</label>
      </node>
      <node id="51490">
        <label>kde_model_impl.hpp</label>
      </node>
      <node id="51440">
        <label>image_info.hpp</label>
        <link refid="image__info_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51441" relation="include">
        </childnode>
        <childnode refid="51442" relation="include">
        </childnode>
      </node>
      <node id="51407">
        <label>mlpack/core/tree/octree.hpp</label>
        <link refid="octree_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51359" relation="include">
        </childnode>
        <childnode refid="51408" relation="include">
        </childnode>
        <childnode refid="51410" relation="include">
        </childnode>
        <childnode refid="51411" relation="include">
        </childnode>
        <childnode refid="51412" relation="include">
        </childnode>
      </node>
      <node id="51418">
        <label>cover_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="51306">
        <label>climits</label>
      </node>
      <node id="51412">
        <label>octree/dual_tree_traverser.hpp</label>
        <link refid="octree_2dual__tree__traverser_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51408" relation="include">
        </childnode>
        <childnode refid="51398" relation="include">
        </childnode>
      </node>
      <node id="51436">
        <label>dataset_mapper.hpp</label>
        <link refid="dataset__mapper_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51327" relation="include">
        </childnode>
        <childnode refid="51437" relation="include">
        </childnode>
        <childnode refid="51439" relation="include">
        </childnode>
      </node>
      <node id="51458">
        <label>mlpack/core/math/ccov.hpp</label>
        <link refid="ccov_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51459" relation="include">
        </childnode>
      </node>
      <node id="51354">
        <label>mutex</label>
      </node>
      <node id="51446">
        <label>mlpack/core/data/save.hpp</label>
        <link refid="save_8hpp"/>
        <childnode refid="51347" relation="include">
        </childnode>
        <childnode refid="51314" relation="include">
        </childnode>
        <childnode refid="51355" relation="include">
        </childnode>
        <childnode refid="51435" relation="include">
        </childnode>
        <childnode refid="51440" relation="include">
        </childnode>
        <childnode refid="51447" relation="include">
        </childnode>
      </node>
      <node id="51350">
        <label>chrono</label>
      </node>
      <node id="51365">
        <label>hrectbound_impl.hpp</label>
      </node>
      <node id="51358">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="51459">
        <label>ccov_impl.hpp</label>
      </node>
      <node id="51484">
        <label>boost/math/special_functions/gamma.hpp</label>
      </node>
      <node id="51385">
        <label>binary_space_tree/rp_tree_mean_split.hpp</label>
        <link refid="rp__tree__mean__split_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51383" relation="include">
        </childnode>
        <childnode refid="51374" relation="include">
        </childnode>
        <childnode refid="51386" relation="include">
        </childnode>
        <childnode refid="51388" relation="include">
        </childnode>
      </node>
      <node id="51382">
        <label>vantage_point_split_impl.hpp</label>
      </node>
      <node id="51356">
        <label>thread</label>
      </node>
      <node id="51486">
        <label>mlpack/core/kernels/cauchy_kernel.hpp</label>
        <link refid="cauchy__kernel_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51361" relation="include">
        </childnode>
        <childnode refid="51470" relation="include">
        </childnode>
      </node>
      <node id="51366">
        <label>ballbound.hpp</label>
        <link refid="ballbound_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51361" relation="include">
        </childnode>
        <childnode refid="51363" relation="include">
        </childnode>
        <childnode refid="51367" relation="include">
        </childnode>
      </node>
      <node id="51433">
        <label>params_impl.hpp</label>
      </node>
      <node id="51384">
        <label>rp_tree_max_split_impl.hpp</label>
      </node>
      <node id="51374">
        <label>mlpack/core/tree/perform_split.hpp</label>
        <link refid="perform__split_8hpp"/>
      </node>
      <node id="51344">
        <label>type_traits</label>
      </node>
      <node id="51400">
        <label>binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51401" relation="include">
        </childnode>
        <childnode refid="51301" relation="include">
        </childnode>
        <childnode refid="51402" relation="include">
        </childnode>
      </node>
      <node id="51410">
        <label>octree/traits.hpp</label>
        <link refid="octree_2traits_8hpp"/>
        <childnode refid="51405" relation="include">
        </childnode>
      </node>
      <node id="51320">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="51482">
        <label>pspectrum_string_kernel_impl.hpp</label>
      </node>
      <node id="51406">
        <label>binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="51301" relation="include">
        </childnode>
      </node>
      <node id="51314">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="51338">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="51316" relation="include">
        </childnode>
        <childnode refid="51317" relation="include">
        </childnode>
        <childnode refid="51318" relation="include">
        </childnode>
        <childnode refid="51319" relation="include">
        </childnode>
        <childnode refid="51339" relation="include">
        </childnode>
      </node>
      <node id="51369">
        <label>hollow_ball_bound_impl.hpp</label>
      </node>
      <node id="51456">
        <label>mlpack/core/math/round.hpp</label>
        <link refid="round_8hpp"/>
      </node>
      <node id="51485">
        <label>mlpack/core/kernels/triangular_kernel.hpp</label>
        <link refid="triangular__kernel_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51361" relation="include">
        </childnode>
      </node>
      <node id="51310">
        <label>cstring</label>
      </node>
      <node id="51329">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="51425">
        <label>mlpack/core/util/io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="51426" relation="include">
        </childnode>
        <childnode refid="51352" relation="include">
        </childnode>
        <childnode refid="51353" relation="include">
        </childnode>
        <childnode refid="51355" relation="include">
        </childnode>
        <childnode refid="51427" relation="include">
        </childnode>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51348" relation="include">
        </childnode>
        <childnode refid="51428" relation="include">
        </childnode>
        <childnode refid="51429" relation="include">
        </childnode>
        <childnode refid="51430" relation="include">
        </childnode>
        <childnode refid="51431" relation="include">
        </childnode>
        <childnode refid="51432" relation="include">
        </childnode>
        <childnode refid="51434" relation="include">
        </childnode>
        <childnode refid="51446" relation="include">
        </childnode>
        <childnode refid="51448" relation="include">
        </childnode>
      </node>
      <node id="51372">
        <label>cellbound_impl.hpp</label>
      </node>
      <node id="51390">
        <label>ub_tree_split_impl.hpp</label>
      </node>
      <node id="51370">
        <label>cellbound.hpp</label>
        <link refid="cellbound_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51360" relation="include">
        </childnode>
        <childnode refid="51361" relation="include">
        </childnode>
        <childnode refid="51363" relation="include">
        </childnode>
        <childnode refid="51371" relation="include">
        </childnode>
        <childnode refid="51372" relation="include">
        </childnode>
      </node>
      <node id="51411">
        <label>octree/single_tree_traverser.hpp</label>
        <link refid="octree_2single__tree__traverser_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51408" relation="include">
        </childnode>
        <childnode refid="51395" relation="include">
        </childnode>
      </node>
      <node id="51318">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="51462">
        <label>mlpack/core/dists/gaussian_distribution.hpp</label>
        <link refid="gaussian__distribution_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
      </node>
      <node id="51361">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51362" relation="include">
        </childnode>
      </node>
      <node id="51435">
        <label>format.hpp</label>
        <link refid="format_8hpp"/>
      </node>
      <node id="51378">
        <label>binary_space_tree/vantage_point_split.hpp</label>
        <link refid="vantage__point__split_8hpp"/>
        <childnode refid="51302" relation="include">
        </childnode>
        <childnode refid="51374" relation="include">
        </childnode>
        <childnode refid="51379" relation="include">
        </childnode>
        <childnode refid="51382" relation="include">
        </childnode>
      </node>
      <node id="51421">
        <label>cover_tree/traits.hpp</label>
        <link refid="cover__tree_2traits_8hpp"/>
        <childnode refid="51405" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1kde_1_1KDEModel" prot="public">mlpack::kde::KDEModel</innerclass>
    <innerclass refid="classmlpack_1_1kde_1_1KDEWrapper" prot="public">mlpack::kde::KDEWrapper</innerclass>
    <innerclass refid="classmlpack_1_1kde_1_1KDEWrapperBase" prot="public">mlpack::kde::KDEWrapperBase</innerclass>
    <innerclass refid="classmlpack_1_1kde_1_1KernelNormalizer" prot="public">mlpack::kde::KernelNormalizer</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1kde">mlpack::kde</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Roberto Hueso</para></simplesect>
Model for KDE. It abstracts different types of tree, kernels, etc.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_KDE_MODEL_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_KDE_MODEL_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>trees.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="binary__space__tree_8hpp" kindref="compound">mlpack/core/tree/binary_space_tree.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="octree_8hpp" kindref="compound">mlpack/core/tree/octree.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cover__tree_8hpp" kindref="compound">mlpack/core/tree/cover_tree.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mlpack/core/tree/rectangle_tree.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>core.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="core_8hpp" kindref="compound">mlpack/core.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Remaining<sp/>includes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kde_8hpp" kindref="compound">kde.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">kde<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classmlpack_1_1kde_1_1KernelNormalizer" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1kde_1_1KernelNormalizer" kindref="compound">KernelNormalizer</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>SFINAE<sp/>check<sp/>if<sp/>Normalizer<sp/>function<sp/>is<sp/>present.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>HAS_MEM_FUNC(Normalizer,<sp/>HasNormalizer);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>KernelType&gt;</highlight></codeline>
<codeline lineno="43" refid="classmlpack_1_1kde_1_1KernelNormalizer_1a717e03847e745cbb17dbd6bef4430a51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KernelNormalizer_1a717e03847e745cbb17dbd6bef4430a51" kindref="member">ApplyNormalizer</ref>(</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>KernelType&amp;<sp/></highlight><highlight class="comment">/*<sp/>kernel<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>dimension<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/></highlight><highlight class="comment">/*<sp/>estimations<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!HasNormalizer&lt;KernelType,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(KernelType::*)(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)&gt;::value&gt;::</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type*<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>KernelType&gt;</highlight></codeline>
<codeline lineno="54" refid="classmlpack_1_1kde_1_1KernelNormalizer_1ab3f3e0c4ab1a1242d78d1162890ae3a1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KernelNormalizer_1ab3f3e0c4ab1a1242d78d1162890ae3a1" kindref="member">ApplyNormalizer</ref>(</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>KernelType&amp;<sp/>kernel,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimension,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>estimations,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HasNormalizer&lt;KernelType,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(KernelType::*)(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)&gt;::value&gt;::</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type*<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>estimations<sp/>/=<sp/>kernel.Normalizer(dimension);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classmlpack_1_1kde_1_1KDEWrapperBase" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1kde_1_1KDEWrapperBase" kindref="compound">KDEWrapperBase</ref></highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="76" refid="classmlpack_1_1kde_1_1KDEWrapperBase_1ac1313101961cb19928ea3946dedc6ad9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapperBase_1ac1313101961cb19928ea3946dedc6ad9" kindref="member">KDEWrapperBase</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapperBase" kindref="compound">KDEWrapperBase</ref>*<sp/>Clone()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classmlpack_1_1kde_1_1KDEWrapperBase_1ae58d12a345c8353b6c5338e620e68d59" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapperBase_1ae58d12a345c8353b6c5338e620e68d59" kindref="member">~KDEWrapperBase</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Bandwidth(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bw)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RelativeError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>relError)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AbsoluteError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>absError)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MonteCarlo()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>MonteCarlo()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MCProb(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mcProb)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>MCInitialSampleSize()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>MCInitialSampleSize()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MCEntryCoef(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>entryCoef)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MCBreakCoef(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>breakCoef)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1kde_1a0ff4f94721e558082ebf9d0ef6183d38" kindref="member">KDEMode</ref><sp/>Mode()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1kde_1a0ff4f94721e558082ebf9d0ef6183d38" kindref="member">KDEMode</ref>&amp;<sp/>Mode()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Train(<ref refid="classmlpack_1_1util_1_1Timers" kindref="compound">util::Timers</ref>&amp;<sp/>timers,<sp/>arma::mat&amp;&amp;<sp/>referenceSet)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Evaluate(<ref refid="classmlpack_1_1util_1_1Timers" kindref="compound">util::Timers</ref>&amp;<sp/>timers,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;&amp;<sp/>querySet,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>estimates)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Evaluate(<ref refid="classmlpack_1_1util_1_1Timers" kindref="compound">util::Timers</ref>&amp;<sp/>timers,<sp/>arma::vec&amp;<sp/>estimates)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>KernelType,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMetricType,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeStatType,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMatType&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TreeType&gt;</highlight></codeline>
<codeline lineno="139" refid="classmlpack_1_1kde_1_1KDEWrapper" refkind="compound"><highlight class="normal">class<sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapper" kindref="compound">KDEWrapper</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapperBase" kindref="compound">KDEWrapperBase</ref></highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="143" refid="classmlpack_1_1kde_1_1KDEWrapper_1a57131241225d7fa21c80fff9d967677f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapper_1a57131241225d7fa21c80fff9d967677f" kindref="member">KDEWrapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>relError,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>absError,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KernelType&amp;<sp/>kernel)<sp/>:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>kde(relError,<sp/>absError,<sp/>kernel)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>left<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="classmlpack_1_1kde_1_1KDEWrapper_1a0ba337bbc529b82831c60d60b9441d08" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapper" kindref="compound">KDEWrapper</ref>*<sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapper_1a0ba337bbc529b82831c60d60b9441d08" kindref="member">Clone</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapper" kindref="compound">KDEWrapper</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="classmlpack_1_1kde_1_1KDEWrapper_1a667ffa45aeea3422b7892b1c06f80669" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapper_1a667ffa45aeea3422b7892b1c06f80669" kindref="member">~KDEWrapper</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="classmlpack_1_1kde_1_1KDEWrapper_1a3d47a1b167a794ee6c4d646ee46254b6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapper_1a3d47a1b167a794ee6c4d646ee46254b6" kindref="member">Bandwidth</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bw)<sp/>{<sp/>kde.Kernel()<sp/>=<sp/>KernelType(bw);<sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="classmlpack_1_1kde_1_1KDEWrapper_1a50e2786ac18e3f69fb4e164b68920390" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapper_1a50e2786ac18e3f69fb4e164b68920390" kindref="member">RelativeError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps)<sp/>{<sp/>kde.RelativeError(eps);<sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classmlpack_1_1kde_1_1KDEWrapper_1a0b9d34d8e38ac36cd2ca2118466d0953" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapper_1a0b9d34d8e38ac36cd2ca2118466d0953" kindref="member">AbsoluteError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps)<sp/>{<sp/>kde.AbsoluteError(eps);<sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="classmlpack_1_1kde_1_1KDEWrapper_1a3c91c4e6858fc5d602622548d043fdc2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapper_1a3c91c4e6858fc5d602622548d043fdc2" kindref="member">MonteCarlo</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kde.MonteCarlo();<sp/>}</highlight></codeline>
<codeline lineno="170" refid="classmlpack_1_1kde_1_1KDEWrapper_1aa9f25dddb2e9608e47417d6808adfb2f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapper_1aa9f25dddb2e9608e47417d6808adfb2f" kindref="member">MonteCarlo</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kde.MonteCarlo();<sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="classmlpack_1_1kde_1_1KDEWrapper_1a3cb963e1bd6ee5c7d1121d774bb17afc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapper_1a3cb963e1bd6ee5c7d1121d774bb17afc" kindref="member">MCProb</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mcProb)<sp/>{<sp/>kde.MCProb(mcProb);<sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="classmlpack_1_1kde_1_1KDEWrapper_1a615951cec49961d82ea4497a3073b7b8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapper_1a615951cec49961d82ea4497a3073b7b8" kindref="member">MCInitialSampleSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="177"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kde.MCInitialSampleSize();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="181" refid="classmlpack_1_1kde_1_1KDEWrapper_1adfcd113c0ea444a40d8720aa693e6686" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapper_1adfcd113c0ea444a40d8720aa693e6686" kindref="member">MCInitialSampleSize</ref>()</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kde.MCInitialSampleSize();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="classmlpack_1_1kde_1_1KDEWrapper_1a04a0caefbe404092e3d18baabd3baef7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapper_1a04a0caefbe404092e3d18baabd3baef7" kindref="member">MCEntryCoef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>e)<sp/>{<sp/>kde.MCEntryCoef(e);<sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="classmlpack_1_1kde_1_1KDEWrapper_1a4bbcfabadfb5b781249c7ea4125677ac" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapper_1a4bbcfabadfb5b781249c7ea4125677ac" kindref="member">MCBreakCoef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)<sp/>{<sp/>kde.MCBreakCoef(b);<sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="classmlpack_1_1kde_1_1KDEWrapper_1a80cc32208d4e19c3196d97d0992829ef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1kde_1a0ff4f94721e558082ebf9d0ef6183d38" kindref="member">KDEMode</ref><sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapper_1a80cc32208d4e19c3196d97d0992829ef" kindref="member">Mode</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kde.Mode();<sp/>}</highlight></codeline>
<codeline lineno="195" refid="classmlpack_1_1kde_1_1KDEWrapper_1afe26b90d4fcc474c9d074bad2a667279" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1kde_1a0ff4f94721e558082ebf9d0ef6183d38" kindref="member">KDEMode</ref>&amp;<sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapper_1afe26b90d4fcc474c9d074bad2a667279" kindref="member">Mode</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kde.Mode();<sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Train(<ref refid="classmlpack_1_1util_1_1Timers" kindref="compound">util::Timers</ref>&amp;<sp/>timers,<sp/>arma::mat&amp;&amp;<sp/>referenceSet);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Evaluate(<ref refid="classmlpack_1_1util_1_1Timers" kindref="compound">util::Timers</ref>&amp;<sp/>timers,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;&amp;<sp/>querySet,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>estimates);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Evaluate(<ref refid="classmlpack_1_1util_1_1Timers" kindref="compound">util::Timers</ref>&amp;<sp/>timers,<sp/>arma::vec&amp;<sp/>estimates);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="210" refid="classmlpack_1_1kde_1_1KDEWrapper_1a65cba07328997659bec80b9879b15a51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapper_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(kde));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDE" kindref="compound">KDE</ref>&lt;KernelType,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemlpack_1_1metric_1a0306f114fdf32dcdfa8f015408cfc37d" kindref="member">metric::EuclideanDistance</ref>,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat,</highlight></codeline>
<codeline lineno="219" refid="classmlpack_1_1kde_1_1KDEWrapper_1a08dd59a40d62d4fc10a4e324568d9651" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TreeType&gt;<sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapper_1a08dd59a40d62d4fc10a4e324568d9651" kindref="member">KDEType</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="classmlpack_1_1kde_1_1KDEWrapper_1a24107e389a24c7c0a972615f1c8aff83" refkind="member"><highlight class="normal"><sp/><sp/>KDEType<sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapper_1a24107e389a24c7c0a972615f1c8aff83" kindref="member">kde</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">};</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="classmlpack_1_1kde_1_1KDEModel" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1kde_1_1KDEModel" kindref="compound">KDEModel</ref></highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="234" refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8d" kindref="member">TreeTypes</ref></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="236" refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8daa688e9cd1158916bc183aa517724568c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8daa688e9cd1158916bc183aa517724568c" kindref="member">KD_TREE</ref>,</highlight></codeline>
<codeline lineno="237" refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8da994ef1bcca8841d5b7d1431b99fcb10d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8da994ef1bcca8841d5b7d1431b99fcb10d" kindref="member">BALL_TREE</ref>,</highlight></codeline>
<codeline lineno="238" refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8da92f172b47c8ae18ed401f8bf9f5ecad3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8da92f172b47c8ae18ed401f8bf9f5ecad3" kindref="member">COVER_TREE</ref>,</highlight></codeline>
<codeline lineno="239" refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8daabefbb1ea7a801b1b00c9b0709dcec50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8daabefbb1ea7a801b1b00c9b0709dcec50" kindref="member">OCTREE</ref>,</highlight></codeline>
<codeline lineno="240" refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8da2a93dc779a94d5f09b72ffbdc5ac9cd9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>R_TREE</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61" kindref="member">KernelTypes</ref></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="245" refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61af52665cc69ef62c8ad00a49c8e259c13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61af52665cc69ef62c8ad00a49c8e259c13" kindref="member">GAUSSIAN_KERNEL</ref>,</highlight></codeline>
<codeline lineno="246" refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61af0f03a73eb0dce407b0b027dc8f98cdc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61af0f03a73eb0dce407b0b027dc8f98cdc" kindref="member">EPANECHNIKOV_KERNEL</ref>,</highlight></codeline>
<codeline lineno="247" refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61ac188c6a7e514f7ccf2fc1ac5160e30c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61ac188c6a7e514f7ccf2fc1ac5160e30c6" kindref="member">LAPLACIAN_KERNEL</ref>,</highlight></codeline>
<codeline lineno="248" refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61aa2896ec0bb1099c97a137e4ca80bdc9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61aa2896ec0bb1099c97a137e4ca80bdc9b" kindref="member">SPHERICAL_KERNEL</ref>,</highlight></codeline>
<codeline lineno="249" refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61a54d012af1c18f0d33fc7b76ee3d164fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>TRIANGULAR_KERNEL</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bandwidth;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>relError;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>absError;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61" kindref="member">KernelTypes</ref><sp/>kernelType;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8d" kindref="member">TreeTypes</ref><sp/>treeType;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>monteCarlo;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mcProb;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>initialSampleSize;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mcEntryCoef;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mcBreakCoef;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1kde_1_1KDEWrapperBase" kindref="compound">KDEWrapperBase</ref>*<sp/>kdeModel;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel" kindref="compound">KDEModel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bandwidth<sp/>=<sp/>1.0,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>relError<sp/>=<sp/><ref refid="structmlpack_1_1kde_1_1KDEDefaultParams_1aeb65650a99fac3883ae86f043cfcb70d" kindref="member">KDEDefaultParams::relError</ref>,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>absError<sp/>=<sp/><ref refid="structmlpack_1_1kde_1_1KDEDefaultParams_1a12de6688cc175aaadc1e5685ca4aec86" kindref="member">KDEDefaultParams::absError</ref>,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61" kindref="member">KernelTypes</ref><sp/>kernelType<sp/>=<sp/>KernelTypes::GAUSSIAN_KERNEL,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8d" kindref="member">TreeTypes</ref><sp/>treeType<sp/>=<sp/>TreeTypes::KD_TREE,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>monteCarlo<sp/>=<sp/><ref refid="structmlpack_1_1kde_1_1KDEDefaultParams_1a0941bfbc554e306c3acf9b2e0340d62d" kindref="member">KDEDefaultParams::mode</ref>,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mcProb<sp/>=<sp/><ref refid="structmlpack_1_1kde_1_1KDEDefaultParams_1a1964adf2fa5d838bf2de7ee65b48787c" kindref="member">KDEDefaultParams::mcProb</ref>,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>initialSampleSize<sp/>=<sp/><ref refid="structmlpack_1_1kde_1_1KDEDefaultParams_1abd70d00e0d91208e2ad9648c4e432e3a" kindref="member">KDEDefaultParams::initialSampleSize</ref>,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mcEntryCoef<sp/>=<sp/><ref refid="structmlpack_1_1kde_1_1KDEDefaultParams_1a646a8d6af4bad0e5e180f48a66f9545a" kindref="member">KDEDefaultParams::mcEntryCoef</ref>,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mcBreakCoef<sp/>=<sp/><ref refid="structmlpack_1_1kde_1_1KDEDefaultParams_1a382324ec45e8a9dd93c414c20a0a891a" kindref="member">KDEDefaultParams::mcBreakCoef</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel" kindref="compound">KDEModel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel" kindref="compound">KDEModel</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel" kindref="compound">KDEModel</ref>(<ref refid="classmlpack_1_1kde_1_1KDEModel" kindref="compound">KDEModel</ref>&amp;&amp;<sp/>other);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel" kindref="compound">KDEModel</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel" kindref="compound">KDEModel</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel" kindref="compound">KDEModel</ref>&amp;<sp/>operator=(<ref refid="classmlpack_1_1kde_1_1KDEModel" kindref="compound">KDEModel</ref>&amp;&amp;<sp/>other);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>~<ref refid="classmlpack_1_1kde_1_1KDEModel" kindref="compound">KDEModel</ref>();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>version);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="classmlpack_1_1kde_1_1KDEModel_1ae9cbd816179d6c36036139ccc8fea8c8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1ae9cbd816179d6c36036139ccc8fea8c8" kindref="member">Bandwidth</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bandwidth;<sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Bandwidth(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newBandwidth);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="classmlpack_1_1kde_1_1KDEModel_1a2cd3d49a6dcafe980d0734421d296828" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a2cd3d49a6dcafe980d0734421d296828" kindref="member">RelativeError</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>relError;<sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RelativeError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newRelError);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="classmlpack_1_1kde_1_1KDEModel_1aca74512f13027b15d913461e55df3da2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1aca74512f13027b15d913461e55df3da2" kindref="member">AbsoluteError</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>absError;<sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AbsoluteError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newAbsError);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="classmlpack_1_1kde_1_1KDEModel_1adb3d0b75d7754ec6741d890232576ffc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8d" kindref="member">TreeTypes</ref><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1adb3d0b75d7754ec6741d890232576ffc" kindref="member">TreeType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>treeType;<sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="classmlpack_1_1kde_1_1KDEModel_1a56b0460c7769ea1ef9d8314026ef36c6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a6597b8539c6114170dc185d332ba4c8d" kindref="member">TreeTypes</ref>&amp;<sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a56b0460c7769ea1ef9d8314026ef36c6" kindref="member">TreeType</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>treeType;<sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="classmlpack_1_1kde_1_1KDEModel_1a0f08fc745756dd035dcf6b42dddd4ed5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61" kindref="member">KernelTypes</ref><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a0f08fc745756dd035dcf6b42dddd4ed5" kindref="member">KernelType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kernelType;<sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="classmlpack_1_1kde_1_1KDEModel_1ad94d196c8fc2a42899de31332737dbf9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a0d0c6dc6893ad3824d5d31d87e69fb61" kindref="member">KernelTypes</ref>&amp;<sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1ad94d196c8fc2a42899de31332737dbf9" kindref="member">KernelType</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kernelType;<sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="classmlpack_1_1kde_1_1KDEModel_1aa7ca7b5a3a96b5603461debdc82f3c3e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1aa7ca7b5a3a96b5603461debdc82f3c3e" kindref="member">MonteCarlo</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>monteCarlo;<sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MonteCarlo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>newMonteCarlo);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="classmlpack_1_1kde_1_1KDEModel_1a539085b4f4f70fecec611fc7415d0299" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a539085b4f4f70fecec611fc7415d0299" kindref="member">MCProbability</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mcProb;<sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MCProbability(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newMCProb);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="classmlpack_1_1kde_1_1KDEModel_1a9c03312f8ff7dec25f32ba59dac70881" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a9c03312f8ff7dec25f32ba59dac70881" kindref="member">MCInitialSampleSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>initialSampleSize;<sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MCInitialSampleSize(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>newSampleSize);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="classmlpack_1_1kde_1_1KDEModel_1a0bd2b747cf6abfefe9095240199da326" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a0bd2b747cf6abfefe9095240199da326" kindref="member">MCEntryCoefficient</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mcEntryCoef;<sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MCEntryCoefficient(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newEntryCoef);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="classmlpack_1_1kde_1_1KDEModel_1a9c0a8d126dc31ef5571d89a1d8b6652a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a9c0a8d126dc31ef5571d89a1d8b6652a" kindref="member">MCBreakCoefficient</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mcBreakCoef;<sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MCBreakCoefficient(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newBreakCoef);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="classmlpack_1_1kde_1_1KDEModel_1a6f3cb532b850ad02807a209193ff2289" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacemlpack_1_1kde_1a0ff4f94721e558082ebf9d0ef6183d38" kindref="member">KDEMode</ref><sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a6f3cb532b850ad02807a209193ff2289" kindref="member">Mode</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kdeModel-&gt;<ref refid="classmlpack_1_1kde_1_1KDEWrapperBase_1ab38fc729a0a6f58a4d9ef6e38a9959cf" kindref="member">Mode</ref>();<sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="classmlpack_1_1kde_1_1KDEModel_1a94b40037a0d33cbb55823d5c36d677a7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacemlpack_1_1kde_1a0ff4f94721e558082ebf9d0ef6183d38" kindref="member">KDEMode</ref>&amp;<sp/><ref refid="classmlpack_1_1kde_1_1KDEModel_1a94b40037a0d33cbb55823d5c36d677a7" kindref="member">Mode</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kdeModel-&gt;<ref refid="classmlpack_1_1kde_1_1KDEWrapperBase_1ab38fc729a0a6f58a4d9ef6e38a9959cf" kindref="member">Mode</ref>();<sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InitializeModel();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BuildModel(<ref refid="classmlpack_1_1util_1_1Timers" kindref="compound">util::Timers</ref>&amp;<sp/>timers,<sp/>arma::mat&amp;&amp;<sp/>referenceSet);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Evaluate(<ref refid="classmlpack_1_1util_1_1Timers" kindref="compound">util::Timers</ref>&amp;<sp/>timers,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;&amp;<sp/>querySet,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>estimations);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Evaluate(<ref refid="classmlpack_1_1util_1_1Timers" kindref="compound">util::Timers</ref>&amp;<sp/>timers,<sp/>arma::vec&amp;<sp/>estimations);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CleanMemory();</highlight></codeline>
<codeline lineno="466"><highlight class="normal">};</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>kde</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;kde_model_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp"/>
  </compounddef>
</doxygen>
