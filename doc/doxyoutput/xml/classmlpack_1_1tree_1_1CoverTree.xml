<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1tree_1_1CoverTree" kind="class" language="C++" prot="public">
    <compoundname>mlpack::tree::CoverTree</compoundname>
    <includes refid="cover__tree_2cover__tree_8hpp" local="no">cover_tree.hpp</includes>
    <innerclass refid="classmlpack_1_1tree_1_1CoverTree_1_1DualTreeTraverser" prot="public">mlpack::tree::CoverTree::DualTreeTraverser</innerclass>
    <innerclass refid="classmlpack_1_1tree_1_1CoverTree_1_1SingleTreeTraverser" prot="public">mlpack::tree::CoverTree::SingleTreeTraverser</innerclass>
    <templateparamlist>
      <param>
        <type>typename MetricType</type>
        <defval><ref refid="classmlpack_1_1metric_1_1LMetric" kindref="compound">metric::LMetric</ref>&lt;2, true&gt;</defval>
      </param>
      <param>
        <type>typename StatisticType</type>
        <defval><ref refid="classmlpack_1_1tree_1_1EmptyStatistic" kindref="compound">EmptyStatistic</ref></defval>
      </param>
      <param>
        <type>typename MatType</type>
        <defval>arma::mat</defval>
      </param>
      <param>
        <type>typename RootPointPolicy</type>
        <defval><ref refid="classmlpack_1_1tree_1_1FirstPointIsRoot" kindref="compound">FirstPointIsRoot</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmlpack_1_1tree_1_1CoverTree_1aac99a3dcf43d40656d7043cab1693311" prot="public" static="no">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree_1_1DualTreeTraverser" kindref="compound">DualTreeTraverser</ref>&lt; RuleType &gt;</type>
        <definition>using BreadthFirstDualTreeTraverser =  DualTreeTraverser&lt;RuleType&gt;</definition>
        <argsstring></argsstring>
        <name>BreadthFirstDualTreeTraverser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="280" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" prot="public" static="no">
        <type>MatType::elem_type</type>
        <definition>typedef MatType::elem_type ElemType</definition>
        <argsstring></argsstring>
        <name>ElemType</name>
        <briefdescription>
<para>The type held by the matrix type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="105" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmlpack_1_1tree_1_1CoverTree_1a57758caa2e58c3fe05d1284eeabae523" prot="public" static="no">
        <type>MatType</type>
        <definition>typedef MatType Mat</definition>
        <argsstring></argsstring>
        <name>Mat</name>
        <briefdescription>
<para>So that other classes can access the matrix type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="103" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1CoverTree_1accaf150bc7a45a665c1f98d87e9f2106" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType base</definition>
        <argsstring></argsstring>
        <name>base</name>
        <briefdescription>
<para>The base used to construct the tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="446" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1CoverTree_1af173046a4c525104391ed6dc4e935a07" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> * &gt;</type>
        <definition>std::vector&lt;CoverTree*&gt; children</definition>
        <argsstring></argsstring>
        <name>children</name>
        <briefdescription>
<para>The list of children; the first is the self-child. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="442" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1CoverTree_1a829bf4b7b37982e2743e9d6452ebee43" prot="private" static="no" mutable="no">
        <type>const MatType *</type>
        <definition>const MatType* dataset</definition>
        <argsstring></argsstring>
        <name>dataset</name>
        <briefdescription>
<para>Reference to the matrix which this tree is built on. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="438" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1CoverTree_1a92d1356d87e45b82a7770940bec7d735" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t distanceComps</definition>
        <argsstring></argsstring>
        <name>distanceComps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="575" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="575" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1CoverTree_1abac6d3189ea06ff1b589cbf2e736568b" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType furthestDescendantDistance</definition>
        <argsstring></argsstring>
        <name>furthestDescendantDistance</name>
        <briefdescription>
<para>Distance to the furthest descendant. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="456" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1CoverTree_1a45317126bc67aa54aa15296b4facd2b9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool localDataset</definition>
        <argsstring></argsstring>
        <name>localDataset</name>
        <briefdescription>
<para>If true, we own the dataset and need to destroy it in the destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="460" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1CoverTree_1a2cd778c7312664040d56bea014423050" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool localMetric</definition>
        <argsstring></argsstring>
        <name>localMetric</name>
        <briefdescription>
<para>Whether or not we need to destroy the metric in the destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="458" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1CoverTree_1a8d3bc002fad76c5aca091f3bc8bf5744" prot="private" static="no" mutable="no">
        <type>MetricType *</type>
        <definition>MetricType* metric</definition>
        <argsstring></argsstring>
        <name>metric</name>
        <briefdescription>
<para>The metric used for this tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="462" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1CoverTree_1a21646c00540e6bb4fb8a311f0a0773c3" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t numDescendants</definition>
        <argsstring></argsstring>
        <name>numDescendants</name>
        <briefdescription>
<para>The number of descendant points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="450" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="450" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1CoverTree_1a1fd89bc2d3dc3728abd6a7785421fbd5" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> *</type>
        <definition>CoverTree* parent</definition>
        <argsstring></argsstring>
        <name>parent</name>
        <briefdescription>
<para>The parent node (NULL if this is the root of the tree). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="452" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1CoverTree_1a110be38965cb624d9e3b4d335f962806" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType parentDistance</definition>
        <argsstring></argsstring>
        <name>parentDistance</name>
        <briefdescription>
<para>Distance to the parent. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="454" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1CoverTree_1a300322e29fbf3c453628086b5fea082b" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t point</definition>
        <argsstring></argsstring>
        <name>point</name>
        <briefdescription>
<para>Index of the point in the matrix which this node represents. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="440" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1CoverTree_1a418e7934b5363ecde8269070181b3cef" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int scale</definition>
        <argsstring></argsstring>
        <name>scale</name>
        <briefdescription>
<para>Scale level of the node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="444" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1CoverTree_1a3bb6957cc0ee042b639ebc4b8b45fd37" prot="private" static="no" mutable="no">
        <type>StatisticType</type>
        <definition>StatisticType stat</definition>
        <argsstring></argsstring>
        <name>stat</name>
        <briefdescription>
<para>The instantiated statistic. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="448" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="448" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classmlpack_1_1tree_1_1CoverTree_1ab2f44cbb59a08132f4c843e5225bba0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class cereal::access</definition>
        <argsstring></argsstring>
        <name>cereal::access</name>
        <briefdescription>
<para>Friend access is given for the default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="562" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="562" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a3f43b81626f944c2ef781042e52c1750" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CoverTree</definition>
        <argsstring>(const MatType &amp;dataset, const ElemType base=2.0, MetricType *metric=NULL)</argsstring>
        <name>CoverTree</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>dataset</declname>
        </param>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
          <declname>base</declname>
          <defval>2.0</defval>
        </param>
        <param>
          <type>MetricType *</type>
          <declname>metric</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Create the cover tree with the given dataset and given base. </para>        </briefdescription>
        <detaileddescription>
<para>The dataset will not be modified during the building procedure (unlike <ref refid="classmlpack_1_1tree_1_1BinarySpaceTree" kindref="compound">BinarySpaceTree</ref>).</para><para>The last argument will be removed in mlpack 1.1.0 (see #274 and #273).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataset</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the dataset to build a tree on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>Base to use during tree building (default 2.0). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metric</parametername>
</parameternamelist>
<parameterdescription>
<para>Metric to use (default NULL). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a11c6565c66e76da821210ecc040959ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CoverTree</definition>
        <argsstring>(const MatType &amp;dataset, MetricType &amp;metric, const ElemType base=2.0)</argsstring>
        <name>CoverTree</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>dataset</declname>
        </param>
        <param>
          <type>MetricType &amp;</type>
          <declname>metric</declname>
        </param>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
          <declname>base</declname>
          <defval>2.0</defval>
        </param>
        <briefdescription>
<para>Create the cover tree with the given dataset and the given instantiated metric. </para>        </briefdescription>
        <detaileddescription>
<para>Optionally, set the base. The dataset will not be modified during the building procedure (unlike <ref refid="classmlpack_1_1tree_1_1BinarySpaceTree" kindref="compound">BinarySpaceTree</ref>).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataset</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the dataset to build a tree on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metric</parametername>
</parameternamelist>
<parameterdescription>
<para>Instantiated metric to use during tree building. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>Base to use during tree building (default 2.0). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1ab0073539371ad10a42720fa2d29f67aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CoverTree</definition>
        <argsstring>(MatType &amp;&amp;dataset, const ElemType base=2.0)</argsstring>
        <name>CoverTree</name>
        <param>
          <type>MatType &amp;&amp;</type>
          <declname>dataset</declname>
        </param>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
          <declname>base</declname>
          <defval>2.0</defval>
        </param>
        <briefdescription>
<para>Create the cover tree with the given dataset, taking ownership of the dataset. </para>        </briefdescription>
        <detaileddescription>
<para>Optionally, set the base.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataset</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the dataset to build a tree on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>Base to use during tree building (default 2.0). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1aacb7278d9ace042e3484c12f0a82e4a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CoverTree</definition>
        <argsstring>(MatType &amp;&amp;dataset, MetricType &amp;metric, const ElemType base=2.0)</argsstring>
        <name>CoverTree</name>
        <param>
          <type>MatType &amp;&amp;</type>
          <declname>dataset</declname>
        </param>
        <param>
          <type>MetricType &amp;</type>
          <declname>metric</declname>
        </param>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
          <declname>base</declname>
          <defval>2.0</defval>
        </param>
        <briefdescription>
<para>Create the cover tree with the given dataset and the given instantiated metric, taking ownership of the dataset. </para>        </briefdescription>
        <detaileddescription>
<para>Optionally, set the base.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataset</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the dataset to build a tree on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metric</parametername>
</parameternamelist>
<parameterdescription>
<para>Instantiated metric to use during tree building. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>Base to use during tree building (default 2.0). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a2386b0029af0f79ba6b7990b72760bab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CoverTree</definition>
        <argsstring>(const MatType &amp;dataset, const ElemType base, const size_t pointIndex, const int scale, CoverTree *parent, const ElemType parentDistance, arma::Col&lt; size_t &gt; &amp;indices, arma::vec &amp;distances, size_t nearSetSize, size_t &amp;farSetSize, size_t &amp;usedSetSize, MetricType &amp;metric=NULL)</argsstring>
        <name>CoverTree</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>dataset</declname>
        </param>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
          <declname>base</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>pointIndex</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>scale</declname>
        </param>
        <param>
          <type><ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
          <declname>parentDistance</declname>
        </param>
        <param>
          <type>arma::Col&lt; size_t &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>distances</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nearSetSize</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>farSetSize</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>usedSetSize</declname>
        </param>
        <param>
          <type>MetricType &amp;</type>
          <declname>metric</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Construct a child cover tree node. </para>        </briefdescription>
        <detaileddescription>
<para>This constructor is not meant to be used externally, but it could be used to insert another node into a tree. This procedure uses only one vector for the near set, the far set, and the used set (this is to prevent unnecessary memory allocation in recursive calls to this constructor). Therefore, the size of the near set, far set, and used set must be passed in. The near set will be entirely used up, and some of the far set may be used. The value of usedSetSize will be set to the number of points used in the construction of this node, and the value of farSetSize will be modified to reflect the number of points in the far set <emphasis>after</emphasis> the construction of this node.</para><para>If you are calling this manually, be careful that the given scale is as small as possible, or you may be creating an implicit node in your tree.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataset</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the dataset to build a tree on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>Base to use during tree building. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pointIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the point this node references. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>Scale of this level in the tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent of this node (NULL indicates no parent). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parentDistance</parametername>
</parameternamelist>
<parameterdescription>
<para>Distance to the parent node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>indices</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of indices, ordered [ nearSet | farSet | usedSet ]; will be modified to [ farSet | usedSet ]. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>distances</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of distances, ordered the same way as the indices. These represent the distances between the point specified by pointIndex and each point in the indices array. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nearSetSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the near set; if 0, this will be a leaf. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>farSetSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the far set; may be modified (if this node uses any points in the far set). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>usedSetSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of points used will be added to this number. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metric</parametername>
</parameternamelist>
<parameterdescription>
<para>Metric to use (default NULL). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a5d63518e019d8907dc87f51eccad0075" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CoverTree</definition>
        <argsstring>(const MatType &amp;dataset, const ElemType base, const size_t pointIndex, const int scale, CoverTree *parent, const ElemType parentDistance, const ElemType furthestDescendantDistance, MetricType *metric=NULL)</argsstring>
        <name>CoverTree</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>dataset</declname>
        </param>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
          <declname>base</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>pointIndex</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>scale</declname>
        </param>
        <param>
          <type><ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
          <declname>parentDistance</declname>
        </param>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
          <declname>furthestDescendantDistance</declname>
        </param>
        <param>
          <type>MetricType *</type>
          <declname>metric</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Manually construct a cover tree node; no tree assembly is done in this constructor, and children must be added manually (use <ref refid="classmlpack_1_1tree_1_1CoverTree_1a90f33ff64c79eae26cecb0da580edff5" kindref="member">Children()</ref>). </para>        </briefdescription>
        <detaileddescription>
<para>This constructor is useful when the tree is being &quot;imported&quot; into the <ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> class after being created in some other manner.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataset</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the dataset this node is a part of. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>Base that was used for tree building. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pointIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the point in the dataset which this node refers to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>Scale of this node&apos;s level in the tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent node (NULL indicates no parent). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parentDistance</parametername>
</parameternamelist>
<parameterdescription>
<para>Distance to parent node point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>furthestDescendantDistance</parametername>
</parameternamelist>
<parameterdescription>
<para>Distance to furthest descendant point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metric</parametername>
</parameternamelist>
<parameterdescription>
<para>Instantiated metric (optional). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="218" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a3777403406c60ded153be4d63064a543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CoverTree</definition>
        <argsstring>(const CoverTree &amp;other)</argsstring>
        <name>CoverTree</name>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Create a cover tree from another tree. </para>        </briefdescription>
        <detaileddescription>
<para>Be careful! This may use a lot of memory and take a lot of time. This will also make a copy of the dataset.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Cover tree to copy from. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="233" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1abd036d5c6e4ed6f889f1771bfc9b5b54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CoverTree</definition>
        <argsstring>(CoverTree &amp;&amp;other)</argsstring>
        <name>CoverTree</name>
        <param>
          <type><ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Move constructor for a Cover Tree, possess all the members of the given tree. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Cover Tree to move. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="241" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1ae18326cd02f05872a99e837e5f0081c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>CoverTree</definition>
        <argsstring>(Archive &amp;ar, const typename std::enable_if_t&lt; cereal::is_loading&lt; Archive &gt;()&gt; *=0)</argsstring>
        <name>CoverTree</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const typename <ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt; <ref refid="namespacecereal_1ad79f9b690399d7e8aad9e7fc9ef3b797" kindref="member">cereal::is_loading</ref>&lt; Archive &gt;()&gt; *</type>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Create a cover tree from a cereal archive. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="261" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1addb637c59f0e955dd9dd5bcd683fa686" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~CoverTree</definition>
        <argsstring>()</argsstring>
        <name>~CoverTree</name>
        <briefdescription>
<para>Delete this cover tree node and its children. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a51045cdd7ef57652ef25ff6deffe493a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType Base</definition>
        <argsstring>() const</argsstring>
        <name>Base</name>
        <briefdescription>
<para>Get the base. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="320" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="320" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1af32485882a0cdffe3f00333784c149eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref> &amp;</type>
        <definition>ElemType&amp; Base</definition>
        <argsstring>()</argsstring>
        <name>Base</name>
        <briefdescription>
<para>Modify the base; don&apos;t do this, you&apos;ll break everything. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="322" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="322" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1aa800439660375c0253008cafa648da78" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Center</definition>
        <argsstring>(arma::vec &amp;center) const</argsstring>
        <name>Center</name>
        <param>
          <type>arma::vec &amp;</type>
          <declname>center</declname>
        </param>
        <briefdescription>
<para>Get the center of the node and store it in the given vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="428" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="428" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1adb93f04eb20ed732ec48b6e07128186b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> &amp;</type>
        <definition>const CoverTree&amp; Child</definition>
        <argsstring>(const size_t index) const</argsstring>
        <name>Child</name>
        <param>
          <type>const size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get a particular child node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="294" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="294" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1afa7a363aeb37212be36fc9f66506ccc7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> &amp;</type>
        <definition>CoverTree&amp; Child</definition>
        <argsstring>(const size_t index)</argsstring>
        <name>Child</name>
        <param>
          <type>const size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Modify a particular child node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="296" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="296" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a0284ae2b6f380c4f342c7b6a7b9a2e51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> *&amp;</type>
        <definition>CoverTree*&amp; ChildPtr</definition>
        <argsstring>(const size_t index)</argsstring>
        <name>ChildPtr</name>
        <param>
          <type>const size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="298" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="298" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1ac581755aea3bdeaa509dda3ae36d83ba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> * &gt; &amp;</type>
        <definition>const std::vector&lt;CoverTree*&gt;&amp; Children</definition>
        <argsstring>() const</argsstring>
        <name>Children</name>
        <briefdescription>
<para>Get the children. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="304" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="304" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a90f33ff64c79eae26cecb0da580edff5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> * &gt; &amp;</type>
        <definition>std::vector&lt;CoverTree*&gt;&amp; Children</definition>
        <argsstring>()</argsstring>
        <name>Children</name>
        <briefdescription>
<para>Modify the children manually (maybe not a great idea). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="306" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="306" bodyend="306"/>
        <references refid="classmlpack_1_1tree_1_1CoverTree_1aa732ea3eeb38529c549fd4d15d8655be">CoverTree&lt; MetricType, StatisticType, MatType, RootPointPolicy &gt;::Descendant</references>
        <references refid="classmlpack_1_1tree_1_1CoverTree_1a2a85eb34222f1fc073940e8c89274e81">CoverTree&lt; MetricType, StatisticType, MatType, RootPointPolicy &gt;::NumDescendants</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a4c3764c98d5804083a9ec2c867eb9366" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const MatType &amp;</type>
        <definition>const MatType&amp; Dataset</definition>
        <argsstring>() const</argsstring>
        <name>Dataset</name>
        <briefdescription>
<para>Get a reference to the dataset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="283" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="283" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1aa732ea3eeb38529c549fd4d15d8655be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Descendant</definition>
        <argsstring>(const size_t index) const</argsstring>
        <name>Descendant</name>
        <param>
          <type>const size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get the index of a particular descendant point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="312" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1CoverTree_1a90f33ff64c79eae26cecb0da580edff5" compoundref="cover__tree_2cover__tree_8hpp" startline="306" endline="306">CoverTree&lt; MetricType, StatisticType, MatType, RootPointPolicy &gt;::Children</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a7be1f01295fcc373795004d746d322c7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t DistanceComps</definition>
        <argsstring>() const</argsstring>
        <name>DistanceComps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="571" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="571" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a35de97abd8fb6701fa9d14aeae13ca8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t &amp;</type>
        <definition>size_t&amp; DistanceComps</definition>
        <argsstring>()</argsstring>
        <name>DistanceComps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="572" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="572" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1adc597088eadfcfa3060336d0484ab573" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType FurthestDescendantDistance</definition>
        <argsstring>() const</argsstring>
        <name>FurthestDescendantDistance</name>
        <briefdescription>
<para>Get the distance from the center of the node to the furthest descendant. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="417" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="417" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1aae17d614e8bd97bae2a3f8ade36bcffe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref> &amp;</type>
        <definition>ElemType&amp; FurthestDescendantDistance</definition>
        <argsstring>()</argsstring>
        <name>FurthestDescendantDistance</name>
        <briefdescription>
<para>Modify the distance from the center of the node to the furthest descendant. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="421" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="421" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1acbe82a6439f71405b5801ca7d941cbfb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType FurthestPointDistance</definition>
        <argsstring>() const</argsstring>
        <name>FurthestPointDistance</name>
        <briefdescription>
<para>Get the distance to the furthest point. This is always 0 for cover trees. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="414" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="414" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a0257281722537c7916db7763623f67f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VecType</type>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t GetFurthestChild</definition>
        <argsstring>(const VecType &amp;point, typename std::enable_if_t&lt; IsVector&lt; VecType &gt;::value &gt; *=0)</argsstring>
        <name>GetFurthestChild</name>
        <param>
          <type>const VecType &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>typename <ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt; <ref refid="structIsVector" kindref="compound">IsVector</ref>&lt; VecType &gt;::value &gt; *</type>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Return the index of the furthest child node to the given query point. </para>        </briefdescription>
        <detaileddescription>
<para>If this is a leaf node, it will return <ref refid="classmlpack_1_1tree_1_1CoverTree_1a1f7ec083be66d58a3e02e12956bf005e" kindref="member">NumChildren()</ref> (invalid index). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="343" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1CoverTree_1aac2d3c104b89109f3df4a9a8cad244da" compoundref="cover__tree_2cover__tree_8hpp" startline="327" endline="327">CoverTree&lt; MetricType, StatisticType, MatType, RootPointPolicy &gt;::Stat</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1ac33b5915ee9d32fbeef8e3237cc5e4a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GetFurthestChild</definition>
        <argsstring>(const CoverTree &amp;queryNode)</argsstring>
        <name>GetFurthestChild</name>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> &amp;</type>
          <declname>queryNode</declname>
        </param>
        <briefdescription>
<para>Return the index of the furthest child node to the given query node. </para>        </briefdescription>
        <detaileddescription>
<para>If it can&apos;t decide, it will return <ref refid="classmlpack_1_1tree_1_1CoverTree_1a1f7ec083be66d58a3e02e12956bf005e" kindref="member">NumChildren()</ref> (invalid index). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="357" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a19b9a5fd41d8e192b62effb1445bd410" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VecType</type>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t GetNearestChild</definition>
        <argsstring>(const VecType &amp;point, typename std::enable_if_t&lt; IsVector&lt; VecType &gt;::value &gt; *=0)</argsstring>
        <name>GetNearestChild</name>
        <param>
          <type>const VecType &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>typename <ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt; <ref refid="structIsVector" kindref="compound">IsVector</ref>&lt; VecType &gt;::value &gt; *</type>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Return the index of the nearest child node to the given query point. </para>        </briefdescription>
        <detaileddescription>
<para>If this is a leaf node, it will return <ref refid="classmlpack_1_1tree_1_1CoverTree_1a1f7ec083be66d58a3e02e12956bf005e" kindref="member">NumChildren()</ref> (invalid index). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="334" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1CoverTree_1aac2d3c104b89109f3df4a9a8cad244da" compoundref="cover__tree_2cover__tree_8hpp" startline="327" endline="327">CoverTree&lt; MetricType, StatisticType, MatType, RootPointPolicy &gt;::Stat</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1ab1ce3c7e531dcea920aa3fc88cb79f4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GetNearestChild</definition>
        <argsstring>(const CoverTree &amp;queryNode)</argsstring>
        <name>GetNearestChild</name>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> &amp;</type>
          <declname>queryNode</declname>
        </param>
        <briefdescription>
<para>Return the index of the nearest child node to the given query node. </para>        </briefdescription>
        <detaileddescription>
<para>If it can&apos;t decide, it will return <ref refid="classmlpack_1_1tree_1_1CoverTree_1a1f7ec083be66d58a3e02e12956bf005e" kindref="member">NumChildren()</ref> (invalid index). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="351" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1aa0f4813924e6cdee43b45050bb947abe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsLeaf</definition>
        <argsstring>() const</argsstring>
        <name>IsLeaf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="290" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="290" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a03a85c9b3e3967ac6ff9107fc9fe8c60" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType MaxDistance</definition>
        <argsstring>(const CoverTree &amp;other) const</argsstring>
        <name>MaxDistance</name>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Return the maximum distance to another node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="374" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1CoverTree_1aac2d3c104b89109f3df4a9a8cad244da" compoundref="cover__tree_2cover__tree_8hpp" startline="327" endline="327">CoverTree&lt; MetricType, StatisticType, MatType, RootPointPolicy &gt;::Stat</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a97a2a15f4c4e0e0de51d90117dca6cb7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType MaxDistance</definition>
        <argsstring>(const CoverTree &amp;other, const ElemType distance) const</argsstring>
        <name>MaxDistance</name>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
          <declname>distance</declname>
        </param>
        <briefdescription>
<para>Return the maximum distance to another node given that the point-to-point distance has already been calculated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="378" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a88dfc32f4c701197670b839b02181f60" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType MaxDistance</definition>
        <argsstring>(const arma::vec &amp;other) const</argsstring>
        <name>MaxDistance</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Return the maximum distance to another point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="381" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a079e3ebb15f63b1d94661f9e87e39dd2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType MaxDistance</definition>
        <argsstring>(const arma::vec &amp;other, const ElemType distance) const</argsstring>
        <name>MaxDistance</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
          <declname>distance</declname>
        </param>
        <briefdescription>
<para>Return the maximum distance to another point given that the distance from the center to the point has already been calculated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="385" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1aab4999ec031306bc508cca8ea8f1889b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>MetricType &amp;</type>
        <definition>MetricType&amp; Metric</definition>
        <argsstring>() const</argsstring>
        <name>Metric</name>
        <briefdescription>
<para>Get the instantiated metric. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="434" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="434" bodyend="434"/>
        <references refid="classmlpack_1_1tree_1_1CoverTree_1a6691991a6b8cd438a03368dc3c5f4b95">CoverTree&lt; MetricType, StatisticType, MatType, RootPointPolicy &gt;::CoverTree</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a9d7c3fc69a509a305d08e1f3250002de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType MinDistance</definition>
        <argsstring>(const CoverTree &amp;other) const</argsstring>
        <name>MinDistance</name>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Return the minimum distance to another node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="360" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1CoverTree_1aac2d3c104b89109f3df4a9a8cad244da" compoundref="cover__tree_2cover__tree_8hpp" startline="327" endline="327">CoverTree&lt; MetricType, StatisticType, MatType, RootPointPolicy &gt;::Stat</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a5696d6c26ff7adbafbf2400c61e9c5b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType MinDistance</definition>
        <argsstring>(const CoverTree &amp;other, const ElemType distance) const</argsstring>
        <name>MinDistance</name>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
          <declname>distance</declname>
        </param>
        <briefdescription>
<para>Return the minimum distance to another node given that the point-to-point distance has already been calculated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="364" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a9bc4caf2b12327ccf0572bb2d47a69b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType MinDistance</definition>
        <argsstring>(const arma::vec &amp;other) const</argsstring>
        <name>MinDistance</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Return the minimum distance to another point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="367" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a15f02ed8d02d6f56ad62673e3b192ed3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType MinDistance</definition>
        <argsstring>(const arma::vec &amp;other, const ElemType distance) const</argsstring>
        <name>MinDistance</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
          <declname>distance</declname>
        </param>
        <briefdescription>
<para>Return the minimum distance to another point given that the distance from the center to the point has already been calculated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="371" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a20a4e92da6066eb335a576b7f9cd0415" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType MinimumBoundDistance</definition>
        <argsstring>() const</argsstring>
        <name>MinimumBoundDistance</name>
        <briefdescription>
<para>Get the minimum distance from the center to any bound edge (this is the same as furthestDescendantDistance). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="425" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="425" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a1f7ec083be66d58a3e02e12956bf005e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t NumChildren</definition>
        <argsstring>() const</argsstring>
        <name>NumChildren</name>
        <briefdescription>
<para>Get the number of children. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="301" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="301" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a2a85eb34222f1fc073940e8c89274e81" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t NumDescendants</definition>
        <argsstring>() const</argsstring>
        <name>NumDescendants</name>
        <briefdescription>
<para>Get the number of descendant points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="309" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1CoverTree_1a90f33ff64c79eae26cecb0da580edff5" compoundref="cover__tree_2cover__tree_8hpp" startline="306" endline="306">CoverTree&lt; MetricType, StatisticType, MatType, RootPointPolicy &gt;::Children</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a352077c26368da0ee570c0b7f062b1e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t NumPoints</definition>
        <argsstring>() const</argsstring>
        <name>NumPoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="291" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="291" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1acbaf407e14b2b2cd50853a83e12380e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> &amp;</type>
        <definition>CoverTree&amp; operator=</definition>
        <argsstring>(const CoverTree &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy the given Cover Tree. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The tree to be copied. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="248" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1aee044966da9dba5e263fba874fb742e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> &amp;</type>
        <definition>CoverTree&amp; operator=</definition>
        <argsstring>(CoverTree &amp;&amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Take ownership of the given Cover Tree. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The tree to take ownership of. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="255" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1ac68716eaa24588f11642fe35a0b0a6a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> *</type>
        <definition>CoverTree* Parent</definition>
        <argsstring>() const</argsstring>
        <name>Parent</name>
        <briefdescription>
<para>Get the parent node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="404" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="404" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a19755c56b49ec82deaa09e00c6771eb6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> *&amp;</type>
        <definition>CoverTree*&amp; Parent</definition>
        <argsstring>()</argsstring>
        <name>Parent</name>
        <briefdescription>
<para>Modify the parent node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="406" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="406" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1af44ed4e7bfea088689caed082da67e17" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
        <definition>ElemType ParentDistance</definition>
        <argsstring>() const</argsstring>
        <name>ParentDistance</name>
        <briefdescription>
<para>Get the distance to the parent. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="409" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="409" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1aa22ead21ac809efb970b90ec014dc318" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref> &amp;</type>
        <definition>ElemType&amp; ParentDistance</definition>
        <argsstring>()</argsstring>
        <name>ParentDistance</name>
        <briefdescription>
<para>Modify the distance to the parent. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="411" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="411" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a4a252939c8d0bc18169f72b8ea4741a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Point</definition>
        <argsstring>() const</argsstring>
        <name>Point</name>
        <briefdescription>
<para>Get the index of the point which this node represents. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="286" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="286" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1ae2cd8fc8591e2d7c222f120bb35abd1a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Point</definition>
        <argsstring>(const size_t) const</argsstring>
        <name>Point</name>
        <param>
          <type>const size_t</type>
        </param>
        <briefdescription>
<para>For compatibility with other trees; the argument is ignored. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="288" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="288" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a79946ce2f635d5731b5558ad4e8410cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>math::RangeType&lt; <ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref> &gt;</type>
        <definition>math::RangeType&lt;ElemType&gt; RangeDistance</definition>
        <argsstring>(const CoverTree &amp;other) const</argsstring>
        <name>RangeDistance</name>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Return the minimum and maximum distance to another node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="388" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1CoverTree_1aac2d3c104b89109f3df4a9a8cad244da" compoundref="cover__tree_2cover__tree_8hpp" startline="327" endline="327">CoverTree&lt; MetricType, StatisticType, MatType, RootPointPolicy &gt;::Stat</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1ab4dabd8a1ef126a8fbeba28466db4a12" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>math::RangeType&lt; <ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref> &gt;</type>
        <definition>math::RangeType&lt;ElemType&gt; RangeDistance</definition>
        <argsstring>(const CoverTree &amp;other, const ElemType distance) const</argsstring>
        <name>RangeDistance</name>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
          <declname>distance</declname>
        </param>
        <briefdescription>
<para>Return the minimum and maximum distance to another node given that the point-to-point distance has already been calculated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="392" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1adad110287e2b644778a7c572a21144ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>math::RangeType&lt; <ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref> &gt;</type>
        <definition>math::RangeType&lt;ElemType&gt; RangeDistance</definition>
        <argsstring>(const arma::vec &amp;other) const</argsstring>
        <name>RangeDistance</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Return the minimum and maximum distance to another point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="396" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a326e0150de98039e6b9db9a89adc4275" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>math::RangeType&lt; <ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref> &gt;</type>
        <definition>math::RangeType&lt;ElemType&gt; RangeDistance</definition>
        <argsstring>(const arma::vec &amp;other, const ElemType distance) const</argsstring>
        <name>RangeDistance</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
          <declname>distance</declname>
        </param>
        <briefdescription>
<para>Return the minimum and maximum distance to another point given that the point-to-point distance has already been calculated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="400" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a8dd9a9752971834a6c42ec7e45b71c84" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Scale</definition>
        <argsstring>() const</argsstring>
        <name>Scale</name>
        <briefdescription>
<para>Get the scale of this node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="315" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="315" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a1bbfde922cf6700d130c5be70a5d7dd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int &amp;</type>
        <definition>int&amp; Scale</definition>
        <argsstring>()</argsstring>
        <name>Scale</name>
        <briefdescription>
<para>Modify the scale of this node. Be careful... </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="317" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="317" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="569" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1ad8b29c84ac793742cd15834f9f4c4f31" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const StatisticType &amp;</type>
        <definition>const StatisticType&amp; Stat</definition>
        <argsstring>() const</argsstring>
        <name>Stat</name>
        <briefdescription>
<para>Get the statistic for this node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="325" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="325" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1aac2d3c104b89109f3df4a9a8cad244da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>StatisticType &amp;</type>
        <definition>StatisticType&amp; Stat</definition>
        <argsstring>()</argsstring>
        <name>Stat</name>
        <briefdescription>
<para>Modify the statistic for this node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="327" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="327" bodyend="327"/>
        <references refid="classmlpack_1_1tree_1_1CoverTree_1a0257281722537c7916db7763623f67f7">CoverTree&lt; MetricType, StatisticType, MatType, RootPointPolicy &gt;::GetFurthestChild</references>
        <references refid="classmlpack_1_1tree_1_1CoverTree_1a19b9a5fd41d8e192b62effb1445bd410">CoverTree&lt; MetricType, StatisticType, MatType, RootPointPolicy &gt;::GetNearestChild</references>
        <references refid="classmlpack_1_1tree_1_1CoverTree_1a03a85c9b3e3967ac6ff9107fc9fe8c60">CoverTree&lt; MetricType, StatisticType, MatType, RootPointPolicy &gt;::MaxDistance</references>
        <references refid="classmlpack_1_1tree_1_1CoverTree_1a9d7c3fc69a509a305d08e1f3250002de">CoverTree&lt; MetricType, StatisticType, MatType, RootPointPolicy &gt;::MinDistance</references>
        <references refid="classmlpack_1_1tree_1_1CoverTree_1a79946ce2f635d5731b5558ad4e8410cf">CoverTree&lt; MetricType, StatisticType, MatType, RootPointPolicy &gt;::RangeDistance</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a67163900fd5e8cc041631fcfb7ac103d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ComputeDistances</definition>
        <argsstring>(const size_t pointIndex, const arma::Col&lt; size_t &gt; &amp;indices, arma::vec &amp;distances, const size_t pointSetSize)</argsstring>
        <name>ComputeDistances</name>
        <param>
          <type>const size_t</type>
          <declname>pointIndex</declname>
        </param>
        <param>
          <type>const arma::Col&lt; size_t &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>distances</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>pointSetSize</declname>
        </param>
        <briefdescription>
<para>Fill the vector of distances with the distances between the point specified by pointIndex and each point in the indices array. </para>        </briefdescription>
        <detaileddescription>
<para>The distances of the first pointSetSize points in indices are calculated (so, this does not necessarily need to use all of the points in the arrays).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pointIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to build the distances for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>indices</parametername>
</parameternamelist>
<parameterdescription>
<para>List of indices to compute distances for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>distances</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to store calculated distances in. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pointSetSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points in arrays to calculate distances for. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="484" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a91e407e2790503cc5e17f7526961a681" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CreateChildren</definition>
        <argsstring>(arma::Col&lt; size_t &gt; &amp;indices, arma::vec &amp;distances, size_t nearSetSize, size_t &amp;farSetSize, size_t &amp;usedSetSize)</argsstring>
        <name>CreateChildren</name>
        <param>
          <type>arma::Col&lt; size_t &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>distances</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nearSetSize</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>farSetSize</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>usedSetSize</declname>
        </param>
        <briefdescription>
<para>Create the children for this node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="467" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1affd2cee484b388c5ee94ea6d4feaaa89" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MoveToUsedSet</definition>
        <argsstring>(arma::Col&lt; size_t &gt; &amp;indices, arma::vec &amp;distances, size_t &amp;nearSetSize, size_t &amp;farSetSize, size_t &amp;usedSetSize, arma::Col&lt; size_t &gt; &amp;childIndices, const size_t childFarSetSize, const size_t childUsedSetSize)</argsstring>
        <name>MoveToUsedSet</name>
        <param>
          <type>arma::Col&lt; size_t &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>distances</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>nearSetSize</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>farSetSize</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>usedSetSize</declname>
        </param>
        <param>
          <type>arma::Col&lt; size_t &gt; &amp;</type>
          <declname>childIndices</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>childFarSetSize</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>childUsedSetSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="532" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1aadb643d6d603ebe320f58105fbdf61a9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t PruneFarSet</definition>
        <argsstring>(arma::Col&lt; size_t &gt; &amp;indices, arma::vec &amp;distances, const ElemType bound, const size_t nearSetSize, const size_t pointSetSize)</argsstring>
        <name>PruneFarSet</name>
        <param>
          <type>arma::Col&lt; size_t &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>distances</declname>
        </param>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
          <declname>bound</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>nearSetSize</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>pointSetSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="540" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1adef8236801cdff1d38aa6be6836b6419" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RemoveNewImplicitNodes</definition>
        <argsstring>()</argsstring>
        <name>RemoveNewImplicitNodes</name>
        <briefdescription>
<para>Take a look at the last child (the most recently created one) and remove any implicit nodes that have been created. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="550" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a2d07580bbdcfea3a09e2d267a08e6cad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t SortPointSet</definition>
        <argsstring>(arma::Col&lt; size_t &gt; &amp;indices, arma::vec &amp;distances, const size_t childFarSetSize, const size_t childUsedSetSize, const size_t farSetSize)</argsstring>
        <name>SortPointSet</name>
        <param>
          <type>arma::Col&lt; size_t &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>distances</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>childFarSetSize</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>childUsedSetSize</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>farSetSize</declname>
        </param>
        <briefdescription>
<para>Assuming that the list of indices and distances is sorted as [ childFarSet | childUsedSet | farSet | usedSet ], resort the sets so the organization is [ childFarSet | farSet | childUsedSet | usedSet ]. </para>        </briefdescription>
        <detaileddescription>
<para>The size_t parameters specify the sizes of each set in the array. Only the ordering of the indices and distances arrays will be modified (not their actual contents).</para><para>The size of any of the four sets can be zero and this method will handle that case accordingly.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indices</parametername>
</parameternamelist>
<parameterdescription>
<para>List of indices to sort. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>distances</parametername>
</parameternamelist>
<parameterdescription>
<para>List of distances to sort. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>childFarSetSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points in child far set (childFarSet). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>childUsedSetSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points in child used set (childUsedSet). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>farSetSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points in far set (farSet). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="526" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a33bd27fe3e575fbeacc2489f7232f9db" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t SplitNearFar</definition>
        <argsstring>(arma::Col&lt; size_t &gt; &amp;indices, arma::vec &amp;distances, const ElemType bound, const size_t pointSetSize)</argsstring>
        <name>SplitNearFar</name>
        <param>
          <type>arma::Col&lt; size_t &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>distances</declname>
        </param>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref></type>
          <declname>bound</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>pointSetSize</declname>
        </param>
        <briefdescription>
<para>Split the given indices and distances into a near and a far set, returning the number of points in the near set. </para>        </briefdescription>
        <detaileddescription>
<para>The distances must already be initialized. This will order the indices and distances such that the points in the near set make up the first part of the array and the far set makes up the rest: [ nearSet | farSet ].</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indices</parametername>
</parameternamelist>
<parameterdescription>
<para>List of indices; will be reordered. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>distances</parametername>
</parameternamelist>
<parameterdescription>
<para>List of distances; will be reordered. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bound</parametername>
</parameternamelist>
<parameterdescription>
<para>If the distance is less than or equal to this bound, the point is placed into the near set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pointSetSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of point set (because we may be sorting a smaller list than the indices vector will hold). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="502" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1CoverTree_1a6691991a6b8cd438a03368dc3c5f4b95" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CoverTree</definition>
        <argsstring>()</argsstring>
        <name>CoverTree</name>
        <briefdescription>
<para>A default constructor. </para>        </briefdescription>
        <detaileddescription>
<para>This is meant to only be used with cereal, which is allowed with the friend declaration below. This does not return a valid tree! This method must be protected, so that the serialization shim can work with the default constructor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="559" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1CoverTree_1aab4999ec031306bc508cca8ea8f1889b" compoundref="cover__tree_2cover__tree_8hpp" startline="434" endline="434">CoverTree&lt; MetricType, StatisticType, MatType, RootPointPolicy &gt;::Metric</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A cover tree is a tree specifically designed to speed up nearest-neighbor computation in high-dimensional spaces. </para>    </briefdescription>
    <detaileddescription>
<para>Each non-leaf node references a point and has a nonzero number of children, including a &quot;self-child&quot; which references the same point. A leaf node represents only one point.</para><para>The tree can be thought of as a hierarchy with the root node at the top level and the leaf nodes at the bottom level. Each level in the tree has an assigned &apos;scale&apos; i. The tree follows these two invariants:</para><para><itemizedlist>
<listitem><para>nesting: the level C_i is a subset of the level C_{i - 1}.</para></listitem><listitem><para>covering: all node in level C_{i - 1} have at least one node in the level C_i with distance less than or equal to b^i (exactly one of these is a parent of the point in level C_{i - 1}.</para></listitem></itemizedlist>
</para><para>Note that in the cover tree paper, there is a third invariant (the &apos;separation invariant&apos;), but that does not apply to our implementation, because we have relaxed the invariant.</para><para>The value &apos;b&apos; refers to the base, which is a parameter of the tree. These three properties make the cover tree very good for fast, high-dimensional nearest-neighbor search.</para><para>The theoretical structure of the tree contains many &apos;implicit&apos; nodes which only have a &quot;self-child&quot; (a child referencing the same point, but at a lower scale level). This practical implementation only constructs explicit nodes <ndash/> non-leaf nodes with more than one child. A leaf node has no children, and its scale level is INT_MIN.</para><para>For more information on cover trees, see</para><para><programlisting><codeline><highlight class="normal">@inproceedings{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>author<sp/>=<sp/>{Beygelzimer,<sp/>Alina<sp/>and<sp/>Kakade,<sp/>Sham<sp/>and<sp/>Langford,<sp/>John},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>title<sp/>=<sp/>{Cover<sp/>trees<sp/>for<sp/>nearest<sp/>neighbor},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>booktitle<sp/>=<sp/>{Proceedings<sp/>of<sp/>the<sp/>23rd<sp/>International<sp/>Conference<sp/>on<sp/>Machine</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Learning},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>series<sp/>=<sp/>{ICML<sp/>&apos;06},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>year<sp/>=<sp/>{2006},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>pages<sp/>=<sp/>{97--104]</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para>For information on runtime bounds of the nearest-neighbor computation using cover trees, see the following paper, presented at NIPS 2009:</para><para><programlisting><codeline><highlight class="normal">@inproceedings{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>author<sp/>=<sp/>{Ram,<sp/>P.,<sp/>and<sp/>Lee,<sp/>D.,<sp/>and<sp/>March,<sp/>W.B.,<sp/>and<sp/>Gray,<sp/>A.G.},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>title<sp/>=<sp/>{Linear-time<sp/>Algorithms<sp/>for<sp/>Pairwise<sp/>Statistical<sp/>Problems},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>booktitle<sp/>=<sp/>{Advances<sp/>in<sp/>Neural<sp/>Information<sp/>Processing<sp/>Systems<sp/>22},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>editor<sp/>=<sp/>{Y.<sp/>Bengio<sp/>and<sp/>D.<sp/>Schuurmans<sp/>and<sp/>J.<sp/>Lafferty<sp/>and<sp/>C.K.I.<sp/>Williams</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>and<sp/>A.<sp/>Culotta},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>pages<sp/>=<sp/>{1527--1535},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>year<sp/>=<sp/>{2009}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para>The <ref refid="classmlpack_1_1tree_1_1CoverTree" kindref="compound">CoverTree</ref> class offers three template parameters; a custom metric type can be used with MetricType (this class defaults to the L2-squared metric). The root node&apos;s point can be chosen with the RootPointPolicy; by default, the <ref refid="classmlpack_1_1tree_1_1FirstPointIsRoot" kindref="compound">FirstPointIsRoot</ref> policy is used, meaning the first point in the dataset is used. The StatisticType policy allows you to define statistics which can be gathered during the creation of the tree.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>MetricType</parametername>
</parameternamelist>
<parameterdescription>
<para>Metric type to use during tree construction. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RootPointPolicy</parametername>
</parameternamelist>
<parameterdescription>
<para>Determines which point to use as the root node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>StatisticType</parametername>
</parameternamelist>
<parameterdescription>
<para>Statistic to be used during tree creation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MatType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of matrix to build the tree on (generally mat or sp_mat). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" line="100" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/cover_tree/cover_tree.hpp" bodystart="99" bodyend="576"/>
    <listofallmembers>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1accaf150bc7a45a665c1f98d87e9f2106" prot="private" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>base</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a51045cdd7ef57652ef25ff6deffe493a" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>Base</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1af32485882a0cdffe3f00333784c149eb" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>Base</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1aac99a3dcf43d40656d7043cab1693311" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>BreadthFirstDualTreeTraverser</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1aa800439660375c0253008cafa648da78" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>Center</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1adb93f04eb20ed732ec48b6e07128186b" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>Child</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1afa7a363aeb37212be36fc9f66506ccc7" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>Child</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a0284ae2b6f380c4f342c7b6a7b9a2e51" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>ChildPtr</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1af173046a4c525104391ed6dc4e935a07" prot="private" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>children</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1ac581755aea3bdeaa509dda3ae36d83ba" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>Children</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a90f33ff64c79eae26cecb0da580edff5" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>Children</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a67163900fd5e8cc041631fcfb7ac103d" prot="private" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>ComputeDistances</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a3f43b81626f944c2ef781042e52c1750" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>CoverTree</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a11c6565c66e76da821210ecc040959ea" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>CoverTree</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1ab0073539371ad10a42720fa2d29f67aa" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>CoverTree</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1aacb7278d9ace042e3484c12f0a82e4a3" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>CoverTree</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a2386b0029af0f79ba6b7990b72760bab" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>CoverTree</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a5d63518e019d8907dc87f51eccad0075" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>CoverTree</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a3777403406c60ded153be4d63064a543" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>CoverTree</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1abd036d5c6e4ed6f889f1771bfc9b5b54" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>CoverTree</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1ae18326cd02f05872a99e837e5f0081c5" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>CoverTree</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a6691991a6b8cd438a03368dc3c5f4b95" prot="protected" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>CoverTree</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a91e407e2790503cc5e17f7526961a681" prot="private" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>CreateChildren</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a829bf4b7b37982e2743e9d6452ebee43" prot="private" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>dataset</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a4c3764c98d5804083a9ec2c867eb9366" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>Dataset</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1aa732ea3eeb38529c549fd4d15d8655be" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>Descendant</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a92d1356d87e45b82a7770940bec7d735" prot="private" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>distanceComps</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a7be1f01295fcc373795004d746d322c7" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>DistanceComps</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a35de97abd8fb6701fa9d14aeae13ca8b" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>DistanceComps</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a227d0c7e23e98fcd6c81ecab357a791f" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>ElemType</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1adc597088eadfcfa3060336d0484ab573" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>FurthestDescendantDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1aae17d614e8bd97bae2a3f8ade36bcffe" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>FurthestDescendantDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1abac6d3189ea06ff1b589cbf2e736568b" prot="private" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>furthestDescendantDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1acbe82a6439f71405b5801ca7d941cbfb" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>FurthestPointDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a0257281722537c7916db7763623f67f7" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>GetFurthestChild</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1ac33b5915ee9d32fbeef8e3237cc5e4a5" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>GetFurthestChild</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a19b9a5fd41d8e192b62effb1445bd410" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>GetNearestChild</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1ab1ce3c7e531dcea920aa3fc88cb79f4a" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>GetNearestChild</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1aa0f4813924e6cdee43b45050bb947abe" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>IsLeaf</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a45317126bc67aa54aa15296b4facd2b9" prot="private" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>localDataset</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a2cd778c7312664040d56bea014423050" prot="private" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>localMetric</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a57758caa2e58c3fe05d1284eeabae523" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>Mat</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a03a85c9b3e3967ac6ff9107fc9fe8c60" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>MaxDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a97a2a15f4c4e0e0de51d90117dca6cb7" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>MaxDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a88dfc32f4c701197670b839b02181f60" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>MaxDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a079e3ebb15f63b1d94661f9e87e39dd2" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>MaxDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a8d3bc002fad76c5aca091f3bc8bf5744" prot="private" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>metric</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1aab4999ec031306bc508cca8ea8f1889b" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>Metric</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a9d7c3fc69a509a305d08e1f3250002de" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>MinDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a5696d6c26ff7adbafbf2400c61e9c5b3" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>MinDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a9bc4caf2b12327ccf0572bb2d47a69b4" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>MinDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a15f02ed8d02d6f56ad62673e3b192ed3" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>MinDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a20a4e92da6066eb335a576b7f9cd0415" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>MinimumBoundDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1affd2cee484b388c5ee94ea6d4feaaa89" prot="private" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>MoveToUsedSet</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a1f7ec083be66d58a3e02e12956bf005e" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>NumChildren</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a21646c00540e6bb4fb8a311f0a0773c3" prot="private" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>numDescendants</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a2a85eb34222f1fc073940e8c89274e81" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>NumDescendants</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a352077c26368da0ee570c0b7f062b1e3" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>NumPoints</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1acbaf407e14b2b2cd50853a83e12380e2" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>operator=</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1aee044966da9dba5e263fba874fb742e7" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>operator=</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a1fd89bc2d3dc3728abd6a7785421fbd5" prot="private" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>parent</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1ac68716eaa24588f11642fe35a0b0a6a2" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>Parent</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a19755c56b49ec82deaa09e00c6771eb6" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>Parent</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1af44ed4e7bfea088689caed082da67e17" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>ParentDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1aa22ead21ac809efb970b90ec014dc318" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>ParentDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a110be38965cb624d9e3b4d335f962806" prot="private" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>parentDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a4a252939c8d0bc18169f72b8ea4741a1" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>Point</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1ae2cd8fc8591e2d7c222f120bb35abd1a" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>Point</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a300322e29fbf3c453628086b5fea082b" prot="private" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>point</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1aadb643d6d603ebe320f58105fbdf61a9" prot="private" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>PruneFarSet</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a79946ce2f635d5731b5558ad4e8410cf" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>RangeDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1ab4dabd8a1ef126a8fbeba28466db4a12" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>RangeDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1adad110287e2b644778a7c572a21144ed" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>RangeDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a326e0150de98039e6b9db9a89adc4275" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>RangeDistance</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1adef8236801cdff1d38aa6be6836b6419" prot="private" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>RemoveNewImplicitNodes</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a418e7934b5363ecde8269070181b3cef" prot="private" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>scale</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a8dd9a9752971834a6c42ec7e45b71c84" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>Scale</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a1bbfde922cf6700d130c5be70a5d7dd4" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>Scale</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a2d07580bbdcfea3a09e2d267a08e6cad" prot="private" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>SortPointSet</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a33bd27fe3e575fbeacc2489f7232f9db" prot="private" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>SplitNearFar</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1ad8b29c84ac793742cd15834f9f4c4f31" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>Stat</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1aac2d3c104b89109f3df4a9a8cad244da" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>Stat</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1a3bb6957cc0ee042b639ebc4b8b45fd37" prot="private" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>stat</name></member>
      <member refid="classmlpack_1_1tree_1_1CoverTree_1addb637c59f0e955dd9dd5bcd683fa686" prot="public" virt="non-virtual"><scope>mlpack::tree::CoverTree</scope><name>~CoverTree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
