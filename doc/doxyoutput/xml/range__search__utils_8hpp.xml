<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="range__search__utils_8hpp" kind="file" language="C++">
    <compoundname>range_search_utils.hpp</compoundname>
    <includes refid="rs__model_8hpp" local="no">mlpack/methods/range_search/rs_model.hpp</includes>
    <includes refid="core_8hpp" local="no">mlpack/core.hpp</includes>
    <includes local="no">mlpack/core/util/mlpack_main.hpp</includes>
    <includes local="yes">../catch.hpp</includes>
    <incdepgraph>
      <node id="61186">
        <label>list</label>
      </node>
      <node id="61236">
        <label>breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="61228">
        <label>binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61225" relation="include">
        </childnode>
        <childnode refid="61229" relation="include">
        </childnode>
      </node>
      <node id="61285">
        <label>save_impl.hpp</label>
      </node>
      <node id="61238">
        <label>binary_space_tree/traits.hpp</label>
        <link refid="binary__space__tree_2traits_8hpp"/>
        <childnode refid="61239" relation="include">
        </childnode>
        <childnode refid="61200" relation="include">
        </childnode>
      </node>
      <node id="61183">
        <label>atomic</label>
      </node>
      <node id="61277">
        <label>dataset_mapper_impl.hpp</label>
      </node>
      <node id="61283">
        <label>load_image_impl.hpp</label>
      </node>
      <node id="61258">
        <label>range_search.hpp</label>
        <link refid="range__search_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61195" relation="include">
        </childnode>
        <childnode refid="61135" relation="include">
        </childnode>
        <childnode refid="61259" relation="include">
        </childnode>
        <childnode refid="61260" relation="include">
        </childnode>
      </node>
      <node id="61173">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="61149">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="61185">
        <label>iomanip</label>
      </node>
      <node id="61235">
        <label>queue</label>
      </node>
      <node id="61197">
        <label>bound_traits.hpp</label>
        <link refid="bound__traits_8hpp"/>
      </node>
      <node id="61260">
        <label>range_search_impl.hpp</label>
      </node>
      <node id="61309">
        <label>mlpack/core/kernels/linear_kernel.hpp</label>
        <link refid="linear__kernel_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
      </node>
      <node id="61210">
        <label>binary_space_tree/mean_split.hpp</label>
        <link refid="mean__split_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61208" relation="include">
        </childnode>
        <childnode refid="61211" relation="include">
        </childnode>
      </node>
      <node id="61304">
        <label>mlpack/core/data/confusion_matrix.hpp</label>
        <link refid="confusion__matrix_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61305" relation="include">
        </childnode>
      </node>
      <node id="61317">
        <label>mlpack/core/kernels/laplacian_kernel.hpp</label>
        <link refid="laplacian__kernel_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
      </node>
      <node id="61292">
        <label>float.h</label>
      </node>
      <node id="61196">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="61251">
        <label>mlpack/core/tree/rectangle_tree.hpp</label>
      </node>
      <node id="61158">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="61159" relation="include">
        </childnode>
        <childnode refid="61161" relation="include">
        </childnode>
      </node>
      <node id="61141">
        <label>cstdint</label>
      </node>
      <node id="61315">
        <label>epanechnikov_kernel_impl.hpp</label>
      </node>
      <node id="61326">
        <label>../catch.hpp</label>
      </node>
      <node id="61308">
        <label>mlpack/core/kernels/kernel_traits.hpp</label>
        <link refid="kernel__traits_8hpp"/>
      </node>
      <node id="61150">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="61157">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="61237">
        <label>binary_space_tree/breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="61302">
        <label>mlpack/core/dists/gamma_distribution.hpp</label>
        <link refid="gamma__distribution_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61213" relation="include">
        </childnode>
      </node>
      <node id="61272">
        <label>mlpack/core/data/load.hpp</label>
        <link refid="load_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61181" relation="include">
        </childnode>
        <childnode refid="61189" relation="include">
        </childnode>
        <childnode refid="61273" relation="include">
        </childnode>
        <childnode refid="61274" relation="include">
        </childnode>
        <childnode refid="61278" relation="include">
        </childnode>
        <childnode refid="61281" relation="include">
        </childnode>
        <childnode refid="61282" relation="include">
        </childnode>
        <childnode refid="61283" relation="include">
        </childnode>
      </node>
      <node id="61267">
        <label>program_doc.hpp</label>
        <link refid="program__doc_8hpp"/>
      </node>
      <node id="61290">
        <label>stdlib.h</label>
      </node>
      <node id="61214">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="61211">
        <label>mean_split_impl.hpp</label>
      </node>
      <node id="61180">
        <label>arma_config.hpp</label>
      </node>
      <node id="61202">
        <label>hollow_ball_bound.hpp</label>
        <link refid="hollow__ball__bound_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61195" relation="include">
        </childnode>
        <childnode refid="61197" relation="include">
        </childnode>
        <childnode refid="61203" relation="include">
        </childnode>
      </node>
      <node id="61253">
        <label>octree/octree.hpp</label>
        <link refid="octree_2octree_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61198" relation="include">
        </childnode>
        <childnode refid="61226" relation="include">
        </childnode>
        <childnode refid="61254" relation="include">
        </childnode>
      </node>
      <node id="61226">
        <label>../statistic.hpp</label>
        <link refid="statistic_8hpp"/>
      </node>
      <node id="61321">
        <label>mlpack/core/kernels/spherical_kernel.hpp</label>
        <link refid="spherical__kernel_8hpp"/>
        <childnode refid="61322" relation="include">
        </childnode>
        <childnode refid="61136" relation="include">
        </childnode>
      </node>
      <node id="61270">
        <label>params.hpp</label>
        <link refid="params_8hpp"/>
        <childnode refid="61269" relation="include">
        </childnode>
        <childnode refid="61266" relation="include">
        </childnode>
        <childnode refid="61271" relation="include">
        </childnode>
      </node>
      <node id="61221">
        <label>lin_alg_impl.hpp</label>
      </node>
      <node id="61316">
        <label>mlpack/core/kernels/hyperbolic_tangent_kernel.hpp</label>
        <link refid="hyperbolic__tangent__kernel_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
      </node>
      <node id="61262">
        <label>mlpack/core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61149" relation="include">
        </childnode>
        <childnode refid="61181" relation="include">
        </childnode>
        <childnode refid="61263" relation="include">
        </childnode>
        <childnode refid="61191" relation="include">
        </childnode>
        <childnode refid="61272" relation="include">
        </childnode>
        <childnode refid="61284" relation="include">
        </childnode>
        <childnode refid="61287" relation="include">
        </childnode>
        <childnode refid="61289" relation="include">
        </childnode>
        <childnode refid="61213" relation="include">
        </childnode>
        <childnode refid="61293" relation="include">
        </childnode>
        <childnode refid="61220" relation="include">
        </childnode>
        <childnode refid="61194" relation="include">
        </childnode>
        <childnode refid="61294" relation="include">
        </childnode>
        <childnode refid="61295" relation="include">
        </childnode>
        <childnode refid="61296" relation="include">
        </childnode>
        <childnode refid="61298" relation="include">
        </childnode>
        <childnode refid="61299" relation="include">
        </childnode>
        <childnode refid="61300" relation="include">
        </childnode>
        <childnode refid="61301" relation="include">
        </childnode>
        <childnode refid="61302" relation="include">
        </childnode>
        <childnode refid="61303" relation="include">
        </childnode>
        <childnode refid="61304" relation="include">
        </childnode>
        <childnode refid="61306" relation="include">
        </childnode>
        <childnode refid="61308" relation="include">
        </childnode>
        <childnode refid="61309" relation="include">
        </childnode>
        <childnode refid="61310" relation="include">
        </childnode>
        <childnode refid="61311" relation="include">
        </childnode>
        <childnode refid="61313" relation="include">
        </childnode>
        <childnode refid="61314" relation="include">
        </childnode>
        <childnode refid="61316" relation="include">
        </childnode>
        <childnode refid="61317" relation="include">
        </childnode>
        <childnode refid="61318" relation="include">
        </childnode>
        <childnode refid="61321" relation="include">
        </childnode>
        <childnode refid="61323" relation="include">
        </childnode>
        <childnode refid="61324" relation="include">
        </childnode>
      </node>
      <node id="61286">
        <label>io_impl.hpp</label>
      </node>
      <node id="61170">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="61306">
        <label>mlpack/core/data/one_hot_encoding.hpp</label>
        <link refid="one__hot__encoding_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61262" relation="include">
        </childnode>
        <childnode refid="61307" relation="include">
        </childnode>
      </node>
      <node id="61137">
        <label>cmath</label>
      </node>
      <node id="61193">
        <label>bounds.hpp</label>
        <link refid="bounds_8hpp"/>
        <childnode refid="61194" relation="include">
        </childnode>
        <childnode refid="61195" relation="include">
        </childnode>
        <childnode refid="61197" relation="include">
        </childnode>
        <childnode refid="61198" relation="include">
        </childnode>
        <childnode refid="61200" relation="include">
        </childnode>
        <childnode refid="61202" relation="include">
        </childnode>
        <childnode refid="61204" relation="include">
        </childnode>
      </node>
      <node id="61156">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="61145">
        <label>stdexcept</label>
      </node>
      <node id="61231">
        <label>binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61225" relation="include">
        </childnode>
        <childnode refid="61232" relation="include">
        </childnode>
      </node>
      <node id="61165">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="61150" relation="include">
        </childnode>
        <childnode refid="61152" relation="include">
        </childnode>
        <childnode refid="61153" relation="include">
        </childnode>
        <childnode refid="61151" relation="include">
        </childnode>
      </node>
      <node id="61194">
        <label>mlpack/core/math/range.hpp</label>
      </node>
      <node id="61312">
        <label>cosine_distance_impl.hpp</label>
      </node>
      <node id="61250">
        <label>cover_tree/typedef.hpp</label>
        <link refid="core_2tree_2cover__tree_2typedef_8hpp"/>
        <childnode refid="61243" relation="include">
        </childnode>
      </node>
      <node id="61276">
        <label>mlpack/core/data/map_policies/datatype.hpp</label>
        <link refid="datatype_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
      </node>
      <node id="61189">
        <label>string</label>
      </node>
      <node id="61217">
        <label>binary_space_tree/rp_tree_max_split.hpp</label>
        <link refid="rp__tree__max__split_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61208" relation="include">
        </childnode>
        <childnode refid="61218" relation="include">
        </childnode>
      </node>
      <node id="61209">
        <label>midpoint_split_impl.hpp</label>
      </node>
      <node id="61177">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="61178" relation="include">
        </childnode>
        <childnode refid="61144" relation="include">
        </childnode>
      </node>
      <node id="61311">
        <label>mlpack/core/kernels/cosine_distance.hpp</label>
        <link refid="cosine__distance_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61308" relation="include">
        </childnode>
        <childnode refid="61312" relation="include">
        </childnode>
      </node>
      <node id="61187">
        <label>map</label>
      </node>
      <node id="61232">
        <label>dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="61261">
        <label>rs_model_impl.hpp</label>
      </node>
      <node id="61220">
        <label>mlpack/core/math/lin_alg.hpp</label>
        <link refid="lin__alg_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61221" relation="include">
        </childnode>
      </node>
      <node id="61139">
        <label>cfloat</label>
      </node>
      <node id="61266">
        <label>binding_details.hpp</label>
        <link refid="binding__details_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61267" relation="include">
        </childnode>
      </node>
      <node id="61169">
        <label>boost/variant.hpp</label>
      </node>
      <node id="61301">
        <label>mlpack/core/dists/laplace_distribution.hpp</label>
        <link refid="laplace__distribution_8hpp"/>
      </node>
      <node id="61191">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="61247">
        <label>cover_tree/dual_tree_traverser.hpp</label>
        <link refid="cover__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61235" relation="include">
        </childnode>
        <childnode refid="61232" relation="include">
        </childnode>
      </node>
      <node id="61133">
        <label>/home/aakash/mlpack/src/mlpack/tests/main_tests/range_search_utils.hpp</label>
        <link refid="range__search__utils_8hpp"/>
        <childnode refid="61134" relation="include">
        </childnode>
        <childnode refid="61262" relation="include">
        </childnode>
        <childnode refid="61325" relation="include">
        </childnode>
        <childnode refid="61326" relation="include">
        </childnode>
      </node>
      <node id="61153">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="61176">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="61177" relation="include">
        </childnode>
        <childnode refid="61153" relation="include">
        </childnode>
        <childnode refid="61160" relation="include">
        </childnode>
        <childnode refid="61178" relation="include">
        </childnode>
      </node>
      <node id="61166">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="61298">
        <label>mlpack/core/math/make_alias.hpp</label>
        <link refid="make__alias_8hpp"/>
      </node>
      <node id="61314">
        <label>mlpack/core/kernels/epanechnikov_kernel.hpp</label>
        <link refid="epanechnikov__kernel_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61308" relation="include">
        </childnode>
        <childnode refid="61315" relation="include">
        </childnode>
      </node>
      <node id="61303">
        <label>mlpack/core/dists/diagonal_gaussian_distribution.hpp</label>
        <link refid="diagonal__gaussian__distribution_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
      </node>
      <node id="61243">
        <label>cover_tree/cover_tree.hpp</label>
        <link refid="cover__tree_2cover__tree_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61194" relation="include">
        </childnode>
        <childnode refid="61226" relation="include">
        </childnode>
        <childnode refid="61242" relation="include">
        </childnode>
        <childnode refid="61244" relation="include">
        </childnode>
        <childnode refid="61241" relation="include">
        </childnode>
      </node>
      <node id="61164">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="61150" relation="include">
        </childnode>
        <childnode refid="61152" relation="include">
        </childnode>
        <childnode refid="61153" relation="include">
        </childnode>
        <childnode refid="61151" relation="include">
        </childnode>
      </node>
      <node id="61167">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="61150" relation="include">
        </childnode>
        <childnode refid="61152" relation="include">
        </childnode>
        <childnode refid="61153" relation="include">
        </childnode>
        <childnode refid="61151" relation="include">
        </childnode>
      </node>
      <node id="61227">
        <label>binary_space_tree_impl.hpp</label>
      </node>
      <node id="61293">
        <label>mlpack/core/math/random_basis.hpp</label>
        <link refid="random__basis_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
      </node>
      <node id="61265">
        <label>boost/any.hpp</label>
      </node>
      <node id="61155">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="61175">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="61151" relation="include">
        </childnode>
        <childnode refid="61152" relation="include">
        </childnode>
        <childnode refid="61153" relation="include">
        </childnode>
        <childnode refid="61163" relation="include">
        </childnode>
        <childnode refid="61172" relation="include">
        </childnode>
      </node>
      <node id="61179">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="61180" relation="include">
        </childnode>
      </node>
      <node id="61233">
        <label>binary_space_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="61181">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="61136">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="61137" relation="include">
        </childnode>
        <childnode refid="61138" relation="include">
        </childnode>
        <childnode refid="61139" relation="include">
        </childnode>
        <childnode refid="61140" relation="include">
        </childnode>
        <childnode refid="61141" relation="include">
        </childnode>
        <childnode refid="61142" relation="include">
        </childnode>
        <childnode refid="61143" relation="include">
        </childnode>
        <childnode refid="61144" relation="include">
        </childnode>
        <childnode refid="61145" relation="include">
        </childnode>
        <childnode refid="61146" relation="include">
        </childnode>
        <childnode refid="61147" relation="include">
        </childnode>
        <childnode refid="61148" relation="include">
        </childnode>
        <childnode refid="61149" relation="include">
        </childnode>
        <childnode refid="61150" relation="include">
        </childnode>
        <childnode refid="61151" relation="include">
        </childnode>
        <childnode refid="61152" relation="include">
        </childnode>
        <childnode refid="61153" relation="include">
        </childnode>
        <childnode refid="61154" relation="include">
        </childnode>
        <childnode refid="61155" relation="include">
        </childnode>
        <childnode refid="61156" relation="include">
        </childnode>
        <childnode refid="61157" relation="include">
        </childnode>
        <childnode refid="61158" relation="include">
        </childnode>
        <childnode refid="61162" relation="include">
        </childnode>
        <childnode refid="61163" relation="include">
        </childnode>
        <childnode refid="61164" relation="include">
        </childnode>
        <childnode refid="61165" relation="include">
        </childnode>
        <childnode refid="61166" relation="include">
        </childnode>
        <childnode refid="61167" relation="include">
        </childnode>
        <childnode refid="61168" relation="include">
        </childnode>
        <childnode refid="61174" relation="include">
        </childnode>
        <childnode refid="61175" relation="include">
        </childnode>
        <childnode refid="61172" relation="include">
        </childnode>
        <childnode refid="61176" relation="include">
        </childnode>
        <childnode refid="61179" relation="include">
        </childnode>
        <childnode refid="61181" relation="include">
        </childnode>
        <childnode refid="61182" relation="include">
        </childnode>
        <childnode refid="61191" relation="include">
        </childnode>
        <childnode refid="61192" relation="include">
        </childnode>
      </node>
      <node id="61229">
        <label>single_tree_traverser_impl.hpp</label>
      </node>
      <node id="61207">
        <label>binary_space_tree/midpoint_split.hpp</label>
        <link refid="midpoint__split_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61208" relation="include">
        </childnode>
        <childnode refid="61209" relation="include">
        </childnode>
      </node>
      <node id="61241">
        <label>mlpack/core/tree/cover_tree.hpp</label>
        <link refid="cover__tree_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61242" relation="include">
        </childnode>
        <childnode refid="61243" relation="include">
        </childnode>
        <childnode refid="61245" relation="include">
        </childnode>
        <childnode refid="61246" relation="include">
        </childnode>
        <childnode refid="61247" relation="include">
        </childnode>
        <childnode refid="61248" relation="include">
        </childnode>
        <childnode refid="61249" relation="include">
        </childnode>
        <childnode refid="61250" relation="include">
        </childnode>
      </node>
      <node id="61288">
        <label>normalize_labels_impl.hpp</label>
      </node>
      <node id="61307">
        <label>one_hot_encoding_impl.hpp</label>
      </node>
      <node id="61215">
        <label>random</label>
      </node>
      <node id="61201">
        <label>ballbound_impl.hpp</label>
      </node>
      <node id="61230">
        <label>binary_space_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="61313">
        <label>mlpack/core/kernels/gaussian_kernel.hpp</label>
        <link refid="gaussian__kernel_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61195" relation="include">
        </childnode>
        <childnode refid="61308" relation="include">
        </childnode>
      </node>
      <node id="61275">
        <label>map_policies/increment_policy.hpp</label>
        <link refid="increment__policy_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61161" relation="include">
        </childnode>
        <childnode refid="61276" relation="include">
        </childnode>
      </node>
      <node id="61142">
        <label>cstdio</label>
      </node>
      <node id="61279">
        <label>extension.hpp</label>
        <link refid="extension_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
      </node>
      <node id="61205">
        <label>address.hpp</label>
        <link refid="address_8hpp"/>
      </node>
      <node id="61239">
        <label>mlpack/core/tree/tree_traits.hpp</label>
        <link refid="tree__traits_8hpp"/>
      </node>
      <node id="61259">
        <label>range_search_stat.hpp</label>
        <link refid="range__search__stat_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
      </node>
      <node id="61146">
        <label>tuple</label>
      </node>
      <node id="61151">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="61223">
        <label>binary_space_tree/ub_tree_split.hpp</label>
        <link refid="ub__tree__split_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61205" relation="include">
        </childnode>
        <childnode refid="61224" relation="include">
        </childnode>
      </node>
      <node id="61168">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="61151" relation="include">
        </childnode>
        <childnode refid="61152" relation="include">
        </childnode>
        <childnode refid="61153" relation="include">
        </childnode>
        <childnode refid="61155" relation="include">
        </childnode>
        <childnode refid="61169" relation="include">
        </childnode>
        <childnode refid="61170" relation="include">
        </childnode>
        <childnode refid="61171" relation="include">
        </childnode>
        <childnode refid="61172" relation="include">
        </childnode>
      </node>
      <node id="61225">
        <label>binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61226" relation="include">
        </childnode>
        <childnode refid="61207" relation="include">
        </childnode>
        <childnode refid="61227" relation="include">
        </childnode>
        <childnode refid="61135" relation="include">
        </childnode>
      </node>
      <node id="61198">
        <label>hrectbound.hpp</label>
        <link refid="hrectbound_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61194" relation="include">
        </childnode>
        <childnode refid="61195" relation="include">
        </childnode>
        <childnode refid="61197" relation="include">
        </childnode>
        <childnode refid="61199" relation="include">
        </childnode>
      </node>
      <node id="61280">
        <label>image_info_impl.hpp</label>
      </node>
      <node id="61242">
        <label>cover_tree/first_point_is_root.hpp</label>
        <link refid="first__point__is__root_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
      </node>
      <node id="61319">
        <label>vector</label>
      </node>
      <node id="61282">
        <label>load_vec_impl.hpp</label>
      </node>
      <node id="61222">
        <label>rp_tree_mean_split_impl.hpp</label>
      </node>
      <node id="61268">
        <label>version.hpp</label>
        <link refid="src_2mlpack_2core_2util_2version_8hpp"/>
        <childnode refid="61189" relation="include">
        </childnode>
      </node>
      <node id="61289">
        <label>mlpack/core/math/clamp.hpp</label>
        <link refid="clamp_8hpp"/>
        <childnode refid="61290" relation="include">
        </childnode>
        <childnode refid="61291" relation="include">
        </childnode>
        <childnode refid="61292" relation="include">
        </childnode>
      </node>
      <node id="61245">
        <label>cover_tree/single_tree_traverser.hpp</label>
        <link refid="cover__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61243" relation="include">
        </childnode>
        <childnode refid="61229" relation="include">
        </childnode>
      </node>
      <node id="61213">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61214" relation="include">
        </childnode>
        <childnode refid="61215" relation="include">
        </childnode>
      </node>
      <node id="61147">
        <label>utility</label>
      </node>
      <node id="61171">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="61281">
        <label>load_model_impl.hpp</label>
      </node>
      <node id="61162">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="61135">
        <label>mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61193" relation="include">
        </childnode>
        <childnode refid="61207" relation="include">
        </childnode>
        <childnode refid="61210" relation="include">
        </childnode>
        <childnode refid="61212" relation="include">
        </childnode>
        <childnode refid="61217" relation="include">
        </childnode>
        <childnode refid="61219" relation="include">
        </childnode>
        <childnode refid="61223" relation="include">
        </childnode>
        <childnode refid="61225" relation="include">
        </childnode>
        <childnode refid="61228" relation="include">
        </childnode>
        <childnode refid="61230" relation="include">
        </childnode>
        <childnode refid="61231" relation="include">
        </childnode>
        <childnode refid="61233" relation="include">
        </childnode>
        <childnode refid="61234" relation="include">
        </childnode>
        <childnode refid="61237" relation="include">
        </childnode>
        <childnode refid="61238" relation="include">
        </childnode>
        <childnode refid="61240" relation="include">
        </childnode>
      </node>
      <node id="61159">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="61160" relation="include">
        </childnode>
      </node>
      <node id="61248">
        <label>cover_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="61244">
        <label>cover_tree_impl.hpp</label>
      </node>
      <node id="61318">
        <label>mlpack/core/kernels/pspectrum_string_kernel.hpp</label>
        <link refid="pspectrum__string__kernel_8hpp"/>
        <childnode refid="61187" relation="include">
        </childnode>
        <childnode refid="61189" relation="include">
        </childnode>
        <childnode refid="61319" relation="include">
        </childnode>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61181" relation="include">
        </childnode>
        <childnode refid="61320" relation="include">
        </childnode>
      </node>
      <node id="61295">
        <label>mlpack/core/math/shuffle_data.hpp</label>
        <link refid="shuffle__data_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
      </node>
      <node id="61287">
        <label>mlpack/core/data/normalize_labels.hpp</label>
        <link refid="normalize__labels_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61288" relation="include">
        </childnode>
      </node>
      <node id="61182">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="61183" relation="include">
        </childnode>
        <childnode refid="61184" relation="include">
        </childnode>
        <childnode refid="61185" relation="include">
        </childnode>
        <childnode refid="61186" relation="include">
        </childnode>
        <childnode refid="61187" relation="include">
        </childnode>
        <childnode refid="61188" relation="include">
        </childnode>
        <childnode refid="61189" relation="include">
        </childnode>
        <childnode refid="61190" relation="include">
        </childnode>
      </node>
      <node id="61160">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="61174">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="61172" relation="include">
        </childnode>
        <childnode refid="61168" relation="include">
        </childnode>
        <childnode refid="61175" relation="include">
        </childnode>
      </node>
      <node id="61291">
        <label>math.h</label>
      </node>
      <node id="61269">
        <label>param_data.hpp</label>
        <link refid="param__data_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61265" relation="include">
        </childnode>
      </node>
      <node id="61134">
        <label>mlpack/methods/range_search/rs_model.hpp</label>
        <link refid="rs__model_8hpp"/>
        <childnode refid="61135" relation="include">
        </childnode>
        <childnode refid="61241" relation="include">
        </childnode>
        <childnode refid="61251" relation="include">
        </childnode>
        <childnode refid="61252" relation="include">
        </childnode>
        <childnode refid="61258" relation="include">
        </childnode>
        <childnode refid="61261" relation="include">
        </childnode>
      </node>
      <node id="61143">
        <label>cstdlib</label>
      </node>
      <node id="61299">
        <label>mlpack/core/dists/discrete_distribution.hpp</label>
        <link refid="discrete__distribution_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61181" relation="include">
        </childnode>
        <childnode refid="61213" relation="include">
        </childnode>
      </node>
      <node id="61138">
        <label>cctype</label>
      </node>
      <node id="61264">
        <label>iostream</label>
      </node>
      <node id="61254">
        <label>octree_impl.hpp</label>
      </node>
      <node id="61310">
        <label>mlpack/core/kernels/polynomial_kernel.hpp</label>
        <link refid="polynomial__kernel_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
      </node>
      <node id="61305">
        <label>confusion_matrix_impl.hpp</label>
      </node>
      <node id="61161">
        <label>unordered_map</label>
      </node>
      <node id="61278">
        <label>image_info.hpp</label>
        <link refid="image__info_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61279" relation="include">
        </childnode>
        <childnode refid="61280" relation="include">
        </childnode>
      </node>
      <node id="61252">
        <label>mlpack/core/tree/octree.hpp</label>
        <link refid="octree_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61193" relation="include">
        </childnode>
        <childnode refid="61253" relation="include">
        </childnode>
        <childnode refid="61255" relation="include">
        </childnode>
        <childnode refid="61256" relation="include">
        </childnode>
        <childnode refid="61257" relation="include">
        </childnode>
      </node>
      <node id="61246">
        <label>cover_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="61140">
        <label>climits</label>
      </node>
      <node id="61257">
        <label>octree/dual_tree_traverser.hpp</label>
        <link refid="octree_2dual__tree__traverser_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61253" relation="include">
        </childnode>
        <childnode refid="61232" relation="include">
        </childnode>
      </node>
      <node id="61325">
        <label>mlpack/core/util/mlpack_main.hpp</label>
      </node>
      <node id="61274">
        <label>dataset_mapper.hpp</label>
        <link refid="dataset__mapper_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61161" relation="include">
        </childnode>
        <childnode refid="61275" relation="include">
        </childnode>
        <childnode refid="61277" relation="include">
        </childnode>
      </node>
      <node id="61296">
        <label>mlpack/core/math/ccov.hpp</label>
        <link refid="ccov_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61297" relation="include">
        </childnode>
      </node>
      <node id="61188">
        <label>mutex</label>
      </node>
      <node id="61284">
        <label>mlpack/core/data/save.hpp</label>
        <link refid="save_8hpp"/>
        <childnode refid="61181" relation="include">
        </childnode>
        <childnode refid="61148" relation="include">
        </childnode>
        <childnode refid="61189" relation="include">
        </childnode>
        <childnode refid="61273" relation="include">
        </childnode>
        <childnode refid="61278" relation="include">
        </childnode>
        <childnode refid="61285" relation="include">
        </childnode>
      </node>
      <node id="61184">
        <label>chrono</label>
      </node>
      <node id="61199">
        <label>hrectbound_impl.hpp</label>
      </node>
      <node id="61192">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="61297">
        <label>ccov_impl.hpp</label>
      </node>
      <node id="61322">
        <label>boost/math/special_functions/gamma.hpp</label>
      </node>
      <node id="61219">
        <label>binary_space_tree/rp_tree_mean_split.hpp</label>
        <link refid="rp__tree__mean__split_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61217" relation="include">
        </childnode>
        <childnode refid="61208" relation="include">
        </childnode>
        <childnode refid="61220" relation="include">
        </childnode>
        <childnode refid="61222" relation="include">
        </childnode>
      </node>
      <node id="61216">
        <label>vantage_point_split_impl.hpp</label>
      </node>
      <node id="61190">
        <label>thread</label>
      </node>
      <node id="61324">
        <label>mlpack/core/kernels/cauchy_kernel.hpp</label>
        <link refid="cauchy__kernel_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61195" relation="include">
        </childnode>
        <childnode refid="61308" relation="include">
        </childnode>
      </node>
      <node id="61200">
        <label>ballbound.hpp</label>
        <link refid="ballbound_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61195" relation="include">
        </childnode>
        <childnode refid="61197" relation="include">
        </childnode>
        <childnode refid="61201" relation="include">
        </childnode>
      </node>
      <node id="61271">
        <label>params_impl.hpp</label>
      </node>
      <node id="61218">
        <label>rp_tree_max_split_impl.hpp</label>
      </node>
      <node id="61208">
        <label>mlpack/core/tree/perform_split.hpp</label>
        <link refid="perform__split_8hpp"/>
      </node>
      <node id="61178">
        <label>type_traits</label>
      </node>
      <node id="61234">
        <label>binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61235" relation="include">
        </childnode>
        <childnode refid="61135" relation="include">
        </childnode>
        <childnode refid="61236" relation="include">
        </childnode>
      </node>
      <node id="61255">
        <label>octree/traits.hpp</label>
        <link refid="octree_2traits_8hpp"/>
        <childnode refid="61239" relation="include">
        </childnode>
      </node>
      <node id="61154">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="61320">
        <label>pspectrum_string_kernel_impl.hpp</label>
      </node>
      <node id="61240">
        <label>binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="61135" relation="include">
        </childnode>
      </node>
      <node id="61148">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="61172">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="61150" relation="include">
        </childnode>
        <childnode refid="61151" relation="include">
        </childnode>
        <childnode refid="61152" relation="include">
        </childnode>
        <childnode refid="61153" relation="include">
        </childnode>
        <childnode refid="61173" relation="include">
        </childnode>
      </node>
      <node id="61203">
        <label>hollow_ball_bound_impl.hpp</label>
      </node>
      <node id="61294">
        <label>mlpack/core/math/round.hpp</label>
        <link refid="round_8hpp"/>
      </node>
      <node id="61323">
        <label>mlpack/core/kernels/triangular_kernel.hpp</label>
        <link refid="triangular__kernel_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61195" relation="include">
        </childnode>
      </node>
      <node id="61144">
        <label>cstring</label>
      </node>
      <node id="61163">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="61263">
        <label>mlpack/core/util/io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="61264" relation="include">
        </childnode>
        <childnode refid="61186" relation="include">
        </childnode>
        <childnode refid="61187" relation="include">
        </childnode>
        <childnode refid="61189" relation="include">
        </childnode>
        <childnode refid="61265" relation="include">
        </childnode>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61182" relation="include">
        </childnode>
        <childnode refid="61266" relation="include">
        </childnode>
        <childnode refid="61267" relation="include">
        </childnode>
        <childnode refid="61268" relation="include">
        </childnode>
        <childnode refid="61269" relation="include">
        </childnode>
        <childnode refid="61270" relation="include">
        </childnode>
        <childnode refid="61272" relation="include">
        </childnode>
        <childnode refid="61284" relation="include">
        </childnode>
        <childnode refid="61286" relation="include">
        </childnode>
      </node>
      <node id="61206">
        <label>cellbound_impl.hpp</label>
      </node>
      <node id="61224">
        <label>ub_tree_split_impl.hpp</label>
      </node>
      <node id="61204">
        <label>cellbound.hpp</label>
        <link refid="cellbound_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61194" relation="include">
        </childnode>
        <childnode refid="61195" relation="include">
        </childnode>
        <childnode refid="61197" relation="include">
        </childnode>
        <childnode refid="61205" relation="include">
        </childnode>
        <childnode refid="61206" relation="include">
        </childnode>
      </node>
      <node id="61256">
        <label>octree/single_tree_traverser.hpp</label>
        <link refid="octree_2single__tree__traverser_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61253" relation="include">
        </childnode>
        <childnode refid="61229" relation="include">
        </childnode>
      </node>
      <node id="61152">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="61300">
        <label>mlpack/core/dists/gaussian_distribution.hpp</label>
        <link refid="gaussian__distribution_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
      </node>
      <node id="61195">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61196" relation="include">
        </childnode>
      </node>
      <node id="61273">
        <label>format.hpp</label>
        <link refid="format_8hpp"/>
      </node>
      <node id="61212">
        <label>binary_space_tree/vantage_point_split.hpp</label>
        <link refid="vantage__point__split_8hpp"/>
        <childnode refid="61136" relation="include">
        </childnode>
        <childnode refid="61208" relation="include">
        </childnode>
        <childnode refid="61213" relation="include">
        </childnode>
        <childnode refid="61216" relation="include">
        </childnode>
      </node>
      <node id="61249">
        <label>cover_tree/traits.hpp</label>
        <link refid="cover__tree_2traits_8hpp"/>
        <childnode refid="61239" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="range__search__utils_8hpp_1a8c20314a21117877d9660a084c83a039" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CheckMatrices</definition>
        <argsstring>(std::vector&lt; std::vector&lt; double &gt;&gt; &amp;vec1, std::vector&lt; std::vector&lt; double &gt;&gt; &amp;vec2, const double tolerance=1e-3)</argsstring>
        <name>CheckMatrices</name>
        <param>
          <type>std::vector&lt; std::vector&lt; double &gt;&gt; &amp;</type>
          <declname>vec1</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; double &gt;&gt; &amp;</type>
          <declname>vec2</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>tolerance</declname>
          <defval>1e-3</defval>
        </param>
        <briefdescription>
<para>Check that 2 matrices of type vector&lt;vector&lt;double&gt;&gt; are close to equal, using the given tolerance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vec1</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector to compare. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector to compare. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>Allowed tolerance for values. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/tests/main_tests/range_search_utils.hpp" line="41" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/tests/main_tests/range_search_utils.hpp" bodystart="41" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="range__search__utils_8hpp_1a3adc3e063b86994ba106c7871438c402" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CheckMatrices</definition>
        <argsstring>(std::vector&lt; std::vector&lt; size_t &gt;&gt; &amp;vec1, std::vector&lt; std::vector&lt; size_t &gt;&gt; &amp;vec2)</argsstring>
        <name>CheckMatrices</name>
        <param>
          <type>std::vector&lt; std::vector&lt; size_t &gt;&gt; &amp;</type>
          <declname>vec1</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; size_t &gt;&gt; &amp;</type>
          <declname>vec2</declname>
        </param>
        <briefdescription>
<para>Check that 2 matrices of type vector&lt;vector&lt;size_t&gt;&gt; are equal. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vec1</parametername>
</parameternamelist>
<parameterdescription>
<para>First vector to compare. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec2</parametername>
</parameternamelist>
<parameterdescription>
<para>Second vector to compare. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/tests/main_tests/range_search_utils.hpp" line="64" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/tests/main_tests/range_search_utils.hpp" bodystart="64" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="range__search__utils_8hpp_1a22e8b75c2153dee033c40446de6f9579" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ModelToString</definition>
        <argsstring>(RSModel *model)</argsstring>
        <name>ModelToString</name>
        <param>
          <type>RSModel *</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>Convert a model to a string using the text_oarchive of cereal. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>RSModel to be converted to string. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/tests/main_tests/range_search_utils.hpp" line="25" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/tests/main_tests/range_search_utils.hpp" bodystart="25" bodyend="31"/>
        <references refid="pointer__wrapper_8hpp_1a58a300268ba9c6215a8ab2075a4dc675" compoundref="pointer__wrapper_8hpp" startline="96">CEREAL_POINTER</references>
      </memberdef>
      <memberdef kind="function" id="range__search__utils_8hpp_1af6f5b481a584d67f7621e7339fddc137" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; std::vector&lt; T &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;T&gt; &gt; ReadData</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>ReadData</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Load a CSV file into a vector of vector with a templated datatype. </para>        </briefdescription>
        <detaileddescription>
<para>Any &apos;,&apos; characters are stripped from the input; lines are split on &apos;<linebreak/>
&apos; and elements of each line are split on spaces.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file to load. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/tests/main_tests/range_search_utils.hpp" line="88" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/tests/main_tests/range_search_utils.hpp" bodystart="88" bodyend="105"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Niteya Shah</para></simplesect>
Helper functions used in the execution of the Range Search test.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_TESTS_MAIN_TESTS_RANGE_SEARCH_TEST_UTILS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_TESTS_MAIN_TESTS_RANGE_SEARCH_TEST_UTILS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="rs__model_8hpp" kindref="compound">mlpack/methods/range_search/rs_model.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="core_8hpp" kindref="compound">mlpack/core.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mlpack/core/util/mlpack_main.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../catch.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="range__search__utils_8hpp_1a22e8b75c2153dee033c40446de6f9579" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="range__search__utils_8hpp_1a22e8b75c2153dee033c40446de6f9579" kindref="member">ModelToString</ref>(RSModel*<sp/>model)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>std::ostringstream<sp/>oss;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>cereal::JSONOutputArchive<sp/>oa(oss);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>oa(<ref refid="pointer__wrapper_8hpp_1a58a300268ba9c6215a8ab2075a4dc675" kindref="member">CEREAL_POINTER</ref>(model));</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oss.str();</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="range__search__utils_8hpp_1a8c20314a21117877d9660a084c83a039" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="range__search__utils_8hpp_1a8c20314a21117877d9660a084c83a039" kindref="member">CheckMatrices</ref>(std::vector&lt;std::vector&lt;double&gt;&gt;&amp;<sp/>vec1,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;double&gt;&gt;&amp;<sp/>vec2,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tolerance<sp/>=<sp/>1e-3)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>REQUIRE(vec1.size()<sp/><sp/>==<sp/>vec2.size());</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vec1.size();<sp/>++i)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(vec1[i].size()<sp/>==<sp/>vec2[i].size());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>std::sort(vec1[i].begin(),<sp/>vec1[i].end());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>std::sort(vec2[i].begin(),<sp/>vec2[i].end());</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0<sp/>;<sp/>j<sp/>&lt;<sp/>vec1[i].size();<sp/>++j)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(vec1[i][j]<sp/>==<sp/>Approx(vec2[i][j]).epsilon(tolerance));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="range__search__utils_8hpp_1a3adc3e063b86994ba106c7871438c402" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="range__search__utils_8hpp_1a8c20314a21117877d9660a084c83a039" kindref="member">CheckMatrices</ref>(std::vector&lt;std::vector&lt;size_t&gt;&gt;&amp;<sp/>vec1,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;size_t&gt;&gt;&amp;<sp/>vec2)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>REQUIRE(vec1.size()<sp/><sp/>==<sp/>vec2.size());</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vec1.size();<sp/>++i)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>REQUIRE(vec1[i].size()<sp/>==<sp/>vec2[i].size());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>std::sort(vec1[i].begin(),<sp/>vec1[i].end());</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>std::sort(vec2[i].begin(),<sp/>vec2[i].end());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>vec1[i].size();<sp/>++j)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>REQUIRE(vec1[i][j]<sp/>==<sp/>vec2[i][j]);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="88" refid="range__search__utils_8hpp_1af6f5b481a584d67f7621e7339fddc137" refkind="member"><highlight class="normal">std::vector&lt;std::vector&lt;T&gt;&gt;<sp/><ref refid="range__search__utils_8hpp_1af6f5b481a584d67f7621e7339fddc137" kindref="member">ReadData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>std::ifstream<sp/>ifs(filename);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>std::vector&lt;std::vector&lt;T&gt;&gt;<sp/>table;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>std::string<sp/>line;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(std::getline(ifs,<sp/>line))</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;T&gt;<sp/>numbers;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>n;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>std::replace(line.begin(),<sp/>line.end(),<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/>stm(line);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(stm<sp/>&gt;&gt;<sp/>n)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>numbers.push_back(n);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>table.push_back(numbers);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>table;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/tests/main_tests/range_search_utils.hpp"/>
  </compounddef>
</doxygen>
