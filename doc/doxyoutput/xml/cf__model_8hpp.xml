<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="cf__model_8hpp" kind="file" language="C++">
    <compoundname>cf_model.hpp</compoundname>
    <includes refid="core_8hpp" local="no">mlpack/core.hpp</includes>
    <includes refid="cf_8hpp" local="yes">cf.hpp</includes>
    <includes local="yes">cf_model_impl.hpp</includes>
    <incdepgraph>
      <node id="45824">
        <label>list</label>
      </node>
      <node id="45939">
        <label>breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="45931">
        <label>binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45928" relation="include">
        </childnode>
        <childnode refid="45932" relation="include">
        </childnode>
      </node>
      <node id="45853">
        <label>save_impl.hpp</label>
      </node>
      <node id="45941">
        <label>binary_space_tree/traits.hpp</label>
        <link refid="binary__space__tree_2traits_8hpp"/>
        <childnode refid="45942" relation="include">
        </childnode>
        <childnode refid="45908" relation="include">
        </childnode>
      </node>
      <node id="45821">
        <label>atomic</label>
      </node>
      <node id="45845">
        <label>dataset_mapper_impl.hpp</label>
      </node>
      <node id="45851">
        <label>load_image_impl.hpp</label>
      </node>
      <node id="45811">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="45787">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="45823">
        <label>iomanip</label>
      </node>
      <node id="45938">
        <label>queue</label>
      </node>
      <node id="45952">
        <label>typedef.hpp</label>
        <link refid="methods_2neighbor__search_2typedef_8hpp"/>
        <childnode refid="45902" relation="include">
        </childnode>
        <childnode refid="45888" relation="include">
        </childnode>
        <childnode refid="45946" relation="include">
        </childnode>
        <childnode refid="45953" relation="include">
        </childnode>
      </node>
      <node id="45948">
        <label>neighbor_search_rules.hpp</label>
        <link refid="neighbor__search__rules_8hpp"/>
        <childnode refid="45949" relation="include">
        </childnode>
        <childnode refid="45938" relation="include">
        </childnode>
        <childnode refid="45950" relation="include">
        </childnode>
      </node>
      <node id="45905">
        <label>bound_traits.hpp</label>
        <link refid="bound__traits_8hpp"/>
      </node>
      <node id="45918">
        <label>binary_space_tree/mean_split.hpp</label>
        <link refid="mean__split_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45916" relation="include">
        </childnode>
        <childnode refid="45919" relation="include">
        </childnode>
      </node>
      <node id="45883">
        <label>mlpack/core/kernels/linear_kernel.hpp</label>
        <link refid="linear__kernel_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
      </node>
      <node id="45878">
        <label>mlpack/core/data/confusion_matrix.hpp</label>
        <link refid="confusion__matrix_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45879" relation="include">
        </childnode>
      </node>
      <node id="45893">
        <label>mlpack/core/kernels/laplacian_kernel.hpp</label>
        <link refid="laplacian__kernel_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
      </node>
      <node id="45860">
        <label>float.h</label>
      </node>
      <node id="45889">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="45944">
        <label>mlpack/core/tree/rectangle_tree.hpp</label>
      </node>
      <node id="45955">
        <label>mlpack/methods/amf/amf.hpp</label>
        <link refid="amf_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45956" relation="include">
        </childnode>
        <childnode refid="45957" relation="include">
        </childnode>
        <childnode refid="45958" relation="include">
        </childnode>
        <childnode refid="45959" relation="include">
        </childnode>
        <childnode refid="45960" relation="include">
        </childnode>
        <childnode refid="45961" relation="include">
        </childnode>
        <childnode refid="45962" relation="include">
        </childnode>
        <childnode refid="45963" relation="include">
        </childnode>
        <childnode refid="45964" relation="include">
        </childnode>
        <childnode refid="45965" relation="include">
        </childnode>
      </node>
      <node id="45796">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="45797" relation="include">
        </childnode>
        <childnode refid="45799" relation="include">
        </childnode>
      </node>
      <node id="45779">
        <label>cstdint</label>
      </node>
      <node id="45772">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp</label>
        <link refid="cf__model_8hpp"/>
        <childnode refid="45773" relation="include">
        </childnode>
        <childnode refid="45901" relation="include">
        </childnode>
        <childnode refid="45973" relation="include">
        </childnode>
      </node>
      <node id="45891">
        <label>epanechnikov_kernel_impl.hpp</label>
      </node>
      <node id="45882">
        <label>mlpack/core/kernels/kernel_traits.hpp</label>
        <link refid="kernel__traits_8hpp"/>
      </node>
      <node id="45788">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="45795">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="45940">
        <label>binary_space_tree/breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="45876">
        <label>mlpack/core/dists/gamma_distribution.hpp</label>
        <link refid="gamma__distribution_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45861" relation="include">
        </childnode>
      </node>
      <node id="45840">
        <label>mlpack/core/data/load.hpp</label>
        <link refid="load_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45819" relation="include">
        </childnode>
        <childnode refid="45827" relation="include">
        </childnode>
        <childnode refid="45841" relation="include">
        </childnode>
        <childnode refid="45842" relation="include">
        </childnode>
        <childnode refid="45846" relation="include">
        </childnode>
        <childnode refid="45849" relation="include">
        </childnode>
        <childnode refid="45850" relation="include">
        </childnode>
        <childnode refid="45851" relation="include">
        </childnode>
      </node>
      <node id="45835">
        <label>program_doc.hpp</label>
        <link refid="program__doc_8hpp"/>
      </node>
      <node id="45947">
        <label>nearest_neighbor_sort_impl.hpp</label>
      </node>
      <node id="45858">
        <label>stdlib.h</label>
      </node>
      <node id="45862">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="45919">
        <label>mean_split_impl.hpp</label>
      </node>
      <node id="45818">
        <label>arma_config.hpp</label>
      </node>
      <node id="45910">
        <label>hollow_ball_bound.hpp</label>
        <link refid="hollow__ball__bound_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45888" relation="include">
        </childnode>
        <childnode refid="45905" relation="include">
        </childnode>
        <childnode refid="45911" relation="include">
        </childnode>
      </node>
      <node id="45929">
        <label>../statistic.hpp</label>
        <link refid="statistic_8hpp"/>
      </node>
      <node id="45897">
        <label>mlpack/core/kernels/spherical_kernel.hpp</label>
        <link refid="spherical__kernel_8hpp"/>
        <childnode refid="45898" relation="include">
        </childnode>
        <childnode refid="45774" relation="include">
        </childnode>
      </node>
      <node id="45838">
        <label>params.hpp</label>
        <link refid="params_8hpp"/>
        <childnode refid="45837" relation="include">
        </childnode>
        <childnode refid="45834" relation="include">
        </childnode>
        <childnode refid="45839" relation="include">
        </childnode>
      </node>
      <node id="45945">
        <label>neighbor_search_stat.hpp</label>
        <link refid="neighbor__search__stat_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
      </node>
      <node id="45866">
        <label>lin_alg_impl.hpp</label>
      </node>
      <node id="45892">
        <label>mlpack/core/kernels/hyperbolic_tangent_kernel.hpp</label>
        <link refid="hyperbolic__tangent__kernel_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
      </node>
      <node id="45773">
        <label>mlpack/core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45787" relation="include">
        </childnode>
        <childnode refid="45819" relation="include">
        </childnode>
        <childnode refid="45831" relation="include">
        </childnode>
        <childnode refid="45829" relation="include">
        </childnode>
        <childnode refid="45840" relation="include">
        </childnode>
        <childnode refid="45852" relation="include">
        </childnode>
        <childnode refid="45855" relation="include">
        </childnode>
        <childnode refid="45857" relation="include">
        </childnode>
        <childnode refid="45861" relation="include">
        </childnode>
        <childnode refid="45864" relation="include">
        </childnode>
        <childnode refid="45865" relation="include">
        </childnode>
        <childnode refid="45867" relation="include">
        </childnode>
        <childnode refid="45868" relation="include">
        </childnode>
        <childnode refid="45869" relation="include">
        </childnode>
        <childnode refid="45870" relation="include">
        </childnode>
        <childnode refid="45872" relation="include">
        </childnode>
        <childnode refid="45873" relation="include">
        </childnode>
        <childnode refid="45874" relation="include">
        </childnode>
        <childnode refid="45875" relation="include">
        </childnode>
        <childnode refid="45876" relation="include">
        </childnode>
        <childnode refid="45877" relation="include">
        </childnode>
        <childnode refid="45878" relation="include">
        </childnode>
        <childnode refid="45880" relation="include">
        </childnode>
        <childnode refid="45882" relation="include">
        </childnode>
        <childnode refid="45883" relation="include">
        </childnode>
        <childnode refid="45884" relation="include">
        </childnode>
        <childnode refid="45885" relation="include">
        </childnode>
        <childnode refid="45887" relation="include">
        </childnode>
        <childnode refid="45890" relation="include">
        </childnode>
        <childnode refid="45892" relation="include">
        </childnode>
        <childnode refid="45893" relation="include">
        </childnode>
        <childnode refid="45894" relation="include">
        </childnode>
        <childnode refid="45897" relation="include">
        </childnode>
        <childnode refid="45899" relation="include">
        </childnode>
        <childnode refid="45900" relation="include">
        </childnode>
      </node>
      <node id="45854">
        <label>io_impl.hpp</label>
      </node>
      <node id="45808">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="45880">
        <label>mlpack/core/data/one_hot_encoding.hpp</label>
        <link refid="one__hot__encoding_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45773" relation="include">
        </childnode>
        <childnode refid="45881" relation="include">
        </childnode>
      </node>
      <node id="45775">
        <label>cmath</label>
      </node>
      <node id="45904">
        <label>bounds.hpp</label>
        <link refid="bounds_8hpp"/>
        <childnode refid="45867" relation="include">
        </childnode>
        <childnode refid="45888" relation="include">
        </childnode>
        <childnode refid="45905" relation="include">
        </childnode>
        <childnode refid="45906" relation="include">
        </childnode>
        <childnode refid="45908" relation="include">
        </childnode>
        <childnode refid="45910" relation="include">
        </childnode>
        <childnode refid="45912" relation="include">
        </childnode>
      </node>
      <node id="45794">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="45783">
        <label>stdexcept</label>
      </node>
      <node id="45934">
        <label>binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45928" relation="include">
        </childnode>
        <childnode refid="45935" relation="include">
        </childnode>
      </node>
      <node id="45803">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="45788" relation="include">
        </childnode>
        <childnode refid="45790" relation="include">
        </childnode>
        <childnode refid="45791" relation="include">
        </childnode>
        <childnode refid="45789" relation="include">
        </childnode>
      </node>
      <node id="45867">
        <label>mlpack/core/math/range.hpp</label>
      </node>
      <node id="45886">
        <label>cosine_distance_impl.hpp</label>
      </node>
      <node id="45844">
        <label>mlpack/core/data/map_policies/datatype.hpp</label>
        <link refid="datatype_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
      </node>
      <node id="45827">
        <label>string</label>
      </node>
      <node id="45922">
        <label>binary_space_tree/rp_tree_max_split.hpp</label>
        <link refid="rp__tree__max__split_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45916" relation="include">
        </childnode>
        <childnode refid="45923" relation="include">
        </childnode>
      </node>
      <node id="45917">
        <label>midpoint_split_impl.hpp</label>
      </node>
      <node id="45815">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="45816" relation="include">
        </childnode>
        <childnode refid="45782" relation="include">
        </childnode>
      </node>
      <node id="45901">
        <label>cf.hpp</label>
        <link refid="cf_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45902" relation="include">
        </childnode>
        <childnode refid="45955" relation="include">
        </childnode>
        <childnode refid="45957" relation="include">
        </childnode>
        <childnode refid="45963" relation="include">
        </childnode>
        <childnode refid="45966" relation="include">
        </childnode>
        <childnode refid="45967" relation="include">
        </childnode>
        <childnode refid="45969" relation="include">
        </childnode>
        <childnode refid="45970" relation="include">
        </childnode>
        <childnode refid="45971" relation="include">
        </childnode>
        <childnode refid="45825" relation="include">
        </childnode>
        <childnode refid="45832" relation="include">
        </childnode>
        <childnode refid="45972" relation="include">
        </childnode>
      </node>
      <node id="45885">
        <label>mlpack/core/kernels/cosine_distance.hpp</label>
        <link refid="cosine__distance_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45882" relation="include">
        </childnode>
        <childnode refid="45886" relation="include">
        </childnode>
      </node>
      <node id="45825">
        <label>map</label>
      </node>
      <node id="45935">
        <label>dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="45865">
        <label>mlpack/core/math/lin_alg.hpp</label>
        <link refid="lin__alg_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45866" relation="include">
        </childnode>
      </node>
      <node id="45777">
        <label>cfloat</label>
      </node>
      <node id="45834">
        <label>binding_details.hpp</label>
        <link refid="binding__details_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45835" relation="include">
        </childnode>
      </node>
      <node id="45966">
        <label>mlpack/methods/cf/normalization/no_normalization.hpp</label>
        <link refid="no__normalization_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
      </node>
      <node id="45807">
        <label>boost/variant.hpp</label>
      </node>
      <node id="45875">
        <label>mlpack/core/dists/laplace_distribution.hpp</label>
        <link refid="laplace__distribution_8hpp"/>
      </node>
      <node id="45829">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="45791">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="45814">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="45815" relation="include">
        </childnode>
        <childnode refid="45791" relation="include">
        </childnode>
        <childnode refid="45798" relation="include">
        </childnode>
        <childnode refid="45816" relation="include">
        </childnode>
      </node>
      <node id="45804">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="45872">
        <label>mlpack/core/math/make_alias.hpp</label>
        <link refid="make__alias_8hpp"/>
      </node>
      <node id="45890">
        <label>mlpack/core/kernels/epanechnikov_kernel.hpp</label>
        <link refid="epanechnikov__kernel_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45882" relation="include">
        </childnode>
        <childnode refid="45891" relation="include">
        </childnode>
      </node>
      <node id="45877">
        <label>mlpack/core/dists/diagonal_gaussian_distribution.hpp</label>
        <link refid="diagonal__gaussian__distribution_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
      </node>
      <node id="45802">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="45788" relation="include">
        </childnode>
        <childnode refid="45790" relation="include">
        </childnode>
        <childnode refid="45791" relation="include">
        </childnode>
        <childnode refid="45789" relation="include">
        </childnode>
      </node>
      <node id="45805">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="45788" relation="include">
        </childnode>
        <childnode refid="45790" relation="include">
        </childnode>
        <childnode refid="45791" relation="include">
        </childnode>
        <childnode refid="45789" relation="include">
        </childnode>
      </node>
      <node id="45930">
        <label>binary_space_tree_impl.hpp</label>
      </node>
      <node id="45864">
        <label>mlpack/core/math/random_basis.hpp</label>
        <link refid="random__basis_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
      </node>
      <node id="45833">
        <label>boost/any.hpp</label>
      </node>
      <node id="45793">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="45965">
        <label>amf_impl.hpp</label>
      </node>
      <node id="45813">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="45789" relation="include">
        </childnode>
        <childnode refid="45790" relation="include">
        </childnode>
        <childnode refid="45791" relation="include">
        </childnode>
        <childnode refid="45801" relation="include">
        </childnode>
        <childnode refid="45810" relation="include">
        </childnode>
      </node>
      <node id="45817">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="45818" relation="include">
        </childnode>
      </node>
      <node id="45936">
        <label>binary_space_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="45950">
        <label>neighbor_search_rules_impl.hpp</label>
      </node>
      <node id="45819">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="45774">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="45775" relation="include">
        </childnode>
        <childnode refid="45776" relation="include">
        </childnode>
        <childnode refid="45777" relation="include">
        </childnode>
        <childnode refid="45778" relation="include">
        </childnode>
        <childnode refid="45779" relation="include">
        </childnode>
        <childnode refid="45780" relation="include">
        </childnode>
        <childnode refid="45781" relation="include">
        </childnode>
        <childnode refid="45782" relation="include">
        </childnode>
        <childnode refid="45783" relation="include">
        </childnode>
        <childnode refid="45784" relation="include">
        </childnode>
        <childnode refid="45785" relation="include">
        </childnode>
        <childnode refid="45786" relation="include">
        </childnode>
        <childnode refid="45787" relation="include">
        </childnode>
        <childnode refid="45788" relation="include">
        </childnode>
        <childnode refid="45789" relation="include">
        </childnode>
        <childnode refid="45790" relation="include">
        </childnode>
        <childnode refid="45791" relation="include">
        </childnode>
        <childnode refid="45792" relation="include">
        </childnode>
        <childnode refid="45793" relation="include">
        </childnode>
        <childnode refid="45794" relation="include">
        </childnode>
        <childnode refid="45795" relation="include">
        </childnode>
        <childnode refid="45796" relation="include">
        </childnode>
        <childnode refid="45800" relation="include">
        </childnode>
        <childnode refid="45801" relation="include">
        </childnode>
        <childnode refid="45802" relation="include">
        </childnode>
        <childnode refid="45803" relation="include">
        </childnode>
        <childnode refid="45804" relation="include">
        </childnode>
        <childnode refid="45805" relation="include">
        </childnode>
        <childnode refid="45806" relation="include">
        </childnode>
        <childnode refid="45812" relation="include">
        </childnode>
        <childnode refid="45813" relation="include">
        </childnode>
        <childnode refid="45810" relation="include">
        </childnode>
        <childnode refid="45814" relation="include">
        </childnode>
        <childnode refid="45817" relation="include">
        </childnode>
        <childnode refid="45819" relation="include">
        </childnode>
        <childnode refid="45820" relation="include">
        </childnode>
        <childnode refid="45829" relation="include">
        </childnode>
        <childnode refid="45830" relation="include">
        </childnode>
      </node>
      <node id="45932">
        <label>single_tree_traverser_impl.hpp</label>
      </node>
      <node id="45954">
        <label>furthest_neighbor_sort_impl.hpp</label>
      </node>
      <node id="45915">
        <label>binary_space_tree/midpoint_split.hpp</label>
        <link refid="midpoint__split_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45916" relation="include">
        </childnode>
        <childnode refid="45917" relation="include">
        </childnode>
      </node>
      <node id="45856">
        <label>normalize_labels_impl.hpp</label>
      </node>
      <node id="45881">
        <label>one_hot_encoding_impl.hpp</label>
      </node>
      <node id="45863">
        <label>random</label>
      </node>
      <node id="45909">
        <label>ballbound_impl.hpp</label>
      </node>
      <node id="45933">
        <label>binary_space_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="45958">
        <label>mlpack/methods/amf/update_rules/svd_batch_learning.hpp</label>
        <link refid="svd__batch__learning_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
      </node>
      <node id="45887">
        <label>mlpack/core/kernels/gaussian_kernel.hpp</label>
        <link refid="gaussian__kernel_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45888" relation="include">
        </childnode>
        <childnode refid="45882" relation="include">
        </childnode>
      </node>
      <node id="45843">
        <label>map_policies/increment_policy.hpp</label>
        <link refid="increment__policy_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45799" relation="include">
        </childnode>
        <childnode refid="45844" relation="include">
        </childnode>
      </node>
      <node id="45780">
        <label>cstdio</label>
      </node>
      <node id="45969">
        <label>mlpack/methods/cf/neighbor_search_policies/lmetric_search.hpp</label>
        <link refid="lmetric__search_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45902" relation="include">
        </childnode>
        <childnode refid="45888" relation="include">
        </childnode>
      </node>
      <node id="45913">
        <label>address.hpp</label>
        <link refid="address_8hpp"/>
      </node>
      <node id="45847">
        <label>extension.hpp</label>
        <link refid="extension_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
      </node>
      <node id="45942">
        <label>mlpack/core/tree/tree_traits.hpp</label>
        <link refid="tree__traits_8hpp"/>
      </node>
      <node id="45956">
        <label>mlpack/methods/amf/update_rules/nmf_mult_dist.hpp</label>
        <link refid="nmf__mult__dist_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
      </node>
      <node id="45784">
        <label>tuple</label>
      </node>
      <node id="45789">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="45926">
        <label>binary_space_tree/ub_tree_split.hpp</label>
        <link refid="ub__tree__split_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45913" relation="include">
        </childnode>
        <childnode refid="45927" relation="include">
        </childnode>
      </node>
      <node id="45806">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="45789" relation="include">
        </childnode>
        <childnode refid="45790" relation="include">
        </childnode>
        <childnode refid="45791" relation="include">
        </childnode>
        <childnode refid="45793" relation="include">
        </childnode>
        <childnode refid="45807" relation="include">
        </childnode>
        <childnode refid="45808" relation="include">
        </childnode>
        <childnode refid="45809" relation="include">
        </childnode>
        <childnode refid="45810" relation="include">
        </childnode>
      </node>
      <node id="45928">
        <label>binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45929" relation="include">
        </childnode>
        <childnode refid="45915" relation="include">
        </childnode>
        <childnode refid="45930" relation="include">
        </childnode>
        <childnode refid="45903" relation="include">
        </childnode>
      </node>
      <node id="45906">
        <label>hrectbound.hpp</label>
        <link refid="hrectbound_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45867" relation="include">
        </childnode>
        <childnode refid="45888" relation="include">
        </childnode>
        <childnode refid="45905" relation="include">
        </childnode>
        <childnode refid="45907" relation="include">
        </childnode>
      </node>
      <node id="45848">
        <label>image_info_impl.hpp</label>
      </node>
      <node id="45895">
        <label>vector</label>
      </node>
      <node id="45850">
        <label>load_vec_impl.hpp</label>
      </node>
      <node id="45925">
        <label>rp_tree_mean_split_impl.hpp</label>
      </node>
      <node id="45836">
        <label>version.hpp</label>
        <link refid="src_2mlpack_2core_2util_2version_8hpp"/>
        <childnode refid="45827" relation="include">
        </childnode>
      </node>
      <node id="45857">
        <label>mlpack/core/math/clamp.hpp</label>
        <link refid="clamp_8hpp"/>
        <childnode refid="45858" relation="include">
        </childnode>
        <childnode refid="45859" relation="include">
        </childnode>
        <childnode refid="45860" relation="include">
        </childnode>
      </node>
      <node id="45861">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45862" relation="include">
        </childnode>
        <childnode refid="45863" relation="include">
        </childnode>
      </node>
      <node id="45964">
        <label>mlpack/methods/amf/termination_policies/simple_tolerance_termination.hpp</label>
        <link refid="simple__tolerance__termination_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
      </node>
      <node id="45785">
        <label>utility</label>
      </node>
      <node id="45809">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="45849">
        <label>load_model_impl.hpp</label>
      </node>
      <node id="45800">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="45903">
        <label>mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45904" relation="include">
        </childnode>
        <childnode refid="45915" relation="include">
        </childnode>
        <childnode refid="45918" relation="include">
        </childnode>
        <childnode refid="45920" relation="include">
        </childnode>
        <childnode refid="45922" relation="include">
        </childnode>
        <childnode refid="45924" relation="include">
        </childnode>
        <childnode refid="45926" relation="include">
        </childnode>
        <childnode refid="45928" relation="include">
        </childnode>
        <childnode refid="45931" relation="include">
        </childnode>
        <childnode refid="45933" relation="include">
        </childnode>
        <childnode refid="45934" relation="include">
        </childnode>
        <childnode refid="45936" relation="include">
        </childnode>
        <childnode refid="45937" relation="include">
        </childnode>
        <childnode refid="45940" relation="include">
        </childnode>
        <childnode refid="45941" relation="include">
        </childnode>
        <childnode refid="45943" relation="include">
        </childnode>
      </node>
      <node id="45961">
        <label>mlpack/methods/amf/init_rules/random_init.hpp</label>
        <link refid="amf_2init__rules_2random__init_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
      </node>
      <node id="45946">
        <label>sort_policies/nearest_neighbor_sort.hpp</label>
        <link refid="nearest__neighbor__sort_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45947" relation="include">
        </childnode>
      </node>
      <node id="45797">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="45798" relation="include">
        </childnode>
      </node>
      <node id="45894">
        <label>mlpack/core/kernels/pspectrum_string_kernel.hpp</label>
        <link refid="pspectrum__string__kernel_8hpp"/>
        <childnode refid="45825" relation="include">
        </childnode>
        <childnode refid="45827" relation="include">
        </childnode>
        <childnode refid="45895" relation="include">
        </childnode>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45819" relation="include">
        </childnode>
        <childnode refid="45896" relation="include">
        </childnode>
      </node>
      <node id="45869">
        <label>mlpack/core/math/shuffle_data.hpp</label>
        <link refid="shuffle__data_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
      </node>
      <node id="45855">
        <label>mlpack/core/data/normalize_labels.hpp</label>
        <link refid="normalize__labels_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45856" relation="include">
        </childnode>
      </node>
      <node id="45820">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="45821" relation="include">
        </childnode>
        <childnode refid="45822" relation="include">
        </childnode>
        <childnode refid="45823" relation="include">
        </childnode>
        <childnode refid="45824" relation="include">
        </childnode>
        <childnode refid="45825" relation="include">
        </childnode>
        <childnode refid="45826" relation="include">
        </childnode>
        <childnode refid="45827" relation="include">
        </childnode>
        <childnode refid="45828" relation="include">
        </childnode>
      </node>
      <node id="45798">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="45902">
        <label>mlpack/methods/neighbor_search/neighbor_search.hpp</label>
        <link refid="neighbor__search_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45895" relation="include">
        </childnode>
        <childnode refid="45827" relation="include">
        </childnode>
        <childnode refid="45903" relation="include">
        </childnode>
        <childnode refid="45944" relation="include">
        </childnode>
        <childnode refid="45928" relation="include">
        </childnode>
        <childnode refid="45945" relation="include">
        </childnode>
        <childnode refid="45946" relation="include">
        </childnode>
        <childnode refid="45948" relation="include">
        </childnode>
        <childnode refid="45951" relation="include">
        </childnode>
        <childnode refid="45952" relation="include">
        </childnode>
      </node>
      <node id="45812">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="45810" relation="include">
        </childnode>
        <childnode refid="45806" relation="include">
        </childnode>
        <childnode refid="45813" relation="include">
        </childnode>
      </node>
      <node id="45859">
        <label>math.h</label>
      </node>
      <node id="45837">
        <label>param_data.hpp</label>
        <link refid="param__data_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45833" relation="include">
        </childnode>
      </node>
      <node id="45781">
        <label>cstdlib</label>
      </node>
      <node id="45960">
        <label>mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp</label>
        <link refid="svd__complete__incremental__learning_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
      </node>
      <node id="45873">
        <label>mlpack/core/dists/discrete_distribution.hpp</label>
        <link refid="discrete__distribution_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45819" relation="include">
        </childnode>
        <childnode refid="45861" relation="include">
        </childnode>
      </node>
      <node id="45951">
        <label>neighbor_search_impl.hpp</label>
      </node>
      <node id="45776">
        <label>cctype</label>
      </node>
      <node id="45832">
        <label>iostream</label>
      </node>
      <node id="45972">
        <label>cf_impl.hpp</label>
      </node>
      <node id="45953">
        <label>sort_policies/furthest_neighbor_sort.hpp</label>
        <link refid="furthest__neighbor__sort_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45954" relation="include">
        </childnode>
      </node>
      <node id="45957">
        <label>mlpack/methods/amf/update_rules/nmf_als.hpp</label>
        <link refid="nmf__als_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
      </node>
      <node id="45884">
        <label>mlpack/core/kernels/polynomial_kernel.hpp</label>
        <link refid="polynomial__kernel_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
      </node>
      <node id="45879">
        <label>confusion_matrix_impl.hpp</label>
      </node>
      <node id="45799">
        <label>unordered_map</label>
      </node>
      <node id="45846">
        <label>image_info.hpp</label>
        <link refid="image__info_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45847" relation="include">
        </childnode>
        <childnode refid="45848" relation="include">
        </childnode>
      </node>
      <node id="45778">
        <label>climits</label>
      </node>
      <node id="45842">
        <label>dataset_mapper.hpp</label>
        <link refid="dataset__mapper_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45799" relation="include">
        </childnode>
        <childnode refid="45843" relation="include">
        </childnode>
        <childnode refid="45845" relation="include">
        </childnode>
      </node>
      <node id="45870">
        <label>mlpack/core/math/ccov.hpp</label>
        <link refid="ccov_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45871" relation="include">
        </childnode>
      </node>
      <node id="45826">
        <label>mutex</label>
      </node>
      <node id="45852">
        <label>mlpack/core/data/save.hpp</label>
        <link refid="save_8hpp"/>
        <childnode refid="45819" relation="include">
        </childnode>
        <childnode refid="45786" relation="include">
        </childnode>
        <childnode refid="45827" relation="include">
        </childnode>
        <childnode refid="45841" relation="include">
        </childnode>
        <childnode refid="45846" relation="include">
        </childnode>
        <childnode refid="45853" relation="include">
        </childnode>
      </node>
      <node id="45970">
        <label>mlpack/methods/cf/interpolation_policies/average_interpolation.hpp</label>
        <link refid="average__interpolation_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
      </node>
      <node id="45822">
        <label>chrono</label>
      </node>
      <node id="45949">
        <label>mlpack/core/tree/traversal_info.hpp</label>
        <link refid="traversal__info_8hpp"/>
      </node>
      <node id="45907">
        <label>hrectbound_impl.hpp</label>
      </node>
      <node id="45830">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="45871">
        <label>ccov_impl.hpp</label>
      </node>
      <node id="45898">
        <label>boost/math/special_functions/gamma.hpp</label>
      </node>
      <node id="45924">
        <label>binary_space_tree/rp_tree_mean_split.hpp</label>
        <link refid="rp__tree__mean__split_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45922" relation="include">
        </childnode>
        <childnode refid="45916" relation="include">
        </childnode>
        <childnode refid="45865" relation="include">
        </childnode>
        <childnode refid="45925" relation="include">
        </childnode>
      </node>
      <node id="45921">
        <label>vantage_point_split_impl.hpp</label>
      </node>
      <node id="45828">
        <label>thread</label>
      </node>
      <node id="45900">
        <label>mlpack/core/kernels/cauchy_kernel.hpp</label>
        <link refid="cauchy__kernel_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45888" relation="include">
        </childnode>
        <childnode refid="45882" relation="include">
        </childnode>
      </node>
      <node id="45908">
        <label>ballbound.hpp</label>
        <link refid="ballbound_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45888" relation="include">
        </childnode>
        <childnode refid="45905" relation="include">
        </childnode>
        <childnode refid="45909" relation="include">
        </childnode>
      </node>
      <node id="45839">
        <label>params_impl.hpp</label>
      </node>
      <node id="45959">
        <label>mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp</label>
        <link refid="svd__incomplete__incremental__learning_8hpp"/>
      </node>
      <node id="45923">
        <label>rp_tree_max_split_impl.hpp</label>
      </node>
      <node id="45916">
        <label>mlpack/core/tree/perform_split.hpp</label>
        <link refid="perform__split_8hpp"/>
      </node>
      <node id="45968">
        <label>mlpack/methods/amf/termination_policies/max_iteration_termination.hpp</label>
        <link refid="max__iteration__termination_8hpp"/>
      </node>
      <node id="45963">
        <label>mlpack/methods/amf/termination_policies/simple_residue_termination.hpp</label>
        <link refid="simple__residue__termination_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
      </node>
      <node id="45816">
        <label>type_traits</label>
      </node>
      <node id="45962">
        <label>mlpack/methods/amf/init_rules/random_acol_init.hpp</label>
        <link refid="random__acol__init_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45861" relation="include">
        </childnode>
      </node>
      <node id="45971">
        <label>set</label>
      </node>
      <node id="45937">
        <label>binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45938" relation="include">
        </childnode>
        <childnode refid="45903" relation="include">
        </childnode>
        <childnode refid="45939" relation="include">
        </childnode>
      </node>
      <node id="45792">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="45943">
        <label>binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="45903" relation="include">
        </childnode>
      </node>
      <node id="45896">
        <label>pspectrum_string_kernel_impl.hpp</label>
      </node>
      <node id="45786">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="45810">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="45788" relation="include">
        </childnode>
        <childnode refid="45789" relation="include">
        </childnode>
        <childnode refid="45790" relation="include">
        </childnode>
        <childnode refid="45791" relation="include">
        </childnode>
        <childnode refid="45811" relation="include">
        </childnode>
      </node>
      <node id="45911">
        <label>hollow_ball_bound_impl.hpp</label>
      </node>
      <node id="45868">
        <label>mlpack/core/math/round.hpp</label>
        <link refid="round_8hpp"/>
      </node>
      <node id="45973">
        <label>cf_model_impl.hpp</label>
      </node>
      <node id="45899">
        <label>mlpack/core/kernels/triangular_kernel.hpp</label>
        <link refid="triangular__kernel_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45888" relation="include">
        </childnode>
      </node>
      <node id="45782">
        <label>cstring</label>
      </node>
      <node id="45801">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="45831">
        <label>mlpack/core/util/io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="45832" relation="include">
        </childnode>
        <childnode refid="45824" relation="include">
        </childnode>
        <childnode refid="45825" relation="include">
        </childnode>
        <childnode refid="45827" relation="include">
        </childnode>
        <childnode refid="45833" relation="include">
        </childnode>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45820" relation="include">
        </childnode>
        <childnode refid="45834" relation="include">
        </childnode>
        <childnode refid="45835" relation="include">
        </childnode>
        <childnode refid="45836" relation="include">
        </childnode>
        <childnode refid="45837" relation="include">
        </childnode>
        <childnode refid="45838" relation="include">
        </childnode>
        <childnode refid="45840" relation="include">
        </childnode>
        <childnode refid="45852" relation="include">
        </childnode>
        <childnode refid="45854" relation="include">
        </childnode>
      </node>
      <node id="45914">
        <label>cellbound_impl.hpp</label>
      </node>
      <node id="45927">
        <label>ub_tree_split_impl.hpp</label>
      </node>
      <node id="45912">
        <label>cellbound.hpp</label>
        <link refid="cellbound_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45867" relation="include">
        </childnode>
        <childnode refid="45888" relation="include">
        </childnode>
        <childnode refid="45905" relation="include">
        </childnode>
        <childnode refid="45913" relation="include">
        </childnode>
        <childnode refid="45914" relation="include">
        </childnode>
      </node>
      <node id="45790">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="45874">
        <label>mlpack/core/dists/gaussian_distribution.hpp</label>
        <link refid="gaussian__distribution_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
      </node>
      <node id="45888">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45889" relation="include">
        </childnode>
      </node>
      <node id="45920">
        <label>binary_space_tree/vantage_point_split.hpp</label>
        <link refid="vantage__point__split_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45916" relation="include">
        </childnode>
        <childnode refid="45861" relation="include">
        </childnode>
        <childnode refid="45921" relation="include">
        </childnode>
      </node>
      <node id="45841">
        <label>format.hpp</label>
        <link refid="format_8hpp"/>
      </node>
      <node id="45967">
        <label>mlpack/methods/cf/decomposition_policies/nmf_method.hpp</label>
        <link refid="nmf__method_8hpp"/>
        <childnode refid="45774" relation="include">
        </childnode>
        <childnode refid="45955" relation="include">
        </childnode>
        <childnode refid="45957" relation="include">
        </childnode>
        <childnode refid="45968" relation="include">
        </childnode>
        <childnode refid="45963" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1cf_1_1CFModel" prot="public">mlpack::cf::CFModel</innerclass>
    <innerclass refid="classmlpack_1_1cf_1_1CFWrapper" prot="public">mlpack::cf::CFWrapper</innerclass>
    <innerclass refid="classmlpack_1_1cf_1_1CFWrapperBase" prot="public">mlpack::cf::CFWrapperBase</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1cf">mlpack::cf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Wenhao Huang </para></simplesect>
<simplesect kind="author"><para>Khizir Siddiqui</para></simplesect>
A serializable CF model, used by the main program.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_CF_CF_MODEL_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_CF_CF_MODEL_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="core_8hpp" kindref="compound">mlpack/core.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cf_8hpp" kindref="compound">cf.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cf<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="namespacemlpack_1_1cf_1abde1eb199c5812cbca1a647cf1730732" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1cf_1abde1eb199c5812cbca1a647cf1730732" kindref="member">NeighborSearchTypes</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28" refid="namespacemlpack_1_1cf_1abde1eb199c5812cbca1a647cf1730732a5836bdf1d887d07a1dce5c899ebbb7d6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacemlpack_1_1cf_1abde1eb199c5812cbca1a647cf1730732a5836bdf1d887d07a1dce5c899ebbb7d6" kindref="member">COSINE_SEARCH</ref>,</highlight></codeline>
<codeline lineno="29" refid="namespacemlpack_1_1cf_1abde1eb199c5812cbca1a647cf1730732a2e12a29fd917114d142569ec23116520" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacemlpack_1_1cf_1abde1eb199c5812cbca1a647cf1730732a2e12a29fd917114d142569ec23116520" kindref="member">EUCLIDEAN_SEARCH</ref>,</highlight></codeline>
<codeline lineno="30" refid="namespacemlpack_1_1cf_1abde1eb199c5812cbca1a647cf1730732a31e04ccb8caf24661f0ba99dc4d418d6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacemlpack_1_1cf_1abde1eb199c5812cbca1a647cf1730732a31e04ccb8caf24661f0ba99dc4d418d6" kindref="member">PEARSON_SEARCH</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal">};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="namespacemlpack_1_1cf_1a06410b91b9d0ee6d70901dd29775ecd5" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1cf_1a06410b91b9d0ee6d70901dd29775ecd5" kindref="member">InterpolationTypes</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39" refid="namespacemlpack_1_1cf_1a06410b91b9d0ee6d70901dd29775ecd5a3bbe4e8eb438a26aa54a5414e0f67bbc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacemlpack_1_1cf_1a06410b91b9d0ee6d70901dd29775ecd5a3bbe4e8eb438a26aa54a5414e0f67bbc" kindref="member">AVERAGE_INTERPOLATION</ref>,</highlight></codeline>
<codeline lineno="40" refid="namespacemlpack_1_1cf_1a06410b91b9d0ee6d70901dd29775ecd5aee7afc8e51819205e79d54b3160efe9d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacemlpack_1_1cf_1a06410b91b9d0ee6d70901dd29775ecd5aee7afc8e51819205e79d54b3160efe9d" kindref="member">REGRESSION_INTERPOLATION</ref>,</highlight></codeline>
<codeline lineno="41" refid="namespacemlpack_1_1cf_1a06410b91b9d0ee6d70901dd29775ecd5a5cf3e6503306d6961bef4858de73608a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacemlpack_1_1cf_1a06410b91b9d0ee6d70901dd29775ecd5a5cf3e6503306d6961bef4858de73608a" kindref="member">SIMILARITY_INTERPOLATION</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classmlpack_1_1cf_1_1CFWrapperBase" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1cf_1_1CFWrapperBase" kindref="compound">CFWrapperBase</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53" refid="classmlpack_1_1cf_1_1CFWrapperBase_1a5536395b99c030b97a2860df3e2ae5c4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFWrapperBase_1a5536395b99c030b97a2860df3e2ae5c4" kindref="member">CFWrapperBase</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFWrapperBase" kindref="compound">CFWrapperBase</ref>*<sp/><ref refid="classmlpack_1_1cf_1_1CFWrapperBase_1a390b40d2a1416852dd64201e55dac770" kindref="member">Clone</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classmlpack_1_1cf_1_1CFWrapperBase_1ac017d61192618af5a5f70a671c2a886b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFWrapperBase_1ac017d61192618af5a5f70a671c2a886b" kindref="member">~CFWrapperBase</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFWrapperBase_1a3de57e8cd8b989a1e7e719c80f39d07b" kindref="member">Predict</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1cf_1abde1eb199c5812cbca1a647cf1730732" kindref="member">NeighborSearchTypes</ref><sp/>nsType,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1cf_1a06410b91b9d0ee6d70901dd29775ecd5" kindref="member">InterpolationTypes</ref><sp/>interpolationType,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;size_t&gt;&amp;<sp/>combinations,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>predictions)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFWrapperBase_1aefd1ffc070784adf594bd91a2469a6c7" kindref="member">GetRecommendations</ref>(</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1cf_1abde1eb199c5812cbca1a647cf1730732" kindref="member">NeighborSearchTypes</ref><sp/>nsType,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1cf_1a06410b91b9d0ee6d70901dd29775ecd5" kindref="member">InterpolationTypes</ref><sp/>interpolationType,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numRecs,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;size_t&gt;&amp;<sp/>recommendations)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFWrapperBase_1aefd1ffc070784adf594bd91a2469a6c7" kindref="member">GetRecommendations</ref>(</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1cf_1abde1eb199c5812cbca1a647cf1730732" kindref="member">NeighborSearchTypes</ref><sp/>nsType,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1cf_1a06410b91b9d0ee6d70901dd29775ecd5" kindref="member">InterpolationTypes</ref><sp/>interpolationType,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numRecs,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;size_t&gt;&amp;<sp/>recommendations,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Col&lt;size_t&gt;&amp;<sp/>users)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DecompositionPolicy,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NormalizationPolicy&gt;</highlight></codeline>
<codeline lineno="88" refid="classmlpack_1_1cf_1_1CFWrapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1cf_1_1CFWrapper" kindref="compound">CFWrapper</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFWrapperBase" kindref="compound">CFWrapperBase</ref></highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91" refid="classmlpack_1_1cf_1_1CFWrapper_1ab3a99733c27e27fe3b5204e5c29fa58b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFType" kindref="compound">CFType&lt;DecompositionPolicy, NormalizationPolicy&gt;</ref><sp/><ref refid="classmlpack_1_1cf_1_1CFWrapper_1ab3a99733c27e27fe3b5204e5c29fa58b" kindref="member">CFModelType</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96" refid="classmlpack_1_1cf_1_1CFWrapper_1aeed748fe1f1ae910198e8c3d454d9a05" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFWrapper_1aeed748fe1f1ae910198e8c3d454d9a05" kindref="member">CFWrapper</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classmlpack_1_1cf_1_1CFWrapper_1a6c9fe1dd052abe1ea6f41f508d8a12f3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFWrapper_1a6c9fe1dd052abe1ea6f41f508d8a12f3" kindref="member">CFWrapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DecompositionPolicy&amp;<sp/>decomposition,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numUsersForSimilarity,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rank,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>minResidue,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mit)<sp/>:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cf(data,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decomposition,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numUsersForSimilarity,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIterations,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minResidue,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mit)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>else<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classmlpack_1_1cf_1_1CFWrapper_1af9bba55939ac1cb5bc1c4828094f502c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFWrapper" kindref="compound">CFWrapper</ref>*<sp/><ref refid="classmlpack_1_1cf_1_1CFWrapper_1af9bba55939ac1cb5bc1c4828094f502c" kindref="member">Clone</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFWrapper" kindref="compound">CFWrapper</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classmlpack_1_1cf_1_1CFWrapper_1ab10ab909d67a29b5d9eb7b70c68c0265" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFWrapper_1ab10ab909d67a29b5d9eb7b70c68c0265" kindref="member">~CFWrapper</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="classmlpack_1_1cf_1_1CFWrapper_1a4408b593924d45ed5703e81a27c89a4f" refkind="member"><highlight class="normal"><sp/><sp/>CFModelType&amp;<sp/><ref refid="classmlpack_1_1cf_1_1CFWrapper_1a4408b593924d45ed5703e81a27c89a4f" kindref="member">CF</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cf;<sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFWrapperBase_1a3de57e8cd8b989a1e7e719c80f39d07b" kindref="member">Predict</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1cf_1abde1eb199c5812cbca1a647cf1730732" kindref="member">NeighborSearchTypes</ref><sp/>nsType,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1cf_1a06410b91b9d0ee6d70901dd29775ecd5" kindref="member">InterpolationTypes</ref><sp/>interpolationType,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;size_t&gt;&amp;<sp/>combinations,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>predictions);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFWrapperBase_1aefd1ffc070784adf594bd91a2469a6c7" kindref="member">GetRecommendations</ref>(</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1cf_1abde1eb199c5812cbca1a647cf1730732" kindref="member">NeighborSearchTypes</ref><sp/>nsType,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1cf_1a06410b91b9d0ee6d70901dd29775ecd5" kindref="member">InterpolationTypes</ref><sp/>interpolationType,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numRecs,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;size_t&gt;&amp;<sp/>recommendations);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFWrapperBase_1aefd1ffc070784adf594bd91a2469a6c7" kindref="member">GetRecommendations</ref>(</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1cf_1abde1eb199c5812cbca1a647cf1730732" kindref="member">NeighborSearchTypes</ref><sp/>nsType,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1cf_1a06410b91b9d0ee6d70901dd29775ecd5" kindref="member">InterpolationTypes</ref><sp/>interpolationType,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numRecs,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;size_t&gt;&amp;<sp/>recommendations,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Col&lt;size_t&gt;&amp;<sp/>users);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="149" refid="classmlpack_1_1cf_1_1CFWrapper_1a65cba07328997659bec80b9879b15a51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFWrapper_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(cf));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="156" refid="classmlpack_1_1cf_1_1CFWrapper_1ac41c0dab695bad32610adb98813a8e03" refkind="member"><highlight class="normal"><sp/><sp/>CFModelType<sp/><ref refid="classmlpack_1_1cf_1_1CFWrapper_1ac41c0dab695bad32610adb98813a8e03" kindref="member">cf</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="classmlpack_1_1cf_1_1CFModel" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1cf_1_1CFModel" kindref="compound">CFModel</ref></highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="165" refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3" kindref="member">DecompositionTypes</ref></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="167" refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3af2cbf4baa18e0247ed7ef03f98c1c896" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3af2cbf4baa18e0247ed7ef03f98c1c896" kindref="member">NMF</ref>,</highlight></codeline>
<codeline lineno="168" refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3ad89b11660e9fe489189ef81eeba75ba0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3ad89b11660e9fe489189ef81eeba75ba0" kindref="member">BATCH_SVD</ref>,</highlight></codeline>
<codeline lineno="169" refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3ae44c1c137ebc965d699554aadfbf5865" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3ae44c1c137ebc965d699554aadfbf5865" kindref="member">RANDOMIZED_SVD</ref>,</highlight></codeline>
<codeline lineno="170" refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3accee8c435616e0dfafc4410886f68d51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3accee8c435616e0dfafc4410886f68d51" kindref="member">REG_SVD</ref>,</highlight></codeline>
<codeline lineno="171" refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3a4c23ca46a33b4e973638be60cca3b7b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3a4c23ca46a33b4e973638be60cca3b7b5" kindref="member">SVD_COMPLETE</ref>,</highlight></codeline>
<codeline lineno="172" refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3a47406d821eeee5f4e2a19b8b549397fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3a47406d821eeee5f4e2a19b8b549397fb" kindref="member">SVD_INCOMPLETE</ref>,</highlight></codeline>
<codeline lineno="173" refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3ade2338f2230ab9d7b19cfe1465bcc80d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3ade2338f2230ab9d7b19cfe1465bcc80d" kindref="member">BIAS_SVD</ref>,</highlight></codeline>
<codeline lineno="174" refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3abcfa38576ad06602dfb83c8b650e7705" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SVD_PLUS_PLUS</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565" kindref="member">NormalizationTypes</ref></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="179" refid="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565ad9a831b0ac370f4155b26a850ce64fc8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565ad9a831b0ac370f4155b26a850ce64fc8" kindref="member">NO_NORMALIZATION</ref>,</highlight></codeline>
<codeline lineno="180" refid="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565a7d94fdea267a8d26f70fa3fe893a67ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565a7d94fdea267a8d26f70fa3fe893a67ee" kindref="member">ITEM_MEAN_NORMALIZATION</ref>,</highlight></codeline>
<codeline lineno="181" refid="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565ad8d1bcaa0014bb1ecc28fc8b7fcd5ddb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565ad8d1bcaa0014bb1ecc28fc8b7fcd5ddb" kindref="member">USER_MEAN_NORMALIZATION</ref>,</highlight></codeline>
<codeline lineno="182" refid="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565a44a4cc0253c524dcb55624c74c31f107" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565a44a4cc0253c524dcb55624c74c31f107" kindref="member">OVERALL_MEAN_NORMALIZATION</ref>,</highlight></codeline>
<codeline lineno="183" refid="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565a622067f1e73e543af7fd67342c7036d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Z_SCORE_NORMALIZATION</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3" kindref="member">DecompositionTypes</ref><sp/>decompositionType;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565" kindref="member">NormalizationTypes</ref><sp/>normalizationType;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFWrapperBase" kindref="compound">CFWrapperBase</ref>*<sp/>cf;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFModel" kindref="compound">CFModel</ref>();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFModel" kindref="compound">CFModel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFModel" kindref="compound">CFModel</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFModel" kindref="compound">CFModel</ref>(<ref refid="classmlpack_1_1cf_1_1CFModel" kindref="compound">CFModel</ref>&amp;&amp;<sp/>other);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFModel" kindref="compound">CFModel</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFModel" kindref="compound">CFModel</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFModel" kindref="compound">CFModel</ref>&amp;<sp/>operator=(<ref refid="classmlpack_1_1cf_1_1CFModel" kindref="compound">CFModel</ref>&amp;&amp;<sp/>other);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>~<ref refid="classmlpack_1_1cf_1_1CFModel" kindref="compound">CFModel</ref>();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="classmlpack_1_1cf_1_1CFModel_1a861d50677ec1e5d429a75b23c23decd3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFWrapperBase" kindref="compound">CFWrapperBase</ref>*<sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1a861d50677ec1e5d429a75b23c23decd3" kindref="member">CF</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cf;<sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="classmlpack_1_1cf_1_1CFModel_1ac5f3d1c10b9195f857011b8eba813237" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3" kindref="member">DecompositionTypes</ref>&amp;<sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1ac5f3d1c10b9195f857011b8eba813237" kindref="member">DecompositionType</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="223"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>decompositionType;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227" refid="classmlpack_1_1cf_1_1CFModel_1aa73bf3b476ee722deee107e113f889a9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3" kindref="member">DecompositionTypes</ref>&amp;<sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1aa73bf3b476ee722deee107e113f889a9" kindref="member">DecompositionType</ref>()</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>decompositionType;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="classmlpack_1_1cf_1_1CFModel_1a47f078a075be8389962d9dbf7d4131d6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565" kindref="member">NormalizationTypes</ref>&amp;<sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1a47f078a075be8389962d9dbf7d4131d6" kindref="member">NormalizationType</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="234"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>normalizationType;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238" refid="classmlpack_1_1cf_1_1CFModel_1aad708ca15e9ba3694222b1c8f4fc263f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565" kindref="member">NormalizationTypes</ref>&amp;<sp/><ref refid="classmlpack_1_1cf_1_1CFModel_1aad708ca15e9ba3694222b1c8f4fc263f" kindref="member">NormalizationType</ref>()</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>normalizationType;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Train(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numUsersForSimilarity,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rank,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minResidue,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mit);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFWrapperBase_1a3de57e8cd8b989a1e7e719c80f39d07b" kindref="member">Predict</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1cf_1abde1eb199c5812cbca1a647cf1730732" kindref="member">NeighborSearchTypes</ref><sp/>nsType,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1cf_1a06410b91b9d0ee6d70901dd29775ecd5" kindref="member">InterpolationTypes</ref><sp/>interpolationType,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;size_t&gt;&amp;<sp/>combinations,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>predictions);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFWrapperBase_1aefd1ffc070784adf594bd91a2469a6c7" kindref="member">GetRecommendations</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1cf_1abde1eb199c5812cbca1a647cf1730732" kindref="member">NeighborSearchTypes</ref><sp/>nsType,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1cf_1a06410b91b9d0ee6d70901dd29775ecd5" kindref="member">InterpolationTypes</ref><sp/>interpolationType,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numRecs,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;size_t&gt;&amp;<sp/>recommendations,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Col&lt;size_t&gt;&amp;<sp/>users);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1CFWrapperBase_1aefd1ffc070784adf594bd91a2469a6c7" kindref="member">GetRecommendations</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1cf_1abde1eb199c5812cbca1a647cf1730732" kindref="member">NeighborSearchTypes</ref><sp/>nsType,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacemlpack_1_1cf_1a06410b91b9d0ee6d70901dd29775ecd5" kindref="member">InterpolationTypes</ref><sp/>interpolationType,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numRecs,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;size_t&gt;&amp;<sp/>recommendations);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal">};</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cf_model_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp"/>
  </compounddef>
</doxygen>
