<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1amf_1_1SVDIncompleteIncrementalLearning" kind="class" language="C++" prot="public">
    <compoundname>mlpack::amf::SVDIncompleteIncrementalLearning</compoundname>
    <includes refid="svd__incomplete__incremental__learning_8hpp" local="no">svd_incomplete_incremental_learning.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1amf_1_1SVDIncompleteIncrementalLearning_1a0e396da15e6249a960ca686970ee4ba4" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t currentUserIndex</definition>
        <argsstring></argsstring>
        <name>currentUserIndex</name>
        <briefdescription>
<para>Current user under consideration. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp" line="158" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1amf_1_1SVDIncompleteIncrementalLearning_1a6d2402476727060562dea8f9d5f44597" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double kh</definition>
        <argsstring></argsstring>
        <name>kh</name>
        <briefdescription>
<para>Regularization parameter for H matrix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp" line="155" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1amf_1_1SVDIncompleteIncrementalLearning_1ae006c02ce3ccca65596953543abc1815" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double kw</definition>
        <argsstring></argsstring>
        <name>kw</name>
        <briefdescription>
<para>Regularization parameter for W matrix. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp" line="153" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1amf_1_1SVDIncompleteIncrementalLearning_1aed08c8478a62910aab06ba708a0e5b5f" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double u</definition>
        <argsstring></argsstring>
        <name>u</name>
        <briefdescription>
<para>Step size of batch learning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp" line="151" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1amf_1_1SVDIncompleteIncrementalLearning_1af5da9da0261dbf844411693f1d7f16d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SVDIncompleteIncrementalLearning</definition>
        <argsstring>(double u=0.001, double kw=0, double kh=0)</argsstring>
        <name>SVDIncompleteIncrementalLearning</name>
        <param>
          <type>double</type>
          <declname>u</declname>
          <defval>0.001</defval>
        </param>
        <param>
          <type>double</type>
          <declname>kw</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>kh</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Initialize the parameters of <ref refid="classmlpack_1_1amf_1_1SVDIncompleteIncrementalLearning" kindref="compound">SVDIncompleteIncrementalLearning</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>Step value used in batch learning. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kw</parametername>
</parameternamelist>
<parameterdescription>
<para>Regularization constant for W matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kh</parametername>
</parameternamelist>
<parameterdescription>
<para>Regularization constant for H matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp" line="53" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp" bodystart="53" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1amf_1_1SVDIncompleteIncrementalLearning_1a3c338e327964c027a7d4172e638a5dff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MatType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void HUpdate</definition>
        <argsstring>(const MatType &amp;V, const arma::mat &amp;W, arma::mat &amp;H)</argsstring>
        <name>HUpdate</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>V</declname>
        </param>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>W</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>H</declname>
        </param>
        <briefdescription>
<para>The update rule for the encoding matrix H. </para>        </briefdescription>
        <detaileddescription>
<para>The function takes in all the matrices and only changes the value of the H matrix.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>V</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix to be factorized. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>W</parametername>
</parameternamelist>
<parameterdescription>
<para>Basis matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>H</parametername>
</parameternamelist>
<parameterdescription>
<para>Encoding matrix to be updated. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp" line="121" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp" bodystart="121" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1amf_1_1SVDIncompleteIncrementalLearning_1aac5af164b10635addd7ff7bb934a4db3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MatType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Initialize</definition>
        <argsstring>(const MatType &amp;, const size_t)</argsstring>
        <name>Initialize</name>
        <param>
          <type>const MatType &amp;</type>
        </param>
        <param>
          <type>const size_t</type>
        </param>
        <briefdescription>
<para>Initialize parameters before factorization. </para>        </briefdescription>
        <detaileddescription>
<para>This function must be called before a new factorization. This simply sets the column being considered to 0, so the input matrix and rank are not used.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(dataset) Input matrix to be factorized. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(rank) of factorization </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp" line="70" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1amf_1_1SVDIncompleteIncrementalLearning_1a2df8bfa574f8a8e43e6b1466dc0526fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MatType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void WUpdate</definition>
        <argsstring>(const MatType &amp;V, arma::mat &amp;W, const arma::mat &amp;H)</argsstring>
        <name>WUpdate</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>V</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>W</declname>
        </param>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>H</declname>
        </param>
        <briefdescription>
<para>The update rule for the basis matrix W. </para>        </briefdescription>
        <detaileddescription>
<para>The function takes in all the matrices and only changes the value of the W matrix.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>V</parametername>
</parameternamelist>
<parameterdescription>
<para>Input matrix to be factorized. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>W</parametername>
</parameternamelist>
<parameterdescription>
<para>Basis matrix to be updated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>H</parametername>
</parameternamelist>
<parameterdescription>
<para>Encoding matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp" line="86" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp" bodystart="86" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class computes SVD using incomplete incremental batch learning, as described in the following paper: </para>    </briefdescription>
    <detaileddescription>
<para><programlisting><codeline><highlight class="normal">@techreport{ma2008guide,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>title={A<sp/>Guide<sp/>to<sp/>Singular<sp/>Value<sp/>Decomposition<sp/>for<sp/>Collaborative</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filtering},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>author={Ma,<sp/>Chih-Chao},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>year={2008},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>institution={Department<sp/>of<sp/>Computer<sp/>Science,<sp/>National<sp/>Taiwan<sp/>University}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para>This class implements &apos;Algorithm 2&apos; as given in the paper. Incremental learning modifies only some feature values in W and H after scanning part of the input matrix (V). This differs from batch learning, which considers every element in V for each update of W and H. The regularization technique is also different: in incomplete incremental learning, regularization takes into account the number of elements in a given column of V.</para><para><simplesect kind="see"><para><ref refid="classmlpack_1_1amf_1_1SVDBatchLearning" kindref="compound">SVDBatchLearning</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp" line="44" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp" bodystart="43" bodyend="159"/>
    <listofallmembers>
      <member refid="classmlpack_1_1amf_1_1SVDIncompleteIncrementalLearning_1a0e396da15e6249a960ca686970ee4ba4" prot="private" virt="non-virtual"><scope>mlpack::amf::SVDIncompleteIncrementalLearning</scope><name>currentUserIndex</name></member>
      <member refid="classmlpack_1_1amf_1_1SVDIncompleteIncrementalLearning_1a3c338e327964c027a7d4172e638a5dff" prot="public" virt="non-virtual"><scope>mlpack::amf::SVDIncompleteIncrementalLearning</scope><name>HUpdate</name></member>
      <member refid="classmlpack_1_1amf_1_1SVDIncompleteIncrementalLearning_1aac5af164b10635addd7ff7bb934a4db3" prot="public" virt="non-virtual"><scope>mlpack::amf::SVDIncompleteIncrementalLearning</scope><name>Initialize</name></member>
      <member refid="classmlpack_1_1amf_1_1SVDIncompleteIncrementalLearning_1a6d2402476727060562dea8f9d5f44597" prot="private" virt="non-virtual"><scope>mlpack::amf::SVDIncompleteIncrementalLearning</scope><name>kh</name></member>
      <member refid="classmlpack_1_1amf_1_1SVDIncompleteIncrementalLearning_1ae006c02ce3ccca65596953543abc1815" prot="private" virt="non-virtual"><scope>mlpack::amf::SVDIncompleteIncrementalLearning</scope><name>kw</name></member>
      <member refid="classmlpack_1_1amf_1_1SVDIncompleteIncrementalLearning_1af5da9da0261dbf844411693f1d7f16d5" prot="public" virt="non-virtual"><scope>mlpack::amf::SVDIncompleteIncrementalLearning</scope><name>SVDIncompleteIncrementalLearning</name></member>
      <member refid="classmlpack_1_1amf_1_1SVDIncompleteIncrementalLearning_1aed08c8478a62910aab06ba708a0e5b5f" prot="private" virt="non-virtual"><scope>mlpack::amf::SVDIncompleteIncrementalLearning</scope><name>u</name></member>
      <member refid="classmlpack_1_1amf_1_1SVDIncompleteIncrementalLearning_1a2df8bfa574f8a8e43e6b1466dc0526fe" prot="public" virt="non-virtual"><scope>mlpack::amf::SVDIncompleteIncrementalLearning</scope><name>WUpdate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
