<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="kernel__pca_8hpp" kind="file" language="C++">
    <compoundname>kernel_pca.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="naive__method_8hpp" local="no">mlpack/methods/kernel_pca/kernel_rules/naive_method.hpp</includes>
    <includes local="yes">kernel_pca_impl.hpp</includes>
    <incdepgraph>
      <node id="51608">
        <label>list</label>
      </node>
      <node id="51605">
        <label>atomic</label>
      </node>
      <node id="51595">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="51571">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="51607">
        <label>iomanip</label>
      </node>
      <node id="51580">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="51581" relation="include">
        </childnode>
        <childnode refid="51583" relation="include">
        </childnode>
      </node>
      <node id="51563">
        <label>cstdint</label>
      </node>
      <node id="51572">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="51579">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="51602">
        <label>arma_config.hpp</label>
      </node>
      <node id="51557">
        <label>/home/aakash/mlpack/src/mlpack/methods/kernel_pca/kernel_pca.hpp</label>
        <link refid="kernel__pca_8hpp"/>
        <childnode refid="51558" relation="include">
        </childnode>
        <childnode refid="51615" relation="include">
        </childnode>
        <childnode refid="51616" relation="include">
        </childnode>
      </node>
      <node id="51592">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="51559">
        <label>cmath</label>
      </node>
      <node id="51578">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="51567">
        <label>stdexcept</label>
      </node>
      <node id="51587">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="51572" relation="include">
        </childnode>
        <childnode refid="51574" relation="include">
        </childnode>
        <childnode refid="51575" relation="include">
        </childnode>
        <childnode refid="51573" relation="include">
        </childnode>
      </node>
      <node id="51611">
        <label>string</label>
      </node>
      <node id="51599">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="51600" relation="include">
        </childnode>
        <childnode refid="51566" relation="include">
        </childnode>
      </node>
      <node id="51609">
        <label>map</label>
      </node>
      <node id="51561">
        <label>cfloat</label>
      </node>
      <node id="51591">
        <label>boost/variant.hpp</label>
      </node>
      <node id="51613">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="51575">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="51598">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="51599" relation="include">
        </childnode>
        <childnode refid="51575" relation="include">
        </childnode>
        <childnode refid="51582" relation="include">
        </childnode>
        <childnode refid="51600" relation="include">
        </childnode>
      </node>
      <node id="51588">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="51586">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="51572" relation="include">
        </childnode>
        <childnode refid="51574" relation="include">
        </childnode>
        <childnode refid="51575" relation="include">
        </childnode>
        <childnode refid="51573" relation="include">
        </childnode>
      </node>
      <node id="51589">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="51572" relation="include">
        </childnode>
        <childnode refid="51574" relation="include">
        </childnode>
        <childnode refid="51575" relation="include">
        </childnode>
        <childnode refid="51573" relation="include">
        </childnode>
      </node>
      <node id="51577">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="51597">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="51573" relation="include">
        </childnode>
        <childnode refid="51574" relation="include">
        </childnode>
        <childnode refid="51575" relation="include">
        </childnode>
        <childnode refid="51585" relation="include">
        </childnode>
        <childnode refid="51594" relation="include">
        </childnode>
      </node>
      <node id="51601">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="51602" relation="include">
        </childnode>
      </node>
      <node id="51615">
        <label>mlpack/methods/kernel_pca/kernel_rules/naive_method.hpp</label>
        <link refid="naive__method_8hpp"/>
        <childnode refid="51558" relation="include">
        </childnode>
      </node>
      <node id="51603">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="51558">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="51559" relation="include">
        </childnode>
        <childnode refid="51560" relation="include">
        </childnode>
        <childnode refid="51561" relation="include">
        </childnode>
        <childnode refid="51562" relation="include">
        </childnode>
        <childnode refid="51563" relation="include">
        </childnode>
        <childnode refid="51564" relation="include">
        </childnode>
        <childnode refid="51565" relation="include">
        </childnode>
        <childnode refid="51566" relation="include">
        </childnode>
        <childnode refid="51567" relation="include">
        </childnode>
        <childnode refid="51568" relation="include">
        </childnode>
        <childnode refid="51569" relation="include">
        </childnode>
        <childnode refid="51570" relation="include">
        </childnode>
        <childnode refid="51571" relation="include">
        </childnode>
        <childnode refid="51572" relation="include">
        </childnode>
        <childnode refid="51573" relation="include">
        </childnode>
        <childnode refid="51574" relation="include">
        </childnode>
        <childnode refid="51575" relation="include">
        </childnode>
        <childnode refid="51576" relation="include">
        </childnode>
        <childnode refid="51577" relation="include">
        </childnode>
        <childnode refid="51578" relation="include">
        </childnode>
        <childnode refid="51579" relation="include">
        </childnode>
        <childnode refid="51580" relation="include">
        </childnode>
        <childnode refid="51584" relation="include">
        </childnode>
        <childnode refid="51585" relation="include">
        </childnode>
        <childnode refid="51586" relation="include">
        </childnode>
        <childnode refid="51587" relation="include">
        </childnode>
        <childnode refid="51588" relation="include">
        </childnode>
        <childnode refid="51589" relation="include">
        </childnode>
        <childnode refid="51590" relation="include">
        </childnode>
        <childnode refid="51596" relation="include">
        </childnode>
        <childnode refid="51597" relation="include">
        </childnode>
        <childnode refid="51594" relation="include">
        </childnode>
        <childnode refid="51598" relation="include">
        </childnode>
        <childnode refid="51601" relation="include">
        </childnode>
        <childnode refid="51603" relation="include">
        </childnode>
        <childnode refid="51604" relation="include">
        </childnode>
        <childnode refid="51613" relation="include">
        </childnode>
        <childnode refid="51614" relation="include">
        </childnode>
      </node>
      <node id="51564">
        <label>cstdio</label>
      </node>
      <node id="51568">
        <label>tuple</label>
      </node>
      <node id="51573">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="51590">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="51573" relation="include">
        </childnode>
        <childnode refid="51574" relation="include">
        </childnode>
        <childnode refid="51575" relation="include">
        </childnode>
        <childnode refid="51577" relation="include">
        </childnode>
        <childnode refid="51591" relation="include">
        </childnode>
        <childnode refid="51592" relation="include">
        </childnode>
        <childnode refid="51593" relation="include">
        </childnode>
        <childnode refid="51594" relation="include">
        </childnode>
      </node>
      <node id="51569">
        <label>utility</label>
      </node>
      <node id="51593">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="51584">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="51581">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="51582" relation="include">
        </childnode>
      </node>
      <node id="51604">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="51605" relation="include">
        </childnode>
        <childnode refid="51606" relation="include">
        </childnode>
        <childnode refid="51607" relation="include">
        </childnode>
        <childnode refid="51608" relation="include">
        </childnode>
        <childnode refid="51609" relation="include">
        </childnode>
        <childnode refid="51610" relation="include">
        </childnode>
        <childnode refid="51611" relation="include">
        </childnode>
        <childnode refid="51612" relation="include">
        </childnode>
      </node>
      <node id="51582">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="51596">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="51594" relation="include">
        </childnode>
        <childnode refid="51590" relation="include">
        </childnode>
        <childnode refid="51597" relation="include">
        </childnode>
      </node>
      <node id="51565">
        <label>cstdlib</label>
      </node>
      <node id="51560">
        <label>cctype</label>
      </node>
      <node id="51583">
        <label>unordered_map</label>
      </node>
      <node id="51562">
        <label>climits</label>
      </node>
      <node id="51616">
        <label>kernel_pca_impl.hpp</label>
      </node>
      <node id="51610">
        <label>mutex</label>
      </node>
      <node id="51606">
        <label>chrono</label>
      </node>
      <node id="51614">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="51612">
        <label>thread</label>
      </node>
      <node id="51600">
        <label>type_traits</label>
      </node>
      <node id="51576">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="51570">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="51594">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="51572" relation="include">
        </childnode>
        <childnode refid="51573" relation="include">
        </childnode>
        <childnode refid="51574" relation="include">
        </childnode>
        <childnode refid="51575" relation="include">
        </childnode>
        <childnode refid="51595" relation="include">
        </childnode>
      </node>
      <node id="51566">
        <label>cstring</label>
      </node>
      <node id="51585">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="51574">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1kpca_1_1KernelPCA" prot="public">mlpack::kpca::KernelPCA</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1kpca">mlpack::kpca</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ajinkya Kale </para></simplesect>
<simplesect kind="author"><para>Marcus Edel</para></simplesect>
Defines the KernelPCA class to perform Kernel Principal Components Analysis on the specified data set.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="14"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_KERNEL_PCA_KERNEL_PCA_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_KERNEL_PCA_KERNEL_PCA_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="naive__method_8hpp" kindref="compound">mlpack/methods/kernel_pca/kernel_rules/naive_method.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="21" refid="namespacemlpack_1_1kpca" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">kpca<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>KernelType,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>KernelRule<sp/>=<sp/><ref refid="classmlpack_1_1kpca_1_1NaiveKernelRule" kindref="compound">NaiveKernelRule&lt;KernelType&gt;</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="40" refid="classmlpack_1_1kpca_1_1KernelPCA" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1kpca_1_1KernelPCA" kindref="compound">KernelPCA</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1kpca_1_1KernelPCA_1acd937631070c2e90436fbc2db6cb2491" kindref="member">KernelPCA</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KernelType<sp/>kernel<sp/>=<sp/>KernelType(),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>centerTransformedData<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kpca_1_1KernelPCA_1a856a3d7bb0dca4d5beaca3710b9da857" kindref="member">Apply</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>transformedData,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>eigval,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>eigvec,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>newDimension);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kpca_1_1KernelPCA_1a856a3d7bb0dca4d5beaca3710b9da857" kindref="member">Apply</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>transformedData,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>eigval,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>eigvec);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kpca_1_1KernelPCA_1a856a3d7bb0dca4d5beaca3710b9da857" kindref="member">Apply</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>transformedData,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>eigval);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kpca_1_1KernelPCA_1a856a3d7bb0dca4d5beaca3710b9da857" kindref="member">Apply</ref>(arma::mat&amp;<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>newDimension);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classmlpack_1_1kpca_1_1KernelPCA_1a917492b75cc17298bc58c3d28e2944fb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KernelType&amp;<sp/><ref refid="classmlpack_1_1kpca_1_1KernelPCA_1a917492b75cc17298bc58c3d28e2944fb" kindref="member">Kernel</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kernel;<sp/>}</highlight></codeline>
<codeline lineno="112" refid="classmlpack_1_1kpca_1_1KernelPCA_1ab8d1bedeac8344d80e50d819790a117a" refkind="member"><highlight class="normal"><sp/><sp/>KernelType&amp;<sp/><ref refid="classmlpack_1_1kpca_1_1KernelPCA_1ab8d1bedeac8344d80e50d819790a117a" kindref="member">Kernel</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kernel;<sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="classmlpack_1_1kpca_1_1KernelPCA_1aac3950c39b833cdb3c7b521530acd255" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kpca_1_1KernelPCA_1aac3950c39b833cdb3c7b521530acd255" kindref="member">CenterTransformedData</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>centerTransformedData;<sp/>}</highlight></codeline>
<codeline lineno="117" refid="classmlpack_1_1kpca_1_1KernelPCA_1a58b45fe79f520f3114261f08bbd1ac2f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1kpca_1_1KernelPCA_1a58b45fe79f520f3114261f08bbd1ac2f" kindref="member">CenterTransformedData</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>centerTransformedData;<sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>KernelType<sp/>kernel;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>centerTransformedData;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>KernelPCA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>kpca</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;kernel_pca_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>MLPACK_METHODS_KERNEL_PCA_KERNEL_PCA_HPP</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/kernel_pca/kernel_pca.hpp"/>
  </compounddef>
</doxygen>
