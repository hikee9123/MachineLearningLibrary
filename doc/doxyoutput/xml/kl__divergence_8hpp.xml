<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="kl__divergence_8hpp" kind="file" language="C++">
    <compoundname>kl_divergence.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="yes">kl_divergence_impl.hpp</includes>
    <incdepgraph>
      <node id="40652">
        <label>list</label>
      </node>
      <node id="40649">
        <label>atomic</label>
      </node>
      <node id="40639">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="40615">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="40651">
        <label>iomanip</label>
      </node>
      <node id="40624">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="40625" relation="include">
        </childnode>
        <childnode refid="40627" relation="include">
        </childnode>
      </node>
      <node id="40607">
        <label>cstdint</label>
      </node>
      <node id="40616">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="40623">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="40646">
        <label>arma_config.hpp</label>
      </node>
      <node id="40636">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="40603">
        <label>cmath</label>
      </node>
      <node id="40622">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="40611">
        <label>stdexcept</label>
      </node>
      <node id="40631">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="40616" relation="include">
        </childnode>
        <childnode refid="40618" relation="include">
        </childnode>
        <childnode refid="40619" relation="include">
        </childnode>
        <childnode refid="40617" relation="include">
        </childnode>
      </node>
      <node id="40655">
        <label>string</label>
      </node>
      <node id="40643">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="40644" relation="include">
        </childnode>
        <childnode refid="40610" relation="include">
        </childnode>
      </node>
      <node id="40653">
        <label>map</label>
      </node>
      <node id="40605">
        <label>cfloat</label>
      </node>
      <node id="40635">
        <label>boost/variant.hpp</label>
      </node>
      <node id="40657">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="40619">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="40642">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="40643" relation="include">
        </childnode>
        <childnode refid="40619" relation="include">
        </childnode>
        <childnode refid="40626" relation="include">
        </childnode>
        <childnode refid="40644" relation="include">
        </childnode>
      </node>
      <node id="40632">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="40630">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="40616" relation="include">
        </childnode>
        <childnode refid="40618" relation="include">
        </childnode>
        <childnode refid="40619" relation="include">
        </childnode>
        <childnode refid="40617" relation="include">
        </childnode>
      </node>
      <node id="40633">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="40616" relation="include">
        </childnode>
        <childnode refid="40618" relation="include">
        </childnode>
        <childnode refid="40619" relation="include">
        </childnode>
        <childnode refid="40617" relation="include">
        </childnode>
      </node>
      <node id="40621">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="40641">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="40617" relation="include">
        </childnode>
        <childnode refid="40618" relation="include">
        </childnode>
        <childnode refid="40619" relation="include">
        </childnode>
        <childnode refid="40629" relation="include">
        </childnode>
        <childnode refid="40638" relation="include">
        </childnode>
      </node>
      <node id="40645">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="40646" relation="include">
        </childnode>
      </node>
      <node id="40647">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="40602">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="40603" relation="include">
        </childnode>
        <childnode refid="40604" relation="include">
        </childnode>
        <childnode refid="40605" relation="include">
        </childnode>
        <childnode refid="40606" relation="include">
        </childnode>
        <childnode refid="40607" relation="include">
        </childnode>
        <childnode refid="40608" relation="include">
        </childnode>
        <childnode refid="40609" relation="include">
        </childnode>
        <childnode refid="40610" relation="include">
        </childnode>
        <childnode refid="40611" relation="include">
        </childnode>
        <childnode refid="40612" relation="include">
        </childnode>
        <childnode refid="40613" relation="include">
        </childnode>
        <childnode refid="40614" relation="include">
        </childnode>
        <childnode refid="40615" relation="include">
        </childnode>
        <childnode refid="40616" relation="include">
        </childnode>
        <childnode refid="40617" relation="include">
        </childnode>
        <childnode refid="40618" relation="include">
        </childnode>
        <childnode refid="40619" relation="include">
        </childnode>
        <childnode refid="40620" relation="include">
        </childnode>
        <childnode refid="40621" relation="include">
        </childnode>
        <childnode refid="40622" relation="include">
        </childnode>
        <childnode refid="40623" relation="include">
        </childnode>
        <childnode refid="40624" relation="include">
        </childnode>
        <childnode refid="40628" relation="include">
        </childnode>
        <childnode refid="40629" relation="include">
        </childnode>
        <childnode refid="40630" relation="include">
        </childnode>
        <childnode refid="40631" relation="include">
        </childnode>
        <childnode refid="40632" relation="include">
        </childnode>
        <childnode refid="40633" relation="include">
        </childnode>
        <childnode refid="40634" relation="include">
        </childnode>
        <childnode refid="40640" relation="include">
        </childnode>
        <childnode refid="40641" relation="include">
        </childnode>
        <childnode refid="40638" relation="include">
        </childnode>
        <childnode refid="40642" relation="include">
        </childnode>
        <childnode refid="40645" relation="include">
        </childnode>
        <childnode refid="40647" relation="include">
        </childnode>
        <childnode refid="40648" relation="include">
        </childnode>
        <childnode refid="40657" relation="include">
        </childnode>
        <childnode refid="40658" relation="include">
        </childnode>
      </node>
      <node id="40608">
        <label>cstdio</label>
      </node>
      <node id="40612">
        <label>tuple</label>
      </node>
      <node id="40617">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="40634">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="40617" relation="include">
        </childnode>
        <childnode refid="40618" relation="include">
        </childnode>
        <childnode refid="40619" relation="include">
        </childnode>
        <childnode refid="40621" relation="include">
        </childnode>
        <childnode refid="40635" relation="include">
        </childnode>
        <childnode refid="40636" relation="include">
        </childnode>
        <childnode refid="40637" relation="include">
        </childnode>
        <childnode refid="40638" relation="include">
        </childnode>
      </node>
      <node id="40613">
        <label>utility</label>
      </node>
      <node id="40637">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="40628">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="40625">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="40626" relation="include">
        </childnode>
      </node>
      <node id="40648">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="40649" relation="include">
        </childnode>
        <childnode refid="40650" relation="include">
        </childnode>
        <childnode refid="40651" relation="include">
        </childnode>
        <childnode refid="40652" relation="include">
        </childnode>
        <childnode refid="40653" relation="include">
        </childnode>
        <childnode refid="40654" relation="include">
        </childnode>
        <childnode refid="40655" relation="include">
        </childnode>
        <childnode refid="40656" relation="include">
        </childnode>
      </node>
      <node id="40626">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="40640">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="40638" relation="include">
        </childnode>
        <childnode refid="40634" relation="include">
        </childnode>
        <childnode refid="40641" relation="include">
        </childnode>
      </node>
      <node id="40609">
        <label>cstdlib</label>
      </node>
      <node id="40604">
        <label>cctype</label>
      </node>
      <node id="40627">
        <label>unordered_map</label>
      </node>
      <node id="40606">
        <label>climits</label>
      </node>
      <node id="40654">
        <label>mutex</label>
      </node>
      <node id="40650">
        <label>chrono</label>
      </node>
      <node id="40658">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="40656">
        <label>thread</label>
      </node>
      <node id="40644">
        <label>type_traits</label>
      </node>
      <node id="40620">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="40614">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="40638">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="40616" relation="include">
        </childnode>
        <childnode refid="40617" relation="include">
        </childnode>
        <childnode refid="40618" relation="include">
        </childnode>
        <childnode refid="40619" relation="include">
        </childnode>
        <childnode refid="40639" relation="include">
        </childnode>
      </node>
      <node id="40601">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/kl_divergence.hpp</label>
        <link refid="kl__divergence_8hpp"/>
        <childnode refid="40602" relation="include">
        </childnode>
        <childnode refid="40659" relation="include">
        </childnode>
      </node>
      <node id="40610">
        <label>cstring</label>
      </node>
      <node id="40659">
        <label>kl_divergence_impl.hpp</label>
      </node>
      <node id="40629">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="40618">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1ann_1_1KLDivergence" prot="public">mlpack::ann::KLDivergence</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1ann">mlpack::ann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Dakshit Agrawal</para></simplesect>
Definition of the Kullback–Leibler Divergence error function.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_ANN_LOSS_FUNCTION_KL_DIVERGENCE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_ANN_LOSS_FUNCTION_KL_DIVERGENCE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ann<sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputDataType<sp/>=<sp/>arma::mat,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputDataType<sp/>=<sp/>arma::mat</highlight></codeline>
<codeline lineno="44"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="45" refid="classmlpack_1_1ann_1_1KLDivergence" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1ann_1_1KLDivergence" kindref="compound">KLDivergence</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1ann_1_1KLDivergence_1a16755dd3b869553b03796619adcb8e52" kindref="member">KLDivergence</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>takeMean<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PredictionType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TargetType&gt;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PredictionType::elem_type<sp/><ref refid="classmlpack_1_1ann_1_1KLDivergence_1ab3640059898ea76c13709b8099316fe8" kindref="member">Forward</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PredictionType&amp;<sp/>prediction,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TargetType&amp;<sp/>target);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PredictionType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TargetType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LossType&gt;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1KLDivergence_1add41dbaf358dc099750dc6064cb7e0d7" kindref="member">Backward</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PredictionType&amp;<sp/>prediction,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TargetType&amp;<sp/>target,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LossType&amp;<sp/>loss);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classmlpack_1_1ann_1_1KLDivergence_1a8bae962cc603d1cab8d80ec78f8d505d" refkind="member"><highlight class="normal"><sp/><sp/>OutputDataType&amp;<sp/><ref refid="classmlpack_1_1ann_1_1KLDivergence_1a8bae962cc603d1cab8d80ec78f8d505d" kindref="member">OutputParameter</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputParameter;<sp/>}</highlight></codeline>
<codeline lineno="83" refid="classmlpack_1_1ann_1_1KLDivergence_1a21d5f745f02c709625a4ee0907f004a5" refkind="member"><highlight class="normal"><sp/><sp/>OutputDataType&amp;<sp/><ref refid="classmlpack_1_1ann_1_1KLDivergence_1a21d5f745f02c709625a4ee0907f004a5" kindref="member">OutputParameter</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputParameter;<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classmlpack_1_1ann_1_1KLDivergence_1ab1afafdad2b04d3378dce6f13c9968a2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1KLDivergence_1ab1afafdad2b04d3378dce6f13c9968a2" kindref="member">TakeMean</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>takeMean;<sp/>}</highlight></codeline>
<codeline lineno="88" refid="classmlpack_1_1ann_1_1KLDivergence_1a6523d960bcd088ba1e86fbe2e095a79b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1KLDivergence_1a6523d960bcd088ba1e86fbe2e095a79b" kindref="member">TakeMean</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>takeMean;<sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1KLDivergence_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>OutputDataType<sp/>outputParameter;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>takeMean;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>KLDivergence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>include<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;kl_divergence_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/kl_divergence.hpp"/>
  </compounddef>
</doxygen>
