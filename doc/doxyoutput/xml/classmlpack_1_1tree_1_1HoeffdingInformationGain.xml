<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1tree_1_1HoeffdingInformationGain" kind="class" language="C++" prot="public">
    <compoundname>mlpack::tree::HoeffdingInformationGain</compoundname>
    <includes refid="hoeffding__trees_2information__gain_8hpp" local="no">information_gain.hpp</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1HoeffdingInformationGain_1a578c636308efbd492ea30e62f05f4d63" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double Evaluate</definition>
        <argsstring>(const arma::Mat&lt; size_t &gt; &amp;counts)</argsstring>
        <name>Evaluate</name>
        <param>
          <type>const arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>counts</declname>
        </param>
        <briefdescription>
<para>Given the sufficient statistics of a proposed split, calculate the information gain if that split was to be used. </para>        </briefdescription>
        <detaileddescription>
<para>The &apos;counts&apos; matrix should contain the number of points in each class in each column, so the size of &apos;counts&apos; is children x classes, where &apos;children&apos; is the number of child nodes in the proposed split.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>counts</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix of sufficient statistics. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/information_gain.hpp" line="31" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/information_gain.hpp" bodystart="31" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1HoeffdingInformationGain_1a9d801bb1be5db5207213f846f224458f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double Range</definition>
        <argsstring>(const size_t numClasses)</argsstring>
        <name>Range</name>
        <param>
          <type>const size_t</type>
          <declname>numClasses</declname>
        </param>
        <briefdescription>
<para>Return the range of the information gain for the given number of classes. </para>        </briefdescription>
        <detaileddescription>
<para>(That is, the difference between the maximum possible value and the minimum possible value.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/information_gain.hpp" line="84" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/information_gain.hpp" bodystart="84" bodyend="90"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/information_gain.hpp" line="20" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/information_gain.hpp" bodystart="19" bodyend="91"/>
    <listofallmembers>
      <member refid="classmlpack_1_1tree_1_1HoeffdingInformationGain_1a578c636308efbd492ea30e62f05f4d63" prot="public" virt="non-virtual"><scope>mlpack::tree::HoeffdingInformationGain</scope><name>Evaluate</name></member>
      <member refid="classmlpack_1_1tree_1_1HoeffdingInformationGain_1a9d801bb1be5db5207213f846f224458f" prot="public" virt="non-virtual"><scope>mlpack::tree::HoeffdingInformationGain</scope><name>Range</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
