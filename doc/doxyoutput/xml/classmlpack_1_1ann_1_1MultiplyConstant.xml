<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1ann_1_1MultiplyConstant" kind="class" language="C++" prot="public">
    <compoundname>mlpack::ann::MultiplyConstant</compoundname>
    <includes refid="multiply__constant_8hpp" local="no">multiply_constant.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename InputDataType</type>
        <defval>arma::mat</defval>
      </param>
      <param>
        <type>typename OutputDataType</type>
        <defval>arma::mat</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1MultiplyConstant_1a94a1c23fb1e8ea69218123e216f406a8" prot="private" static="no" mutable="no">
        <type>OutputDataType</type>
        <definition>OutputDataType delta</definition>
        <argsstring></argsstring>
        <name>delta</name>
        <briefdescription>
<para>Locally-stored delta object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" line="104" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1MultiplyConstant_1a77fc4c7d9e92ac78bf2c4239477f54bc" prot="private" static="no" mutable="no">
        <type>OutputDataType</type>
        <definition>OutputDataType outputParameter</definition>
        <argsstring></argsstring>
        <name>outputParameter</name>
        <briefdescription>
<para>Locally-stored output parameter object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" line="107" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1MultiplyConstant_1a882bd5b34441312c0b43d0c96f5faeed" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double scalar</definition>
        <argsstring></argsstring>
        <name>scalar</name>
        <briefdescription>
<para>Locally-stored constant scalar value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" line="101" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1ann_1_1MultiplyConstant_1aa6e3a1625ffeb8f34929fe84cab94665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MultiplyConstant</definition>
        <argsstring>(const double scalar=1.0)</argsstring>
        <name>MultiplyConstant</name>
        <param>
          <type>const double</type>
          <declname>scalar</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>Create the <ref refid="classmlpack_1_1ann_1_1MultiplyConstant" kindref="compound">MultiplyConstant</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1MultiplyConstant_1a60c061c0b1fb4e3fd411ec66624e89aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MultiplyConstant</definition>
        <argsstring>(const MultiplyConstant &amp;layer)</argsstring>
        <name>MultiplyConstant</name>
        <param>
          <type>const <ref refid="classmlpack_1_1ann_1_1MultiplyConstant" kindref="compound">MultiplyConstant</ref> &amp;</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
<para>Copy Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1MultiplyConstant_1af7e1bf950ddb2f4d18b296e5dddc1e39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MultiplyConstant</definition>
        <argsstring>(MultiplyConstant &amp;&amp;layer)</argsstring>
        <name>MultiplyConstant</name>
        <param>
          <type><ref refid="classmlpack_1_1ann_1_1MultiplyConstant" kindref="compound">MultiplyConstant</ref> &amp;&amp;</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
<para>Move Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1MultiplyConstant_1a5878755c86e1272d46de59b56ca9aced" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DataType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Backward</definition>
        <argsstring>(const DataType &amp;, const DataType &amp;gy, DataType &amp;g)</argsstring>
        <name>Backward</name>
        <param>
          <type>const DataType &amp;</type>
        </param>
        <param>
          <type>const DataType &amp;</type>
          <declname>gy</declname>
        </param>
        <param>
          <type>DataType &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>Ordinary feed backward pass of a neural network. </para>        </briefdescription>
        <detaileddescription>
<para>The backward pass multiplies the error with the specified constant scalar value.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(input) The propagated input activation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gy</parametername>
</parameternamelist>
<parameterdescription>
<para>The backpropagated error. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>The calculated gradient. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1MultiplyConstant_1ae7c8eba5764f021cd93e30efe638e63c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>OutputDataType &amp;</type>
        <definition>OutputDataType&amp; Delta</definition>
        <argsstring>() const</argsstring>
        <name>Delta</name>
        <briefdescription>
<para>Get the delta. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" line="81" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1MultiplyConstant_1ad6601342d560219ce951d554e69e5e87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>OutputDataType &amp;</type>
        <definition>OutputDataType&amp; Delta</definition>
        <argsstring>()</argsstring>
        <name>Delta</name>
        <briefdescription>
<para>Modify the delta. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" line="83" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1MultiplyConstant_1a09440df0a90bdcc766e56e097d91205b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputType</type>
          </param>
          <param>
            <type>typename OutputType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Forward</definition>
        <argsstring>(const InputType &amp;input, OutputType &amp;output)</argsstring>
        <name>Forward</name>
        <param>
          <type>const InputType &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>OutputType &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Ordinary feed forward pass of a neural network. </para>        </briefdescription>
        <detaileddescription>
<para>Multiply the input with the specified constant scalar value.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data used for evaluating the specified function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Resulting output activation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1MultiplyConstant_1a46ecb66263a8b420e2f0e259af7d1b85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1ann_1_1MultiplyConstant" kindref="compound">MultiplyConstant</ref> &amp;</type>
        <definition>MultiplyConstant&amp; operator=</definition>
        <argsstring>(const MultiplyConstant &amp;layer)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmlpack_1_1ann_1_1MultiplyConstant" kindref="compound">MultiplyConstant</ref> &amp;</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
<para>Copy assignment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1MultiplyConstant_1abf6baf9f49afa200424103f70b499c82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1ann_1_1MultiplyConstant" kindref="compound">MultiplyConstant</ref> &amp;</type>
        <definition>MultiplyConstant&amp; operator=</definition>
        <argsstring>(MultiplyConstant &amp;&amp;layer)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classmlpack_1_1ann_1_1MultiplyConstant" kindref="compound">MultiplyConstant</ref> &amp;&amp;</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
<para>Move assignment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1MultiplyConstant_1a8bae962cc603d1cab8d80ec78f8d505d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>OutputDataType &amp;</type>
        <definition>OutputDataType&amp; OutputParameter</definition>
        <argsstring>() const</argsstring>
        <name>OutputParameter</name>
        <briefdescription>
<para>Get the output parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" line="76" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1MultiplyConstant_1a21d5f745f02c709625a4ee0907f004a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>OutputDataType &amp;</type>
        <definition>OutputDataType&amp; OutputParameter</definition>
        <argsstring>()</argsstring>
        <name>OutputParameter</name>
        <briefdescription>
<para>Modify the output parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" line="78" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1MultiplyConstant_1a695d62de3c64e459f9ea3452d30f088a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Scalar</definition>
        <argsstring>() const</argsstring>
        <name>Scalar</name>
        <briefdescription>
<para>Get the scalar multiplier. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" line="86" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1MultiplyConstant_1af1d9364328bb6a3cd3a384ec94f5720d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; Scalar</definition>
        <argsstring>()</argsstring>
        <name>Scalar</name>
        <briefdescription>
<para>Modify the scalar multiplier. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" line="88" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1MultiplyConstant_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the layer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" line="97" column="1"/>
        <referencedby refid="classmlpack_1_1ann_1_1MultiplyConstant_1a7a2704698a50d9e00dfb083f3a863579" compoundref="multiply__constant_8hpp" startline="91" endline="91">MultiplyConstant&lt; InputDataType, OutputDataType &gt;::WeightSize</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1MultiplyConstant_1a7a2704698a50d9e00dfb083f3a863579" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t WeightSize</definition>
        <argsstring>() const</argsstring>
        <name>WeightSize</name>
        <briefdescription>
<para>Get the size of the weights. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" line="91" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" bodystart="91" bodyend="91"/>
        <references refid="classmlpack_1_1ann_1_1MultiplyConstant_1a65cba07328997659bec80b9879b15a51">MultiplyConstant&lt; InputDataType, OutputDataType &gt;::serialize</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implementation of the multiply constant layer. </para>    </briefdescription>
    <detaileddescription>
<para>The multiply constant layer multiplies the input by a (non-learnable) constant.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>InputDataType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the input data (arma::colvec, arma::mat, arma::sp_mat or arma::cube). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>OutputDataType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the output data (arma::colvec, arma::mat, arma::sp_mat or arma::cube). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" line="35" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_constant.hpp" bodystart="34" bodyend="108"/>
    <listofallmembers>
      <member refid="classmlpack_1_1ann_1_1MultiplyConstant_1a5878755c86e1272d46de59b56ca9aced" prot="public" virt="non-virtual"><scope>mlpack::ann::MultiplyConstant</scope><name>Backward</name></member>
      <member refid="classmlpack_1_1ann_1_1MultiplyConstant_1ae7c8eba5764f021cd93e30efe638e63c" prot="public" virt="non-virtual"><scope>mlpack::ann::MultiplyConstant</scope><name>Delta</name></member>
      <member refid="classmlpack_1_1ann_1_1MultiplyConstant_1ad6601342d560219ce951d554e69e5e87" prot="public" virt="non-virtual"><scope>mlpack::ann::MultiplyConstant</scope><name>Delta</name></member>
      <member refid="classmlpack_1_1ann_1_1MultiplyConstant_1a94a1c23fb1e8ea69218123e216f406a8" prot="private" virt="non-virtual"><scope>mlpack::ann::MultiplyConstant</scope><name>delta</name></member>
      <member refid="classmlpack_1_1ann_1_1MultiplyConstant_1a09440df0a90bdcc766e56e097d91205b" prot="public" virt="non-virtual"><scope>mlpack::ann::MultiplyConstant</scope><name>Forward</name></member>
      <member refid="classmlpack_1_1ann_1_1MultiplyConstant_1aa6e3a1625ffeb8f34929fe84cab94665" prot="public" virt="non-virtual"><scope>mlpack::ann::MultiplyConstant</scope><name>MultiplyConstant</name></member>
      <member refid="classmlpack_1_1ann_1_1MultiplyConstant_1a60c061c0b1fb4e3fd411ec66624e89aa" prot="public" virt="non-virtual"><scope>mlpack::ann::MultiplyConstant</scope><name>MultiplyConstant</name></member>
      <member refid="classmlpack_1_1ann_1_1MultiplyConstant_1af7e1bf950ddb2f4d18b296e5dddc1e39" prot="public" virt="non-virtual"><scope>mlpack::ann::MultiplyConstant</scope><name>MultiplyConstant</name></member>
      <member refid="classmlpack_1_1ann_1_1MultiplyConstant_1a46ecb66263a8b420e2f0e259af7d1b85" prot="public" virt="non-virtual"><scope>mlpack::ann::MultiplyConstant</scope><name>operator=</name></member>
      <member refid="classmlpack_1_1ann_1_1MultiplyConstant_1abf6baf9f49afa200424103f70b499c82" prot="public" virt="non-virtual"><scope>mlpack::ann::MultiplyConstant</scope><name>operator=</name></member>
      <member refid="classmlpack_1_1ann_1_1MultiplyConstant_1a8bae962cc603d1cab8d80ec78f8d505d" prot="public" virt="non-virtual"><scope>mlpack::ann::MultiplyConstant</scope><name>OutputParameter</name></member>
      <member refid="classmlpack_1_1ann_1_1MultiplyConstant_1a21d5f745f02c709625a4ee0907f004a5" prot="public" virt="non-virtual"><scope>mlpack::ann::MultiplyConstant</scope><name>OutputParameter</name></member>
      <member refid="classmlpack_1_1ann_1_1MultiplyConstant_1a77fc4c7d9e92ac78bf2c4239477f54bc" prot="private" virt="non-virtual"><scope>mlpack::ann::MultiplyConstant</scope><name>outputParameter</name></member>
      <member refid="classmlpack_1_1ann_1_1MultiplyConstant_1a882bd5b34441312c0b43d0c96f5faeed" prot="private" virt="non-virtual"><scope>mlpack::ann::MultiplyConstant</scope><name>scalar</name></member>
      <member refid="classmlpack_1_1ann_1_1MultiplyConstant_1a695d62de3c64e459f9ea3452d30f088a" prot="public" virt="non-virtual"><scope>mlpack::ann::MultiplyConstant</scope><name>Scalar</name></member>
      <member refid="classmlpack_1_1ann_1_1MultiplyConstant_1af1d9364328bb6a3cd3a384ec94f5720d" prot="public" virt="non-virtual"><scope>mlpack::ann::MultiplyConstant</scope><name>Scalar</name></member>
      <member refid="classmlpack_1_1ann_1_1MultiplyConstant_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::ann::MultiplyConstant</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1ann_1_1MultiplyConstant_1a7a2704698a50d9e00dfb083f3a863579" prot="public" virt="non-virtual"><scope>mlpack::ann::MultiplyConstant</scope><name>WeightSize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
