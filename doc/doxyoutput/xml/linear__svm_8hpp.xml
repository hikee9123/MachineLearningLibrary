<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="linear__svm_8hpp" kind="file" language="C++">
    <compoundname>linear_svm.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="no">ensmallen.hpp</includes>
    <includes refid="linear__svm__function_8hpp" local="yes">linear_svm_function.hpp</includes>
    <includes local="yes">linear_svm_impl.hpp</includes>
    <incdepgraph>
      <node id="52911">
        <label>list</label>
      </node>
      <node id="52908">
        <label>atomic</label>
      </node>
      <node id="52898">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="52874">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="52910">
        <label>iomanip</label>
      </node>
      <node id="52883">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="52884" relation="include">
        </childnode>
        <childnode refid="52886" relation="include">
        </childnode>
      </node>
      <node id="52866">
        <label>cstdint</label>
      </node>
      <node id="52875">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="52882">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="52905">
        <label>arma_config.hpp</label>
      </node>
      <node id="52895">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="52862">
        <label>cmath</label>
      </node>
      <node id="52881">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="52870">
        <label>stdexcept</label>
      </node>
      <node id="52890">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="52875" relation="include">
        </childnode>
        <childnode refid="52877" relation="include">
        </childnode>
        <childnode refid="52878" relation="include">
        </childnode>
        <childnode refid="52876" relation="include">
        </childnode>
      </node>
      <node id="52914">
        <label>string</label>
      </node>
      <node id="52902">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="52903" relation="include">
        </childnode>
        <childnode refid="52869" relation="include">
        </childnode>
      </node>
      <node id="52912">
        <label>map</label>
      </node>
      <node id="52921">
        <label>linear_svm_impl.hpp</label>
      </node>
      <node id="52864">
        <label>cfloat</label>
      </node>
      <node id="52894">
        <label>boost/variant.hpp</label>
      </node>
      <node id="52916">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="52878">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="52901">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="52902" relation="include">
        </childnode>
        <childnode refid="52878" relation="include">
        </childnode>
        <childnode refid="52885" relation="include">
        </childnode>
        <childnode refid="52903" relation="include">
        </childnode>
      </node>
      <node id="52891">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="52919">
        <label>linear_svm_function.hpp</label>
        <link refid="linear__svm__function_8hpp"/>
        <childnode refid="52861" relation="include">
        </childnode>
        <childnode refid="52920" relation="include">
        </childnode>
      </node>
      <node id="52889">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="52875" relation="include">
        </childnode>
        <childnode refid="52877" relation="include">
        </childnode>
        <childnode refid="52878" relation="include">
        </childnode>
        <childnode refid="52876" relation="include">
        </childnode>
      </node>
      <node id="52892">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="52875" relation="include">
        </childnode>
        <childnode refid="52877" relation="include">
        </childnode>
        <childnode refid="52878" relation="include">
        </childnode>
        <childnode refid="52876" relation="include">
        </childnode>
      </node>
      <node id="52880">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="52900">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="52876" relation="include">
        </childnode>
        <childnode refid="52877" relation="include">
        </childnode>
        <childnode refid="52878" relation="include">
        </childnode>
        <childnode refid="52888" relation="include">
        </childnode>
        <childnode refid="52897" relation="include">
        </childnode>
      </node>
      <node id="52904">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="52905" relation="include">
        </childnode>
      </node>
      <node id="52906">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="52861">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="52862" relation="include">
        </childnode>
        <childnode refid="52863" relation="include">
        </childnode>
        <childnode refid="52864" relation="include">
        </childnode>
        <childnode refid="52865" relation="include">
        </childnode>
        <childnode refid="52866" relation="include">
        </childnode>
        <childnode refid="52867" relation="include">
        </childnode>
        <childnode refid="52868" relation="include">
        </childnode>
        <childnode refid="52869" relation="include">
        </childnode>
        <childnode refid="52870" relation="include">
        </childnode>
        <childnode refid="52871" relation="include">
        </childnode>
        <childnode refid="52872" relation="include">
        </childnode>
        <childnode refid="52873" relation="include">
        </childnode>
        <childnode refid="52874" relation="include">
        </childnode>
        <childnode refid="52875" relation="include">
        </childnode>
        <childnode refid="52876" relation="include">
        </childnode>
        <childnode refid="52877" relation="include">
        </childnode>
        <childnode refid="52878" relation="include">
        </childnode>
        <childnode refid="52879" relation="include">
        </childnode>
        <childnode refid="52880" relation="include">
        </childnode>
        <childnode refid="52881" relation="include">
        </childnode>
        <childnode refid="52882" relation="include">
        </childnode>
        <childnode refid="52883" relation="include">
        </childnode>
        <childnode refid="52887" relation="include">
        </childnode>
        <childnode refid="52888" relation="include">
        </childnode>
        <childnode refid="52889" relation="include">
        </childnode>
        <childnode refid="52890" relation="include">
        </childnode>
        <childnode refid="52891" relation="include">
        </childnode>
        <childnode refid="52892" relation="include">
        </childnode>
        <childnode refid="52893" relation="include">
        </childnode>
        <childnode refid="52899" relation="include">
        </childnode>
        <childnode refid="52900" relation="include">
        </childnode>
        <childnode refid="52897" relation="include">
        </childnode>
        <childnode refid="52901" relation="include">
        </childnode>
        <childnode refid="52904" relation="include">
        </childnode>
        <childnode refid="52906" relation="include">
        </childnode>
        <childnode refid="52907" relation="include">
        </childnode>
        <childnode refid="52916" relation="include">
        </childnode>
        <childnode refid="52917" relation="include">
        </childnode>
      </node>
      <node id="52860">
        <label>/home/aakash/mlpack/src/mlpack/methods/linear_svm/linear_svm.hpp</label>
        <link refid="linear__svm_8hpp"/>
        <childnode refid="52861" relation="include">
        </childnode>
        <childnode refid="52918" relation="include">
        </childnode>
        <childnode refid="52919" relation="include">
        </childnode>
        <childnode refid="52921" relation="include">
        </childnode>
      </node>
      <node id="52867">
        <label>cstdio</label>
      </node>
      <node id="52871">
        <label>tuple</label>
      </node>
      <node id="52876">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="52893">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="52876" relation="include">
        </childnode>
        <childnode refid="52877" relation="include">
        </childnode>
        <childnode refid="52878" relation="include">
        </childnode>
        <childnode refid="52880" relation="include">
        </childnode>
        <childnode refid="52894" relation="include">
        </childnode>
        <childnode refid="52895" relation="include">
        </childnode>
        <childnode refid="52896" relation="include">
        </childnode>
        <childnode refid="52897" relation="include">
        </childnode>
      </node>
      <node id="52872">
        <label>utility</label>
      </node>
      <node id="52896">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="52887">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="52884">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="52885" relation="include">
        </childnode>
      </node>
      <node id="52907">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="52908" relation="include">
        </childnode>
        <childnode refid="52909" relation="include">
        </childnode>
        <childnode refid="52910" relation="include">
        </childnode>
        <childnode refid="52911" relation="include">
        </childnode>
        <childnode refid="52912" relation="include">
        </childnode>
        <childnode refid="52913" relation="include">
        </childnode>
        <childnode refid="52914" relation="include">
        </childnode>
        <childnode refid="52915" relation="include">
        </childnode>
      </node>
      <node id="52885">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="52899">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="52897" relation="include">
        </childnode>
        <childnode refid="52893" relation="include">
        </childnode>
        <childnode refid="52900" relation="include">
        </childnode>
      </node>
      <node id="52868">
        <label>cstdlib</label>
      </node>
      <node id="52863">
        <label>cctype</label>
      </node>
      <node id="52886">
        <label>unordered_map</label>
      </node>
      <node id="52865">
        <label>climits</label>
      </node>
      <node id="52913">
        <label>mutex</label>
      </node>
      <node id="52909">
        <label>chrono</label>
      </node>
      <node id="52917">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="52920">
        <label>linear_svm_function_impl.hpp</label>
      </node>
      <node id="52915">
        <label>thread</label>
      </node>
      <node id="52903">
        <label>type_traits</label>
      </node>
      <node id="52879">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="52873">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="52897">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="52875" relation="include">
        </childnode>
        <childnode refid="52876" relation="include">
        </childnode>
        <childnode refid="52877" relation="include">
        </childnode>
        <childnode refid="52878" relation="include">
        </childnode>
        <childnode refid="52898" relation="include">
        </childnode>
      </node>
      <node id="52869">
        <label>cstring</label>
      </node>
      <node id="52888">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="52918">
        <label>ensmallen.hpp</label>
      </node>
      <node id="52877">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1svm_1_1LinearSVM" prot="public">mlpack::svm::LinearSVM</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1svm">mlpack::svm</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ayush Chamoli</para></simplesect>
An implementation of Linear SVM.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_LINEAR_SVM_LINEAR_SVM_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_LINEAR_SVM_LINEAR_SVM_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ensmallen.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="linear__svm__function_8hpp" kindref="compound">linear_svm_function.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="21" refid="namespacemlpack_1_1svm" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">svm<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType<sp/>=<sp/>arma::mat&gt;</highlight></codeline>
<codeline lineno="80" refid="classmlpack_1_1svm_1_1LinearSVM" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1svm_1_1LinearSVM" kindref="compound">LinearSVM</ref></highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OptimizerType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>CallbackTypes&gt;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1svm_1_1LinearSVM_1aefdb800e39c4b1aa0e39dc7fd3ccee44" kindref="member">LinearSVM</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Row&lt;size_t&gt;&amp;<sp/>labels,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numClasses,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fitIntercept,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OptimizerType<sp/>optimizer,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CallbackTypes&amp;&amp;...<sp/>callbacks);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OptimizerType<sp/>=<sp/>ens::L_BFGS&gt;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1svm_1_1LinearSVM_1aefdb800e39c4b1aa0e39dc7fd3ccee44" kindref="member">LinearSVM</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Row&lt;size_t&gt;&amp;<sp/>labels,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numClasses<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda<sp/>=<sp/>0.0001,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>1.0,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fitIntercept<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OptimizerType<sp/>optimizer<sp/>=<sp/>OptimizerType());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1svm_1_1LinearSVM_1aefdb800e39c4b1aa0e39dc7fd3ccee44" kindref="member">LinearSVM</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>inputSize,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numClasses<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda<sp/>=<sp/>0.0001,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>1.0,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fitIntercept<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1svm_1_1LinearSVM_1aefdb800e39c4b1aa0e39dc7fd3ccee44" kindref="member">LinearSVM</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numClasses<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda<sp/>=<sp/>0.0001,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>1.0,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fitIntercept<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1svm_1_1LinearSVM_1a9cf32d6ddee61625f9e8aead727db5fd" kindref="member">Classify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Row&lt;size_t&gt;&amp;<sp/>labels)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1svm_1_1LinearSVM_1a9cf32d6ddee61625f9e8aead727db5fd" kindref="member">Classify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Row&lt;size_t&gt;&amp;<sp/>labels,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>scores)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1svm_1_1LinearSVM_1a9cf32d6ddee61625f9e8aead727db5fd" kindref="member">Classify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>scores)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType&gt;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1svm_1_1LinearSVM_1a9cf32d6ddee61625f9e8aead727db5fd" kindref="member">Classify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>point)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1svm_1_1LinearSVM_1a697a12b762e4fc2cd730987074e262bd" kindref="member">ComputeAccuracy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>testData,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Row&lt;size_t&gt;&amp;<sp/>testLabels)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OptimizerType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>CallbackTypes&gt;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1svm_1_1LinearSVM_1a8944b0e0826ea837bc05f1a8df82abc7" kindref="member">Train</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Row&lt;size_t&gt;&amp;<sp/>labels,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numClasses,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OptimizerType<sp/>optimizer,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CallbackTypes&amp;&amp;...<sp/>callbacks);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OptimizerType<sp/>=<sp/>ens::L_BFGS&gt;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1svm_1_1LinearSVM_1a8944b0e0826ea837bc05f1a8df82abc7" kindref="member">Train</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Row&lt;size_t&gt;&amp;<sp/>labels,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numClasses<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OptimizerType<sp/>optimizer<sp/>=<sp/>OptimizerType());</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="classmlpack_1_1svm_1_1LinearSVM_1ac9b6fde1dc1604ba744b1e6ab5b1d499" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1svm_1_1LinearSVM_1ac9b6fde1dc1604ba744b1e6ab5b1d499" kindref="member">NumClasses</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numClasses;<sp/>}</highlight></codeline>
<codeline lineno="265" refid="classmlpack_1_1svm_1_1LinearSVM_1a088ebfdf3c7a9e7eea81716d0c55b5a3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1svm_1_1LinearSVM_1a088ebfdf3c7a9e7eea81716d0c55b5a3" kindref="member">NumClasses</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>numClasses;<sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="classmlpack_1_1svm_1_1LinearSVM_1aaf66629b989a326453647f42443c6a0c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1svm_1_1LinearSVM_1aaf66629b989a326453647f42443c6a0c" kindref="member">Lambda</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lambda;<sp/>}</highlight></codeline>
<codeline lineno="270" refid="classmlpack_1_1svm_1_1LinearSVM_1a53535041275cedd0ec3de67ca032aa94" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1svm_1_1LinearSVM_1a53535041275cedd0ec3de67ca032aa94" kindref="member">Lambda</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lambda;<sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="classmlpack_1_1svm_1_1LinearSVM_1a9fcb8a5caa7165245d5aa803b0a94a7c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1svm_1_1LinearSVM_1a9fcb8a5caa7165245d5aa803b0a94a7c" kindref="member">Delta</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>delta;<sp/>}</highlight></codeline>
<codeline lineno="275" refid="classmlpack_1_1svm_1_1LinearSVM_1acb1f7d73ed8ec9121d6d0e45b560d8fa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1svm_1_1LinearSVM_1acb1f7d73ed8ec9121d6d0e45b560d8fa" kindref="member">Delta</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>delta;<sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="classmlpack_1_1svm_1_1LinearSVM_1a7d4773fa79c43c5e1935ff9c8439c352" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1svm_1_1LinearSVM_1a7d4773fa79c43c5e1935ff9c8439c352" kindref="member">FitIntercept</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fitIntercept;<sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="classmlpack_1_1svm_1_1LinearSVM_1a043f0ccd62e6711a18e0d81047be9a0a" refkind="member"><highlight class="normal"><sp/><sp/>arma::mat&amp;<sp/><ref refid="classmlpack_1_1svm_1_1LinearSVM_1a043f0ccd62e6711a18e0d81047be9a0a" kindref="member">Parameters</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parameters;<sp/>}</highlight></codeline>
<codeline lineno="283" refid="classmlpack_1_1svm_1_1LinearSVM_1aa68d74dc1e86e4352e00a3cab83a0e4a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/><ref refid="classmlpack_1_1svm_1_1LinearSVM_1aa68d74dc1e86e4352e00a3cab83a0e4a" kindref="member">Parameters</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parameters;<sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="classmlpack_1_1svm_1_1LinearSVM_1a71c4a6c2db59e7a14196cc6e9846a29b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1svm_1_1LinearSVM_1a71c4a6c2db59e7a14196cc6e9846a29b" kindref="member">FeatureSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="287"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fitIntercept<sp/>?<sp/>parameters.n_rows<sp/>-<sp/>1<sp/>:</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameters.n_rows;<sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="294" refid="classmlpack_1_1svm_1_1LinearSVM_1a65cba07328997659bec80b9879b15a51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1svm_1_1LinearSVM_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(parameters));</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(numClasses));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(lambda));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(fitIntercept));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>arma::mat<sp/>parameters;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numClasses;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lambda;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fitIntercept;</highlight></codeline>
<codeline lineno="313"><highlight class="normal">};</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>svm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;linear_svm_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>MLPACK_METHODS_LINEAR_SVM_LINEAR_SVM_HPP</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/linear_svm/linear_svm.hpp"/>
  </compounddef>
</doxygen>
