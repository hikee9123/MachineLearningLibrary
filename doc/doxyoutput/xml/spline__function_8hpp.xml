<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="spline__function_8hpp" kind="file" language="C++">
    <compoundname>spline_function.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <incdepgraph>
      <node id="25826">
        <label>list</label>
      </node>
      <node id="25823">
        <label>atomic</label>
      </node>
      <node id="25813">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="25789">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="25825">
        <label>iomanip</label>
      </node>
      <node id="25798">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="25799" relation="include">
        </childnode>
        <childnode refid="25801" relation="include">
        </childnode>
      </node>
      <node id="25781">
        <label>cstdint</label>
      </node>
      <node id="25790">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="25797">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="25820">
        <label>arma_config.hpp</label>
      </node>
      <node id="25810">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="25777">
        <label>cmath</label>
      </node>
      <node id="25796">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="25785">
        <label>stdexcept</label>
      </node>
      <node id="25805">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="25790" relation="include">
        </childnode>
        <childnode refid="25792" relation="include">
        </childnode>
        <childnode refid="25793" relation="include">
        </childnode>
        <childnode refid="25791" relation="include">
        </childnode>
      </node>
      <node id="25829">
        <label>string</label>
      </node>
      <node id="25817">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="25818" relation="include">
        </childnode>
        <childnode refid="25784" relation="include">
        </childnode>
      </node>
      <node id="25827">
        <label>map</label>
      </node>
      <node id="25779">
        <label>cfloat</label>
      </node>
      <node id="25809">
        <label>boost/variant.hpp</label>
      </node>
      <node id="25775">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/activation_functions/spline_function.hpp</label>
        <link refid="spline__function_8hpp"/>
        <childnode refid="25776" relation="include">
        </childnode>
      </node>
      <node id="25831">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="25793">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="25816">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="25817" relation="include">
        </childnode>
        <childnode refid="25793" relation="include">
        </childnode>
        <childnode refid="25800" relation="include">
        </childnode>
        <childnode refid="25818" relation="include">
        </childnode>
      </node>
      <node id="25806">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="25804">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="25790" relation="include">
        </childnode>
        <childnode refid="25792" relation="include">
        </childnode>
        <childnode refid="25793" relation="include">
        </childnode>
        <childnode refid="25791" relation="include">
        </childnode>
      </node>
      <node id="25807">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="25790" relation="include">
        </childnode>
        <childnode refid="25792" relation="include">
        </childnode>
        <childnode refid="25793" relation="include">
        </childnode>
        <childnode refid="25791" relation="include">
        </childnode>
      </node>
      <node id="25795">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="25815">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="25791" relation="include">
        </childnode>
        <childnode refid="25792" relation="include">
        </childnode>
        <childnode refid="25793" relation="include">
        </childnode>
        <childnode refid="25803" relation="include">
        </childnode>
        <childnode refid="25812" relation="include">
        </childnode>
      </node>
      <node id="25819">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="25820" relation="include">
        </childnode>
      </node>
      <node id="25821">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="25776">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="25777" relation="include">
        </childnode>
        <childnode refid="25778" relation="include">
        </childnode>
        <childnode refid="25779" relation="include">
        </childnode>
        <childnode refid="25780" relation="include">
        </childnode>
        <childnode refid="25781" relation="include">
        </childnode>
        <childnode refid="25782" relation="include">
        </childnode>
        <childnode refid="25783" relation="include">
        </childnode>
        <childnode refid="25784" relation="include">
        </childnode>
        <childnode refid="25785" relation="include">
        </childnode>
        <childnode refid="25786" relation="include">
        </childnode>
        <childnode refid="25787" relation="include">
        </childnode>
        <childnode refid="25788" relation="include">
        </childnode>
        <childnode refid="25789" relation="include">
        </childnode>
        <childnode refid="25790" relation="include">
        </childnode>
        <childnode refid="25791" relation="include">
        </childnode>
        <childnode refid="25792" relation="include">
        </childnode>
        <childnode refid="25793" relation="include">
        </childnode>
        <childnode refid="25794" relation="include">
        </childnode>
        <childnode refid="25795" relation="include">
        </childnode>
        <childnode refid="25796" relation="include">
        </childnode>
        <childnode refid="25797" relation="include">
        </childnode>
        <childnode refid="25798" relation="include">
        </childnode>
        <childnode refid="25802" relation="include">
        </childnode>
        <childnode refid="25803" relation="include">
        </childnode>
        <childnode refid="25804" relation="include">
        </childnode>
        <childnode refid="25805" relation="include">
        </childnode>
        <childnode refid="25806" relation="include">
        </childnode>
        <childnode refid="25807" relation="include">
        </childnode>
        <childnode refid="25808" relation="include">
        </childnode>
        <childnode refid="25814" relation="include">
        </childnode>
        <childnode refid="25815" relation="include">
        </childnode>
        <childnode refid="25812" relation="include">
        </childnode>
        <childnode refid="25816" relation="include">
        </childnode>
        <childnode refid="25819" relation="include">
        </childnode>
        <childnode refid="25821" relation="include">
        </childnode>
        <childnode refid="25822" relation="include">
        </childnode>
        <childnode refid="25831" relation="include">
        </childnode>
        <childnode refid="25832" relation="include">
        </childnode>
      </node>
      <node id="25782">
        <label>cstdio</label>
      </node>
      <node id="25786">
        <label>tuple</label>
      </node>
      <node id="25791">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="25808">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="25791" relation="include">
        </childnode>
        <childnode refid="25792" relation="include">
        </childnode>
        <childnode refid="25793" relation="include">
        </childnode>
        <childnode refid="25795" relation="include">
        </childnode>
        <childnode refid="25809" relation="include">
        </childnode>
        <childnode refid="25810" relation="include">
        </childnode>
        <childnode refid="25811" relation="include">
        </childnode>
        <childnode refid="25812" relation="include">
        </childnode>
      </node>
      <node id="25787">
        <label>utility</label>
      </node>
      <node id="25811">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="25802">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="25799">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="25800" relation="include">
        </childnode>
      </node>
      <node id="25822">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="25823" relation="include">
        </childnode>
        <childnode refid="25824" relation="include">
        </childnode>
        <childnode refid="25825" relation="include">
        </childnode>
        <childnode refid="25826" relation="include">
        </childnode>
        <childnode refid="25827" relation="include">
        </childnode>
        <childnode refid="25828" relation="include">
        </childnode>
        <childnode refid="25829" relation="include">
        </childnode>
        <childnode refid="25830" relation="include">
        </childnode>
      </node>
      <node id="25800">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="25814">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="25812" relation="include">
        </childnode>
        <childnode refid="25808" relation="include">
        </childnode>
        <childnode refid="25815" relation="include">
        </childnode>
      </node>
      <node id="25783">
        <label>cstdlib</label>
      </node>
      <node id="25778">
        <label>cctype</label>
      </node>
      <node id="25801">
        <label>unordered_map</label>
      </node>
      <node id="25780">
        <label>climits</label>
      </node>
      <node id="25828">
        <label>mutex</label>
      </node>
      <node id="25824">
        <label>chrono</label>
      </node>
      <node id="25832">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="25830">
        <label>thread</label>
      </node>
      <node id="25818">
        <label>type_traits</label>
      </node>
      <node id="25794">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="25788">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="25812">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="25790" relation="include">
        </childnode>
        <childnode refid="25791" relation="include">
        </childnode>
        <childnode refid="25792" relation="include">
        </childnode>
        <childnode refid="25793" relation="include">
        </childnode>
        <childnode refid="25813" relation="include">
        </childnode>
      </node>
      <node id="25784">
        <label>cstring</label>
      </node>
      <node id="25803">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="25792">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1ann_1_1SplineFunction" prot="public">mlpack::ann::SplineFunction</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1ann">mlpack::ann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Himanshu Pathak</para></simplesect>
Definition and implementation of Poisson one function.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information.</para><para><simplesect kind="author"><para>Himanshu Pathak</para></simplesect>
Definition and implementation of Spline function.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_ANN_ACTIVATION_FUNCTIONS_SPLINE_FUNCTION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_ANN_ACTIVATION_FUNCTIONS_SPLINE_FUNCTION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ann<sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classmlpack_1_1ann_1_1SplineFunction" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1ann_1_1SplineFunction" kindref="compound">SplineFunction</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37" refid="classmlpack_1_1ann_1_1SplineFunction_1a11bd9a1195e6b107f9fee73643bc328b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1SplineFunction_1a11bd9a1195e6b107f9fee73643bc328b" kindref="member">Fn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pow(x,<sp/>2)<sp/>*<sp/>std::log(1<sp/>+<sp/>x);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputVecType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputVecType&gt;</highlight></codeline>
<codeline lineno="49" refid="classmlpack_1_1ann_1_1SplineFunction_1af6cf5da90eb6312e3e25c9b8bd9c3527" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1SplineFunction_1af6cf5da90eb6312e3e25c9b8bd9c3527" kindref="member">Fn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputVecType&amp;<sp/>x,<sp/>OutputVecType&amp;<sp/>y)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>arma::pow(x,<sp/>2)<sp/>%<sp/>arma::log(1<sp/>+<sp/>x);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classmlpack_1_1ann_1_1SplineFunction_1a163d34fd09f8edf457164f5033c635cf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1SplineFunction_1a163d34fd09f8edf457164f5033c635cf" kindref="member">Deriv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>2<sp/>*<sp/>y<sp/>*<sp/>std::log(1<sp/>+<sp/>y)<sp/>+<sp/>std::pow(y,<sp/>2)<sp/>/<sp/>(1<sp/>+<sp/>y);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputVecType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputVecType&gt;</highlight></codeline>
<codeline lineno="72" refid="classmlpack_1_1ann_1_1SplineFunction_1a0ad035ec996acd7025807d0e9e082887" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1SplineFunction_1a0ad035ec996acd7025807d0e9e082887" kindref="member">Deriv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InputVecType&amp;<sp/>x,<sp/>OutputVecType&amp;<sp/>y)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>2<sp/>*<sp/>x<sp/>%<sp/>arma::log(1<sp/>+<sp/>x)<sp/>+<sp/>arma::pow(x,<sp/>2)<sp/>/<sp/>(1<sp/>+<sp/>x);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>SplineFunction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/activation_functions/spline_function.hpp"/>
  </compounddef>
</doxygen>
