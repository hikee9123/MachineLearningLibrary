<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="binary__numeric__split__info_8hpp" kind="file" language="C++">
    <compoundname>binary_numeric_split_info.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includedby refid="binary__numeric__split_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp</includedby>
    <incdepgraph>
      <node id="50714">
        <label>list</label>
      </node>
      <node id="50711">
        <label>atomic</label>
      </node>
      <node id="50701">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="50677">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="50713">
        <label>iomanip</label>
      </node>
      <node id="50686">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="50687" relation="include">
        </childnode>
        <childnode refid="50689" relation="include">
        </childnode>
      </node>
      <node id="50669">
        <label>cstdint</label>
      </node>
      <node id="50678">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="50685">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="50708">
        <label>arma_config.hpp</label>
      </node>
      <node id="50698">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="50665">
        <label>cmath</label>
      </node>
      <node id="50684">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="50673">
        <label>stdexcept</label>
      </node>
      <node id="50693">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="50678" relation="include">
        </childnode>
        <childnode refid="50680" relation="include">
        </childnode>
        <childnode refid="50681" relation="include">
        </childnode>
        <childnode refid="50679" relation="include">
        </childnode>
      </node>
      <node id="50717">
        <label>string</label>
      </node>
      <node id="50705">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="50706" relation="include">
        </childnode>
        <childnode refid="50672" relation="include">
        </childnode>
      </node>
      <node id="50715">
        <label>map</label>
      </node>
      <node id="50667">
        <label>cfloat</label>
      </node>
      <node id="50697">
        <label>boost/variant.hpp</label>
      </node>
      <node id="50719">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="50681">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="50704">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="50705" relation="include">
        </childnode>
        <childnode refid="50681" relation="include">
        </childnode>
        <childnode refid="50688" relation="include">
        </childnode>
        <childnode refid="50706" relation="include">
        </childnode>
      </node>
      <node id="50694">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="50692">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="50678" relation="include">
        </childnode>
        <childnode refid="50680" relation="include">
        </childnode>
        <childnode refid="50681" relation="include">
        </childnode>
        <childnode refid="50679" relation="include">
        </childnode>
      </node>
      <node id="50695">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="50678" relation="include">
        </childnode>
        <childnode refid="50680" relation="include">
        </childnode>
        <childnode refid="50681" relation="include">
        </childnode>
        <childnode refid="50679" relation="include">
        </childnode>
      </node>
      <node id="50683">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="50703">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="50679" relation="include">
        </childnode>
        <childnode refid="50680" relation="include">
        </childnode>
        <childnode refid="50681" relation="include">
        </childnode>
        <childnode refid="50691" relation="include">
        </childnode>
        <childnode refid="50700" relation="include">
        </childnode>
      </node>
      <node id="50707">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="50708" relation="include">
        </childnode>
      </node>
      <node id="50709">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="50664">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="50665" relation="include">
        </childnode>
        <childnode refid="50666" relation="include">
        </childnode>
        <childnode refid="50667" relation="include">
        </childnode>
        <childnode refid="50668" relation="include">
        </childnode>
        <childnode refid="50669" relation="include">
        </childnode>
        <childnode refid="50670" relation="include">
        </childnode>
        <childnode refid="50671" relation="include">
        </childnode>
        <childnode refid="50672" relation="include">
        </childnode>
        <childnode refid="50673" relation="include">
        </childnode>
        <childnode refid="50674" relation="include">
        </childnode>
        <childnode refid="50675" relation="include">
        </childnode>
        <childnode refid="50676" relation="include">
        </childnode>
        <childnode refid="50677" relation="include">
        </childnode>
        <childnode refid="50678" relation="include">
        </childnode>
        <childnode refid="50679" relation="include">
        </childnode>
        <childnode refid="50680" relation="include">
        </childnode>
        <childnode refid="50681" relation="include">
        </childnode>
        <childnode refid="50682" relation="include">
        </childnode>
        <childnode refid="50683" relation="include">
        </childnode>
        <childnode refid="50684" relation="include">
        </childnode>
        <childnode refid="50685" relation="include">
        </childnode>
        <childnode refid="50686" relation="include">
        </childnode>
        <childnode refid="50690" relation="include">
        </childnode>
        <childnode refid="50691" relation="include">
        </childnode>
        <childnode refid="50692" relation="include">
        </childnode>
        <childnode refid="50693" relation="include">
        </childnode>
        <childnode refid="50694" relation="include">
        </childnode>
        <childnode refid="50695" relation="include">
        </childnode>
        <childnode refid="50696" relation="include">
        </childnode>
        <childnode refid="50702" relation="include">
        </childnode>
        <childnode refid="50703" relation="include">
        </childnode>
        <childnode refid="50700" relation="include">
        </childnode>
        <childnode refid="50704" relation="include">
        </childnode>
        <childnode refid="50707" relation="include">
        </childnode>
        <childnode refid="50709" relation="include">
        </childnode>
        <childnode refid="50710" relation="include">
        </childnode>
        <childnode refid="50719" relation="include">
        </childnode>
        <childnode refid="50720" relation="include">
        </childnode>
      </node>
      <node id="50670">
        <label>cstdio</label>
      </node>
      <node id="50674">
        <label>tuple</label>
      </node>
      <node id="50679">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="50696">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="50679" relation="include">
        </childnode>
        <childnode refid="50680" relation="include">
        </childnode>
        <childnode refid="50681" relation="include">
        </childnode>
        <childnode refid="50683" relation="include">
        </childnode>
        <childnode refid="50697" relation="include">
        </childnode>
        <childnode refid="50698" relation="include">
        </childnode>
        <childnode refid="50699" relation="include">
        </childnode>
        <childnode refid="50700" relation="include">
        </childnode>
      </node>
      <node id="50675">
        <label>utility</label>
      </node>
      <node id="50699">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="50690">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="50687">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="50688" relation="include">
        </childnode>
      </node>
      <node id="50710">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="50711" relation="include">
        </childnode>
        <childnode refid="50712" relation="include">
        </childnode>
        <childnode refid="50713" relation="include">
        </childnode>
        <childnode refid="50714" relation="include">
        </childnode>
        <childnode refid="50715" relation="include">
        </childnode>
        <childnode refid="50716" relation="include">
        </childnode>
        <childnode refid="50717" relation="include">
        </childnode>
        <childnode refid="50718" relation="include">
        </childnode>
      </node>
      <node id="50688">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="50702">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="50700" relation="include">
        </childnode>
        <childnode refid="50696" relation="include">
        </childnode>
        <childnode refid="50703" relation="include">
        </childnode>
      </node>
      <node id="50671">
        <label>cstdlib</label>
      </node>
      <node id="50666">
        <label>cctype</label>
      </node>
      <node id="50689">
        <label>unordered_map</label>
      </node>
      <node id="50668">
        <label>climits</label>
      </node>
      <node id="50716">
        <label>mutex</label>
      </node>
      <node id="50712">
        <label>chrono</label>
      </node>
      <node id="50663">
        <label>/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split_info.hpp</label>
        <link refid="binary__numeric__split__info_8hpp"/>
        <childnode refid="50664" relation="include">
        </childnode>
      </node>
      <node id="50720">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="50718">
        <label>thread</label>
      </node>
      <node id="50706">
        <label>type_traits</label>
      </node>
      <node id="50682">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="50676">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="50700">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="50678" relation="include">
        </childnode>
        <childnode refid="50679" relation="include">
        </childnode>
        <childnode refid="50680" relation="include">
        </childnode>
        <childnode refid="50681" relation="include">
        </childnode>
        <childnode refid="50701" relation="include">
        </childnode>
      </node>
      <node id="50672">
        <label>cstring</label>
      </node>
      <node id="50691">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="50680">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="50722">
        <label>/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp</label>
        <link refid="binary__numeric__split_8hpp"/>
        <childnode refid="50723" relation="include">
        </childnode>
      </node>
      <node id="50723">
        <label>/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/hoeffding_tree_model.hpp</label>
        <link refid="hoeffding__tree__model_8hpp"/>
      </node>
      <node id="50721">
        <label>/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split_info.hpp</label>
        <link refid="binary__numeric__split__info_8hpp"/>
        <childnode refid="50722" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1tree_1_1BinaryNumericSplitInfo" prot="public">mlpack::tree::BinaryNumericSplitInfo</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1tree">mlpack::tree</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ryan Curtin</para></simplesect>
After a binary numeric split has been made, this holds information on the split (just the split point).</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_HOEFFDING_TREES_BINARY_NUMERIC_SPLIT_INFO_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_HOEFFDING_TREES_BINARY_NUMERIC_SPLIT_INFO_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tree<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ObservationType<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="22" refid="classmlpack_1_1tree_1_1BinaryNumericSplitInfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1tree_1_1BinaryNumericSplitInfo" kindref="compound">BinaryNumericSplitInfo</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25" refid="classmlpack_1_1tree_1_1BinaryNumericSplitInfo_1aed83ede456468042b3971657e90a2c02" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1BinaryNumericSplitInfo_1aed83ede456468042b3971657e90a2c02" kindref="member">BinaryNumericSplitInfo</ref>()<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do.<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="26" refid="classmlpack_1_1tree_1_1BinaryNumericSplitInfo_1a55599c147991a0e9ab4c452a6d70851d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1BinaryNumericSplitInfo_1a55599c147991a0e9ab4c452a6d70851d" kindref="member">BinaryNumericSplitInfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ObservationType&amp;<sp/>splitPoint)<sp/>:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>splitPoint(splitPoint)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do.<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="30" refid="classmlpack_1_1tree_1_1BinaryNumericSplitInfo_1aa802a4b4fde3489025146c60ec5b60d3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1BinaryNumericSplitInfo_1aa802a4b4fde3489025146c60ec5b60d3" kindref="member">CalculateDirection</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eT&amp;<sp/>value)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="31"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value<sp/>&lt;<sp/>splitPoint)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="37" refid="classmlpack_1_1tree_1_1BinaryNumericSplitInfo_1a65cba07328997659bec80b9879b15a51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1BinaryNumericSplitInfo_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(splitPoint));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>ObservationType<sp/>splitPoint;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split_info.hpp"/>
  </compounddef>
</doxygen>
