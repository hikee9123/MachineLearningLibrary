<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="binary__numeric__split__info_8hpp" kind="file" language="C++">
    <compoundname>binary_numeric_split_info.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includedby refid="binary__numeric__split_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp</includedby>
    <incdepgraph>
      <node id="49231">
        <label>list</label>
      </node>
      <node id="49228">
        <label>atomic</label>
      </node>
      <node id="49218">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="49194">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="49230">
        <label>iomanip</label>
      </node>
      <node id="49203">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="49204" relation="include">
        </childnode>
        <childnode refid="49206" relation="include">
        </childnode>
      </node>
      <node id="49186">
        <label>cstdint</label>
      </node>
      <node id="49195">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="49202">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="49225">
        <label>arma_config.hpp</label>
      </node>
      <node id="49215">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="49182">
        <label>cmath</label>
      </node>
      <node id="49201">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="49190">
        <label>stdexcept</label>
      </node>
      <node id="49210">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="49195" relation="include">
        </childnode>
        <childnode refid="49197" relation="include">
        </childnode>
        <childnode refid="49198" relation="include">
        </childnode>
        <childnode refid="49196" relation="include">
        </childnode>
      </node>
      <node id="49234">
        <label>string</label>
      </node>
      <node id="49222">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="49223" relation="include">
        </childnode>
        <childnode refid="49189" relation="include">
        </childnode>
      </node>
      <node id="49232">
        <label>map</label>
      </node>
      <node id="49184">
        <label>cfloat</label>
      </node>
      <node id="49214">
        <label>boost/variant.hpp</label>
      </node>
      <node id="49236">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="49198">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="49221">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="49222" relation="include">
        </childnode>
        <childnode refid="49198" relation="include">
        </childnode>
        <childnode refid="49205" relation="include">
        </childnode>
        <childnode refid="49223" relation="include">
        </childnode>
      </node>
      <node id="49211">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="49209">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="49195" relation="include">
        </childnode>
        <childnode refid="49197" relation="include">
        </childnode>
        <childnode refid="49198" relation="include">
        </childnode>
        <childnode refid="49196" relation="include">
        </childnode>
      </node>
      <node id="49212">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="49195" relation="include">
        </childnode>
        <childnode refid="49197" relation="include">
        </childnode>
        <childnode refid="49198" relation="include">
        </childnode>
        <childnode refid="49196" relation="include">
        </childnode>
      </node>
      <node id="49200">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="49220">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="49196" relation="include">
        </childnode>
        <childnode refid="49197" relation="include">
        </childnode>
        <childnode refid="49198" relation="include">
        </childnode>
        <childnode refid="49208" relation="include">
        </childnode>
        <childnode refid="49217" relation="include">
        </childnode>
      </node>
      <node id="49224">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="49225" relation="include">
        </childnode>
      </node>
      <node id="49226">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="49181">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="49182" relation="include">
        </childnode>
        <childnode refid="49183" relation="include">
        </childnode>
        <childnode refid="49184" relation="include">
        </childnode>
        <childnode refid="49185" relation="include">
        </childnode>
        <childnode refid="49186" relation="include">
        </childnode>
        <childnode refid="49187" relation="include">
        </childnode>
        <childnode refid="49188" relation="include">
        </childnode>
        <childnode refid="49189" relation="include">
        </childnode>
        <childnode refid="49190" relation="include">
        </childnode>
        <childnode refid="49191" relation="include">
        </childnode>
        <childnode refid="49192" relation="include">
        </childnode>
        <childnode refid="49193" relation="include">
        </childnode>
        <childnode refid="49194" relation="include">
        </childnode>
        <childnode refid="49195" relation="include">
        </childnode>
        <childnode refid="49196" relation="include">
        </childnode>
        <childnode refid="49197" relation="include">
        </childnode>
        <childnode refid="49198" relation="include">
        </childnode>
        <childnode refid="49199" relation="include">
        </childnode>
        <childnode refid="49200" relation="include">
        </childnode>
        <childnode refid="49201" relation="include">
        </childnode>
        <childnode refid="49202" relation="include">
        </childnode>
        <childnode refid="49203" relation="include">
        </childnode>
        <childnode refid="49207" relation="include">
        </childnode>
        <childnode refid="49208" relation="include">
        </childnode>
        <childnode refid="49209" relation="include">
        </childnode>
        <childnode refid="49210" relation="include">
        </childnode>
        <childnode refid="49211" relation="include">
        </childnode>
        <childnode refid="49212" relation="include">
        </childnode>
        <childnode refid="49213" relation="include">
        </childnode>
        <childnode refid="49219" relation="include">
        </childnode>
        <childnode refid="49220" relation="include">
        </childnode>
        <childnode refid="49217" relation="include">
        </childnode>
        <childnode refid="49221" relation="include">
        </childnode>
        <childnode refid="49224" relation="include">
        </childnode>
        <childnode refid="49226" relation="include">
        </childnode>
        <childnode refid="49227" relation="include">
        </childnode>
        <childnode refid="49236" relation="include">
        </childnode>
        <childnode refid="49237" relation="include">
        </childnode>
      </node>
      <node id="49187">
        <label>cstdio</label>
      </node>
      <node id="49191">
        <label>tuple</label>
      </node>
      <node id="49196">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="49213">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="49196" relation="include">
        </childnode>
        <childnode refid="49197" relation="include">
        </childnode>
        <childnode refid="49198" relation="include">
        </childnode>
        <childnode refid="49200" relation="include">
        </childnode>
        <childnode refid="49214" relation="include">
        </childnode>
        <childnode refid="49215" relation="include">
        </childnode>
        <childnode refid="49216" relation="include">
        </childnode>
        <childnode refid="49217" relation="include">
        </childnode>
      </node>
      <node id="49192">
        <label>utility</label>
      </node>
      <node id="49216">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="49207">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="49204">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="49205" relation="include">
        </childnode>
      </node>
      <node id="49227">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="49228" relation="include">
        </childnode>
        <childnode refid="49229" relation="include">
        </childnode>
        <childnode refid="49230" relation="include">
        </childnode>
        <childnode refid="49231" relation="include">
        </childnode>
        <childnode refid="49232" relation="include">
        </childnode>
        <childnode refid="49233" relation="include">
        </childnode>
        <childnode refid="49234" relation="include">
        </childnode>
        <childnode refid="49235" relation="include">
        </childnode>
      </node>
      <node id="49205">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="49219">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="49217" relation="include">
        </childnode>
        <childnode refid="49213" relation="include">
        </childnode>
        <childnode refid="49220" relation="include">
        </childnode>
      </node>
      <node id="49188">
        <label>cstdlib</label>
      </node>
      <node id="49183">
        <label>cctype</label>
      </node>
      <node id="49206">
        <label>unordered_map</label>
      </node>
      <node id="49185">
        <label>climits</label>
      </node>
      <node id="49233">
        <label>mutex</label>
      </node>
      <node id="49229">
        <label>chrono</label>
      </node>
      <node id="49180">
        <label>/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split_info.hpp</label>
        <link refid="binary__numeric__split__info_8hpp"/>
        <childnode refid="49181" relation="include">
        </childnode>
      </node>
      <node id="49237">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="49235">
        <label>thread</label>
      </node>
      <node id="49223">
        <label>type_traits</label>
      </node>
      <node id="49199">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="49193">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="49217">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="49195" relation="include">
        </childnode>
        <childnode refid="49196" relation="include">
        </childnode>
        <childnode refid="49197" relation="include">
        </childnode>
        <childnode refid="49198" relation="include">
        </childnode>
        <childnode refid="49218" relation="include">
        </childnode>
      </node>
      <node id="49189">
        <label>cstring</label>
      </node>
      <node id="49208">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="49197">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="49239">
        <label>/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split.hpp</label>
        <link refid="binary__numeric__split_8hpp"/>
        <childnode refid="49240" relation="include">
        </childnode>
      </node>
      <node id="49240">
        <label>/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/hoeffding_tree_model.hpp</label>
        <link refid="hoeffding__tree__model_8hpp"/>
      </node>
      <node id="49238">
        <label>/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split_info.hpp</label>
        <link refid="binary__numeric__split__info_8hpp"/>
        <childnode refid="49239" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1tree_1_1BinaryNumericSplitInfo" prot="public">mlpack::tree::BinaryNumericSplitInfo</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1tree">mlpack::tree</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ryan Curtin</para></simplesect>
After a binary numeric split has been made, this holds information on the split (just the split point).</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_HOEFFDING_TREES_BINARY_NUMERIC_SPLIT_INFO_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_HOEFFDING_TREES_BINARY_NUMERIC_SPLIT_INFO_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tree<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ObservationType<sp/>=<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="22" refid="classmlpack_1_1tree_1_1BinaryNumericSplitInfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1tree_1_1BinaryNumericSplitInfo" kindref="compound">BinaryNumericSplitInfo</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25" refid="classmlpack_1_1tree_1_1BinaryNumericSplitInfo_1aed83ede456468042b3971657e90a2c02" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1BinaryNumericSplitInfo_1aed83ede456468042b3971657e90a2c02" kindref="member">BinaryNumericSplitInfo</ref>()<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do.<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="26" refid="classmlpack_1_1tree_1_1BinaryNumericSplitInfo_1a55599c147991a0e9ab4c452a6d70851d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1tree_1_1BinaryNumericSplitInfo_1a55599c147991a0e9ab4c452a6d70851d" kindref="member">BinaryNumericSplitInfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ObservationType&amp;<sp/>splitPoint)<sp/>:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>splitPoint(splitPoint)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do.<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="30" refid="classmlpack_1_1tree_1_1BinaryNumericSplitInfo_1aa802a4b4fde3489025146c60ec5b60d3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1BinaryNumericSplitInfo_1aa802a4b4fde3489025146c60ec5b60d3" kindref="member">CalculateDirection</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eT&amp;<sp/>value)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="31"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value<sp/>&lt;<sp/>splitPoint)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="37" refid="classmlpack_1_1tree_1_1BinaryNumericSplitInfo_1a65cba07328997659bec80b9879b15a51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1BinaryNumericSplitInfo_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(splitPoint));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>ObservationType<sp/>splitPoint;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/hoeffding_trees/binary_numeric_split_info.hpp"/>
  </compounddef>
</doxygen>
