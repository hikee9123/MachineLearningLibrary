<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="regression__interpolation_8hpp" kind="file" language="C++">
    <compoundname>regression_interpolation.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <incdepgraph>
      <node id="45696">
        <label>list</label>
      </node>
      <node id="45693">
        <label>atomic</label>
      </node>
      <node id="45683">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="45659">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="45695">
        <label>iomanip</label>
      </node>
      <node id="45668">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="45669" relation="include">
        </childnode>
        <childnode refid="45671" relation="include">
        </childnode>
      </node>
      <node id="45651">
        <label>cstdint</label>
      </node>
      <node id="45660">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="45667">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="45690">
        <label>arma_config.hpp</label>
      </node>
      <node id="45680">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="45647">
        <label>cmath</label>
      </node>
      <node id="45666">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="45655">
        <label>stdexcept</label>
      </node>
      <node id="45675">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="45660" relation="include">
        </childnode>
        <childnode refid="45662" relation="include">
        </childnode>
        <childnode refid="45663" relation="include">
        </childnode>
        <childnode refid="45661" relation="include">
        </childnode>
      </node>
      <node id="45699">
        <label>string</label>
      </node>
      <node id="45687">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="45688" relation="include">
        </childnode>
        <childnode refid="45654" relation="include">
        </childnode>
      </node>
      <node id="45697">
        <label>map</label>
      </node>
      <node id="45649">
        <label>cfloat</label>
      </node>
      <node id="45679">
        <label>boost/variant.hpp</label>
      </node>
      <node id="45701">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="45663">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="45686">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="45687" relation="include">
        </childnode>
        <childnode refid="45663" relation="include">
        </childnode>
        <childnode refid="45670" relation="include">
        </childnode>
        <childnode refid="45688" relation="include">
        </childnode>
      </node>
      <node id="45676">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="45674">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="45660" relation="include">
        </childnode>
        <childnode refid="45662" relation="include">
        </childnode>
        <childnode refid="45663" relation="include">
        </childnode>
        <childnode refid="45661" relation="include">
        </childnode>
      </node>
      <node id="45677">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="45660" relation="include">
        </childnode>
        <childnode refid="45662" relation="include">
        </childnode>
        <childnode refid="45663" relation="include">
        </childnode>
        <childnode refid="45661" relation="include">
        </childnode>
      </node>
      <node id="45665">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="45685">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="45661" relation="include">
        </childnode>
        <childnode refid="45662" relation="include">
        </childnode>
        <childnode refid="45663" relation="include">
        </childnode>
        <childnode refid="45673" relation="include">
        </childnode>
        <childnode refid="45682" relation="include">
        </childnode>
      </node>
      <node id="45689">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="45690" relation="include">
        </childnode>
      </node>
      <node id="45691">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="45646">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="45647" relation="include">
        </childnode>
        <childnode refid="45648" relation="include">
        </childnode>
        <childnode refid="45649" relation="include">
        </childnode>
        <childnode refid="45650" relation="include">
        </childnode>
        <childnode refid="45651" relation="include">
        </childnode>
        <childnode refid="45652" relation="include">
        </childnode>
        <childnode refid="45653" relation="include">
        </childnode>
        <childnode refid="45654" relation="include">
        </childnode>
        <childnode refid="45655" relation="include">
        </childnode>
        <childnode refid="45656" relation="include">
        </childnode>
        <childnode refid="45657" relation="include">
        </childnode>
        <childnode refid="45658" relation="include">
        </childnode>
        <childnode refid="45659" relation="include">
        </childnode>
        <childnode refid="45660" relation="include">
        </childnode>
        <childnode refid="45661" relation="include">
        </childnode>
        <childnode refid="45662" relation="include">
        </childnode>
        <childnode refid="45663" relation="include">
        </childnode>
        <childnode refid="45664" relation="include">
        </childnode>
        <childnode refid="45665" relation="include">
        </childnode>
        <childnode refid="45666" relation="include">
        </childnode>
        <childnode refid="45667" relation="include">
        </childnode>
        <childnode refid="45668" relation="include">
        </childnode>
        <childnode refid="45672" relation="include">
        </childnode>
        <childnode refid="45673" relation="include">
        </childnode>
        <childnode refid="45674" relation="include">
        </childnode>
        <childnode refid="45675" relation="include">
        </childnode>
        <childnode refid="45676" relation="include">
        </childnode>
        <childnode refid="45677" relation="include">
        </childnode>
        <childnode refid="45678" relation="include">
        </childnode>
        <childnode refid="45684" relation="include">
        </childnode>
        <childnode refid="45685" relation="include">
        </childnode>
        <childnode refid="45682" relation="include">
        </childnode>
        <childnode refid="45686" relation="include">
        </childnode>
        <childnode refid="45689" relation="include">
        </childnode>
        <childnode refid="45691" relation="include">
        </childnode>
        <childnode refid="45692" relation="include">
        </childnode>
        <childnode refid="45701" relation="include">
        </childnode>
        <childnode refid="45702" relation="include">
        </childnode>
      </node>
      <node id="45652">
        <label>cstdio</label>
      </node>
      <node id="45656">
        <label>tuple</label>
      </node>
      <node id="45661">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="45678">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="45661" relation="include">
        </childnode>
        <childnode refid="45662" relation="include">
        </childnode>
        <childnode refid="45663" relation="include">
        </childnode>
        <childnode refid="45665" relation="include">
        </childnode>
        <childnode refid="45679" relation="include">
        </childnode>
        <childnode refid="45680" relation="include">
        </childnode>
        <childnode refid="45681" relation="include">
        </childnode>
        <childnode refid="45682" relation="include">
        </childnode>
      </node>
      <node id="45657">
        <label>utility</label>
      </node>
      <node id="45681">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="45672">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="45669">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="45670" relation="include">
        </childnode>
      </node>
      <node id="45692">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="45693" relation="include">
        </childnode>
        <childnode refid="45694" relation="include">
        </childnode>
        <childnode refid="45695" relation="include">
        </childnode>
        <childnode refid="45696" relation="include">
        </childnode>
        <childnode refid="45697" relation="include">
        </childnode>
        <childnode refid="45698" relation="include">
        </childnode>
        <childnode refid="45699" relation="include">
        </childnode>
        <childnode refid="45700" relation="include">
        </childnode>
      </node>
      <node id="45670">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="45684">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="45682" relation="include">
        </childnode>
        <childnode refid="45678" relation="include">
        </childnode>
        <childnode refid="45685" relation="include">
        </childnode>
      </node>
      <node id="45653">
        <label>cstdlib</label>
      </node>
      <node id="45648">
        <label>cctype</label>
      </node>
      <node id="45671">
        <label>unordered_map</label>
      </node>
      <node id="45650">
        <label>climits</label>
      </node>
      <node id="45645">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/interpolation_policies/regression_interpolation.hpp</label>
        <link refid="regression__interpolation_8hpp"/>
        <childnode refid="45646" relation="include">
        </childnode>
      </node>
      <node id="45698">
        <label>mutex</label>
      </node>
      <node id="45694">
        <label>chrono</label>
      </node>
      <node id="45702">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="45700">
        <label>thread</label>
      </node>
      <node id="45688">
        <label>type_traits</label>
      </node>
      <node id="45664">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="45658">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="45682">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="45660" relation="include">
        </childnode>
        <childnode refid="45661" relation="include">
        </childnode>
        <childnode refid="45662" relation="include">
        </childnode>
        <childnode refid="45663" relation="include">
        </childnode>
        <childnode refid="45683" relation="include">
        </childnode>
      </node>
      <node id="45654">
        <label>cstring</label>
      </node>
      <node id="45673">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="45662">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1cf_1_1RegressionInterpolation" prot="public">mlpack::cf::RegressionInterpolation</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1cf">mlpack::cf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Wenhao Huang</para></simplesect>
Definition of RegressionInterpolation class.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_CF_REGRESSION_INTERPOLATION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_CF_REGRESSION_INTERPOLATION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cf<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classmlpack_1_1cf_1_1RegressionInterpolation" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1cf_1_1RegressionInterpolation" kindref="compound">RegressionInterpolation</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62" refid="classmlpack_1_1cf_1_1RegressionInterpolation_1ac0b62722b41c25d0c9631cb18b5e5fef" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1cf_1_1RegressionInterpolation_1ac0b62722b41c25d0c9631cb18b5e5fef" kindref="member">RegressionInterpolation</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classmlpack_1_1cf_1_1RegressionInterpolation_1a500c9f3d07130aee68724cfd50dce11e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1cf_1_1RegressionInterpolation_1a500c9f3d07130aee68724cfd50dce11e" kindref="member">RegressionInterpolation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::sp_mat&amp;<sp/>cleanedData)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>userNum<sp/>=<sp/>cleanedData.n_cols;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>a.set_size(userNum,<sp/>userNum);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>b.set_size(userNum,<sp/>userNum);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VectorType,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DecompositionPolicy&gt;</highlight></codeline>
<codeline lineno="95" refid="classmlpack_1_1cf_1_1RegressionInterpolation_1ac1e5284cad449c49a0b5e026c5a795a7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1cf_1_1RegressionInterpolation_1ac1e5284cad449c49a0b5e026c5a795a7" kindref="member">GetWeights</ref>(VectorType&amp;&amp;<sp/>weights,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DecompositionPolicy&amp;<sp/>decomposition,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>queryUser,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Col&lt;size_t&gt;&amp;<sp/>neighbors,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/></highlight><highlight class="comment">/*<sp/>similarities*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::sp_mat&amp;<sp/>cleanedData)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weights.n_elem<sp/>!=<sp/>neighbors.n_elem)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Log::Fatal<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>size<sp/>of<sp/>the<sp/>first<sp/>parameter<sp/>(weights)<sp/>should<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;be<sp/>set<sp/>to<sp/>the<sp/>number<sp/>of<sp/>neighbors<sp/>before<sp/>calling<sp/>GetWeights().&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>w<sp/>=<sp/>decomposition.W();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>h<sp/>=<sp/>decomposition.H();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>itemNum<sp/>=<sp/>cleanedData.n_rows;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>neighborNum<sp/>=<sp/>neighbors.size();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Coeffcients<sp/>of<sp/>the<sp/>linear<sp/>equations<sp/>used<sp/>to<sp/>compute<sp/>weights.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::mat<sp/>coeff(neighborNum,<sp/>neighborNum);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Constant<sp/>terms<sp/>of<sp/>the<sp/>linear<sp/>equations<sp/>used<sp/>to<sp/>compute<sp/>weights.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::vec<sp/>constant(neighborNum);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::vec<sp/>userRating(cleanedData.col(queryUser));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>support<sp/>=<sp/>arma::accu(userRating<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>user<sp/>has<sp/>no<sp/>rating<sp/>at<sp/>all,<sp/>average<sp/>interpolation<sp/>is<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(support<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>weights.fill(1.0<sp/>/<sp/>neighbors.n_elem);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>neighborNum;<sp/>++i)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>coefficient.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec<sp/>iPrediction;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i;<sp/>j<sp/>&lt;<sp/>neighborNum;<sp/>++j)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a(neighbors(i),<sp/>neighbors(j))<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>coefficient<sp/>has<sp/>already<sp/>been<sp/>cached.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeff(i,<sp/>j)<sp/>=<sp/>a(neighbors(i),<sp/>neighbors(j));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeff(j,<sp/>i)<sp/>=<sp/>coeff(i,<sp/>j);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>coefficient.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iPrediction.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>recalculation<sp/>of<sp/>iPrediction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iPrediction<sp/>=<sp/>w<sp/>*<sp/>h.col(neighbors(i));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec<sp/>jPrediction<sp/>=<sp/>w<sp/>*<sp/>h.col(neighbors(j));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeff(i,<sp/>j)<sp/>=<sp/>arma::dot(iPrediction,<sp/>jPrediction)<sp/>/<sp/>itemNum;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coeff(i,<sp/>j)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeff(i,<sp/>j)<sp/>=<sp/>std::numeric_limits&lt;double&gt;::min();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeff(j,<sp/>i)<sp/>=<sp/>coeff(i,<sp/>j);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>calcualted<sp/>coefficient.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a(neighbors(i),<sp/>neighbors(j))<sp/>=<sp/>coeff(i,<sp/>j);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a(neighbors(j),<sp/>neighbors(i))<sp/>=<sp/>coeff(i,<sp/>j);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>constant<sp/>terms.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b(neighbors(i),<sp/>queryUser)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>constant<sp/>term<sp/>has<sp/>already<sp/>been<sp/>cached.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constant(i)<sp/>=<sp/>b(neighbors(i),<sp/>queryUser);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calcuate<sp/>the<sp/>constant<sp/>term.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iPrediction.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>recalculation<sp/>of<sp/>iPrediction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iPrediction<sp/>=<sp/>w<sp/>*<sp/>h.col(neighbors(i));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constant(i)<sp/>=<sp/>arma::dot(iPrediction,<sp/>userRating)<sp/>/<sp/>support;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(constant(i)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constant(i)<sp/>=<sp/>std::numeric_limits&lt;double&gt;::min();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>calculated<sp/>constant<sp/>term.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b(neighbors(i),<sp/>queryUser)<sp/>=<sp/>constant(i);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>weights<sp/>=<sp/>arma::solve(coeff,<sp/>constant);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>arma::sp_mat<sp/>a;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>arma::sp_mat<sp/>b;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/cf/interpolation_policies/regression_interpolation.hpp"/>
  </compounddef>
</doxygen>
