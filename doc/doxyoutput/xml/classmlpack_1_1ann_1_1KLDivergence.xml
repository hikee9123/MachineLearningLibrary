<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1ann_1_1KLDivergence" kind="class" language="C++" prot="public">
    <compoundname>mlpack::ann::KLDivergence</compoundname>
    <includes refid="kl__divergence_8hpp" local="no">kl_divergence.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename InputDataType</type>
        <defval>arma::mat</defval>
      </param>
      <param>
        <type>typename OutputDataType</type>
        <defval>arma::mat</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1KLDivergence_1a77fc4c7d9e92ac78bf2c4239477f54bc" prot="private" static="no" mutable="no">
        <type>OutputDataType</type>
        <definition>OutputDataType outputParameter</definition>
        <argsstring></argsstring>
        <name>outputParameter</name>
        <briefdescription>
<para>Locally-stored output parameter object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/kl_divergence.hpp" line="98" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/kl_divergence.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1KLDivergence_1a77e3ce4bf36cba05a5f9185ca47a2346" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool takeMean</definition>
        <argsstring></argsstring>
        <name>takeMean</name>
        <briefdescription>
<para>Boolean variable for taking mean or not. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/kl_divergence.hpp" line="101" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/kl_divergence.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1ann_1_1KLDivergence_1a16755dd3b869553b03796619adcb8e52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KLDivergence</definition>
        <argsstring>(const bool takeMean=false)</argsstring>
        <name>KLDivergence</name>
        <param>
          <type>const bool</type>
          <declname>takeMean</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Create the Kullback–Leibler Divergence object with the specified parameters. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>takeMean</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean variable to specify whether to take mean or not. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/kl_divergence.hpp" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1KLDivergence_1add41dbaf358dc099750dc6064cb7e0d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PredictionType</type>
          </param>
          <param>
            <type>typename TargetType</type>
          </param>
          <param>
            <type>typename LossType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Backward</definition>
        <argsstring>(const PredictionType &amp;prediction, const TargetType &amp;target, LossType &amp;loss)</argsstring>
        <name>Backward</name>
        <param>
          <type>const PredictionType &amp;</type>
          <declname>prediction</declname>
        </param>
        <param>
          <type>const TargetType &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>LossType &amp;</type>
          <declname>loss</declname>
        </param>
        <briefdescription>
<para>Ordinary feed backward pass of a neural network. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prediction</parametername>
</parameternamelist>
<parameterdescription>
<para>Predictions used for evaluating the specified loss function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The target vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loss</parametername>
</parameternamelist>
<parameterdescription>
<para>The calculated error. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/kl_divergence.hpp" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1KLDivergence_1ab3640059898ea76c13709b8099316fe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PredictionType</type>
          </param>
          <param>
            <type>typename TargetType</type>
          </param>
        </templateparamlist>
        <type>PredictionType::elem_type</type>
        <definition>PredictionType::elem_type Forward</definition>
        <argsstring>(const PredictionType &amp;prediction, const TargetType &amp;target)</argsstring>
        <name>Forward</name>
        <param>
          <type>const PredictionType &amp;</type>
          <declname>prediction</declname>
        </param>
        <param>
          <type>const TargetType &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>Computes the Kullback–Leibler divergence error function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prediction</parametername>
</parameternamelist>
<parameterdescription>
<para>Predictions used for evaluating the specified loss function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>Target data to compare with. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/kl_divergence.hpp" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1KLDivergence_1a8bae962cc603d1cab8d80ec78f8d505d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>OutputDataType &amp;</type>
        <definition>OutputDataType&amp; OutputParameter</definition>
        <argsstring>() const</argsstring>
        <name>OutputParameter</name>
        <briefdescription>
<para>Get the output parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/kl_divergence.hpp" line="81" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/kl_divergence.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1KLDivergence_1a21d5f745f02c709625a4ee0907f004a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>OutputDataType &amp;</type>
        <definition>OutputDataType&amp; OutputParameter</definition>
        <argsstring>()</argsstring>
        <name>OutputParameter</name>
        <briefdescription>
<para>Modify the output parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/kl_divergence.hpp" line="83" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/kl_divergence.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1KLDivergence_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the loss function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/kl_divergence.hpp" line="94" column="1"/>
        <referencedby refid="classmlpack_1_1ann_1_1KLDivergence_1a6523d960bcd088ba1e86fbe2e095a79b" compoundref="kl__divergence_8hpp" startline="88" endline="88">KLDivergence&lt; InputDataType, OutputDataType &gt;::TakeMean</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1KLDivergence_1ab1afafdad2b04d3378dce6f13c9968a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TakeMean</definition>
        <argsstring>() const</argsstring>
        <name>TakeMean</name>
        <briefdescription>
<para>Get the value of takeMean. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/kl_divergence.hpp" line="86" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/kl_divergence.hpp" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1KLDivergence_1a6523d960bcd088ba1e86fbe2e095a79b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool &amp;</type>
        <definition>bool&amp; TakeMean</definition>
        <argsstring>()</argsstring>
        <name>TakeMean</name>
        <briefdescription>
<para>Modify the value of takeMean. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/kl_divergence.hpp" line="88" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/kl_divergence.hpp" bodystart="88" bodyend="88"/>
        <references refid="classmlpack_1_1ann_1_1KLDivergence_1a65cba07328997659bec80b9879b15a51">KLDivergence&lt; InputDataType, OutputDataType &gt;::serialize</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The Kullback–Leibler divergence is often used for continuous distributions (direct regression). </para>    </briefdescription>
    <detaileddescription>
<para>For more information, see the following paper.</para><para><programlisting><codeline><highlight class="normal">article{Kullback1951,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>title<sp/><sp/><sp/>=<sp/>{On<sp/>Information<sp/>and<sp/>Sufficiency},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>author<sp/><sp/>=<sp/>{S.<sp/>Kullback,<sp/>R.A.<sp/>Leibler},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>journal<sp/>=<sp/>{The<sp/>Annals<sp/>of<sp/>Mathematical<sp/>Statistics},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>year<sp/><sp/><sp/><sp/>=<sp/>{1951}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>InputDataType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the input data (arma::colvec, arma::mat, arma::sp_mat or arma::cube). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>OutputDataType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the output data (arma::colvec, arma::mat, arma::sp_mat or arma::cube). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/kl_divergence.hpp" line="46" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/kl_divergence.hpp" bodystart="45" bodyend="102"/>
    <listofallmembers>
      <member refid="classmlpack_1_1ann_1_1KLDivergence_1add41dbaf358dc099750dc6064cb7e0d7" prot="public" virt="non-virtual"><scope>mlpack::ann::KLDivergence</scope><name>Backward</name></member>
      <member refid="classmlpack_1_1ann_1_1KLDivergence_1ab3640059898ea76c13709b8099316fe8" prot="public" virt="non-virtual"><scope>mlpack::ann::KLDivergence</scope><name>Forward</name></member>
      <member refid="classmlpack_1_1ann_1_1KLDivergence_1a16755dd3b869553b03796619adcb8e52" prot="public" virt="non-virtual"><scope>mlpack::ann::KLDivergence</scope><name>KLDivergence</name></member>
      <member refid="classmlpack_1_1ann_1_1KLDivergence_1a8bae962cc603d1cab8d80ec78f8d505d" prot="public" virt="non-virtual"><scope>mlpack::ann::KLDivergence</scope><name>OutputParameter</name></member>
      <member refid="classmlpack_1_1ann_1_1KLDivergence_1a21d5f745f02c709625a4ee0907f004a5" prot="public" virt="non-virtual"><scope>mlpack::ann::KLDivergence</scope><name>OutputParameter</name></member>
      <member refid="classmlpack_1_1ann_1_1KLDivergence_1a77fc4c7d9e92ac78bf2c4239477f54bc" prot="private" virt="non-virtual"><scope>mlpack::ann::KLDivergence</scope><name>outputParameter</name></member>
      <member refid="classmlpack_1_1ann_1_1KLDivergence_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::ann::KLDivergence</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1ann_1_1KLDivergence_1a77e3ce4bf36cba05a5f9185ca47a2346" prot="private" virt="non-virtual"><scope>mlpack::ann::KLDivergence</scope><name>takeMean</name></member>
      <member refid="classmlpack_1_1ann_1_1KLDivergence_1ab1afafdad2b04d3378dce6f13c9968a2" prot="public" virt="non-virtual"><scope>mlpack::ann::KLDivergence</scope><name>TakeMean</name></member>
      <member refid="classmlpack_1_1ann_1_1KLDivergence_1a6523d960bcd088ba1e86fbe2e095a79b" prot="public" virt="non-virtual"><scope>mlpack::ann::KLDivergence</scope><name>TakeMean</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
