<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1tree_1_1ProjVector" kind="class" language="C++" prot="public">
    <compoundname>mlpack::tree::ProjVector</compoundname>
    <includes refid="projection__vector_8hpp" local="no">projection_vector.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1ProjVector_1af3e067d52b9f5e1fe08ac83b071fb815" prot="private" static="no" mutable="no">
        <type>arma::vec</type>
        <definition>arma::vec projVect</definition>
        <argsstring></argsstring>
        <name>projVect</name>
        <briefdescription>
<para>Projection vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/space_split/projection_vector.hpp" line="94" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/space_split/projection_vector.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1ProjVector_1abe4abae33822e19ab53fd1f336adc35f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ProjVector</definition>
        <argsstring>()</argsstring>
        <name>ProjVector</name>
        <briefdescription>
<para>Empty Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/space_split/projection_vector.hpp" line="100" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/space_split/projection_vector.hpp" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1ProjVector_1a5121e3efbf0b19228711d64661781cc5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ProjVector</definition>
        <argsstring>(const arma::vec &amp;vect)</argsstring>
        <name>ProjVector</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>vect</declname>
        </param>
        <briefdescription>
<para>Create the projection vector based on the specified vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vect</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to be considered. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/space_split/projection_vector.hpp" line="109" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/space_split/projection_vector.hpp" bodystart="109" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1ProjVector_1a3992c37d68bb4c57a67c6f422ad60133" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VecType</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double Project</definition>
        <argsstring>(const VecType &amp;point, typename std::enable_if_t&lt; IsVector&lt; VecType &gt;::value &gt; *=0) const</argsstring>
        <name>Project</name>
        <param>
          <type>const VecType &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>typename <ref refid="namespacestd_1a93e9cb7fadbcfaa2afb5b94058b8e34c" kindref="member">std::enable_if_t</ref>&lt; <ref refid="structIsVector" kindref="compound">IsVector</ref>&lt; VecType &gt;::value &gt; *</type>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Project the given point on the projection vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to be projected. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/space_split/projection_vector.hpp" line="119" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/space_split/projection_vector.hpp" bodystart="119" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1ProjVector_1aa2d4cdbd216dff439dbffc30905bcc40" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MetricType</type>
          </param>
          <param>
            <type>typename VecType</type>
          </param>
        </templateparamlist>
        <type>math::RangeType&lt; typename VecType::elem_type &gt;</type>
        <definition>math::RangeType&lt;typename VecType::elem_type&gt; Project</definition>
        <argsstring>(const bound::BallBound&lt; MetricType, VecType &gt; &amp;bound) const</argsstring>
        <name>Project</name>
        <param>
          <type>const <ref refid="classmlpack_1_1bound_1_1BallBound" kindref="compound">bound::BallBound</ref>&lt; MetricType, VecType &gt; &amp;</type>
          <declname>bound</declname>
        </param>
        <briefdescription>
<para>Project the given ball bound on the projection vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bound</parametername>
</parameternamelist>
<parameterdescription>
<para>Bound to be projected. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Range of projected values. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/space_split/projection_vector.hpp" line="132" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/space_split/projection_vector.hpp" bodystart="132" bodyend="139"/>
        <references refid="classmlpack_1_1bound_1_1BallBound_1ac7a8ddea0150e52b0bc6d369ed5a5be3" compoundref="ballbound_8hpp" startline="96" endline="96">BallBound&lt; MetricType, VecType &gt;::Center</references>
        <references refid="classmlpack_1_1tree_1_1AxisParallelProjVector_1a3992c37d68bb4c57a67c6f422ad60133" compoundref="projection__vector_8hpp" startline="45" endline="49">AxisParallelProjVector::Project</references>
        <references refid="classmlpack_1_1bound_1_1BallBound_1a01502ca0f18e366f6758b0cc8756dedf" compoundref="ballbound_8hpp" startline="91" endline="91">BallBound&lt; MetricType, VecType &gt;::Radius</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1ProjVector_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/space_split/projection_vector.hpp" line="145" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/space_split/projection_vector.hpp" bodystart="145" bodyend="148"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classmlpack_1_1tree_1_1ProjVector" kindref="compound">ProjVector</ref> defines a general projection vector (not necessarily axis-parallel). </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/space_split/projection_vector.hpp" line="92" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/space_split/projection_vector.hpp" bodystart="91" bodyend="149"/>
    <listofallmembers>
      <member refid="classmlpack_1_1tree_1_1ProjVector_1a3992c37d68bb4c57a67c6f422ad60133" prot="public" virt="non-virtual"><scope>mlpack::tree::ProjVector</scope><name>Project</name></member>
      <member refid="classmlpack_1_1tree_1_1ProjVector_1aa2d4cdbd216dff439dbffc30905bcc40" prot="public" virt="non-virtual"><scope>mlpack::tree::ProjVector</scope><name>Project</name></member>
      <member refid="classmlpack_1_1tree_1_1ProjVector_1af3e067d52b9f5e1fe08ac83b071fb815" prot="private" virt="non-virtual"><scope>mlpack::tree::ProjVector</scope><name>projVect</name></member>
      <member refid="classmlpack_1_1tree_1_1ProjVector_1abe4abae33822e19ab53fd1f336adc35f" prot="public" virt="non-virtual"><scope>mlpack::tree::ProjVector</scope><name>ProjVector</name></member>
      <member refid="classmlpack_1_1tree_1_1ProjVector_1a5121e3efbf0b19228711d64661781cc5" prot="public" virt="non-virtual"><scope>mlpack::tree::ProjVector</scope><name>ProjVector</name></member>
      <member refid="classmlpack_1_1tree_1_1ProjVector_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::tree::ProjVector</scope><name>serialize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
