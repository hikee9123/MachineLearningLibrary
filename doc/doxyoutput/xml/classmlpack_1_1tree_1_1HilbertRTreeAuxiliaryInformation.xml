<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation" kind="class" language="C++" prot="public">
    <compoundname>mlpack::tree::HilbertRTreeAuxiliaryInformation</compoundname>
    <includes refid="hilbert__r__tree__auxiliary__information_8hpp" local="no">hilbert_r_tree_auxiliary_information.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename TreeType</type>
      </param>
      <param>
        <type>template&lt; typename &gt; class</type>
        <declname>HilbertValueType</declname>
        <defname>HilbertValueType</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a9c50fecd9c0085e7f7ac7f770fa739ae" prot="public" static="no">
        <type>TreeType::ElemType</type>
        <definition>typedef TreeType::ElemType ElemType</definition>
        <argsstring></argsstring>
        <name>ElemType</name>
        <briefdescription>
<para>The element type held by the tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" line="26" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a13533cef63da38351a4a33bea31266b8" prot="private" static="no" mutable="no">
        <type>HilbertValueType&lt; <ref refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a9c50fecd9c0085e7f7ac7f770fa739ae" kindref="member">ElemType</ref> &gt;</type>
        <definition>HilbertValueType&lt;ElemType&gt; hilbertValue</definition>
        <argsstring></argsstring>
        <name>hilbertValue</name>
        <briefdescription>
<para>The largest Hilbert value of a point enclosed by the node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" line="129" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a8b589cac80187871bc6676d8ea1de350" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HilbertRTreeAuxiliaryInformation</definition>
        <argsstring>()</argsstring>
        <name>HilbertRTreeAuxiliaryInformation</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a0f91279c9323aacec517fc2c6f8aad6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HilbertRTreeAuxiliaryInformation</definition>
        <argsstring>(const TreeType *node)</argsstring>
        <name>HilbertRTreeAuxiliaryInformation</name>
        <param>
          <type>const TreeType *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Construct this as an auxiliary information for the given node. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node that stores this auxiliary information. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1acbeb71d576dff20c4a6fb3f9575c9475" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HilbertRTreeAuxiliaryInformation</definition>
        <argsstring>(const HilbertRTreeAuxiliaryInformation &amp;other, TreeType *tree=NULL, bool deepCopy=true)</argsstring>
        <name>HilbertRTreeAuxiliaryInformation</name>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation" kindref="compound">HilbertRTreeAuxiliaryInformation</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>TreeType *</type>
          <declname>tree</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>deepCopy</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Create an auxiliary information object by copying from another object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Another auxiliary information object from which the information will be copied. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>The node that holds the auxiliary information. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deepCopy</parametername>
</parameternamelist>
<parameterdescription>
<para>If false, the new object uses the same memory (not used here). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a8b53daade2fdad2a45ceb7e19ee91aad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HilbertRTreeAuxiliaryInformation</definition>
        <argsstring>(HilbertRTreeAuxiliaryInformation &amp;&amp;other)</argsstring>
        <name>HilbertRTreeAuxiliaryInformation</name>
        <param>
          <type><ref refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation" kindref="compound">HilbertRTreeAuxiliaryInformation</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Create an auxiliary information object by moving from the other node. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The object from which the information will be moved. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1ab4c10141d54f673463d7aa8d6fdfadcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool HandleNodeInsertion</definition>
        <argsstring>(TreeType *node, TreeType *nodeToInsert, bool insertionLevel)</argsstring>
        <name>HandleNodeInsertion</name>
        <param>
          <type>TreeType *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>TreeType *</type>
          <declname>nodeToInsert</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>insertionLevel</declname>
        </param>
        <briefdescription>
<para>The Hilbert R tree requires to insert nodes according to their Hilbert value. </para>        </briefdescription>
        <detaileddescription>
<para>This method should take care of it. It returns false if it does nothing and true if it handles the insertion process.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node in which the nodeToInsert is being inserted. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodeToInsert</parametername>
</parameternamelist>
<parameterdescription>
<para>The node being inserted. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>insertionLevel</parametername>
</parameternamelist>
<parameterdescription>
<para>The level of the tree at which the nodeToInsert should be inserted. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a3d9a96ff07d6707363cb0ed70ca2522f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool HandleNodeRemoval</definition>
        <argsstring>(TreeType *node, const size_t nodeIndex)</argsstring>
        <name>HandleNodeRemoval</name>
        <param>
          <type>TreeType *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>nodeIndex</declname>
        </param>
        <briefdescription>
<para>The Hilbert R tree requires all nodes to be arranged according to their Hilbert value. </para>        </briefdescription>
        <detaileddescription>
<para>This method should take care of saving this property after the deletion process. It returns false if it does nothing and true if it handles the deletion process.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node from which the node is being deleted. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodeIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the node being deleted. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a58597b934c75ead9344fc5c75c753e10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool HandlePointDeletion</definition>
        <argsstring>(TreeType *node, const size_t localIndex)</argsstring>
        <name>HandlePointDeletion</name>
        <param>
          <type>TreeType *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>localIndex</declname>
        </param>
        <briefdescription>
<para>The Hilbert R tree requires all points to be arranged according to their Hilbert value. </para>        </briefdescription>
        <detaileddescription>
<para>This method should take care of saving this property after the deletion process. It returns false if it does nothing and true if it handles the deletion process.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node from which the point is being deleted. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>localIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the point being deleted. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1ac39067caca6160fc68464a2ac3896616" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool HandlePointInsertion</definition>
        <argsstring>(TreeType *node, const size_t point)</argsstring>
        <name>HandlePointInsertion</name>
        <param>
          <type>TreeType *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>The Hilbert R tree requires to insert points according to their Hilbert value. </para>        </briefdescription>
        <detaileddescription>
<para>This method should take care of it. It returns false if it does nothing and true if it handles the insertion process.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node in which the point is being inserted. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of the point being inserted. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a7e7444bd9435cbd1dc45cc0295788207" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const HilbertValueType&lt; <ref refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a9c50fecd9c0085e7f7ac7f770fa739ae" kindref="member">ElemType</ref> &gt; &amp;</type>
        <definition>const HilbertValueType&lt;ElemType&gt;&amp; HilbertValue</definition>
        <argsstring>() const</argsstring>
        <name>HilbertValue</name>
        <briefdescription>
<para>Return the largest Hilbert value of a point covered by the node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" line="133" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" bodystart="133" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a058d72ca9323013928bf7152a5bbdcc2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HilbertValueType&lt; <ref refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a9c50fecd9c0085e7f7ac7f770fa739ae" kindref="member">ElemType</ref> &gt; &amp;</type>
        <definition>HilbertValueType&lt;ElemType&gt;&amp; HilbertValue</definition>
        <argsstring>()</argsstring>
        <name>HilbertValue</name>
        <briefdescription>
<para>Modify the largest Hilbert value of a point covered by the node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" line="136" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" bodystart="136" bodyend="136"/>
        <references refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a65cba07328997659bec80b9879b15a51">HilbertRTreeAuxiliaryInformation&lt; TreeType, HilbertValueType &gt;::serialize</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a8dbe26c4727e347359f1da279659f0cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NullifyData</definition>
        <argsstring>()</argsstring>
        <name>NullifyData</name>
        <briefdescription>
<para>Clear memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a9db05a91f0d2c1806b030ac14a8e07a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation" kindref="compound">HilbertRTreeAuxiliaryInformation</ref> &amp;</type>
        <definition>HilbertRTreeAuxiliaryInformation&amp; operator=</definition>
        <argsstring>(const HilbertRTreeAuxiliaryInformation &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation" kindref="compound">HilbertRTreeAuxiliaryInformation</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy the auxiliary information. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The object from which the information will be moved. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" line="142" column="1"/>
        <referencedby refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a058d72ca9323013928bf7152a5bbdcc2" compoundref="hilbert__r__tree__auxiliary__information_8hpp" startline="136" endline="136">HilbertRTreeAuxiliaryInformation&lt; TreeType, HilbertValueType &gt;::HilbertValue</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a377d5bde0d85c152100b0e6f22d2cd2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UpdateAuxiliaryInfo</definition>
        <argsstring>(TreeType *node)</argsstring>
        <name>UpdateAuxiliaryInfo</name>
        <param>
          <type>TreeType *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Update the auxiliary information in the node. </para>        </briefdescription>
        <detaileddescription>
<para>The method returns true if the update should be propagated downward.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The node in which the auxiliary information being update. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" line="118" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1ae7985642e74393bc9e2e24abdfbffc02" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; TreeType * &gt;</type>
        <definition>static const std::vector&lt;TreeType*&gt; Children</definition>
        <argsstring>(const TreeType *tree)</argsstring>
        <name>Children</name>
        <param>
          <type>const TreeType *</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
<para>Return the children vector of the tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" line="124" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" bodystart="124" bodyend="125"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" line="23" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/rectangle_tree/hilbert_r_tree_auxiliary_information.hpp" bodystart="22" bodyend="143"/>
    <listofallmembers>
      <member refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1ae7985642e74393bc9e2e24abdfbffc02" prot="public" virt="non-virtual"><scope>mlpack::tree::HilbertRTreeAuxiliaryInformation</scope><name>Children</name></member>
      <member refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a9c50fecd9c0085e7f7ac7f770fa739ae" prot="public" virt="non-virtual"><scope>mlpack::tree::HilbertRTreeAuxiliaryInformation</scope><name>ElemType</name></member>
      <member refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1ab4c10141d54f673463d7aa8d6fdfadcb" prot="public" virt="non-virtual"><scope>mlpack::tree::HilbertRTreeAuxiliaryInformation</scope><name>HandleNodeInsertion</name></member>
      <member refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a3d9a96ff07d6707363cb0ed70ca2522f" prot="public" virt="non-virtual"><scope>mlpack::tree::HilbertRTreeAuxiliaryInformation</scope><name>HandleNodeRemoval</name></member>
      <member refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a58597b934c75ead9344fc5c75c753e10" prot="public" virt="non-virtual"><scope>mlpack::tree::HilbertRTreeAuxiliaryInformation</scope><name>HandlePointDeletion</name></member>
      <member refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1ac39067caca6160fc68464a2ac3896616" prot="public" virt="non-virtual"><scope>mlpack::tree::HilbertRTreeAuxiliaryInformation</scope><name>HandlePointInsertion</name></member>
      <member refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a8b589cac80187871bc6676d8ea1de350" prot="public" virt="non-virtual"><scope>mlpack::tree::HilbertRTreeAuxiliaryInformation</scope><name>HilbertRTreeAuxiliaryInformation</name></member>
      <member refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a0f91279c9323aacec517fc2c6f8aad6b" prot="public" virt="non-virtual"><scope>mlpack::tree::HilbertRTreeAuxiliaryInformation</scope><name>HilbertRTreeAuxiliaryInformation</name></member>
      <member refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1acbeb71d576dff20c4a6fb3f9575c9475" prot="public" virt="non-virtual"><scope>mlpack::tree::HilbertRTreeAuxiliaryInformation</scope><name>HilbertRTreeAuxiliaryInformation</name></member>
      <member refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a8b53daade2fdad2a45ceb7e19ee91aad" prot="public" virt="non-virtual"><scope>mlpack::tree::HilbertRTreeAuxiliaryInformation</scope><name>HilbertRTreeAuxiliaryInformation</name></member>
      <member refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a13533cef63da38351a4a33bea31266b8" prot="private" virt="non-virtual"><scope>mlpack::tree::HilbertRTreeAuxiliaryInformation</scope><name>hilbertValue</name></member>
      <member refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a7e7444bd9435cbd1dc45cc0295788207" prot="public" virt="non-virtual"><scope>mlpack::tree::HilbertRTreeAuxiliaryInformation</scope><name>HilbertValue</name></member>
      <member refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a058d72ca9323013928bf7152a5bbdcc2" prot="public" virt="non-virtual"><scope>mlpack::tree::HilbertRTreeAuxiliaryInformation</scope><name>HilbertValue</name></member>
      <member refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a8dbe26c4727e347359f1da279659f0cd" prot="public" virt="non-virtual"><scope>mlpack::tree::HilbertRTreeAuxiliaryInformation</scope><name>NullifyData</name></member>
      <member refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a9db05a91f0d2c1806b030ac14a8e07a9" prot="public" virt="non-virtual"><scope>mlpack::tree::HilbertRTreeAuxiliaryInformation</scope><name>operator=</name></member>
      <member refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::tree::HilbertRTreeAuxiliaryInformation</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1tree_1_1HilbertRTreeAuxiliaryInformation_1a377d5bde0d85c152100b0e6f22d2cd2f" prot="public" virt="non-virtual"><scope>mlpack::tree::HilbertRTreeAuxiliaryInformation</scope><name>UpdateAuxiliaryInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
