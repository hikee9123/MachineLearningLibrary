<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pca_8hpp" kind="file" language="C++">
    <compoundname>pca.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="exact__svd__method_8hpp" local="no">mlpack/methods/pca/decomposition_policies/exact_svd_method.hpp</includes>
    <includes local="yes">pca_impl.hpp</includes>
    <incdepgraph>
      <node id="53599">
        <label>list</label>
      </node>
      <node id="53596">
        <label>atomic</label>
      </node>
      <node id="53586">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="53562">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="53598">
        <label>iomanip</label>
      </node>
      <node id="53571">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="53572" relation="include">
        </childnode>
        <childnode refid="53574" relation="include">
        </childnode>
      </node>
      <node id="53554">
        <label>cstdint</label>
      </node>
      <node id="53563">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="53570">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="53593">
        <label>arma_config.hpp</label>
      </node>
      <node id="53583">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="53550">
        <label>cmath</label>
      </node>
      <node id="53569">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="53558">
        <label>stdexcept</label>
      </node>
      <node id="53578">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="53563" relation="include">
        </childnode>
        <childnode refid="53565" relation="include">
        </childnode>
        <childnode refid="53566" relation="include">
        </childnode>
        <childnode refid="53564" relation="include">
        </childnode>
      </node>
      <node id="53548">
        <label>/home/aakash/mlpack/src/mlpack/methods/pca/pca.hpp</label>
        <link refid="pca_8hpp"/>
        <childnode refid="53549" relation="include">
        </childnode>
        <childnode refid="53606" relation="include">
        </childnode>
        <childnode refid="53607" relation="include">
        </childnode>
      </node>
      <node id="53602">
        <label>string</label>
      </node>
      <node id="53590">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="53591" relation="include">
        </childnode>
        <childnode refid="53557" relation="include">
        </childnode>
      </node>
      <node id="53600">
        <label>map</label>
      </node>
      <node id="53552">
        <label>cfloat</label>
      </node>
      <node id="53582">
        <label>boost/variant.hpp</label>
      </node>
      <node id="53604">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="53566">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="53589">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="53590" relation="include">
        </childnode>
        <childnode refid="53566" relation="include">
        </childnode>
        <childnode refid="53573" relation="include">
        </childnode>
        <childnode refid="53591" relation="include">
        </childnode>
      </node>
      <node id="53579">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="53577">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="53563" relation="include">
        </childnode>
        <childnode refid="53565" relation="include">
        </childnode>
        <childnode refid="53566" relation="include">
        </childnode>
        <childnode refid="53564" relation="include">
        </childnode>
      </node>
      <node id="53580">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="53563" relation="include">
        </childnode>
        <childnode refid="53565" relation="include">
        </childnode>
        <childnode refid="53566" relation="include">
        </childnode>
        <childnode refid="53564" relation="include">
        </childnode>
      </node>
      <node id="53568">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="53588">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="53564" relation="include">
        </childnode>
        <childnode refid="53565" relation="include">
        </childnode>
        <childnode refid="53566" relation="include">
        </childnode>
        <childnode refid="53576" relation="include">
        </childnode>
        <childnode refid="53585" relation="include">
        </childnode>
      </node>
      <node id="53592">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="53593" relation="include">
        </childnode>
      </node>
      <node id="53594">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="53549">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="53550" relation="include">
        </childnode>
        <childnode refid="53551" relation="include">
        </childnode>
        <childnode refid="53552" relation="include">
        </childnode>
        <childnode refid="53553" relation="include">
        </childnode>
        <childnode refid="53554" relation="include">
        </childnode>
        <childnode refid="53555" relation="include">
        </childnode>
        <childnode refid="53556" relation="include">
        </childnode>
        <childnode refid="53557" relation="include">
        </childnode>
        <childnode refid="53558" relation="include">
        </childnode>
        <childnode refid="53559" relation="include">
        </childnode>
        <childnode refid="53560" relation="include">
        </childnode>
        <childnode refid="53561" relation="include">
        </childnode>
        <childnode refid="53562" relation="include">
        </childnode>
        <childnode refid="53563" relation="include">
        </childnode>
        <childnode refid="53564" relation="include">
        </childnode>
        <childnode refid="53565" relation="include">
        </childnode>
        <childnode refid="53566" relation="include">
        </childnode>
        <childnode refid="53567" relation="include">
        </childnode>
        <childnode refid="53568" relation="include">
        </childnode>
        <childnode refid="53569" relation="include">
        </childnode>
        <childnode refid="53570" relation="include">
        </childnode>
        <childnode refid="53571" relation="include">
        </childnode>
        <childnode refid="53575" relation="include">
        </childnode>
        <childnode refid="53576" relation="include">
        </childnode>
        <childnode refid="53577" relation="include">
        </childnode>
        <childnode refid="53578" relation="include">
        </childnode>
        <childnode refid="53579" relation="include">
        </childnode>
        <childnode refid="53580" relation="include">
        </childnode>
        <childnode refid="53581" relation="include">
        </childnode>
        <childnode refid="53587" relation="include">
        </childnode>
        <childnode refid="53588" relation="include">
        </childnode>
        <childnode refid="53585" relation="include">
        </childnode>
        <childnode refid="53589" relation="include">
        </childnode>
        <childnode refid="53592" relation="include">
        </childnode>
        <childnode refid="53594" relation="include">
        </childnode>
        <childnode refid="53595" relation="include">
        </childnode>
        <childnode refid="53604" relation="include">
        </childnode>
        <childnode refid="53605" relation="include">
        </childnode>
      </node>
      <node id="53555">
        <label>cstdio</label>
      </node>
      <node id="53559">
        <label>tuple</label>
      </node>
      <node id="53564">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="53581">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="53564" relation="include">
        </childnode>
        <childnode refid="53565" relation="include">
        </childnode>
        <childnode refid="53566" relation="include">
        </childnode>
        <childnode refid="53568" relation="include">
        </childnode>
        <childnode refid="53582" relation="include">
        </childnode>
        <childnode refid="53583" relation="include">
        </childnode>
        <childnode refid="53584" relation="include">
        </childnode>
        <childnode refid="53585" relation="include">
        </childnode>
      </node>
      <node id="53560">
        <label>utility</label>
      </node>
      <node id="53584">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="53575">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="53572">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="53573" relation="include">
        </childnode>
      </node>
      <node id="53595">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="53596" relation="include">
        </childnode>
        <childnode refid="53597" relation="include">
        </childnode>
        <childnode refid="53598" relation="include">
        </childnode>
        <childnode refid="53599" relation="include">
        </childnode>
        <childnode refid="53600" relation="include">
        </childnode>
        <childnode refid="53601" relation="include">
        </childnode>
        <childnode refid="53602" relation="include">
        </childnode>
        <childnode refid="53603" relation="include">
        </childnode>
      </node>
      <node id="53573">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="53587">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="53585" relation="include">
        </childnode>
        <childnode refid="53581" relation="include">
        </childnode>
        <childnode refid="53588" relation="include">
        </childnode>
      </node>
      <node id="53556">
        <label>cstdlib</label>
      </node>
      <node id="53551">
        <label>cctype</label>
      </node>
      <node id="53574">
        <label>unordered_map</label>
      </node>
      <node id="53553">
        <label>climits</label>
      </node>
      <node id="53601">
        <label>mutex</label>
      </node>
      <node id="53597">
        <label>chrono</label>
      </node>
      <node id="53605">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="53603">
        <label>thread</label>
      </node>
      <node id="53606">
        <label>mlpack/methods/pca/decomposition_policies/exact_svd_method.hpp</label>
        <link refid="exact__svd__method_8hpp"/>
        <childnode refid="53549" relation="include">
        </childnode>
      </node>
      <node id="53607">
        <label>pca_impl.hpp</label>
      </node>
      <node id="53591">
        <label>type_traits</label>
      </node>
      <node id="53567">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="53561">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="53585">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="53563" relation="include">
        </childnode>
        <childnode refid="53564" relation="include">
        </childnode>
        <childnode refid="53565" relation="include">
        </childnode>
        <childnode refid="53566" relation="include">
        </childnode>
        <childnode refid="53586" relation="include">
        </childnode>
      </node>
      <node id="53557">
        <label>cstring</label>
      </node>
      <node id="53576">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="53565">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1pca_1_1PCA" prot="public">mlpack::pca::PCA</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1pca">mlpack::pca</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ajinkya Kale </para></simplesect>
<simplesect kind="author"><para>Ryan Curtin </para></simplesect>
<simplesect kind="author"><para>Marcus Edel</para></simplesect>
Defines the PCA class to perform Principal Components Analysis on the specified data set. There are many variations on how to do this, so template parameters allow the selection of different techniques.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="16"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_PCA_PCA_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_PCA_PCA_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="exact__svd__method_8hpp" kindref="compound">mlpack/methods/pca/decomposition_policies/exact_svd_method.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">pca<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DecompositionPolicy<sp/>=<sp/>ExactSVDPolicy&gt;</highlight></codeline>
<codeline lineno="33" refid="classmlpack_1_1pca_1_1PCA" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1pca_1_1PCA" kindref="compound">PCA</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1pca_1_1PCA_1a9f0b6d838b7e3513e262d7d996e108bb" kindref="member">PCA</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scaleData<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DecompositionPolicy&amp;<sp/>decomposition<sp/>=<sp/>DecompositionPolicy());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1pca_1_1PCA_1a657771c335d4a28141e2abfbcba8c2e8" kindref="member">Apply</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>transformedData,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>eigVal,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>eigvec);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1pca_1_1PCA_1a657771c335d4a28141e2abfbcba8c2e8" kindref="member">Apply</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>transformedData,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>eigVal);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1pca_1_1PCA_1a657771c335d4a28141e2abfbcba8c2e8" kindref="member">Apply</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>transformedData);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1pca_1_1PCA_1a657771c335d4a28141e2abfbcba8c2e8" kindref="member">Apply</ref>(arma::mat&amp;<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>newDimension);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classmlpack_1_1pca_1_1PCA_1a1687d5cb3c520bde7db5d0f20ec552b4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1pca_1_1PCA_1a1687d5cb3c520bde7db5d0f20ec552b4" kindref="member">Apply</ref>(arma::mat&amp;<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newDimension)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1pca_1_1PCA_1a657771c335d4a28141e2abfbcba8c2e8" kindref="member">Apply</ref>(data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(newDimension));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1pca_1_1PCA_1a657771c335d4a28141e2abfbcba8c2e8" kindref="member">Apply</ref>(arma::mat&amp;<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>varRetained);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classmlpack_1_1pca_1_1PCA_1a3809cc3360d20521c50564e78a54ad0c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1pca_1_1PCA_1a3809cc3360d20521c50564e78a54ad0c" kindref="member">ScaleData</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scaleData;<sp/>}</highlight></codeline>
<codeline lineno="121" refid="classmlpack_1_1pca_1_1PCA_1a0e6d9cee4c4392ab92e9b21fde791402" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1pca_1_1PCA_1a0e6d9cee4c4392ab92e9b21fde791402" kindref="member">ScaleData</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scaleData;<sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1pca_1_1PCA_1a3809cc3360d20521c50564e78a54ad0c" kindref="member">ScaleData</ref>(arma::mat&amp;<sp/>centeredData)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scaleData)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scaling<sp/>the<sp/>data<sp/>is<sp/>when<sp/>we<sp/>reduce<sp/>the<sp/>variance<sp/>of<sp/>each<sp/>dimension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>1.<sp/>We<sp/>do<sp/>this<sp/>by<sp/>dividing<sp/>each<sp/>dimension<sp/>by<sp/>its<sp/>standard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deviation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec<sp/>stdDev<sp/>=<sp/>arma::stddev(</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centeredData,<sp/>0,<sp/>1<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>each<sp/>dimension<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>are<sp/>any<sp/>zeroes,<sp/>make<sp/>them<sp/>very<sp/>small.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>stdDev.n_elem;<sp/>++i)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stdDev[i]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdDev[i]<sp/>=<sp/>1e-50;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>centeredData<sp/>/=<sp/>arma::repmat(stdDev,<sp/>1,<sp/>centeredData.n_cols);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>scaleData;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>DecompositionPolicy<sp/>decomposition;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>PCA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>pca</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pca_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/pca/pca.hpp"/>
  </compounddef>
</doxygen>
