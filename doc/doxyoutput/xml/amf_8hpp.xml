<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="amf_8hpp" kind="file" language="C++">
    <compoundname>amf.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="nmf__mult__dist_8hpp" local="no">mlpack/methods/amf/update_rules/nmf_mult_dist.hpp</includes>
    <includes refid="nmf__als_8hpp" local="no">mlpack/methods/amf/update_rules/nmf_als.hpp</includes>
    <includes refid="svd__batch__learning_8hpp" local="no">mlpack/methods/amf/update_rules/svd_batch_learning.hpp</includes>
    <includes refid="svd__incomplete__incremental__learning_8hpp" local="no">mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp</includes>
    <includes refid="svd__complete__incremental__learning_8hpp" local="no">mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp</includes>
    <includes refid="amf_2init__rules_2random__init_8hpp" local="no">mlpack/methods/amf/init_rules/random_init.hpp</includes>
    <includes refid="random__acol__init_8hpp" local="no">mlpack/methods/amf/init_rules/random_acol_init.hpp</includes>
    <includes refid="simple__residue__termination_8hpp" local="no">mlpack/methods/amf/termination_policies/simple_residue_termination.hpp</includes>
    <includes refid="simple__tolerance__termination_8hpp" local="no">mlpack/methods/amf/termination_policies/simple_tolerance_termination.hpp</includes>
    <includes local="yes">amf_impl.hpp</includes>
    <includedby refid="cf_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/cf/cf.hpp</includedby>
    <includedby refid="batch__svd__method_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/batch_svd_method.hpp</includedby>
    <includedby refid="nmf__method_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/nmf_method.hpp</includedby>
    <includedby refid="svd__complete__method_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svd_complete_method.hpp</includedby>
    <includedby refid="svd__incomplete__method_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svd_incomplete_method.hpp</includedby>
    <incdepgraph>
      <node id="23236">
        <label>list</label>
      </node>
      <node id="23233">
        <label>atomic</label>
      </node>
      <node id="23223">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="23199">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="23235">
        <label>iomanip</label>
      </node>
      <node id="23208">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="23209" relation="include">
        </childnode>
        <childnode refid="23211" relation="include">
        </childnode>
      </node>
      <node id="23185">
        <label>/home/aakash/mlpack/src/mlpack/methods/amf/amf.hpp</label>
        <link refid="amf_8hpp"/>
        <childnode refid="23186" relation="include">
        </childnode>
        <childnode refid="23243" relation="include">
        </childnode>
        <childnode refid="23244" relation="include">
        </childnode>
        <childnode refid="23245" relation="include">
        </childnode>
        <childnode refid="23246" relation="include">
        </childnode>
        <childnode refid="23247" relation="include">
        </childnode>
        <childnode refid="23248" relation="include">
        </childnode>
        <childnode refid="23249" relation="include">
        </childnode>
        <childnode refid="23253" relation="include">
        </childnode>
        <childnode refid="23254" relation="include">
        </childnode>
        <childnode refid="23255" relation="include">
        </childnode>
      </node>
      <node id="23191">
        <label>cstdint</label>
      </node>
      <node id="23200">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="23207">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="23251">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="23230">
        <label>arma_config.hpp</label>
      </node>
      <node id="23220">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="23187">
        <label>cmath</label>
      </node>
      <node id="23206">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="23195">
        <label>stdexcept</label>
      </node>
      <node id="23215">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="23200" relation="include">
        </childnode>
        <childnode refid="23202" relation="include">
        </childnode>
        <childnode refid="23203" relation="include">
        </childnode>
        <childnode refid="23201" relation="include">
        </childnode>
      </node>
      <node id="23239">
        <label>string</label>
      </node>
      <node id="23227">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="23228" relation="include">
        </childnode>
        <childnode refid="23194" relation="include">
        </childnode>
      </node>
      <node id="23237">
        <label>map</label>
      </node>
      <node id="23189">
        <label>cfloat</label>
      </node>
      <node id="23219">
        <label>boost/variant.hpp</label>
      </node>
      <node id="23241">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="23203">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="23226">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="23227" relation="include">
        </childnode>
        <childnode refid="23203" relation="include">
        </childnode>
        <childnode refid="23210" relation="include">
        </childnode>
        <childnode refid="23228" relation="include">
        </childnode>
      </node>
      <node id="23216">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="23214">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="23200" relation="include">
        </childnode>
        <childnode refid="23202" relation="include">
        </childnode>
        <childnode refid="23203" relation="include">
        </childnode>
        <childnode refid="23201" relation="include">
        </childnode>
      </node>
      <node id="23217">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="23200" relation="include">
        </childnode>
        <childnode refid="23202" relation="include">
        </childnode>
        <childnode refid="23203" relation="include">
        </childnode>
        <childnode refid="23201" relation="include">
        </childnode>
      </node>
      <node id="23205">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="23255">
        <label>amf_impl.hpp</label>
      </node>
      <node id="23225">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="23201" relation="include">
        </childnode>
        <childnode refid="23202" relation="include">
        </childnode>
        <childnode refid="23203" relation="include">
        </childnode>
        <childnode refid="23213" relation="include">
        </childnode>
        <childnode refid="23222" relation="include">
        </childnode>
      </node>
      <node id="23229">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="23230" relation="include">
        </childnode>
      </node>
      <node id="23231">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="23186">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="23187" relation="include">
        </childnode>
        <childnode refid="23188" relation="include">
        </childnode>
        <childnode refid="23189" relation="include">
        </childnode>
        <childnode refid="23190" relation="include">
        </childnode>
        <childnode refid="23191" relation="include">
        </childnode>
        <childnode refid="23192" relation="include">
        </childnode>
        <childnode refid="23193" relation="include">
        </childnode>
        <childnode refid="23194" relation="include">
        </childnode>
        <childnode refid="23195" relation="include">
        </childnode>
        <childnode refid="23196" relation="include">
        </childnode>
        <childnode refid="23197" relation="include">
        </childnode>
        <childnode refid="23198" relation="include">
        </childnode>
        <childnode refid="23199" relation="include">
        </childnode>
        <childnode refid="23200" relation="include">
        </childnode>
        <childnode refid="23201" relation="include">
        </childnode>
        <childnode refid="23202" relation="include">
        </childnode>
        <childnode refid="23203" relation="include">
        </childnode>
        <childnode refid="23204" relation="include">
        </childnode>
        <childnode refid="23205" relation="include">
        </childnode>
        <childnode refid="23206" relation="include">
        </childnode>
        <childnode refid="23207" relation="include">
        </childnode>
        <childnode refid="23208" relation="include">
        </childnode>
        <childnode refid="23212" relation="include">
        </childnode>
        <childnode refid="23213" relation="include">
        </childnode>
        <childnode refid="23214" relation="include">
        </childnode>
        <childnode refid="23215" relation="include">
        </childnode>
        <childnode refid="23216" relation="include">
        </childnode>
        <childnode refid="23217" relation="include">
        </childnode>
        <childnode refid="23218" relation="include">
        </childnode>
        <childnode refid="23224" relation="include">
        </childnode>
        <childnode refid="23225" relation="include">
        </childnode>
        <childnode refid="23222" relation="include">
        </childnode>
        <childnode refid="23226" relation="include">
        </childnode>
        <childnode refid="23229" relation="include">
        </childnode>
        <childnode refid="23231" relation="include">
        </childnode>
        <childnode refid="23232" relation="include">
        </childnode>
        <childnode refid="23241" relation="include">
        </childnode>
        <childnode refid="23242" relation="include">
        </childnode>
      </node>
      <node id="23252">
        <label>random</label>
      </node>
      <node id="23245">
        <label>mlpack/methods/amf/update_rules/svd_batch_learning.hpp</label>
        <link refid="svd__batch__learning_8hpp"/>
        <childnode refid="23186" relation="include">
        </childnode>
      </node>
      <node id="23192">
        <label>cstdio</label>
      </node>
      <node id="23243">
        <label>mlpack/methods/amf/update_rules/nmf_mult_dist.hpp</label>
        <link refid="nmf__mult__dist_8hpp"/>
        <childnode refid="23186" relation="include">
        </childnode>
      </node>
      <node id="23196">
        <label>tuple</label>
      </node>
      <node id="23201">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="23218">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="23201" relation="include">
        </childnode>
        <childnode refid="23202" relation="include">
        </childnode>
        <childnode refid="23203" relation="include">
        </childnode>
        <childnode refid="23205" relation="include">
        </childnode>
        <childnode refid="23219" relation="include">
        </childnode>
        <childnode refid="23220" relation="include">
        </childnode>
        <childnode refid="23221" relation="include">
        </childnode>
        <childnode refid="23222" relation="include">
        </childnode>
      </node>
      <node id="23250">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="23186" relation="include">
        </childnode>
        <childnode refid="23251" relation="include">
        </childnode>
        <childnode refid="23252" relation="include">
        </childnode>
      </node>
      <node id="23254">
        <label>mlpack/methods/amf/termination_policies/simple_tolerance_termination.hpp</label>
        <link refid="simple__tolerance__termination_8hpp"/>
        <childnode refid="23186" relation="include">
        </childnode>
      </node>
      <node id="23197">
        <label>utility</label>
      </node>
      <node id="23221">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="23212">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="23248">
        <label>mlpack/methods/amf/init_rules/random_init.hpp</label>
        <link refid="amf_2init__rules_2random__init_8hpp"/>
        <childnode refid="23186" relation="include">
        </childnode>
      </node>
      <node id="23209">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="23210" relation="include">
        </childnode>
      </node>
      <node id="23232">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="23233" relation="include">
        </childnode>
        <childnode refid="23234" relation="include">
        </childnode>
        <childnode refid="23235" relation="include">
        </childnode>
        <childnode refid="23236" relation="include">
        </childnode>
        <childnode refid="23237" relation="include">
        </childnode>
        <childnode refid="23238" relation="include">
        </childnode>
        <childnode refid="23239" relation="include">
        </childnode>
        <childnode refid="23240" relation="include">
        </childnode>
      </node>
      <node id="23210">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="23224">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="23222" relation="include">
        </childnode>
        <childnode refid="23218" relation="include">
        </childnode>
        <childnode refid="23225" relation="include">
        </childnode>
      </node>
      <node id="23193">
        <label>cstdlib</label>
      </node>
      <node id="23247">
        <label>mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp</label>
        <link refid="svd__complete__incremental__learning_8hpp"/>
        <childnode refid="23186" relation="include">
        </childnode>
      </node>
      <node id="23188">
        <label>cctype</label>
      </node>
      <node id="23244">
        <label>mlpack/methods/amf/update_rules/nmf_als.hpp</label>
        <link refid="nmf__als_8hpp"/>
        <childnode refid="23186" relation="include">
        </childnode>
      </node>
      <node id="23211">
        <label>unordered_map</label>
      </node>
      <node id="23190">
        <label>climits</label>
      </node>
      <node id="23238">
        <label>mutex</label>
      </node>
      <node id="23234">
        <label>chrono</label>
      </node>
      <node id="23242">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="23240">
        <label>thread</label>
      </node>
      <node id="23246">
        <label>mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp</label>
        <link refid="svd__incomplete__incremental__learning_8hpp"/>
      </node>
      <node id="23253">
        <label>mlpack/methods/amf/termination_policies/simple_residue_termination.hpp</label>
        <link refid="simple__residue__termination_8hpp"/>
        <childnode refid="23186" relation="include">
        </childnode>
      </node>
      <node id="23228">
        <label>type_traits</label>
      </node>
      <node id="23249">
        <label>mlpack/methods/amf/init_rules/random_acol_init.hpp</label>
        <link refid="random__acol__init_8hpp"/>
        <childnode refid="23186" relation="include">
        </childnode>
        <childnode refid="23250" relation="include">
        </childnode>
      </node>
      <node id="23204">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="23198">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="23222">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="23200" relation="include">
        </childnode>
        <childnode refid="23201" relation="include">
        </childnode>
        <childnode refid="23202" relation="include">
        </childnode>
        <childnode refid="23203" relation="include">
        </childnode>
        <childnode refid="23223" relation="include">
        </childnode>
      </node>
      <node id="23194">
        <label>cstring</label>
      </node>
      <node id="23213">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="23202">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="23256">
        <label>/home/aakash/mlpack/src/mlpack/methods/amf/amf.hpp</label>
        <link refid="amf_8hpp"/>
        <childnode refid="23257" relation="include">
        </childnode>
        <childnode refid="23265" relation="include">
        </childnode>
        <childnode refid="23266" relation="include">
        </childnode>
        <childnode refid="23267" relation="include">
        </childnode>
        <childnode refid="23268" relation="include">
        </childnode>
      </node>
      <node id="23260">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp</label>
        <link refid="cf__model_8hpp"/>
      </node>
      <node id="23262">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp</label>
        <link refid="regularized__svd__method_8hpp"/>
      </node>
      <node id="23259">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/bias_svd_method.hpp</label>
        <link refid="bias__svd__method_8hpp"/>
      </node>
      <node id="23257">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf.hpp</label>
        <link refid="cf_8hpp"/>
        <childnode refid="23258" relation="include">
        </childnode>
        <childnode refid="23260" relation="include">
        </childnode>
        <childnode refid="23261" relation="include">
        </childnode>
        <childnode refid="23263" relation="include">
        </childnode>
      </node>
      <node id="23263">
        <label>/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp</label>
        <link refid="svdplusplus_8hpp"/>
        <childnode refid="23264" relation="include">
        </childnode>
      </node>
      <node id="23268">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svd_incomplete_method.hpp</label>
        <link refid="svd__incomplete__method_8hpp"/>
      </node>
      <node id="23265">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/batch_svd_method.hpp</label>
        <link refid="batch__svd__method_8hpp"/>
      </node>
      <node id="23258">
        <label>/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp</label>
        <link refid="bias__svd_8hpp"/>
        <childnode refid="23259" relation="include">
        </childnode>
      </node>
      <node id="23264">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svdplusplus_method.hpp</label>
        <link refid="svdplusplus__method_8hpp"/>
      </node>
      <node id="23261">
        <label>/home/aakash/mlpack/src/mlpack/methods/regularized_svd/regularized_svd.hpp</label>
        <link refid="regularized__svd_8hpp"/>
        <childnode refid="23262" relation="include">
        </childnode>
      </node>
      <node id="23267">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svd_complete_method.hpp</label>
        <link refid="svd__complete__method_8hpp"/>
      </node>
      <node id="23266">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/nmf_method.hpp</label>
        <link refid="nmf__method_8hpp"/>
        <childnode refid="23257" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1amf_1_1AMF" prot="public">mlpack::amf::AMF</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1amf">mlpack::amf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Sumedh Ghaisas </para></simplesect>
<simplesect kind="author"><para>Mohan Rajendran </para></simplesect>
<simplesect kind="author"><para>Ryan Curtin</para></simplesect>
Alternating Matrix Factorization</para><para>The AMF (alternating matrix factorization) class, from which more commonly known techniques such as incremental SVD, NMF, and batch-learning SVD can be derived.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="18"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_AMF_AMF_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_AMF_AMF_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nmf__mult__dist_8hpp" kindref="compound">mlpack/methods/amf/update_rules/nmf_mult_dist.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nmf__als_8hpp" kindref="compound">mlpack/methods/amf/update_rules/nmf_als.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="svd__batch__learning_8hpp" kindref="compound">mlpack/methods/amf/update_rules/svd_batch_learning.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="svd__incomplete__incremental__learning_8hpp" kindref="compound">mlpack/methods/amf/update_rules/svd_incomplete_incremental_learning.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="svd__complete__incremental__learning_8hpp" kindref="compound">mlpack/methods/amf/update_rules/svd_complete_incremental_learning.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="amf_2init__rules_2random__init_8hpp" kindref="compound">mlpack/methods/amf/init_rules/random_init.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="random__acol__init_8hpp" kindref="compound">mlpack/methods/amf/init_rules/random_acol_init.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="simple__residue__termination_8hpp" kindref="compound">mlpack/methods/amf/termination_policies/simple_residue_termination.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="simple__tolerance__termination_8hpp" kindref="compound">mlpack/methods/amf/termination_policies/simple_tolerance_termination.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="36" refid="namespacemlpack_1_1amf" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">amf<sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TerminationPolicyType<sp/>=<sp/><ref refid="classmlpack_1_1amf_1_1SimpleResidueTermination" kindref="compound">SimpleResidueTermination</ref>,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InitializationRuleType<sp/>=<sp/><ref refid="classmlpack_1_1amf_1_1RandomAcolInitialization" kindref="compound">RandomAcolInitialization&lt;&gt;</ref>,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>UpdateRuleType<sp/>=<sp/><ref refid="classmlpack_1_1amf_1_1NMFMultiplicativeDistanceUpdate" kindref="compound">NMFMultiplicativeDistanceUpdate</ref>&gt;</highlight></codeline>
<codeline lineno="78" refid="classmlpack_1_1amf_1_1AMF" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1amf_1_1AMF" kindref="compound">AMF</ref></highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1amf_1_1AMF_1aa79bd7ca717d85ef36baa40a1ea4319a" kindref="member">AMF</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TerminationPolicyType&amp;<sp/>terminationPolicy<sp/>=<sp/>TerminationPolicyType(),</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InitializationRuleType&amp;<sp/>initializeRule<sp/>=<sp/>InitializationRuleType(),</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UpdateRuleType&amp;<sp/>update<sp/>=<sp/>UpdateRuleType());</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1AMF_1a535d2642e3234fbd1ebc6840b061c4da" kindref="member">Apply</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>V,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>W,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>H);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classmlpack_1_1amf_1_1AMF_1ad905ffaf32e6780a28664a060d23e6b8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TerminationPolicyType&amp;<sp/><ref refid="classmlpack_1_1amf_1_1AMF_1ad905ffaf32e6780a28664a060d23e6b8" kindref="member">TerminationPolicy</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="117"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>terminationPolicy;<sp/>}</highlight></codeline>
<codeline lineno="119" refid="classmlpack_1_1amf_1_1AMF_1ae0b13308816da802c64d704544a7af71" refkind="member"><highlight class="normal"><sp/><sp/>TerminationPolicyType&amp;<sp/><ref refid="classmlpack_1_1amf_1_1AMF_1ae0b13308816da802c64d704544a7af71" kindref="member">TerminationPolicy</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>terminationPolicy;<sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="classmlpack_1_1amf_1_1AMF_1ae36ae1d0d07bb71d6ad4aa3919de674b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>InitializationRuleType&amp;<sp/><ref refid="classmlpack_1_1amf_1_1AMF_1ae36ae1d0d07bb71d6ad4aa3919de674b" kindref="member">InitializeRule</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="123"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>initializationRule;<sp/>}</highlight></codeline>
<codeline lineno="125" refid="classmlpack_1_1amf_1_1AMF_1ad4c0a310565e914c01e6beb9f9427567" refkind="member"><highlight class="normal"><sp/><sp/>InitializationRuleType&amp;<sp/><ref refid="classmlpack_1_1amf_1_1AMF_1ad4c0a310565e914c01e6beb9f9427567" kindref="member">InitializeRule</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>initializationRule;<sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="classmlpack_1_1amf_1_1AMF_1ad51a399acff576b3da541487d6a76417" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UpdateRuleType&amp;<sp/><ref refid="classmlpack_1_1amf_1_1AMF_1ad51a399acff576b3da541487d6a76417" kindref="member">Update</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>update;<sp/>}</highlight></codeline>
<codeline lineno="130" refid="classmlpack_1_1amf_1_1AMF_1a3e8cca59296dfb97e73f5c07924ed644" refkind="member"><highlight class="normal"><sp/><sp/>UpdateRuleType&amp;<sp/><ref refid="classmlpack_1_1amf_1_1AMF_1a3e8cca59296dfb97e73f5c07924ed644" kindref="member">Update</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>update;<sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>TerminationPolicyType<sp/>terminationPolicy;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>InitializationRuleType<sp/>initializationRule;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>UpdateRuleType<sp/>update;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>AMF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1AMF" kindref="compound">amf::AMF</ref>&lt;<ref refid="classmlpack_1_1amf_1_1SimpleResidueTermination" kindref="compound">amf::SimpleResidueTermination</ref>,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1amf_1_1RandomAcolInitialization" kindref="compound">amf::RandomAcolInitialization&lt;&gt;</ref>,</highlight></codeline>
<codeline lineno="143" refid="namespacemlpack_1_1amf_1a3e3179901b352438bc974218b6ba0fab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1amf_1_1NMFALSUpdate" kindref="compound">amf::NMFALSUpdate</ref>&gt;<sp/><ref refid="namespacemlpack_1_1amf_1a3e3179901b352438bc974218b6ba0fab" kindref="member">NMFALSFactorizer</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"></codeline>
<codeline lineno="154"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType<sp/>=<sp/>arma::mat&gt;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1AMF" kindref="compound">SVDBatchFactorizer</ref><sp/>=<sp/><ref refid="classmlpack_1_1amf_1_1AMF" kindref="compound">amf::AMF</ref>&lt;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>amf::SimpleResidueTermination,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>amf::RandomAcolInitialization&lt;&gt;,</highlight></codeline>
<codeline lineno="158" refid="namespacemlpack_1_1amf_1aedb113157f87759c24e2368dfd7b9216" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1amf_1_1SVDBatchLearning" kindref="compound">amf::SVDBatchLearning</ref>&gt;;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MatType<sp/>=<sp/>arma::mat&gt;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1AMF" kindref="compound">SVDIncompleteIncrementalFactorizer</ref><sp/>=<sp/><ref refid="classmlpack_1_1amf_1_1AMF" kindref="compound">amf::AMF</ref>&lt;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>amf::SimpleResidueTermination,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>amf::RandomAcolInitialization&lt;&gt;,</highlight></codeline>
<codeline lineno="172" refid="namespacemlpack_1_1amf_1a681ac877cb603d00766e015ff4d4c294" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1amf_1_1SVDIncompleteIncrementalLearning" kindref="compound">amf::SVDIncompleteIncrementalLearning</ref>&gt;;</highlight></codeline>
<codeline lineno="181"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MatType<sp/>=<sp/>arma::mat&gt;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1AMF" kindref="compound">SVDCompleteIncrementalFactorizer</ref><sp/>=<sp/><ref refid="classmlpack_1_1amf_1_1AMF" kindref="compound">amf::AMF</ref>&lt;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>amf::SimpleResidueTermination,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>amf::RandomAcolInitialization&lt;&gt;,</highlight></codeline>
<codeline lineno="185" refid="namespacemlpack_1_1amf_1aeaa4b749fc1afc70451f096dca4228b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1amf_1_1SVDCompleteIncrementalLearning" kindref="compound">amf::SVDCompleteIncrementalLearning&lt;MatType&gt;</ref>&gt;;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>amf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;amf_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>MLPACK_METHODS_AMF_AMF_HPP</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/amf/amf.hpp"/>
  </compounddef>
</doxygen>
