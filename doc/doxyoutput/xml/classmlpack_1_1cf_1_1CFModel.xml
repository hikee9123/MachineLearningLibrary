<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1cf_1_1CFModel" kind="class" language="C++" prot="public">
    <compoundname>mlpack::cf::CFModel</compoundname>
    <includes refid="cf__model_8hpp" local="no">cf_model.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3" prot="public" static="no">
        <name>DecompositionTypes</name>
        <enumvalue id="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3af2cbf4baa18e0247ed7ef03f98c1c896" prot="public">
          <name>NMF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3ad89b11660e9fe489189ef81eeba75ba0" prot="public">
          <name>BATCH_SVD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3ae44c1c137ebc965d699554aadfbf5865" prot="public">
          <name>RANDOMIZED_SVD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3accee8c435616e0dfafc4410886f68d51" prot="public">
          <name>REG_SVD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3a4c23ca46a33b4e973638be60cca3b7b5" prot="public">
          <name>SVD_COMPLETE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3a47406d821eeee5f4e2a19b8b549397fb" prot="public">
          <name>SVD_INCOMPLETE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3ade2338f2230ab9d7b19cfe1465bcc80d" prot="public">
          <name>BIAS_SVD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3abcfa38576ad06602dfb83c8b650e7705" prot="public">
          <name>SVD_PLUS_PLUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="166" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" bodystart="165" bodyend="175"/>
      </memberdef>
      <memberdef kind="enum" id="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565" prot="public" static="no">
        <name>NormalizationTypes</name>
        <enumvalue id="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565ad9a831b0ac370f4155b26a850ce64fc8" prot="public">
          <name>NO_NORMALIZATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565a7d94fdea267a8d26f70fa3fe893a67ee" prot="public">
          <name>ITEM_MEAN_NORMALIZATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565ad8d1bcaa0014bb1ecc28fc8b7fcd5ddb" prot="public">
          <name>USER_MEAN_NORMALIZATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565a44a4cc0253c524dcb55624c74c31f107" prot="public">
          <name>OVERALL_MEAN_NORMALIZATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565a622067f1e73e543af7fd67342c7036d1" prot="public">
          <name>Z_SCORE_NORMALIZATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="178" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" bodystart="177" bodyend="184"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1cf_1_1CFModel_1a93fad9b08cf0f8d2468123c0e193b6ed" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1cf_1_1CFWrapperBase" kindref="compound">CFWrapperBase</ref> *</type>
        <definition>CFWrapperBase* cf</definition>
        <argsstring></argsstring>
        <name>cf</name>
        <briefdescription>
<para>cf holds an instance of the <ref refid="classmlpack_1_1cf_1_1CFType" kindref="compound">CFType</ref> class for the current decompositionPolicy and normalizationType. </para>        </briefdescription>
        <detaileddescription>
<para>It is initialized every time <ref refid="classmlpack_1_1cf_1_1CFModel_1aa2ac0149615227b72abb724da06a8536" kindref="member">Train()</ref> is executed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="197" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1cf_1_1CFModel_1abc7a6c0ad965f2dda5f62abc65e252eb" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3" kindref="member">DecompositionTypes</ref></type>
        <definition>DecompositionTypes decompositionType</definition>
        <argsstring></argsstring>
        <name>decompositionType</name>
        <briefdescription>
<para>The current decomposition policy type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="188" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1cf_1_1CFModel_1a5dfa5235850ea8e574cef8627d29b1f3" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565" kindref="member">NormalizationTypes</ref></type>
        <definition>NormalizationTypes normalizationType</definition>
        <argsstring></argsstring>
        <name>normalizationType</name>
        <briefdescription>
<para>The current normalization policy type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="190" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" bodystart="190" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFModel_1a169ddef56c31cadd9b363be262d60ba3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CFModel</definition>
        <argsstring>()</argsstring>
        <name>CFModel</name>
        <briefdescription>
<para>Create an empty CF model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFModel_1af6bc770a09ec035e15cf7140cc249766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CFModel</definition>
        <argsstring>(const CFModel &amp;other)</argsstring>
        <name>CFModel</name>
        <param>
          <type>const <ref refid="classmlpack_1_1cf_1_1CFModel" kindref="compound">CFModel</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Create a CF model by copying the given model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFModel_1aba22334da6ce18b2a593165fb8fa9ee5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CFModel</definition>
        <argsstring>(CFModel &amp;&amp;other)</argsstring>
        <name>CFModel</name>
        <param>
          <type><ref refid="classmlpack_1_1cf_1_1CFModel" kindref="compound">CFModel</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Create a CF model by taking ownership of the data of the other model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFModel_1a55bf85a1a0bd1caa9437867a386cd4d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~CFModel</definition>
        <argsstring>()</argsstring>
        <name>~CFModel</name>
        <briefdescription>
<para>Clean up memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFModel_1a861d50677ec1e5d429a75b23c23decd3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1cf_1_1CFWrapperBase" kindref="compound">CFWrapperBase</ref> *</type>
        <definition>CFWrapperBase* CF</definition>
        <argsstring>() const</argsstring>
        <name>CF</name>
        <briefdescription>
<para>Get the <ref refid="classmlpack_1_1cf_1_1CFWrapperBase" kindref="compound">CFWrapperBase</ref> object. (Be careful!) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="219" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" bodystart="219" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFModel_1ac5f3d1c10b9195f857011b8eba813237" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3" kindref="member">DecompositionTypes</ref> &amp;</type>
        <definition>const DecompositionTypes&amp; DecompositionType</definition>
        <argsstring>() const</argsstring>
        <name>DecompositionType</name>
        <briefdescription>
<para>Get the decomposition type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="222" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFModel_1aa73bf3b476ee722deee107e113f889a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3" kindref="member">DecompositionTypes</ref> &amp;</type>
        <definition>DecompositionTypes&amp; DecompositionType</definition>
        <argsstring>()</argsstring>
        <name>DecompositionType</name>
        <briefdescription>
<para>Set the decomposition type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="227" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" bodystart="227" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFModel_1a6190357346a14f50b86a9e4b2448c117" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetRecommendations</definition>
        <argsstring>(const NeighborSearchTypes nsType, const InterpolationTypes interpolationType, const size_t numRecs, arma::Mat&lt; size_t &gt; &amp;recommendations, const arma::Col&lt; size_t &gt; &amp;users)</argsstring>
        <name>GetRecommendations</name>
        <param>
          <type>const <ref refid="namespacemlpack_1_1cf_1abde1eb199c5812cbca1a647cf1730732" kindref="member">NeighborSearchTypes</ref></type>
          <declname>nsType</declname>
        </param>
        <param>
          <type>const <ref refid="namespacemlpack_1_1cf_1a06410b91b9d0ee6d70901dd29775ecd5" kindref="member">InterpolationTypes</ref></type>
          <declname>interpolationType</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>numRecs</declname>
        </param>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>recommendations</declname>
        </param>
        <param>
          <type>const arma::Col&lt; size_t &gt; &amp;</type>
          <declname>users</declname>
        </param>
        <briefdescription>
<para>Compute recommendations for query users. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="258" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFModel_1a014c25bad7552f2d14066a20187266bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetRecommendations</definition>
        <argsstring>(const NeighborSearchTypes nsType, const InterpolationTypes interpolationType, const size_t numRecs, arma::Mat&lt; size_t &gt; &amp;recommendations)</argsstring>
        <name>GetRecommendations</name>
        <param>
          <type>const <ref refid="namespacemlpack_1_1cf_1abde1eb199c5812cbca1a647cf1730732" kindref="member">NeighborSearchTypes</ref></type>
          <declname>nsType</declname>
        </param>
        <param>
          <type>const <ref refid="namespacemlpack_1_1cf_1a06410b91b9d0ee6d70901dd29775ecd5" kindref="member">InterpolationTypes</ref></type>
          <declname>interpolationType</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>numRecs</declname>
        </param>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>recommendations</declname>
        </param>
        <briefdescription>
<para>Compute recommendations for all users. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="265" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFModel_1a47f078a075be8389962d9dbf7d4131d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565" kindref="member">NormalizationTypes</ref> &amp;</type>
        <definition>const NormalizationTypes&amp; NormalizationType</definition>
        <argsstring>() const</argsstring>
        <name>NormalizationType</name>
        <briefdescription>
<para>Get the normalization type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="233" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" bodystart="233" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFModel_1aad708ca15e9ba3694222b1c8f4fc263f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565" kindref="member">NormalizationTypes</ref> &amp;</type>
        <definition>NormalizationTypes&amp; NormalizationType</definition>
        <argsstring>()</argsstring>
        <name>NormalizationType</name>
        <briefdescription>
<para>Set the normalization type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="238" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" bodystart="238" bodyend="241"/>
        <references refid="classmlpack_1_1cf_1_1CFWrapperBase_1aefd1ffc070784adf594bd91a2469a6c7">CFWrapperBase::GetRecommendations</references>
        <references refid="classmlpack_1_1cf_1_1CFWrapperBase_1a3de57e8cd8b989a1e7e719c80f39d07b">CFWrapperBase::Predict</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFModel_1aef2a7b565e1bea0483c1e9ff9f483d9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1cf_1_1CFModel" kindref="compound">CFModel</ref> &amp;</type>
        <definition>CFModel&amp; operator=</definition>
        <argsstring>(const CFModel &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmlpack_1_1cf_1_1CFModel" kindref="compound">CFModel</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Make this CF model a copy of the other model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFModel_1a4d61ce1f45004471cbbb23274a34d204" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1cf_1_1CFModel" kindref="compound">CFModel</ref> &amp;</type>
        <definition>CFModel&amp; operator=</definition>
        <argsstring>(CFModel &amp;&amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classmlpack_1_1cf_1_1CFModel" kindref="compound">CFModel</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Make this CF model take ownership of the data of the other model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFModel_1ae84e7f1c2e0feb642866cd3d4aab1df7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Predict</definition>
        <argsstring>(const NeighborSearchTypes nsType, const InterpolationTypes interpolationType, const arma::Mat&lt; size_t &gt; &amp;combinations, arma::vec &amp;predictions)</argsstring>
        <name>Predict</name>
        <param>
          <type>const <ref refid="namespacemlpack_1_1cf_1abde1eb199c5812cbca1a647cf1730732" kindref="member">NeighborSearchTypes</ref></type>
          <declname>nsType</declname>
        </param>
        <param>
          <type>const <ref refid="namespacemlpack_1_1cf_1a06410b91b9d0ee6d70901dd29775ecd5" kindref="member">InterpolationTypes</ref></type>
          <declname>interpolationType</declname>
        </param>
        <param>
          <type>const arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>combinations</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>predictions</declname>
        </param>
        <briefdescription>
<para>Make predictions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="252" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFModel_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFModel_1aa2ac0149615227b72abb724da06a8536" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Train</definition>
        <argsstring>(const arma::mat &amp;data, const size_t numUsersForSimilarity, const size_t rank, const size_t maxIterations, const double minResidue, const bool mit)</argsstring>
        <name>Train</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>numUsersForSimilarity</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>rank</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>maxIterations</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>minResidue</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>mit</declname>
        </param>
        <briefdescription>
<para>Train the model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="244" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The model to save to disk. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="163" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" bodystart="162" bodyend="273"/>
    <listofallmembers>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3ad89b11660e9fe489189ef81eeba75ba0" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>BATCH_SVD</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3ade2338f2230ab9d7b19cfe1465bcc80d" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>BIAS_SVD</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a861d50677ec1e5d429a75b23c23decd3" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>CF</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a93fad9b08cf0f8d2468123c0e193b6ed" prot="private" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>cf</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a169ddef56c31cadd9b363be262d60ba3" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>CFModel</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1af6bc770a09ec035e15cf7140cc249766" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>CFModel</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1aba22334da6ce18b2a593165fb8fa9ee5" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>CFModel</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1abc7a6c0ad965f2dda5f62abc65e252eb" prot="private" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>decompositionType</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1ac5f3d1c10b9195f857011b8eba813237" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>DecompositionType</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1aa73bf3b476ee722deee107e113f889a9" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>DecompositionType</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>DecompositionTypes</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a6190357346a14f50b86a9e4b2448c117" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>GetRecommendations</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a014c25bad7552f2d14066a20187266bb" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>GetRecommendations</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565a7d94fdea267a8d26f70fa3fe893a67ee" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>ITEM_MEAN_NORMALIZATION</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3af2cbf4baa18e0247ed7ef03f98c1c896" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>NMF</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565ad9a831b0ac370f4155b26a850ce64fc8" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>NO_NORMALIZATION</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a47f078a075be8389962d9dbf7d4131d6" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>NormalizationType</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1aad708ca15e9ba3694222b1c8f4fc263f" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>NormalizationType</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a5dfa5235850ea8e574cef8627d29b1f3" prot="private" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>normalizationType</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>NormalizationTypes</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1aef2a7b565e1bea0483c1e9ff9f483d9d" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>operator=</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a4d61ce1f45004471cbbb23274a34d204" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>operator=</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565a44a4cc0253c524dcb55624c74c31f107" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>OVERALL_MEAN_NORMALIZATION</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1ae84e7f1c2e0feb642866cd3d4aab1df7" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>Predict</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3ae44c1c137ebc965d699554aadfbf5865" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>RANDOMIZED_SVD</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3accee8c435616e0dfafc4410886f68d51" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>REG_SVD</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3a4c23ca46a33b4e973638be60cca3b7b5" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>SVD_COMPLETE</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3a47406d821eeee5f4e2a19b8b549397fb" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>SVD_INCOMPLETE</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a2df2780dc62c63e87a69698607f03ea3abcfa38576ad06602dfb83c8b650e7705" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>SVD_PLUS_PLUS</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1aa2ac0149615227b72abb724da06a8536" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>Train</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565ad8d1bcaa0014bb1ecc28fc8b7fcd5ddb" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>USER_MEAN_NORMALIZATION</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a64fc73a3a72ac3f0dcecd43bf35a2565a622067f1e73e543af7fd67342c7036d1" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>Z_SCORE_NORMALIZATION</name></member>
      <member refid="classmlpack_1_1cf_1_1CFModel_1a55bf85a1a0bd1caa9437867a386cd4d3" prot="public" virt="non-virtual"><scope>mlpack::cf::CFModel</scope><name>~CFModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
