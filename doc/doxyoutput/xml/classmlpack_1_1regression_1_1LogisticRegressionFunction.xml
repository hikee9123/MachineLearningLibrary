<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1regression_1_1LogisticRegressionFunction" kind="class" language="C++" prot="public">
    <compoundname>mlpack::regression::LogisticRegressionFunction</compoundname>
    <includes refid="logistic__regression__function_8hpp" local="no">logistic_regression_function.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename MatType</type>
        <defval>arma::mat</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a3db359547eed8cfd48ca821d95f577af" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double lambda</definition>
        <argsstring></argsstring>
        <name>lambda</name>
        <briefdescription>
<para>The regularization parameter for L2-regularization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" line="169" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1regression_1_1LogisticRegressionFunction_1aaf4d9c4da44c365d83968ba4bbfb6059" prot="private" static="no" mutable="no">
        <type>MatType</type>
        <definition>MatType predictors</definition>
        <argsstring></argsstring>
        <name>predictors</name>
        <briefdescription>
<para>The matrix of data points (predictors). </para>        </briefdescription>
        <detaileddescription>
<para>This is an alias until shuffling is done. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" line="164" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1regression_1_1LogisticRegressionFunction_1aafc20259cb323c5bbd10405106a25981" prot="private" static="no" mutable="no">
        <type>arma::Row&lt; size_t &gt;</type>
        <definition>arma::Row&lt;size_t&gt; responses</definition>
        <argsstring></argsstring>
        <name>responses</name>
        <briefdescription>
<para>The vector of responses to the input data points. </para>        </briefdescription>
        <detaileddescription>
<para>This is an alias until shuffling is done. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" line="167" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a765a1a86d5e7265054f6944fc49f00a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LogisticRegressionFunction</definition>
        <argsstring>(const MatType &amp;predictors, const arma::Row&lt; size_t &gt; &amp;responses, const double lambda=0)</argsstring>
        <name>LogisticRegressionFunction</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>predictors</declname>
        </param>
        <param>
          <type>const arma::Row&lt; size_t &gt; &amp;</type>
          <declname>responses</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>lambda</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Creates the <ref refid="classmlpack_1_1regression_1_1LogisticRegressionFunction" kindref="compound">LogisticRegressionFunction</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>predictors</parametername>
</parameternamelist>
<parameterdescription>
<para>The matrix of data points. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>responses</parametername>
</parameternamelist>
<parameterdescription>
<para>The measured data for each point in predictors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambda</parametername>
</parameternamelist>
<parameterdescription>
<para>Regularization constant for ridge regression. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a6c7f979b684b70aab5bec8b09b5eb1a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Evaluate</definition>
        <argsstring>(const arma::mat &amp;parameters) const</argsstring>
        <name>Evaluate</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
<para>Evaluate the logistic regression log-likelihood function with the given parameters. </para>        </briefdescription>
        <detaileddescription>
<para>Note that if a point has 0 probability of being classified directly with the given parameters, then <ref refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a6c7f979b684b70aab5bec8b09b5eb1a4" kindref="member">Evaluate()</ref> will return nan (this is kind of a corner case and should not happen for reasonable models).</para><para>The optimum (minimum) of this function is 0.0, and occurs when each point is classified correctly with very high probability.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of logistic regression parameters. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" line="70" column="1"/>
        <referencedby refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a99080f78992e0002dd030a9ed23b435c" compoundref="logistic__regression__function_8hpp" startline="52" endline="52">LogisticRegressionFunction&lt; MatType &gt;::Responses</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LogisticRegressionFunction_1ab6d965cc736ee801a67639099555d941" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Evaluate</definition>
        <argsstring>(const arma::mat &amp;parameters, const size_t begin, const size_t batchSize=1) const</argsstring>
        <name>Evaluate</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>batchSize</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Evaluate the logistic regression log-likelihood function with the given parameters using the given batch size from the given point index. </para>        </briefdescription>
        <detaileddescription>
<para>This is useful for optimizers such as SGD, which require a separable objective function. Note that if the points have 0 probability of being classified correctly with the given parameters, then <ref refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a6c7f979b684b70aab5bec8b09b5eb1a4" kindref="member">Evaluate()</ref> will return nan (this is kind of a corner case and should not happen for reasonable models).</para><para>The optimum (minimum) of this function is 0.0, and occurs when the points are classified correctly with very high probability.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of logistic regression parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the starting point to use for objective function evaluation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>batchSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points to be passed at a time to use for objective function evaluation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a1e5f0be6eadfa83bbea6f6152d04f735" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GradType</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double EvaluateWithGradient</definition>
        <argsstring>(const arma::mat &amp;parameters, GradType &amp;gradient) const</argsstring>
        <name>EvaluateWithGradient</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>GradType &amp;</type>
          <declname>gradient</declname>
        </param>
        <briefdescription>
<para>Evaluate the objective function and gradient of the logistic regression log-likelihood function simultaneously with the given parameters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" line="141" column="1"/>
        <referencedby refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a99080f78992e0002dd030a9ed23b435c" compoundref="logistic__regression__function_8hpp" startline="52" endline="52">LogisticRegressionFunction&lt; MatType &gt;::Responses</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LogisticRegressionFunction_1ad39766abb8328346c4ef653a1a348390" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GradType</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double EvaluateWithGradient</definition>
        <argsstring>(const arma::mat &amp;parameters, const size_t begin, GradType &amp;gradient, const size_t batchSize=1) const</argsstring>
        <name>EvaluateWithGradient</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>GradType &amp;</type>
          <declname>gradient</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>batchSize</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Evaluate the objective function and gradient of the logistic regression log-likelihood function simultaneously with the given parameters, for the given batch size from a given point in the dataset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LogisticRegressionFunction_1ab9a604f48072ce6c08443519ff787a73" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Gradient</definition>
        <argsstring>(const arma::mat &amp;parameters, arma::mat &amp;gradient) const</argsstring>
        <name>Gradient</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>gradient</declname>
        </param>
        <briefdescription>
<para>Evaluate the gradient of the logistic regression log-likelihood function with the given parameters. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of logistic regression parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gradient</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to output gradient into. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" line="100" column="1"/>
        <referencedby refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a99080f78992e0002dd030a9ed23b435c" compoundref="logistic__regression__function_8hpp" startline="52" endline="52">LogisticRegressionFunction&lt; MatType &gt;::Responses</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a37df3124fb75373359e32fe1c0aacb30" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename GradType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Gradient</definition>
        <argsstring>(const arma::mat &amp;parameters, const size_t begin, GradType &amp;gradient, const size_t batchSize=1) const</argsstring>
        <name>Gradient</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>GradType &amp;</type>
          <declname>gradient</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>batchSize</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Evaluate the gradient of the logistic regression log-likelihood function with the given parameters, for the given batch size from a given point in the dataset. </para>        </briefdescription>
        <detaileddescription>
<para>This is useful for optimizers such as SGD, which require a separable objective function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of logistic regression parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the starting point to use for objective function gradient evaluation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gradient</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to output gradient into. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>batchSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points to be processed as a batch for objective function gradient evaluation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LogisticRegressionFunction_1aedf1f261c4ef819f2b24abcc8ebae412" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const double &amp;</type>
        <definition>const double&amp; Lambda</definition>
        <argsstring>() const</argsstring>
        <name>Lambda</name>
        <briefdescription>
<para>Return the regularization parameter (lambda). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" line="45" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LogisticRegressionFunction_1aaf66629b989a326453647f42443c6a0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; Lambda</definition>
        <argsstring>()</argsstring>
        <name>Lambda</name>
        <briefdescription>
<para>Modify the regularization parameter (lambda). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" line="47" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a351704783f122196cf5dc7fb408b8522" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t NumFeatures</definition>
        <argsstring>() const</argsstring>
        <name>NumFeatures</name>
        <briefdescription>
<para>Return the number of features(add 1 for the intercept term). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" line="159" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" bodystart="159" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a1fa76af34a6e3ea927b307f0c318ee4b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t NumFunctions</definition>
        <argsstring>() const</argsstring>
        <name>NumFunctions</name>
        <briefdescription>
<para>Return the number of separable functions (the number of predictor points). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" line="156" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LogisticRegressionFunction_1aebc7a3602e18648021b93c1d725fef9c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PartialGradient</definition>
        <argsstring>(const arma::mat &amp;parameters, const size_t j, arma::sp_mat &amp;gradient) const</argsstring>
        <name>PartialGradient</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>j</declname>
        </param>
        <param>
          <type>arma::sp_mat &amp;</type>
          <declname>gradient</declname>
        </param>
        <briefdescription>
<para>Evaluate the gradient of the logistic regression log-likelihood function with the given parameters, and with respect to only one feature in the dataset. </para>        </briefdescription>
        <detaileddescription>
<para>This is useful for optimizers such as SCD, which require partial gradients.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of logistic regression parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the feature with respect to which the gradient is to be computed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gradient</parametername>
</parameternamelist>
<parameterdescription>
<para>Sparse matrix to output gradient into. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" line="132" column="1"/>
        <referencedby refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a99080f78992e0002dd030a9ed23b435c" compoundref="logistic__regression__function_8hpp" startline="52" endline="52">LogisticRegressionFunction&lt; MatType &gt;::Responses</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LogisticRegressionFunction_1af17881eecaf6b595d92c50f513b83803" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const MatType &amp;</type>
        <definition>const MatType&amp; Predictors</definition>
        <argsstring>() const</argsstring>
        <name>Predictors</name>
        <briefdescription>
<para>Return the matrix of predictors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" line="50" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a99080f78992e0002dd030a9ed23b435c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::Row&lt; size_t &gt; &amp;</type>
        <definition>const arma::Row&lt;size_t&gt;&amp; Responses</definition>
        <argsstring>() const</argsstring>
        <name>Responses</name>
        <briefdescription>
<para>Return the vector of responses. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" line="52" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" bodystart="52" bodyend="52"/>
        <references refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a6c7f979b684b70aab5bec8b09b5eb1a4">LogisticRegressionFunction&lt; MatType &gt;::Evaluate</references>
        <references refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a1e5f0be6eadfa83bbea6f6152d04f735">LogisticRegressionFunction&lt; MatType &gt;::EvaluateWithGradient</references>
        <references refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1ab9a604f48072ce6c08443519ff787a73">LogisticRegressionFunction&lt; MatType &gt;::Gradient</references>
        <references refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1aebc7a3602e18648021b93c1d725fef9c">LogisticRegressionFunction&lt; MatType &gt;::PartialGradient</references>
        <references refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a2697cc8b37d7bca7c055228382a9b208">LogisticRegressionFunction&lt; MatType &gt;::Shuffle</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a2697cc8b37d7bca7c055228382a9b208" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Shuffle</definition>
        <argsstring>()</argsstring>
        <name>Shuffle</name>
        <briefdescription>
<para>Shuffle the order of function visitation. </para>        </briefdescription>
        <detaileddescription>
<para>This may be called by the optimizer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" line="57" column="1"/>
        <referencedby refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a99080f78992e0002dd030a9ed23b435c" compoundref="logistic__regression__function_8hpp" startline="52" endline="52">LogisticRegressionFunction&lt; MatType &gt;::Responses</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The log-likelihood function for the logistic regression objective function. </para>    </briefdescription>
    <detaileddescription>
<para>This is used by various mlpack optimizers to train a logistic regression model. </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" line="31" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/logistic_regression/logistic_regression_function.hpp" bodystart="30" bodyend="170"/>
    <listofallmembers>
      <member refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a6c7f979b684b70aab5bec8b09b5eb1a4" prot="public" virt="non-virtual"><scope>mlpack::regression::LogisticRegressionFunction</scope><name>Evaluate</name></member>
      <member refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1ab6d965cc736ee801a67639099555d941" prot="public" virt="non-virtual"><scope>mlpack::regression::LogisticRegressionFunction</scope><name>Evaluate</name></member>
      <member refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a1e5f0be6eadfa83bbea6f6152d04f735" prot="public" virt="non-virtual"><scope>mlpack::regression::LogisticRegressionFunction</scope><name>EvaluateWithGradient</name></member>
      <member refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1ad39766abb8328346c4ef653a1a348390" prot="public" virt="non-virtual"><scope>mlpack::regression::LogisticRegressionFunction</scope><name>EvaluateWithGradient</name></member>
      <member refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1ab9a604f48072ce6c08443519ff787a73" prot="public" virt="non-virtual"><scope>mlpack::regression::LogisticRegressionFunction</scope><name>Gradient</name></member>
      <member refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a37df3124fb75373359e32fe1c0aacb30" prot="public" virt="non-virtual"><scope>mlpack::regression::LogisticRegressionFunction</scope><name>Gradient</name></member>
      <member refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1aedf1f261c4ef819f2b24abcc8ebae412" prot="public" virt="non-virtual"><scope>mlpack::regression::LogisticRegressionFunction</scope><name>Lambda</name></member>
      <member refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1aaf66629b989a326453647f42443c6a0c" prot="public" virt="non-virtual"><scope>mlpack::regression::LogisticRegressionFunction</scope><name>Lambda</name></member>
      <member refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a3db359547eed8cfd48ca821d95f577af" prot="private" virt="non-virtual"><scope>mlpack::regression::LogisticRegressionFunction</scope><name>lambda</name></member>
      <member refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a765a1a86d5e7265054f6944fc49f00a5" prot="public" virt="non-virtual"><scope>mlpack::regression::LogisticRegressionFunction</scope><name>LogisticRegressionFunction</name></member>
      <member refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a351704783f122196cf5dc7fb408b8522" prot="public" virt="non-virtual"><scope>mlpack::regression::LogisticRegressionFunction</scope><name>NumFeatures</name></member>
      <member refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a1fa76af34a6e3ea927b307f0c318ee4b" prot="public" virt="non-virtual"><scope>mlpack::regression::LogisticRegressionFunction</scope><name>NumFunctions</name></member>
      <member refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1aebc7a3602e18648021b93c1d725fef9c" prot="public" virt="non-virtual"><scope>mlpack::regression::LogisticRegressionFunction</scope><name>PartialGradient</name></member>
      <member refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1aaf4d9c4da44c365d83968ba4bbfb6059" prot="private" virt="non-virtual"><scope>mlpack::regression::LogisticRegressionFunction</scope><name>predictors</name></member>
      <member refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1af17881eecaf6b595d92c50f513b83803" prot="public" virt="non-virtual"><scope>mlpack::regression::LogisticRegressionFunction</scope><name>Predictors</name></member>
      <member refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a99080f78992e0002dd030a9ed23b435c" prot="public" virt="non-virtual"><scope>mlpack::regression::LogisticRegressionFunction</scope><name>Responses</name></member>
      <member refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1aafc20259cb323c5bbd10405106a25981" prot="private" virt="non-virtual"><scope>mlpack::regression::LogisticRegressionFunction</scope><name>responses</name></member>
      <member refid="classmlpack_1_1regression_1_1LogisticRegressionFunction_1a2697cc8b37d7bca7c055228382a9b208" prot="public" virt="non-virtual"><scope>mlpack::regression::LogisticRegressionFunction</scope><name>Shuffle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
