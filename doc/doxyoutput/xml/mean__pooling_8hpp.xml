<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="mean__pooling_8hpp" kind="file" language="C++">
    <compoundname>mean_pooling.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="yes">mean_pooling_impl.hpp</includes>
    <includedby refid="layer__types_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/ann/layer/layer_types.hpp</includedby>
    <includedby refid="layer_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/ann/layer/layer.hpp</includedby>
    <incdepgraph>
      <node id="34995">
        <label>list</label>
      </node>
      <node id="34992">
        <label>atomic</label>
      </node>
      <node id="34982">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="34958">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="34994">
        <label>iomanip</label>
      </node>
      <node id="34967">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="34968" relation="include">
        </childnode>
        <childnode refid="34970" relation="include">
        </childnode>
      </node>
      <node id="34950">
        <label>cstdint</label>
      </node>
      <node id="34959">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="34966">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="34989">
        <label>arma_config.hpp</label>
      </node>
      <node id="34979">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="34946">
        <label>cmath</label>
      </node>
      <node id="34965">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="34954">
        <label>stdexcept</label>
      </node>
      <node id="34974">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="34959" relation="include">
        </childnode>
        <childnode refid="34961" relation="include">
        </childnode>
        <childnode refid="34962" relation="include">
        </childnode>
        <childnode refid="34960" relation="include">
        </childnode>
      </node>
      <node id="34998">
        <label>string</label>
      </node>
      <node id="34986">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="34987" relation="include">
        </childnode>
        <childnode refid="34953" relation="include">
        </childnode>
      </node>
      <node id="34996">
        <label>map</label>
      </node>
      <node id="34948">
        <label>cfloat</label>
      </node>
      <node id="34978">
        <label>boost/variant.hpp</label>
      </node>
      <node id="35000">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="34962">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="34985">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="34986" relation="include">
        </childnode>
        <childnode refid="34962" relation="include">
        </childnode>
        <childnode refid="34969" relation="include">
        </childnode>
        <childnode refid="34987" relation="include">
        </childnode>
      </node>
      <node id="34975">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="34973">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="34959" relation="include">
        </childnode>
        <childnode refid="34961" relation="include">
        </childnode>
        <childnode refid="34962" relation="include">
        </childnode>
        <childnode refid="34960" relation="include">
        </childnode>
      </node>
      <node id="34976">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="34959" relation="include">
        </childnode>
        <childnode refid="34961" relation="include">
        </childnode>
        <childnode refid="34962" relation="include">
        </childnode>
        <childnode refid="34960" relation="include">
        </childnode>
      </node>
      <node id="34964">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="34984">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="34960" relation="include">
        </childnode>
        <childnode refid="34961" relation="include">
        </childnode>
        <childnode refid="34962" relation="include">
        </childnode>
        <childnode refid="34972" relation="include">
        </childnode>
        <childnode refid="34981" relation="include">
        </childnode>
      </node>
      <node id="34988">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="34989" relation="include">
        </childnode>
      </node>
      <node id="34990">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="34945">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="34946" relation="include">
        </childnode>
        <childnode refid="34947" relation="include">
        </childnode>
        <childnode refid="34948" relation="include">
        </childnode>
        <childnode refid="34949" relation="include">
        </childnode>
        <childnode refid="34950" relation="include">
        </childnode>
        <childnode refid="34951" relation="include">
        </childnode>
        <childnode refid="34952" relation="include">
        </childnode>
        <childnode refid="34953" relation="include">
        </childnode>
        <childnode refid="34954" relation="include">
        </childnode>
        <childnode refid="34955" relation="include">
        </childnode>
        <childnode refid="34956" relation="include">
        </childnode>
        <childnode refid="34957" relation="include">
        </childnode>
        <childnode refid="34958" relation="include">
        </childnode>
        <childnode refid="34959" relation="include">
        </childnode>
        <childnode refid="34960" relation="include">
        </childnode>
        <childnode refid="34961" relation="include">
        </childnode>
        <childnode refid="34962" relation="include">
        </childnode>
        <childnode refid="34963" relation="include">
        </childnode>
        <childnode refid="34964" relation="include">
        </childnode>
        <childnode refid="34965" relation="include">
        </childnode>
        <childnode refid="34966" relation="include">
        </childnode>
        <childnode refid="34967" relation="include">
        </childnode>
        <childnode refid="34971" relation="include">
        </childnode>
        <childnode refid="34972" relation="include">
        </childnode>
        <childnode refid="34973" relation="include">
        </childnode>
        <childnode refid="34974" relation="include">
        </childnode>
        <childnode refid="34975" relation="include">
        </childnode>
        <childnode refid="34976" relation="include">
        </childnode>
        <childnode refid="34977" relation="include">
        </childnode>
        <childnode refid="34983" relation="include">
        </childnode>
        <childnode refid="34984" relation="include">
        </childnode>
        <childnode refid="34981" relation="include">
        </childnode>
        <childnode refid="34985" relation="include">
        </childnode>
        <childnode refid="34988" relation="include">
        </childnode>
        <childnode refid="34990" relation="include">
        </childnode>
        <childnode refid="34991" relation="include">
        </childnode>
        <childnode refid="35000" relation="include">
        </childnode>
        <childnode refid="35001" relation="include">
        </childnode>
      </node>
      <node id="34951">
        <label>cstdio</label>
      </node>
      <node id="34955">
        <label>tuple</label>
      </node>
      <node id="34960">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="34977">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="34960" relation="include">
        </childnode>
        <childnode refid="34961" relation="include">
        </childnode>
        <childnode refid="34962" relation="include">
        </childnode>
        <childnode refid="34964" relation="include">
        </childnode>
        <childnode refid="34978" relation="include">
        </childnode>
        <childnode refid="34979" relation="include">
        </childnode>
        <childnode refid="34980" relation="include">
        </childnode>
        <childnode refid="34981" relation="include">
        </childnode>
      </node>
      <node id="35002">
        <label>mean_pooling_impl.hpp</label>
      </node>
      <node id="34956">
        <label>utility</label>
      </node>
      <node id="34980">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="34971">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="34968">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="34969" relation="include">
        </childnode>
      </node>
      <node id="34991">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="34992" relation="include">
        </childnode>
        <childnode refid="34993" relation="include">
        </childnode>
        <childnode refid="34994" relation="include">
        </childnode>
        <childnode refid="34995" relation="include">
        </childnode>
        <childnode refid="34996" relation="include">
        </childnode>
        <childnode refid="34997" relation="include">
        </childnode>
        <childnode refid="34998" relation="include">
        </childnode>
        <childnode refid="34999" relation="include">
        </childnode>
      </node>
      <node id="34969">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="34983">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="34981" relation="include">
        </childnode>
        <childnode refid="34977" relation="include">
        </childnode>
        <childnode refid="34984" relation="include">
        </childnode>
      </node>
      <node id="34952">
        <label>cstdlib</label>
      </node>
      <node id="34947">
        <label>cctype</label>
      </node>
      <node id="34944">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/mean_pooling.hpp</label>
        <link refid="mean__pooling_8hpp"/>
        <childnode refid="34945" relation="include">
        </childnode>
        <childnode refid="35002" relation="include">
        </childnode>
      </node>
      <node id="34970">
        <label>unordered_map</label>
      </node>
      <node id="34949">
        <label>climits</label>
      </node>
      <node id="34997">
        <label>mutex</label>
      </node>
      <node id="34993">
        <label>chrono</label>
      </node>
      <node id="35001">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="34999">
        <label>thread</label>
      </node>
      <node id="34987">
        <label>type_traits</label>
      </node>
      <node id="34963">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="34957">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="34981">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="34959" relation="include">
        </childnode>
        <childnode refid="34960" relation="include">
        </childnode>
        <childnode refid="34961" relation="include">
        </childnode>
        <childnode refid="34962" relation="include">
        </childnode>
        <childnode refid="34982" relation="include">
        </childnode>
      </node>
      <node id="34953">
        <label>cstring</label>
      </node>
      <node id="34972">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="34961">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="35045">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/radial_basis_function.hpp</label>
        <link refid="radial__basis__function_8hpp"/>
        <childnode refid="35004" relation="include">
        </childnode>
      </node>
      <node id="35052">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/parameters_visitor.hpp</label>
        <link refid="parameters__visitor_8hpp"/>
        <childnode refid="35053" relation="include">
        </childnode>
      </node>
      <node id="35024">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_merge.hpp</label>
        <link refid="multiply__merge_8hpp"/>
        <childnode refid="35014" relation="include">
        </childnode>
      </node>
      <node id="35019">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/gru.hpp</label>
        <link refid="gru_8hpp"/>
        <childnode refid="35014" relation="include">
        </childnode>
      </node>
      <node id="35018">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/sequential.hpp</label>
        <link refid="sequential_8hpp"/>
        <childnode refid="35013" relation="include">
        </childnode>
        <childnode refid="35019" relation="include">
        </childnode>
        <childnode refid="35020" relation="include">
        </childnode>
        <childnode refid="35021" relation="include">
        </childnode>
        <childnode refid="35014" relation="include">
        </childnode>
      </node>
      <node id="35050">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/gradient_zero_visitor.hpp</label>
        <link refid="gradient__zero__visitor_8hpp"/>
      </node>
      <node id="35038">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/glimpse.hpp</label>
        <link refid="glimpse_8hpp"/>
        <childnode refid="35014" relation="include">
        </childnode>
      </node>
      <node id="35034">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/convolution.hpp</label>
        <link refid="convolution_8hpp"/>
        <childnode refid="35014" relation="include">
        </childnode>
      </node>
      <node id="35014">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="35006" relation="include">
        </childnode>
        <childnode refid="35007" relation="include">
        </childnode>
        <childnode refid="35015" relation="include">
        </childnode>
        <childnode refid="35016" relation="include">
        </childnode>
        <childnode refid="35009" relation="include">
        </childnode>
        <childnode refid="35010" relation="include">
        </childnode>
        <childnode refid="35011" relation="include">
        </childnode>
        <childnode refid="35017" relation="include">
        </childnode>
      </node>
      <node id="35021">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/recurrent.hpp</label>
        <link refid="recurrent_8hpp"/>
        <childnode refid="35014" relation="include">
        </childnode>
      </node>
      <node id="35028">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/output_parameter_visitor.hpp</label>
        <link refid="output__parameter__visitor_8hpp"/>
        <childnode refid="35006" relation="include">
        </childnode>
        <childnode refid="35007" relation="include">
        </childnode>
        <childnode refid="35008" relation="include">
        </childnode>
        <childnode refid="35012" relation="include">
        </childnode>
        <childnode refid="35023" relation="include">
        </childnode>
        <childnode refid="35018" relation="include">
        </childnode>
        <childnode refid="35019" relation="include">
        </childnode>
        <childnode refid="35022" relation="include">
        </childnode>
        <childnode refid="35024" relation="include">
        </childnode>
        <childnode refid="35020" relation="include">
        </childnode>
        <childnode refid="35021" relation="include">
        </childnode>
        <childnode refid="35025" relation="include">
        </childnode>
        <childnode refid="35016" relation="include">
        </childnode>
      </node>
      <node id="35054">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/reset_cell_visitor.hpp</label>
        <link refid="reset__cell__visitor_8hpp"/>
      </node>
      <node id="35048">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/forward_visitor.hpp</label>
        <link refid="forward__visitor_8hpp"/>
      </node>
      <node id="35040">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/linear3d.hpp</label>
        <link refid="linear3d_8hpp"/>
        <childnode refid="35004" relation="include">
        </childnode>
        <childnode refid="35014" relation="include">
        </childnode>
      </node>
      <node id="35016">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/rnn.hpp</label>
        <link refid="rnn_8hpp"/>
      </node>
      <node id="35009">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/categorical_dqn.hpp</label>
        <link refid="categorical__dqn_8hpp"/>
      </node>
      <node id="35031">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/adaptive_mean_pooling.hpp</label>
        <link refid="adaptive__mean__pooling_8hpp"/>
        <childnode refid="35004" relation="include">
        </childnode>
        <childnode refid="35014" relation="include">
        </childnode>
      </node>
      <node id="35044">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/vr_class_reward.hpp</label>
        <link refid="vr__class__reward_8hpp"/>
        <childnode refid="35014" relation="include">
        </childnode>
      </node>
      <node id="35046">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/add_visitor.hpp</label>
        <link refid="add__visitor_8hpp"/>
      </node>
      <node id="35049">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/gradient_visitor.hpp</label>
        <link refid="gradient__visitor_8hpp"/>
      </node>
      <node id="35005">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/delete_visitor.hpp</label>
        <link refid="delete__visitor_8hpp"/>
        <childnode refid="35006" relation="include">
        </childnode>
        <childnode refid="35007" relation="include">
        </childnode>
        <childnode refid="35012" relation="include">
        </childnode>
        <childnode refid="35023" relation="include">
        </childnode>
        <childnode refid="35018" relation="include">
        </childnode>
        <childnode refid="35022" relation="include">
        </childnode>
        <childnode refid="35024" relation="include">
        </childnode>
        <childnode refid="35021" relation="include">
        </childnode>
        <childnode refid="35025" relation="include">
        </childnode>
        <childnode refid="35016" relation="include">
        </childnode>
      </node>
      <node id="35025">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/weight_norm.hpp</label>
        <link refid="weight__norm_8hpp"/>
        <childnode refid="35014" relation="include">
        </childnode>
      </node>
      <node id="35042">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/reparametrization.hpp</label>
        <link refid="reparametrization_8hpp"/>
        <childnode refid="35004" relation="include">
        </childnode>
        <childnode refid="35014" relation="include">
        </childnode>
      </node>
      <node id="35037">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/util/check_input_shape.hpp</label>
        <link refid="check__input__shape_8hpp"/>
      </node>
      <node id="35043">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/transposed_convolution.hpp</label>
        <link refid="transposed__convolution_8hpp"/>
        <childnode refid="35014" relation="include">
        </childnode>
      </node>
      <node id="35004">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/layer_types.hpp</label>
        <link refid="layer__types_8hpp"/>
        <childnode refid="35005" relation="include">
        </childnode>
        <childnode refid="35026" relation="include">
        </childnode>
        <childnode refid="35027" relation="include">
        </childnode>
        <childnode refid="35028" relation="include">
        </childnode>
        <childnode refid="35029" relation="include">
        </childnode>
        <childnode refid="35006" relation="include">
        </childnode>
        <childnode refid="35007" relation="include">
        </childnode>
        <childnode refid="35030" relation="include">
        </childnode>
        <childnode refid="35031" relation="include">
        </childnode>
        <childnode refid="35012" relation="include">
        </childnode>
        <childnode refid="35032" relation="include">
        </childnode>
        <childnode refid="35023" relation="include">
        </childnode>
        <childnode refid="35033" relation="include">
        </childnode>
        <childnode refid="35034" relation="include">
        </childnode>
        <childnode refid="35013" relation="include">
        </childnode>
        <childnode refid="35035" relation="include">
        </childnode>
        <childnode refid="35036" relation="include">
        </childnode>
        <childnode refid="35018" relation="include">
        </childnode>
        <childnode refid="35038" relation="include">
        </childnode>
        <childnode refid="35019" relation="include">
        </childnode>
        <childnode refid="35022" relation="include">
        </childnode>
        <childnode refid="35014" relation="include">
        </childnode>
        <childnode refid="35039" relation="include">
        </childnode>
        <childnode refid="35040" relation="include">
        </childnode>
        <childnode refid="35041" relation="include">
        </childnode>
        <childnode refid="35024" relation="include">
        </childnode>
        <childnode refid="35020" relation="include">
        </childnode>
        <childnode refid="35021" relation="include">
        </childnode>
        <childnode refid="35042" relation="include">
        </childnode>
        <childnode refid="35043" relation="include">
        </childnode>
        <childnode refid="35044" relation="include">
        </childnode>
        <childnode refid="35025" relation="include">
        </childnode>
        <childnode refid="35045" relation="include">
        </childnode>
        <childnode refid="35015" relation="include">
        </childnode>
        <childnode refid="35016" relation="include">
        </childnode>
        <childnode refid="35046" relation="include">
        </childnode>
        <childnode refid="35047" relation="include">
        </childnode>
        <childnode refid="35048" relation="include">
        </childnode>
        <childnode refid="35049" relation="include">
        </childnode>
        <childnode refid="35050" relation="include">
        </childnode>
        <childnode refid="35051" relation="include">
        </childnode>
        <childnode refid="35052" relation="include">
        </childnode>
        <childnode refid="35054" relation="include">
        </childnode>
      </node>
      <node id="35029">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/init_rules/network_init.hpp</label>
        <link refid="network__init_8hpp"/>
        <childnode refid="35006" relation="include">
        </childnode>
        <childnode refid="35007" relation="include">
        </childnode>
        <childnode refid="35016" relation="include">
        </childnode>
      </node>
      <node id="35012">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/add_merge.hpp</label>
        <link refid="add__merge_8hpp"/>
        <childnode refid="35013" relation="include">
        </childnode>
        <childnode refid="35018" relation="include">
        </childnode>
        <childnode refid="35019" relation="include">
        </childnode>
        <childnode refid="35022" relation="include">
        </childnode>
        <childnode refid="35014" relation="include">
        </childnode>
        <childnode refid="35020" relation="include">
        </childnode>
        <childnode refid="35021" relation="include">
        </childnode>
      </node>
      <node id="35039">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/linear_no_bias.hpp</label>
        <link refid="linear__no__bias_8hpp"/>
        <childnode refid="35004" relation="include">
        </childnode>
        <childnode refid="35014" relation="include">
        </childnode>
      </node>
      <node id="35006">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/brnn.hpp</label>
        <link refid="brnn_8hpp"/>
      </node>
      <node id="35015">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer_names.hpp</label>
        <link refid="layer__names_8hpp"/>
      </node>
      <node id="35053">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/sac.hpp</label>
        <link refid="sac_8hpp"/>
      </node>
      <node id="35017">
        <label>/home/aakash/mlpack/src/mlpack/tests/custom_layer.hpp</label>
        <link refid="custom__layer_8hpp"/>
      </node>
      <node id="35036">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/input_shape_visitor.hpp</label>
        <link refid="input__shape__visitor_8hpp"/>
        <childnode refid="35018" relation="include">
        </childnode>
        <childnode refid="35021" relation="include">
        </childnode>
        <childnode refid="35037" relation="include">
        </childnode>
      </node>
      <node id="35020">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/recurrent_attention.hpp</label>
        <link refid="recurrent__attention_8hpp"/>
        <childnode refid="35014" relation="include">
        </childnode>
      </node>
      <node id="35035">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/linear.hpp</label>
        <link refid="linear_8hpp"/>
        <childnode refid="35013" relation="include">
        </childnode>
        <childnode refid="35014" relation="include">
        </childnode>
      </node>
      <node id="35023">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/concat.hpp</label>
        <link refid="concat_8hpp"/>
        <childnode refid="35014" relation="include">
        </childnode>
      </node>
      <node id="35041">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/minibatch_discrimination.hpp</label>
        <link refid="minibatch__discrimination_8hpp"/>
        <childnode refid="35014" relation="include">
        </childnode>
      </node>
      <node id="35007">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp</label>
        <link refid="ffn_8hpp"/>
        <childnode refid="35008" relation="include">
        </childnode>
        <childnode refid="35009" relation="include">
        </childnode>
        <childnode refid="35010" relation="include">
        </childnode>
        <childnode refid="35011" relation="include">
        </childnode>
      </node>
      <node id="35003">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/mean_pooling.hpp</label>
        <link refid="mean__pooling_8hpp"/>
        <childnode refid="35004" relation="include">
        </childnode>
        <childnode refid="35014" relation="include">
        </childnode>
      </node>
      <node id="35010">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp</label>
        <link refid="dueling__dqn_8hpp"/>
      </node>
      <node id="35033">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/concat_performance.hpp</label>
        <link refid="concat__performance_8hpp"/>
        <childnode refid="35014" relation="include">
        </childnode>
      </node>
      <node id="35013">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/dropconnect.hpp</label>
        <link refid="dropconnect_8hpp"/>
        <childnode refid="35014" relation="include">
        </childnode>
      </node>
      <node id="35027">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/copy_visitor.hpp</label>
        <link refid="copy__visitor_8hpp"/>
        <childnode refid="35006" relation="include">
        </childnode>
        <childnode refid="35007" relation="include">
        </childnode>
        <childnode refid="35018" relation="include">
        </childnode>
        <childnode refid="35021" relation="include">
        </childnode>
      </node>
      <node id="35026">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/delta_visitor.hpp</label>
        <link refid="delta__visitor_8hpp"/>
        <childnode refid="35006" relation="include">
        </childnode>
        <childnode refid="35007" relation="include">
        </childnode>
        <childnode refid="35012" relation="include">
        </childnode>
        <childnode refid="35023" relation="include">
        </childnode>
        <childnode refid="35018" relation="include">
        </childnode>
        <childnode refid="35019" relation="include">
        </childnode>
        <childnode refid="35022" relation="include">
        </childnode>
        <childnode refid="35024" relation="include">
        </childnode>
        <childnode refid="35020" relation="include">
        </childnode>
        <childnode refid="35021" relation="include">
        </childnode>
        <childnode refid="35025" relation="include">
        </childnode>
        <childnode refid="35016" relation="include">
        </childnode>
      </node>
      <node id="35008">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp</label>
        <link refid="gan_8hpp"/>
      </node>
      <node id="35032">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/atrous_convolution.hpp</label>
        <link refid="atrous__convolution_8hpp"/>
        <childnode refid="35014" relation="include">
        </childnode>
      </node>
      <node id="35047">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/backward_visitor.hpp</label>
        <link refid="backward__visitor_8hpp"/>
      </node>
      <node id="35011">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/simple_dqn.hpp</label>
        <link refid="simple__dqn_8hpp"/>
      </node>
      <node id="35051">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/parameters_set_visitor.hpp</label>
        <link refid="parameters__set__visitor_8hpp"/>
      </node>
      <node id="35030">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/adaptive_max_pooling.hpp</label>
        <link refid="adaptive__max__pooling_8hpp"/>
        <childnode refid="35004" relation="include">
        </childnode>
        <childnode refid="35014" relation="include">
        </childnode>
      </node>
      <node id="35022">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/highway.hpp</label>
        <link refid="highway_8hpp"/>
        <childnode refid="35014" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1ann_1_1MeanPooling" prot="public">mlpack::ann::MeanPooling</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1ann">mlpack::ann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Marcus Edel </para></simplesect>
<simplesect kind="author"><para>Nilay Jain</para></simplesect>
Definition of the MeanPooling layer class.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_ANN_LAYER_MEAN_POOLING_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_ANN_LAYER_MEAN_POOLING_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ann<sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputDataType<sp/>=<sp/>arma::mat,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutputDataType<sp/>=<sp/>arma::mat</highlight></codeline>
<codeline lineno="32"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="33" refid="classmlpack_1_1ann_1_1MeanPooling" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1ann_1_1MeanPooling" kindref="compound">MeanPooling</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a58f7a6dd7a5347319abbe02a9b7305a8" kindref="member">MeanPooling</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a58f7a6dd7a5347319abbe02a9b7305a8" kindref="member">MeanPooling</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>kernelWidth,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>kernelHeight,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>strideWidth<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>strideHeight<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>floor<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a461f849bc638c15bec262dc9c3a58abe" kindref="member">Forward</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>input,<sp/>arma::Mat&lt;eT&gt;&amp;<sp/>output);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1ad9ad1a3bdb0f3fff5c839ed155e4bbf8" kindref="member">Backward</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/></highlight><highlight class="comment">/*<sp/>input<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>gy,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>g);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="classmlpack_1_1ann_1_1MeanPooling_1a0ee21c2a36e5abad1e7a9d5dd00849f9" refkind="member"><highlight class="normal"><sp/><sp/>OutputDataType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a0ee21c2a36e5abad1e7a9d5dd00849f9" kindref="member">OutputParameter</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputParameter;<sp/>}</highlight></codeline>
<codeline lineno="81" refid="classmlpack_1_1ann_1_1MeanPooling_1a21d5f745f02c709625a4ee0907f004a5" refkind="member"><highlight class="normal"><sp/><sp/>OutputDataType&amp;<sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a21d5f745f02c709625a4ee0907f004a5" kindref="member">OutputParameter</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputParameter;<sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classmlpack_1_1ann_1_1MeanPooling_1a797f7edb44dd081e5e2b3cc316eef6bd" refkind="member"><highlight class="normal"><sp/><sp/>OutputDataType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a797f7edb44dd081e5e2b3cc316eef6bd" kindref="member">Delta</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>delta;<sp/>}</highlight></codeline>
<codeline lineno="86" refid="classmlpack_1_1ann_1_1MeanPooling_1ad6601342d560219ce951d554e69e5e87" refkind="member"><highlight class="normal"><sp/><sp/>OutputDataType&amp;<sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1ad6601342d560219ce951d554e69e5e87" kindref="member">Delta</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>delta;<sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="classmlpack_1_1ann_1_1MeanPooling_1a29346e3064da8f9e5f10596bedae0ba8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a29346e3064da8f9e5f10596bedae0ba8" kindref="member">InputWidth</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inputWidth;<sp/>}</highlight></codeline>
<codeline lineno="91" refid="classmlpack_1_1ann_1_1MeanPooling_1a238e9d308df611a9300a4ca6756fef4d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a238e9d308df611a9300a4ca6756fef4d" kindref="member">InputWidth</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inputWidth;<sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="classmlpack_1_1ann_1_1MeanPooling_1afb3fd4ed60dd057e7852221b89206f15" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1afb3fd4ed60dd057e7852221b89206f15" kindref="member">InputHeight</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inputHeight;<sp/>}</highlight></codeline>
<codeline lineno="96" refid="classmlpack_1_1ann_1_1MeanPooling_1aefbba724eec397a928d5460bb209a360" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1aefbba724eec397a928d5460bb209a360" kindref="member">InputHeight</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inputHeight;<sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classmlpack_1_1ann_1_1MeanPooling_1a32b3e3fe787456847fc3b2c39586ecb1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a32b3e3fe787456847fc3b2c39586ecb1" kindref="member">OutputWidth</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputWidth;<sp/>}</highlight></codeline>
<codeline lineno="101" refid="classmlpack_1_1ann_1_1MeanPooling_1a54579ec9924e2a4a5bc0a4fb822ce80c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a54579ec9924e2a4a5bc0a4fb822ce80c" kindref="member">OutputWidth</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputWidth;<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classmlpack_1_1ann_1_1MeanPooling_1a5ad7dbcaf1a622dafd897f79ab77890c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a5ad7dbcaf1a622dafd897f79ab77890c" kindref="member">OutputHeight</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputHeight;<sp/>}</highlight></codeline>
<codeline lineno="106" refid="classmlpack_1_1ann_1_1MeanPooling_1ac5112abf9f5e1face13ed965a8755b1d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1ac5112abf9f5e1face13ed965a8755b1d" kindref="member">OutputHeight</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outputHeight;<sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classmlpack_1_1ann_1_1MeanPooling_1a5a4c4984aa897a28d516e638e7ea5308" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a5a4c4984aa897a28d516e638e7ea5308" kindref="member">InputSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inSize;<sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classmlpack_1_1ann_1_1MeanPooling_1a99c1d948c984b9e76fb5e37e2145427a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a99c1d948c984b9e76fb5e37e2145427a" kindref="member">OutputSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outSize;<sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="classmlpack_1_1ann_1_1MeanPooling_1a656302bc9b300692aa71abe2a614c7b1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a656302bc9b300692aa71abe2a614c7b1" kindref="member">KernelWidth</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kernelWidth;<sp/>}</highlight></codeline>
<codeline lineno="117" refid="classmlpack_1_1ann_1_1MeanPooling_1a5fbae452ceda395f5566833e06ba3615" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a5fbae452ceda395f5566833e06ba3615" kindref="member">KernelWidth</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kernelWidth;<sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classmlpack_1_1ann_1_1MeanPooling_1a6c15e2e3416651fac44621acbbdac9e9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a6c15e2e3416651fac44621acbbdac9e9" kindref="member">KernelHeight</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kernelHeight;<sp/>}</highlight></codeline>
<codeline lineno="122" refid="classmlpack_1_1ann_1_1MeanPooling_1a46b2c28d89959067f549f9f45d2626c5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a46b2c28d89959067f549f9f45d2626c5" kindref="member">KernelHeight</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kernelHeight;<sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="classmlpack_1_1ann_1_1MeanPooling_1ad8fd9eb6de956c3e9d82242793fd2db1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1ad8fd9eb6de956c3e9d82242793fd2db1" kindref="member">StrideWidth</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strideWidth;<sp/>}</highlight></codeline>
<codeline lineno="127" refid="classmlpack_1_1ann_1_1MeanPooling_1af40557db9372b513440e06a5e42cc599" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1af40557db9372b513440e06a5e42cc599" kindref="member">StrideWidth</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strideWidth;<sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classmlpack_1_1ann_1_1MeanPooling_1a1894b819a7ff82a5576fc8deb8ba7457" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a1894b819a7ff82a5576fc8deb8ba7457" kindref="member">StrideHeight</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strideHeight;<sp/>}</highlight></codeline>
<codeline lineno="132" refid="classmlpack_1_1ann_1_1MeanPooling_1a0dd3de9c8a9060e927c575b57a021e8b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a0dd3de9c8a9060e927c575b57a021e8b" kindref="member">StrideHeight</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strideHeight;<sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classmlpack_1_1ann_1_1MeanPooling_1a787a10955ce98f589e7cc08f1c1beb75" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a787a10955ce98f589e7cc08f1c1beb75" kindref="member">Floor</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>floor;<sp/>}</highlight></codeline>
<codeline lineno="137" refid="classmlpack_1_1ann_1_1MeanPooling_1a8859ce7b4be2b8ffbf36bbc8ff16aecd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a8859ce7b4be2b8ffbf36bbc8ff16aecd" kindref="member">Floor</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>floor;<sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classmlpack_1_1ann_1_1MeanPooling_1a9f4103707f4d199ce5594d239b60443e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a9f4103707f4d199ce5594d239b60443e" kindref="member">Deterministic</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>deterministic;<sp/>}</highlight></codeline>
<codeline lineno="142" refid="classmlpack_1_1ann_1_1MeanPooling_1a42d4ee3da432cff20d3a41b8b1ec801c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a42d4ee3da432cff20d3a41b8b1ec801c" kindref="member">Deterministic</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>deterministic;<sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classmlpack_1_1ann_1_1MeanPooling_1a7a2704698a50d9e00dfb083f3a863579" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a7a2704698a50d9e00dfb083f3a863579" kindref="member">WeightSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1MeanPooling_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Pooling(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>input,<sp/>arma::Mat&lt;eT&gt;&amp;<sp/>output)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;<sp/>inputPre<sp/>=<sp/>input;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>input.n_cols;<sp/>++i)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inputPre.col(i)<sp/>+=<sp/>inputPre.col(i<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>input.n_rows;<sp/>++i)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inputPre.row(i)<sp/>+=<sp/>inputPre.row(i<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0,<sp/>colidx<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>output.n_cols;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++j,<sp/>colidx<sp/>+=<sp/>strideHeight)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>rowidx<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>output.n_rows;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i,<sp/>rowidx<sp/>+=<sp/>strideWidth)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rowEnd<sp/>=<sp/>rowidx<sp/>+<sp/>kernelWidth<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>colEnd<sp/>=<sp/>colidx<sp/>+<sp/>kernelHeight<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rowEnd<sp/>&gt;<sp/>input.n_rows<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rowEnd<sp/>=<sp/>input.n_rows<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(colEnd<sp/>&gt;<sp/>input.n_cols<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colEnd<sp/>=<sp/>input.n_cols<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>kernalArea<sp/>=<sp/>(rowEnd<sp/>-<sp/>rowidx<sp/>+<sp/>1)<sp/>*<sp/>(colEnd<sp/>-<sp/>colidx<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>+=<sp/>inputPre(rowEnd,<sp/>colEnd);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rowidx<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(colidx<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>+=<sp/>inputPre(rowidx<sp/>-<sp/>1,<sp/>colidx<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>-=<sp/>inputPre(rowidx<sp/>-<sp/>1,<sp/>colEnd);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(colidx<sp/>&gt;=<sp/>1)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>-=<sp/>inputPre(rowEnd,<sp/>colidx<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output(i,<sp/>j)<sp/>=<sp/>val<sp/>/<sp/>kernalArea;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Unpooling(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>error,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>output)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>condition<sp/>comes<sp/>by<sp/>comparing<sp/>the<sp/>number<sp/>of<sp/>operations<sp/>involved<sp/>in<sp/>the<sp/>brute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>method<sp/>and<sp/>the<sp/>prefix<sp/>method.<sp/>Let<sp/>the<sp/>area<sp/>of<sp/>error<sp/>be<sp/>errorArea<sp/>and<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>kernal<sp/>be<sp/>kernalArea.<sp/>Total<sp/>number<sp/>of<sp/>operations<sp/>in<sp/>brute<sp/>force<sp/>method<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>`errorArea<sp/>*<sp/>kernalArea`<sp/>and<sp/>for<sp/>each<sp/>element<sp/>in<sp/>error<sp/>we<sp/>are<sp/>doing<sp/>`kernalArea`</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>operations.<sp/>Whereas<sp/>in<sp/>the<sp/>prefix<sp/>method<sp/>the<sp/>total<sp/>number<sp/>of<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>`4<sp/>*<sp/>errorArea<sp/>+<sp/>2<sp/>*<sp/>inputArea`.<sp/>The<sp/>term<sp/>`2<sp/>*<sp/>inputArea`<sp/>comes<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prefix<sp/>sums<sp/>performed<sp/>(col-wise<sp/>and<sp/>row-wise).<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>this<sp/>to<sp/>determine<sp/>which<sp/>method<sp/>to<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>condition<sp/>=<sp/>(error.n_elem<sp/>*<sp/>kernelHeight<sp/>*<sp/>kernelWidth)<sp/>&gt;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(4<sp/>*<sp/>error.n_elem<sp/>+<sp/>2<sp/>*<sp/>input.n_elem);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(condition)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>condition<sp/>is<sp/>true<sp/>then<sp/>theoritically<sp/>the<sp/>prefix<sp/>sum<sp/>method<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unpooling<sp/>is<sp/>faster.<sp/>The<sp/>aim<sp/>of<sp/>unpooling<sp/>is<sp/>to<sp/>add</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>`error(i,<sp/>j)<sp/>/<sp/>kernalArea`<sp/>to<sp/>`inputArea(kernal)`.<sp/>This<sp/>requires</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>`inputArea.n_elem`<sp/>additions.<sp/>So,<sp/>total<sp/>operations<sp/>required<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>`error.n_elem<sp/>*<sp/>inputArea.n_elem`<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>improve<sp/>this<sp/>method<sp/>we<sp/>will<sp/>use<sp/>an<sp/>idea<sp/>of<sp/>prefix<sp/>sums.<sp/>Let&apos;s<sp/>see</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>method<sp/>in<sp/>1-D<sp/>matrix<sp/>then<sp/>we<sp/>will<sp/>extend<sp/>it<sp/>to<sp/>2-D<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let<sp/>the<sp/>input<sp/>be<sp/>a<sp/>1-D<sp/>matrix<sp/>input<sp/>=<sp/>`[0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0]`<sp/>of<sp/>size<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>we<sp/>want<sp/>to<sp/>add<sp/>`10`<sp/>to<sp/>idx<sp/>=<sp/>1<sp/>to<sp/>idx<sp/>=<sp/>5.<sp/>In<sp/>brute<sp/>force<sp/>method<sp/>we<sp/>can<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>loop<sp/>from<sp/>idx<sp/>=<sp/>1<sp/>to<sp/>idx<sp/>=<sp/>5<sp/>and<sp/>add<sp/>`10`<sp/>to<sp/>each<sp/>element.<sp/>In<sp/>prefix<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>add<sp/>`+10`<sp/>to<sp/>idx<sp/>=<sp/>1<sp/>and<sp/>`-10`<sp/>to<sp/>idx<sp/>=<sp/>(5<sp/>+<sp/>1).<sp/>Now<sp/>the<sp/>input<sp/>will<sp/>look</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>like<sp/>`[0,<sp/>+10,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>-10,<sp/>0,<sp/>0,<sp/>0]`.<sp/>After<sp/>that<sp/>we<sp/>can<sp/>just<sp/>do<sp/>prefix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sum<sp/>`input[i]<sp/>+=<sp/>input[i<sp/>-<sp/>1]`.<sp/>Then<sp/>the<sp/>input<sp/>becomes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>`[0,<sp/>+10,<sp/>+10,<sp/>+10,<sp/>+10,<sp/>+10,<sp/>0,<sp/>0,<sp/>0,<sp/>0]`.<sp/>So<sp/>the<sp/>total<sp/>computation<sp/>require</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>this<sp/>method<sp/>is<sp/>(2<sp/>additions<sp/>+<sp/>Prefix<sp/>operations).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>if<sp/>there<sp/>are<sp/>`k`<sp/>such<sp/>operation<sp/>of<sp/>adding<sp/>a<sp/>number<sp/>of<sp/>some</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>continuous<sp/>subarray.<sp/>Then<sp/>the<sp/>brute<sp/>force<sp/>method<sp/>will<sp/>require</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>`k<sp/>*<sp/>size(subarray)`<sp/>operations.<sp/>But<sp/>the<sp/>prefix<sp/>method<sp/>will<sp/>require</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>`2<sp/>*<sp/>k<sp/>+<sp/>Prefix`<sp/>operations,<sp/>because<sp/>the<sp/>Prefix<sp/>can<sp/>be<sp/>performed<sp/>once<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>for<sp/>2-D<sp/>matrix.<sp/>Lets<sp/>say<sp/>we<sp/>want<sp/>to<sp/>add<sp/>`e`<sp/>to<sp/>all<sp/>elements<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>input(x1<sp/>:<sp/>x2,<sp/>y1<sp/>:<sp/>y2).<sp/>So<sp/>the<sp/>inputArea<sp/>=<sp/>(x2<sp/>-<sp/>x1<sp/>+<sp/>1)<sp/>*<sp/>(y2<sp/>-<sp/>y1<sp/>+<sp/>1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>prefix<sp/>method<sp/>the<sp/>following<sp/>operations<sp/>will<sp/>be<sp/>performed:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>1.<sp/>Add<sp/>`+e`<sp/>to<sp/>input(x1,<sp/>y1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>2.<sp/>Add<sp/>`-e`<sp/>to<sp/>input(x1<sp/>+<sp/>1,<sp/>y1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>3.<sp/>Add<sp/>`-e`<sp/>to<sp/>input(x1,<sp/>y1<sp/>+<sp/>1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>4.<sp/>Add<sp/>`+e`<sp/>to<sp/>input(x1<sp/>+<sp/>1,<sp/>y1<sp/>+<sp/>1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>5.<sp/>Perform<sp/>Prefix<sp/>sum<sp/>over<sp/>columns<sp/>i.e<sp/>input(i,<sp/>j)<sp/>+=<sp/>input(i,<sp/>j<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>6.<sp/>Perform<sp/>Prefix<sp/>sum<sp/>over<sp/>rows<sp/>i.e<sp/>input(i,<sp/>j)<sp/>+=<sp/>input(i<sp/>-<sp/>1,<sp/>j)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>lets<sp/>say<sp/>if<sp/>we<sp/>had<sp/>`k`<sp/>number<sp/>of<sp/>such<sp/>operations.<sp/>The<sp/>brute<sp/>force</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>method<sp/>will<sp/>require<sp/>`kernalArea<sp/>*<sp/>k`<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>prefix<sp/>method<sp/>will<sp/>require<sp/>`4<sp/>*<sp/>k<sp/>+<sp/>Prefix<sp/>operation`.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0,<sp/>colidx<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>input.n_cols;<sp/>j<sp/>+=<sp/>strideHeight,<sp/>++colidx)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>rowidx<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>input.n_rows;<sp/>i<sp/>+=<sp/>strideWidth,<sp/>++rowidx)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>to<sp/>add<sp/>error(i,<sp/>j)<sp/>to<sp/>output(span(rowidx,<sp/>rowEnd),<sp/>span(colidx,<sp/>colEnd)).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>steps<sp/>of<sp/>prefix<sp/>sum<sp/>method:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/>For<sp/>each<sp/>(i,<sp/>j)<sp/>perform:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>1.1<sp/>Add<sp/>+error(i,<sp/>j)<sp/>to<sp/>output(rowidx,<sp/>colidx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>1.2<sp/>Add<sp/>-error(i,<sp/>j)<sp/>to<sp/>output(rowidx,<sp/>colidx<sp/>+<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>1.3<sp/>Add<sp/>-error(i,<sp/>j)<sp/>to<sp/>output(rowidx<sp/>+<sp/>1,<sp/>colidx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>1.4<sp/>Add<sp/>+error(i,<sp/>j)<sp/>to<sp/>output(rowidx<sp/>+<sp/>1,<sp/>colidx<sp/>+<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>Do<sp/>prefix<sp/>sum<sp/>column<sp/>wise<sp/>i.e<sp/>output(i,<sp/>j)<sp/>+=<sp/>output(i,<sp/>j<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>Do<sp/>prefix<sp/>sum<sp/>row<sp/>wise<sp/>i.e<sp/>output(i,<sp/>j)<sp/>+=<sp/>output(i<sp/>-<sp/>1,<sp/>j)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rowEnd<sp/>=<sp/>i<sp/>+<sp/>kernelWidth<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>colEnd<sp/>=<sp/>j<sp/>+<sp/>kernelHeight<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rowEnd<sp/>&gt;<sp/>input.n_rows<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(floor)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rowEnd<sp/>=<sp/>input.n_rows<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(colEnd<sp/>&gt;<sp/>input.n_cols<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(floor)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colEnd<sp/>=<sp/>input.n_cols<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>kernalArea<sp/>=<sp/>(rowEnd<sp/>-<sp/>i<sp/>+<sp/>1)<sp/>*<sp/>(colEnd<sp/>-<sp/>j<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output(i,<sp/>j)<sp/>+=<sp/>error(rowidx,<sp/>colidx)<sp/>/<sp/>kernalArea;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rowEnd<sp/>+<sp/>1<sp/>&lt;<sp/>input.n_rows)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output(rowEnd<sp/>+<sp/>1,<sp/>j)<sp/>-=<sp/>error(rowidx,<sp/>colidx)<sp/>/<sp/>kernalArea;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(colEnd<sp/>+<sp/>1<sp/>&lt;<sp/>input.n_cols)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output(rowEnd<sp/>+<sp/>1,<sp/>colEnd<sp/>+<sp/>1)<sp/>+=<sp/>error(rowidx,<sp/>colidx)<sp/>/<sp/>kernalArea;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(colEnd<sp/>+<sp/>1<sp/>&lt;<sp/>input.n_cols)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output(i,<sp/>colEnd<sp/>+<sp/>1)<sp/>-=<sp/>error(rowidx,<sp/>colidx)<sp/>/<sp/>kernalArea;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>input.n_rows;<sp/>++i)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.row(i)<sp/>+=<sp/>output.row(i<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>input.n_cols;<sp/>++j)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.col(j)<sp/>+=<sp/>output.col(j<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;<sp/>unpooledError;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0,<sp/>colidx<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>input.n_cols;<sp/>j<sp/>+=<sp/>strideHeight,<sp/>++colidx)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>rowidx<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>input.n_rows;<sp/>i<sp/>+=<sp/>strideWidth,<sp/>++rowidx)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rowEnd<sp/>=<sp/>i<sp/>+<sp/>kernelWidth<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>colEnd<sp/>=<sp/>j<sp/>+<sp/>kernelHeight<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rowEnd<sp/>&gt;<sp/>input.n_rows<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(floor)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rowEnd<sp/>=<sp/>input.n_rows<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(colEnd<sp/>&gt;<sp/>input.n_cols<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(floor)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colEnd<sp/>=<sp/>input.n_cols<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat<sp/>InputArea<sp/>=<sp/>input(arma::span(i,<sp/>rowEnd),<sp/>arma::span(j,<sp/>colEnd));</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unpooledError<sp/>=<sp/>arma::Mat&lt;eT&gt;(InputArea.n_rows,<sp/>InputArea.n_cols);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unpooledError.fill(error(rowidx,<sp/>colidx)<sp/>/<sp/>InputArea.n_elem);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output(arma::span(i,<sp/>i<sp/>+<sp/>InputArea.n_rows<sp/>-<sp/>1),</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::span(j,<sp/>j<sp/>+<sp/>InputArea.n_cols<sp/>-<sp/>1))<sp/>+=<sp/>unpooledError;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>kernelWidth;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>kernelHeight;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>strideWidth;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>strideHeight;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>floor;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>inSize;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>outSize;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>inputWidth;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>inputHeight;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>outputWidth;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>outputHeight;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reset;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deterministic;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>batchSize;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>arma::cube<sp/>outputTemp;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>arma::cube<sp/>inputTemp;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>arma::cube<sp/>gTemp;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>OutputDataType<sp/>delta;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>OutputDataType<sp/>gradient;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>OutputDataType<sp/>outputParameter;</highlight></codeline>
<codeline lineno="409"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>class<sp/>MeanPooling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mean_pooling_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/mean_pooling.hpp"/>
  </compounddef>
</doxygen>
