<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1ann_1_1MeanAbsolutePercentageError" kind="class" language="C++" prot="public">
    <compoundname>mlpack::ann::MeanAbsolutePercentageError</compoundname>
    <includes refid="mean__absolute__percentage__error_8hpp" local="no">mean_absolute_percentage_error.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename InputDataType</type>
        <defval>arma::mat</defval>
      </param>
      <param>
        <type>typename OutputDataType</type>
        <defval>arma::mat</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1a77fc4c7d9e92ac78bf2c4239477f54bc" prot="private" static="no" mutable="no">
        <type>OutputDataType</type>
        <definition>OutputDataType outputParameter</definition>
        <argsstring></argsstring>
        <name>outputParameter</name>
        <briefdescription>
<para>Locally-stored output parameter object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/mean_absolute_percentage_error.hpp" line="94" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/mean_absolute_percentage_error.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1a22e2e0323ca71c49651ac02646ff0392" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MeanAbsolutePercentageError</definition>
        <argsstring>()</argsstring>
        <name>MeanAbsolutePercentageError</name>
        <briefdescription>
<para>Create the <ref refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError" kindref="compound">MeanAbsolutePercentageError</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/mean_absolute_percentage_error.hpp" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1add41dbaf358dc099750dc6064cb7e0d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PredictionType</type>
          </param>
          <param>
            <type>typename TargetType</type>
          </param>
          <param>
            <type>typename LossType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Backward</definition>
        <argsstring>(const PredictionType &amp;prediction, const TargetType &amp;target, LossType &amp;loss)</argsstring>
        <name>Backward</name>
        <param>
          <type>const PredictionType &amp;</type>
          <declname>prediction</declname>
        </param>
        <param>
          <type>const TargetType &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>LossType &amp;</type>
          <declname>loss</declname>
        </param>
        <briefdescription>
<para>Ordinary feed backward pass of a neural network. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prediction</parametername>
</parameternamelist>
<parameterdescription>
<para>Predictions used for evaluating the specified loss function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The target vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loss</parametername>
</parameternamelist>
<parameterdescription>
<para>The calculated error. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/mean_absolute_percentage_error.hpp" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1ab3640059898ea76c13709b8099316fe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PredictionType</type>
          </param>
          <param>
            <type>typename TargetType</type>
          </param>
        </templateparamlist>
        <type>PredictionType::elem_type</type>
        <definition>PredictionType::elem_type Forward</definition>
        <argsstring>(const PredictionType &amp;prediction, const TargetType &amp;target)</argsstring>
        <name>Forward</name>
        <param>
          <type>const PredictionType &amp;</type>
          <declname>prediction</declname>
        </param>
        <param>
          <type>const TargetType &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>Computes the mean absolute percentage error function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prediction</parametername>
</parameternamelist>
<parameterdescription>
<para>Predictions used for evaluating the specified loss function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The target vector. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/mean_absolute_percentage_error.hpp" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1a8bae962cc603d1cab8d80ec78f8d505d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>OutputDataType &amp;</type>
        <definition>OutputDataType&amp; OutputParameter</definition>
        <argsstring>() const</argsstring>
        <name>OutputParameter</name>
        <briefdescription>
<para>Get the output parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/mean_absolute_percentage_error.hpp" line="82" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/mean_absolute_percentage_error.hpp" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1a21d5f745f02c709625a4ee0907f004a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>OutputDataType &amp;</type>
        <definition>OutputDataType&amp; OutputParameter</definition>
        <argsstring>()</argsstring>
        <name>OutputParameter</name>
        <briefdescription>
<para>Modify the output parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/mean_absolute_percentage_error.hpp" line="84" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/mean_absolute_percentage_error.hpp" bodystart="84" bodyend="84"/>
        <references refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1af0dd9205158ccf7bcfcd8ff81f79c927">MeanAbsolutePercentageError&lt; InputDataType, OutputDataType &gt;::serialize</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1af0dd9205158ccf7bcfcd8ff81f79c927" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const unsigned int)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const unsigned</type>
          <declname>int</declname>
        </param>
        <briefdescription>
<para>Serialize the layer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/mean_absolute_percentage_error.hpp" line="90" column="1"/>
        <referencedby refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1a21d5f745f02c709625a4ee0907f004a5" compoundref="mean__absolute__percentage__error_8hpp" startline="84" endline="84">MeanAbsolutePercentageError&lt; InputDataType, OutputDataType &gt;::OutputParameter</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The mean absolute percentage error performance function measures the network&apos;s performance according to the mean of the absolute difference between input and target divided by target. </para>    </briefdescription>
    <detaileddescription>
<para>For more information, refer to the following paper,</para><para><programlisting><codeline><highlight class="normal">@article{de_Myttenaere_2016,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>author<sp/><sp/><sp/><sp/>=<sp/>{de<sp/>Myttenaere,<sp/>Arnaud<sp/>and<sp/>Golden,<sp/>Boris<sp/>and<sp/>Le<sp/>Grand,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bénédicte<sp/>and<sp/>Rossi,<sp/>Fabrice},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>title<sp/><sp/><sp/><sp/><sp/>=<sp/>{Mean<sp/>Absolute<sp/>Percentage<sp/>Error<sp/>for<sp/>regression<sp/>models},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>journal<sp/><sp/><sp/>=<sp/>{Neurocomputing},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>volume<sp/><sp/><sp/><sp/>=<sp/>{abs/1605.02541},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>year<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{2016},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>url<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{https://arxiv.org/abs/1605.02541},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>eprint<sp/><sp/><sp/><sp/>=<sp/>{1605.02541},</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>InputDataType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the input data (arma::colvec, arma::mat, arma::sp_mat or arma::cube). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>OutputDataType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the output data (arma::colvec, arma::mat, arma::sp_mat or arma::cube). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/mean_absolute_percentage_error.hpp" line="50" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/mean_absolute_percentage_error.hpp" bodystart="49" bodyend="95"/>
    <listofallmembers>
      <member refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1add41dbaf358dc099750dc6064cb7e0d7" prot="public" virt="non-virtual"><scope>mlpack::ann::MeanAbsolutePercentageError</scope><name>Backward</name></member>
      <member refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1ab3640059898ea76c13709b8099316fe8" prot="public" virt="non-virtual"><scope>mlpack::ann::MeanAbsolutePercentageError</scope><name>Forward</name></member>
      <member refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1a22e2e0323ca71c49651ac02646ff0392" prot="public" virt="non-virtual"><scope>mlpack::ann::MeanAbsolutePercentageError</scope><name>MeanAbsolutePercentageError</name></member>
      <member refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1a77fc4c7d9e92ac78bf2c4239477f54bc" prot="private" virt="non-virtual"><scope>mlpack::ann::MeanAbsolutePercentageError</scope><name>outputParameter</name></member>
      <member refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1a8bae962cc603d1cab8d80ec78f8d505d" prot="public" virt="non-virtual"><scope>mlpack::ann::MeanAbsolutePercentageError</scope><name>OutputParameter</name></member>
      <member refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1a21d5f745f02c709625a4ee0907f004a5" prot="public" virt="non-virtual"><scope>mlpack::ann::MeanAbsolutePercentageError</scope><name>OutputParameter</name></member>
      <member refid="classmlpack_1_1ann_1_1MeanAbsolutePercentageError_1af0dd9205158ccf7bcfcd8ff81f79c927" prot="public" virt="non-virtual"><scope>mlpack::ann::MeanAbsolutePercentageError</scope><name>serialize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
