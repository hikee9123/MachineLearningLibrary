<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1neighbor_1_1RAUtil" kind="class" language="C++" prot="public">
    <compoundname>mlpack::neighbor::RAUtil</compoundname>
    <includes refid="ra__util_8hpp" local="no">ra_util.hpp</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAUtil_1a34c5d076bf5742259b0aa836a4b90b3f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t MinimumSamplesReqd</definition>
        <argsstring>(const size_t n, const size_t k, const double tau, const double alpha)</argsstring>
        <name>MinimumSamplesReqd</name>
        <param>
          <type>const size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>tau</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>Compute the minimum number of samples required to guarantee the given rank-approximation and success probability. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the set to be sampled from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of neighbors required within the rank-approximation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tau</parametername>
</parameternamelist>
<parameterdescription>
<para>The rank-approximation in percentile of the data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The success probability desired. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_util.hpp" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAUtil_1ad5fc80f20a067e172fc74a93d26f5b54" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ObtainDistinctSamples</definition>
        <argsstring>(const size_t numSamples, const size_t rangeUpperBound, arma::uvec &amp;distinctSamples)</argsstring>
        <name>ObtainDistinctSamples</name>
        <param>
          <type>const size_t</type>
          <declname>numSamples</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>rangeUpperBound</declname>
        </param>
        <param>
          <type>arma::uvec &amp;</type>
          <declname>distinctSamples</declname>
        </param>
        <briefdescription>
<para>Pick up desired number of samples (with replacement) from a given range of integers so that only the distinct samples are returned from the range [0 - specified upper bound) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numSamples</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of random samples. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rangeUpperBound</parametername>
</parameternamelist>
<parameterdescription>
<para>The upper bound on the range of integers. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>distinctSamples</parametername>
</parameternamelist>
<parameterdescription>
<para>The list of the distinct samples. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_util.hpp" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1RAUtil_1a16ac37a048359f866b494b3973275098" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double SuccessProbability</definition>
        <argsstring>(const size_t n, const size_t k, const size_t m, const size_t t)</argsstring>
        <name>SuccessProbability</name>
        <param>
          <type>const size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Compute the success probability of obtaining &apos;k&apos;-neighbors from a set of size &apos;n&apos; within the top &apos;t&apos; neighbors if &apos;m&apos; samples are made. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the set being sampled from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of neighbors required within the rank-approximation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of random samples. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired rank-approximation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_util.hpp" line="47" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/rann/ra_util.hpp" line="22" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/rann/ra_util.hpp" bodystart="21" bodyend="64"/>
    <listofallmembers>
      <member refid="classmlpack_1_1neighbor_1_1RAUtil_1a34c5d076bf5742259b0aa836a4b90b3f" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAUtil</scope><name>MinimumSamplesReqd</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAUtil_1ad5fc80f20a067e172fc74a93d26f5b54" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAUtil</scope><name>ObtainDistinctSamples</name></member>
      <member refid="classmlpack_1_1neighbor_1_1RAUtil_1a16ac37a048359f866b494b3973275098" prot="public" virt="non-virtual"><scope>mlpack::neighbor::RAUtil</scope><name>SuccessProbability</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
