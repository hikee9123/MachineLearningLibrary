<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="gmm_8hpp" kind="file" language="C++">
    <compoundname>gmm.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="em__fit_8hpp" local="yes">em_fit.hpp</includes>
    <includes local="yes">gmm_impl.hpp</includes>
    <includedby refid="hmm__model_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/hmm/hmm_model.hpp</includedby>
    <incdepgraph>
      <node id="48603">
        <label>list</label>
      </node>
      <node id="48663">
        <label>breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="48655">
        <label>binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48652" relation="include">
        </childnode>
        <childnode refid="48656" relation="include">
        </childnode>
      </node>
      <node id="48665">
        <label>binary_space_tree/traits.hpp</label>
        <link refid="binary__space__tree_2traits_8hpp"/>
        <childnode refid="48666" relation="include">
        </childnode>
        <childnode refid="48630" relation="include">
        </childnode>
      </node>
      <node id="48600">
        <label>atomic</label>
      </node>
      <node id="48590">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="48566">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="48602">
        <label>iomanip</label>
      </node>
      <node id="48662">
        <label>queue</label>
      </node>
      <node id="48627">
        <label>bound_traits.hpp</label>
        <link refid="bound__traits_8hpp"/>
      </node>
      <node id="48640">
        <label>binary_space_tree/mean_split.hpp</label>
        <link refid="mean__split_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48638" relation="include">
        </childnode>
        <childnode refid="48641" relation="include">
        </childnode>
      </node>
      <node id="48615">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="48575">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="48576" relation="include">
        </childnode>
        <childnode refid="48578" relation="include">
        </childnode>
      </node>
      <node id="48558">
        <label>cstdint</label>
      </node>
      <node id="48567">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="48574">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="48664">
        <label>binary_space_tree/breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="48670">
        <label>em_fit_impl.hpp</label>
      </node>
      <node id="48618">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="48641">
        <label>mean_split_impl.hpp</label>
      </node>
      <node id="48597">
        <label>arma_config.hpp</label>
      </node>
      <node id="48632">
        <label>hollow_ball_bound.hpp</label>
        <link refid="hollow__ball__bound_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48614" relation="include">
        </childnode>
        <childnode refid="48627" relation="include">
        </childnode>
        <childnode refid="48633" relation="include">
        </childnode>
      </node>
      <node id="48653">
        <label>../statistic.hpp</label>
        <link refid="statistic_8hpp"/>
      </node>
      <node id="48671">
        <label>gmm_impl.hpp</label>
      </node>
      <node id="48648">
        <label>lin_alg_impl.hpp</label>
      </node>
      <node id="48587">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="48554">
        <label>cmath</label>
      </node>
      <node id="48625">
        <label>bounds.hpp</label>
        <link refid="bounds_8hpp"/>
        <childnode refid="48626" relation="include">
        </childnode>
        <childnode refid="48614" relation="include">
        </childnode>
        <childnode refid="48627" relation="include">
        </childnode>
        <childnode refid="48628" relation="include">
        </childnode>
        <childnode refid="48630" relation="include">
        </childnode>
        <childnode refid="48632" relation="include">
        </childnode>
        <childnode refid="48634" relation="include">
        </childnode>
      </node>
      <node id="48573">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="48562">
        <label>stdexcept</label>
      </node>
      <node id="48658">
        <label>binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48652" relation="include">
        </childnode>
        <childnode refid="48659" relation="include">
        </childnode>
      </node>
      <node id="48582">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="48567" relation="include">
        </childnode>
        <childnode refid="48569" relation="include">
        </childnode>
        <childnode refid="48570" relation="include">
        </childnode>
        <childnode refid="48568" relation="include">
        </childnode>
      </node>
      <node id="48623">
        <label>naive_kmeans_impl.hpp</label>
      </node>
      <node id="48626">
        <label>mlpack/core/math/range.hpp</label>
      </node>
      <node id="48606">
        <label>string</label>
      </node>
      <node id="48644">
        <label>binary_space_tree/rp_tree_max_split.hpp</label>
        <link refid="rp__tree__max__split_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48638" relation="include">
        </childnode>
        <childnode refid="48645" relation="include">
        </childnode>
      </node>
      <node id="48639">
        <label>midpoint_split_impl.hpp</label>
      </node>
      <node id="48594">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="48595" relation="include">
        </childnode>
        <childnode refid="48561" relation="include">
        </childnode>
      </node>
      <node id="48604">
        <label>map</label>
      </node>
      <node id="48659">
        <label>dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="48647">
        <label>mlpack/core/math/lin_alg.hpp</label>
        <link refid="lin__alg_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48648" relation="include">
        </childnode>
      </node>
      <node id="48621">
        <label>max_variance_new_cluster_impl.hpp</label>
      </node>
      <node id="48556">
        <label>cfloat</label>
      </node>
      <node id="48586">
        <label>boost/variant.hpp</label>
      </node>
      <node id="48552">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/gmm.hpp</label>
        <link refid="gmm_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48610" relation="include">
        </childnode>
        <childnode refid="48671" relation="include">
        </childnode>
      </node>
      <node id="48608">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="48570">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="48593">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="48594" relation="include">
        </childnode>
        <childnode refid="48570" relation="include">
        </childnode>
        <childnode refid="48577" relation="include">
        </childnode>
        <childnode refid="48595" relation="include">
        </childnode>
      </node>
      <node id="48583">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="48612">
        <label>mlpack/core/dists/diagonal_gaussian_distribution.hpp</label>
        <link refid="diagonal__gaussian__distribution_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
      </node>
      <node id="48669">
        <label>positive_definite_constraint.hpp</label>
        <link refid="positive__definite__constraint_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
      </node>
      <node id="48581">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="48567" relation="include">
        </childnode>
        <childnode refid="48569" relation="include">
        </childnode>
        <childnode refid="48570" relation="include">
        </childnode>
        <childnode refid="48568" relation="include">
        </childnode>
      </node>
      <node id="48584">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="48567" relation="include">
        </childnode>
        <childnode refid="48569" relation="include">
        </childnode>
        <childnode refid="48570" relation="include">
        </childnode>
        <childnode refid="48568" relation="include">
        </childnode>
      </node>
      <node id="48654">
        <label>binary_space_tree_impl.hpp</label>
      </node>
      <node id="48572">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="48592">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="48568" relation="include">
        </childnode>
        <childnode refid="48569" relation="include">
        </childnode>
        <childnode refid="48570" relation="include">
        </childnode>
        <childnode refid="48580" relation="include">
        </childnode>
        <childnode refid="48589" relation="include">
        </childnode>
      </node>
      <node id="48596">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="48597" relation="include">
        </childnode>
      </node>
      <node id="48660">
        <label>binary_space_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="48598">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="48553">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="48554" relation="include">
        </childnode>
        <childnode refid="48555" relation="include">
        </childnode>
        <childnode refid="48556" relation="include">
        </childnode>
        <childnode refid="48557" relation="include">
        </childnode>
        <childnode refid="48558" relation="include">
        </childnode>
        <childnode refid="48559" relation="include">
        </childnode>
        <childnode refid="48560" relation="include">
        </childnode>
        <childnode refid="48561" relation="include">
        </childnode>
        <childnode refid="48562" relation="include">
        </childnode>
        <childnode refid="48563" relation="include">
        </childnode>
        <childnode refid="48564" relation="include">
        </childnode>
        <childnode refid="48565" relation="include">
        </childnode>
        <childnode refid="48566" relation="include">
        </childnode>
        <childnode refid="48567" relation="include">
        </childnode>
        <childnode refid="48568" relation="include">
        </childnode>
        <childnode refid="48569" relation="include">
        </childnode>
        <childnode refid="48570" relation="include">
        </childnode>
        <childnode refid="48571" relation="include">
        </childnode>
        <childnode refid="48572" relation="include">
        </childnode>
        <childnode refid="48573" relation="include">
        </childnode>
        <childnode refid="48574" relation="include">
        </childnode>
        <childnode refid="48575" relation="include">
        </childnode>
        <childnode refid="48579" relation="include">
        </childnode>
        <childnode refid="48580" relation="include">
        </childnode>
        <childnode refid="48581" relation="include">
        </childnode>
        <childnode refid="48582" relation="include">
        </childnode>
        <childnode refid="48583" relation="include">
        </childnode>
        <childnode refid="48584" relation="include">
        </childnode>
        <childnode refid="48585" relation="include">
        </childnode>
        <childnode refid="48591" relation="include">
        </childnode>
        <childnode refid="48592" relation="include">
        </childnode>
        <childnode refid="48589" relation="include">
        </childnode>
        <childnode refid="48593" relation="include">
        </childnode>
        <childnode refid="48596" relation="include">
        </childnode>
        <childnode refid="48598" relation="include">
        </childnode>
        <childnode refid="48599" relation="include">
        </childnode>
        <childnode refid="48608" relation="include">
        </childnode>
        <childnode refid="48609" relation="include">
        </childnode>
      </node>
      <node id="48656">
        <label>single_tree_traverser_impl.hpp</label>
      </node>
      <node id="48637">
        <label>binary_space_tree/midpoint_split.hpp</label>
        <link refid="midpoint__split_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48638" relation="include">
        </childnode>
        <childnode refid="48639" relation="include">
        </childnode>
      </node>
      <node id="48619">
        <label>random</label>
      </node>
      <node id="48631">
        <label>ballbound_impl.hpp</label>
      </node>
      <node id="48657">
        <label>binary_space_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="48559">
        <label>cstdio</label>
      </node>
      <node id="48635">
        <label>address.hpp</label>
        <link refid="address_8hpp"/>
      </node>
      <node id="48666">
        <label>mlpack/core/tree/tree_traits.hpp</label>
        <link refid="tree__traits_8hpp"/>
      </node>
      <node id="48563">
        <label>tuple</label>
      </node>
      <node id="48568">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="48650">
        <label>binary_space_tree/ub_tree_split.hpp</label>
        <link refid="ub__tree__split_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48635" relation="include">
        </childnode>
        <childnode refid="48651" relation="include">
        </childnode>
      </node>
      <node id="48585">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="48568" relation="include">
        </childnode>
        <childnode refid="48569" relation="include">
        </childnode>
        <childnode refid="48570" relation="include">
        </childnode>
        <childnode refid="48572" relation="include">
        </childnode>
        <childnode refid="48586" relation="include">
        </childnode>
        <childnode refid="48587" relation="include">
        </childnode>
        <childnode refid="48588" relation="include">
        </childnode>
        <childnode refid="48589" relation="include">
        </childnode>
      </node>
      <node id="48652">
        <label>binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48653" relation="include">
        </childnode>
        <childnode refid="48637" relation="include">
        </childnode>
        <childnode refid="48654" relation="include">
        </childnode>
        <childnode refid="48624" relation="include">
        </childnode>
      </node>
      <node id="48628">
        <label>hrectbound.hpp</label>
        <link refid="hrectbound_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48626" relation="include">
        </childnode>
        <childnode refid="48614" relation="include">
        </childnode>
        <childnode refid="48627" relation="include">
        </childnode>
        <childnode refid="48629" relation="include">
        </childnode>
      </node>
      <node id="48649">
        <label>rp_tree_mean_split_impl.hpp</label>
      </node>
      <node id="48610">
        <label>em_fit.hpp</label>
        <link refid="em__fit_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48611" relation="include">
        </childnode>
        <childnode refid="48612" relation="include">
        </childnode>
        <childnode refid="48613" relation="include">
        </childnode>
        <childnode refid="48669" relation="include">
        </childnode>
        <childnode refid="48670" relation="include">
        </childnode>
      </node>
      <node id="48620">
        <label>max_variance_new_cluster.hpp</label>
        <link refid="max__variance__new__cluster_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48621" relation="include">
        </childnode>
      </node>
      <node id="48668">
        <label>kmeans_impl.hpp</label>
      </node>
      <node id="48617">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48618" relation="include">
        </childnode>
        <childnode refid="48619" relation="include">
        </childnode>
      </node>
      <node id="48564">
        <label>utility</label>
      </node>
      <node id="48588">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="48579">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="48624">
        <label>mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48625" relation="include">
        </childnode>
        <childnode refid="48637" relation="include">
        </childnode>
        <childnode refid="48640" relation="include">
        </childnode>
        <childnode refid="48642" relation="include">
        </childnode>
        <childnode refid="48644" relation="include">
        </childnode>
        <childnode refid="48646" relation="include">
        </childnode>
        <childnode refid="48650" relation="include">
        </childnode>
        <childnode refid="48652" relation="include">
        </childnode>
        <childnode refid="48655" relation="include">
        </childnode>
        <childnode refid="48657" relation="include">
        </childnode>
        <childnode refid="48658" relation="include">
        </childnode>
        <childnode refid="48660" relation="include">
        </childnode>
        <childnode refid="48661" relation="include">
        </childnode>
        <childnode refid="48664" relation="include">
        </childnode>
        <childnode refid="48665" relation="include">
        </childnode>
        <childnode refid="48667" relation="include">
        </childnode>
      </node>
      <node id="48576">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="48577" relation="include">
        </childnode>
      </node>
      <node id="48599">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="48600" relation="include">
        </childnode>
        <childnode refid="48601" relation="include">
        </childnode>
        <childnode refid="48602" relation="include">
        </childnode>
        <childnode refid="48603" relation="include">
        </childnode>
        <childnode refid="48604" relation="include">
        </childnode>
        <childnode refid="48605" relation="include">
        </childnode>
        <childnode refid="48606" relation="include">
        </childnode>
        <childnode refid="48607" relation="include">
        </childnode>
      </node>
      <node id="48577">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="48591">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="48589" relation="include">
        </childnode>
        <childnode refid="48585" relation="include">
        </childnode>
        <childnode refid="48592" relation="include">
        </childnode>
      </node>
      <node id="48560">
        <label>cstdlib</label>
      </node>
      <node id="48555">
        <label>cctype</label>
      </node>
      <node id="48578">
        <label>unordered_map</label>
      </node>
      <node id="48613">
        <label>mlpack/methods/kmeans/kmeans.hpp</label>
        <link refid="kmeans_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48614" relation="include">
        </childnode>
        <childnode refid="48616" relation="include">
        </childnode>
        <childnode refid="48620" relation="include">
        </childnode>
        <childnode refid="48622" relation="include">
        </childnode>
        <childnode refid="48624" relation="include">
        </childnode>
        <childnode refid="48668" relation="include">
        </childnode>
      </node>
      <node id="48616">
        <label>sample_initialization.hpp</label>
        <link refid="sample__initialization_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48617" relation="include">
        </childnode>
      </node>
      <node id="48557">
        <label>climits</label>
      </node>
      <node id="48605">
        <label>mutex</label>
      </node>
      <node id="48601">
        <label>chrono</label>
      </node>
      <node id="48629">
        <label>hrectbound_impl.hpp</label>
      </node>
      <node id="48609">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="48646">
        <label>binary_space_tree/rp_tree_mean_split.hpp</label>
        <link refid="rp__tree__mean__split_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48644" relation="include">
        </childnode>
        <childnode refid="48638" relation="include">
        </childnode>
        <childnode refid="48647" relation="include">
        </childnode>
        <childnode refid="48649" relation="include">
        </childnode>
      </node>
      <node id="48643">
        <label>vantage_point_split_impl.hpp</label>
      </node>
      <node id="48607">
        <label>thread</label>
      </node>
      <node id="48630">
        <label>ballbound.hpp</label>
        <link refid="ballbound_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48614" relation="include">
        </childnode>
        <childnode refid="48627" relation="include">
        </childnode>
        <childnode refid="48631" relation="include">
        </childnode>
      </node>
      <node id="48645">
        <label>rp_tree_max_split_impl.hpp</label>
      </node>
      <node id="48638">
        <label>mlpack/core/tree/perform_split.hpp</label>
        <link refid="perform__split_8hpp"/>
      </node>
      <node id="48622">
        <label>naive_kmeans.hpp</label>
        <link refid="naive__kmeans_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48623" relation="include">
        </childnode>
      </node>
      <node id="48595">
        <label>type_traits</label>
      </node>
      <node id="48661">
        <label>binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48662" relation="include">
        </childnode>
        <childnode refid="48624" relation="include">
        </childnode>
        <childnode refid="48663" relation="include">
        </childnode>
      </node>
      <node id="48571">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="48667">
        <label>binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="48624" relation="include">
        </childnode>
      </node>
      <node id="48565">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="48589">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="48567" relation="include">
        </childnode>
        <childnode refid="48568" relation="include">
        </childnode>
        <childnode refid="48569" relation="include">
        </childnode>
        <childnode refid="48570" relation="include">
        </childnode>
        <childnode refid="48590" relation="include">
        </childnode>
      </node>
      <node id="48633">
        <label>hollow_ball_bound_impl.hpp</label>
      </node>
      <node id="48561">
        <label>cstring</label>
      </node>
      <node id="48580">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="48636">
        <label>cellbound_impl.hpp</label>
      </node>
      <node id="48651">
        <label>ub_tree_split_impl.hpp</label>
      </node>
      <node id="48634">
        <label>cellbound.hpp</label>
        <link refid="cellbound_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48626" relation="include">
        </childnode>
        <childnode refid="48614" relation="include">
        </childnode>
        <childnode refid="48627" relation="include">
        </childnode>
        <childnode refid="48635" relation="include">
        </childnode>
        <childnode refid="48636" relation="include">
        </childnode>
      </node>
      <node id="48569">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="48611">
        <label>mlpack/core/dists/gaussian_distribution.hpp</label>
        <link refid="gaussian__distribution_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
      </node>
      <node id="48614">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48615" relation="include">
        </childnode>
      </node>
      <node id="48642">
        <label>binary_space_tree/vantage_point_split.hpp</label>
        <link refid="vantage__point__split_8hpp"/>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48638" relation="include">
        </childnode>
        <childnode refid="48617" relation="include">
        </childnode>
        <childnode refid="48643" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="48672">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/gmm.hpp</label>
        <link refid="gmm_8hpp"/>
        <childnode refid="48673" relation="include">
        </childnode>
      </node>
      <node id="48673">
        <label>/home/aakash/mlpack/src/mlpack/methods/hmm/hmm_model.hpp</label>
        <link refid="hmm__model_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1gmm_1_1GMM" prot="public">mlpack::gmm::GMM</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1gmm">mlpack::gmm</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Parikshit Ram (<ulink url="mailto:pram@cc.gatech.edu">pram@cc.gatech.edu</ulink>) </para></simplesect>
<simplesect kind="author"><para>Michael Fox</para></simplesect>
Defines a Gaussian Mixture model and estimates the parameters of the model.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_MOG_MOG_EM_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_MOG_MOG_EM_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>default<sp/>fitting<sp/>method<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="em__fit_8hpp" kindref="compound">em_fit.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">gmm<sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classmlpack_1_1gmm_1_1GMM" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1gmm_1_1GMM" kindref="compound">GMM</ref></highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>gaussians;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimensionality;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>std::vector&lt;distribution::GaussianDistribution&gt;<sp/>dists;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>arma::vec<sp/>weights;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96" refid="classmlpack_1_1gmm_1_1GMM_1a0848a828790e4f2dcebd3be297c31622" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a0848a828790e4f2dcebd3be297c31622" kindref="member">GMM</ref>()<sp/>:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gaussians(0),</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dimensionality(0)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Warn<sp/>the<sp/>user.<sp/><sp/>They<sp/>probably<sp/>don&apos;t<sp/>want<sp/>to<sp/>do<sp/>this.<sp/><sp/>If<sp/>this<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>being<sp/>used<sp/>(because<sp/>it<sp/>is<sp/>required<sp/>by<sp/>some<sp/>template<sp/>classes),<sp/>the<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>know<sp/>that<sp/>it<sp/>is<sp/>potentially<sp/>dangerous.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>Log::Debug<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;GMM::GMM():<sp/>no<sp/>parameters<sp/>given;<sp/>Estimate()<sp/>may<sp/>fail<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;unless<sp/>parameters<sp/>are<sp/>set.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a0848a828790e4f2dcebd3be297c31622" kindref="member">GMM</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>gaussians,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimensionality);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="classmlpack_1_1gmm_1_1GMM_1a6c36db07dcbd3c3236596baaf55cd373" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a6c36db07dcbd3c3236596baaf55cd373" kindref="member">GMM</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;distribution::GaussianDistribution&gt;<sp/>&amp;<sp/>dists,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/>weights)<sp/>:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gaussians(dists.size()),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dimensionality((!dists.empty())<sp/>?<sp/>dists[0].Mean().n_elem<sp/>:<sp/>0),</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dists(dists),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>weights(weights)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do.<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a0848a828790e4f2dcebd3be297c31622" kindref="member">GMM</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM" kindref="compound">GMM</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1gmm_1_1GMM" kindref="compound">GMM</ref>&amp;<sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a06fc875f2c82e831a10a7c38f9919cb3" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM" kindref="compound">GMM</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classmlpack_1_1gmm_1_1GMM_1a130ce966c49ab36f847f8fac950f1e39" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a130ce966c49ab36f847f8fac950f1e39" kindref="member">Gaussians</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gaussians;<sp/>}</highlight></codeline>
<codeline lineno="138" refid="classmlpack_1_1gmm_1_1GMM_1a78eda6bfb9e9462afa0fc85e32abe1af" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a78eda6bfb9e9462afa0fc85e32abe1af" kindref="member">Dimensionality</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dimensionality;<sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classmlpack_1_1gmm_1_1GMM_1a14b393b6da8638dcc2d27c878e2e5c35" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1distribution_1_1GaussianDistribution" kindref="compound">distribution::GaussianDistribution</ref>&amp;<sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a14b393b6da8638dcc2d27c878e2e5c35" kindref="member">Component</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dists[i];<sp/>}</highlight></codeline>
<codeline lineno="152" refid="classmlpack_1_1gmm_1_1GMM_1a91d594ca41a307e58506ca5f57a6b0c0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1distribution_1_1GaussianDistribution" kindref="compound">distribution::GaussianDistribution</ref>&amp;<sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a91d594ca41a307e58506ca5f57a6b0c0" kindref="member">Component</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dists[i];<sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classmlpack_1_1gmm_1_1GMM_1ab2c1e663a100784ff6753e3eec8453dd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1ab2c1e663a100784ff6753e3eec8453dd" kindref="member">Weights</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>weights;<sp/>}</highlight></codeline>
<codeline lineno="157" refid="classmlpack_1_1gmm_1_1GMM_1a8361070d4a9097e29c005dd5dc6ca54d" refkind="member"><highlight class="normal"><sp/><sp/>arma::vec&amp;<sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a8361070d4a9097e29c005dd5dc6ca54d" kindref="member">Weights</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>weights;<sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1ab72935d592516e77511d0b5e703c0d41" kindref="member">Probability</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/>observation)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1ab72935d592516e77511d0b5e703c0d41" kindref="member">Probability</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>observation,<sp/>arma::vec&amp;<sp/>probs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a7063c1fb92f512f32bf44542c7528739" kindref="member">LogProbability</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/>observation)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a7063c1fb92f512f32bf44542c7528739" kindref="member">LogProbability</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>observation,<sp/>arma::vec&amp;<sp/>logProbs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1ab72935d592516e77511d0b5e703c0d41" kindref="member">Probability</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/>observation,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>component)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a7063c1fb92f512f32bf44542c7528739" kindref="member">LogProbability</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/>observation,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>component)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>arma::vec<sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a2c6f8d5bb4eacf7de767d2172b320756" kindref="member">Random</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FittingType<sp/>=<sp/>EMFit&lt;&gt;&gt;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1ad33ec5cf10980e0b315280ea51ef41ed" kindref="member">Train</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>observations,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>trials<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useExistingModel<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FittingType<sp/>fitter<sp/>=<sp/>FittingType());</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FittingType<sp/>=<sp/>EMFit&lt;&gt;&gt;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1ad33ec5cf10980e0b315280ea51ef41ed" kindref="member">Train</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>observations,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/>probabilities,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>trials<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useExistingModel<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FittingType<sp/>fitter<sp/>=<sp/>FittingType());</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a4e6c4f4110899f4f4fd18b46d3d141c6" kindref="member">Classify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>observations,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Row&lt;size_t&gt;&amp;<sp/>labels)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>LogLikelihood(</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>dataPoints,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;distribution::GaussianDistribution&gt;&amp;<sp/>distsL,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/>weights)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal">};</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>gmm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gmm_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/gmm.hpp"/>
  </compounddef>
</doxygen>
