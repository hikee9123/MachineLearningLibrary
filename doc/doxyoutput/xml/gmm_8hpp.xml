<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="gmm_8hpp" kind="file" language="C++">
    <compoundname>gmm.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="em__fit_8hpp" local="yes">em_fit.hpp</includes>
    <includes local="yes">gmm_impl.hpp</includes>
    <includedby refid="hmm__model_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/hmm/hmm_model.hpp</includedby>
    <incdepgraph>
      <node id="50080">
        <label>list</label>
      </node>
      <node id="50140">
        <label>breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="50132">
        <label>binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50129" relation="include">
        </childnode>
        <childnode refid="50133" relation="include">
        </childnode>
      </node>
      <node id="50142">
        <label>binary_space_tree/traits.hpp</label>
        <link refid="binary__space__tree_2traits_8hpp"/>
        <childnode refid="50143" relation="include">
        </childnode>
        <childnode refid="50107" relation="include">
        </childnode>
      </node>
      <node id="50077">
        <label>atomic</label>
      </node>
      <node id="50067">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="50043">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="50079">
        <label>iomanip</label>
      </node>
      <node id="50139">
        <label>queue</label>
      </node>
      <node id="50104">
        <label>bound_traits.hpp</label>
        <link refid="bound__traits_8hpp"/>
      </node>
      <node id="50117">
        <label>binary_space_tree/mean_split.hpp</label>
        <link refid="mean__split_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50115" relation="include">
        </childnode>
        <childnode refid="50118" relation="include">
        </childnode>
      </node>
      <node id="50092">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="50052">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="50053" relation="include">
        </childnode>
        <childnode refid="50055" relation="include">
        </childnode>
      </node>
      <node id="50035">
        <label>cstdint</label>
      </node>
      <node id="50044">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="50051">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="50141">
        <label>binary_space_tree/breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="50147">
        <label>em_fit_impl.hpp</label>
      </node>
      <node id="50095">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="50118">
        <label>mean_split_impl.hpp</label>
      </node>
      <node id="50074">
        <label>arma_config.hpp</label>
      </node>
      <node id="50109">
        <label>hollow_ball_bound.hpp</label>
        <link refid="hollow__ball__bound_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50091" relation="include">
        </childnode>
        <childnode refid="50104" relation="include">
        </childnode>
        <childnode refid="50110" relation="include">
        </childnode>
      </node>
      <node id="50130">
        <label>../statistic.hpp</label>
        <link refid="statistic_8hpp"/>
      </node>
      <node id="50148">
        <label>gmm_impl.hpp</label>
      </node>
      <node id="50125">
        <label>lin_alg_impl.hpp</label>
      </node>
      <node id="50064">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="50031">
        <label>cmath</label>
      </node>
      <node id="50102">
        <label>bounds.hpp</label>
        <link refid="bounds_8hpp"/>
        <childnode refid="50103" relation="include">
        </childnode>
        <childnode refid="50091" relation="include">
        </childnode>
        <childnode refid="50104" relation="include">
        </childnode>
        <childnode refid="50105" relation="include">
        </childnode>
        <childnode refid="50107" relation="include">
        </childnode>
        <childnode refid="50109" relation="include">
        </childnode>
        <childnode refid="50111" relation="include">
        </childnode>
      </node>
      <node id="50050">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="50039">
        <label>stdexcept</label>
      </node>
      <node id="50135">
        <label>binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50129" relation="include">
        </childnode>
        <childnode refid="50136" relation="include">
        </childnode>
      </node>
      <node id="50059">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="50044" relation="include">
        </childnode>
        <childnode refid="50046" relation="include">
        </childnode>
        <childnode refid="50047" relation="include">
        </childnode>
        <childnode refid="50045" relation="include">
        </childnode>
      </node>
      <node id="50100">
        <label>naive_kmeans_impl.hpp</label>
      </node>
      <node id="50103">
        <label>mlpack/core/math/range.hpp</label>
      </node>
      <node id="50083">
        <label>string</label>
      </node>
      <node id="50121">
        <label>binary_space_tree/rp_tree_max_split.hpp</label>
        <link refid="rp__tree__max__split_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50115" relation="include">
        </childnode>
        <childnode refid="50122" relation="include">
        </childnode>
      </node>
      <node id="50116">
        <label>midpoint_split_impl.hpp</label>
      </node>
      <node id="50071">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="50072" relation="include">
        </childnode>
        <childnode refid="50038" relation="include">
        </childnode>
      </node>
      <node id="50081">
        <label>map</label>
      </node>
      <node id="50136">
        <label>dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="50124">
        <label>mlpack/core/math/lin_alg.hpp</label>
        <link refid="lin__alg_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50125" relation="include">
        </childnode>
      </node>
      <node id="50098">
        <label>max_variance_new_cluster_impl.hpp</label>
      </node>
      <node id="50033">
        <label>cfloat</label>
      </node>
      <node id="50063">
        <label>boost/variant.hpp</label>
      </node>
      <node id="50029">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/gmm.hpp</label>
        <link refid="gmm_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50087" relation="include">
        </childnode>
        <childnode refid="50148" relation="include">
        </childnode>
      </node>
      <node id="50085">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="50047">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="50070">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="50071" relation="include">
        </childnode>
        <childnode refid="50047" relation="include">
        </childnode>
        <childnode refid="50054" relation="include">
        </childnode>
        <childnode refid="50072" relation="include">
        </childnode>
      </node>
      <node id="50060">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="50089">
        <label>mlpack/core/dists/diagonal_gaussian_distribution.hpp</label>
        <link refid="diagonal__gaussian__distribution_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
      </node>
      <node id="50146">
        <label>positive_definite_constraint.hpp</label>
        <link refid="positive__definite__constraint_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
      </node>
      <node id="50058">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="50044" relation="include">
        </childnode>
        <childnode refid="50046" relation="include">
        </childnode>
        <childnode refid="50047" relation="include">
        </childnode>
        <childnode refid="50045" relation="include">
        </childnode>
      </node>
      <node id="50061">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="50044" relation="include">
        </childnode>
        <childnode refid="50046" relation="include">
        </childnode>
        <childnode refid="50047" relation="include">
        </childnode>
        <childnode refid="50045" relation="include">
        </childnode>
      </node>
      <node id="50131">
        <label>binary_space_tree_impl.hpp</label>
      </node>
      <node id="50049">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="50069">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="50045" relation="include">
        </childnode>
        <childnode refid="50046" relation="include">
        </childnode>
        <childnode refid="50047" relation="include">
        </childnode>
        <childnode refid="50057" relation="include">
        </childnode>
        <childnode refid="50066" relation="include">
        </childnode>
      </node>
      <node id="50073">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="50074" relation="include">
        </childnode>
      </node>
      <node id="50137">
        <label>binary_space_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="50075">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="50030">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="50031" relation="include">
        </childnode>
        <childnode refid="50032" relation="include">
        </childnode>
        <childnode refid="50033" relation="include">
        </childnode>
        <childnode refid="50034" relation="include">
        </childnode>
        <childnode refid="50035" relation="include">
        </childnode>
        <childnode refid="50036" relation="include">
        </childnode>
        <childnode refid="50037" relation="include">
        </childnode>
        <childnode refid="50038" relation="include">
        </childnode>
        <childnode refid="50039" relation="include">
        </childnode>
        <childnode refid="50040" relation="include">
        </childnode>
        <childnode refid="50041" relation="include">
        </childnode>
        <childnode refid="50042" relation="include">
        </childnode>
        <childnode refid="50043" relation="include">
        </childnode>
        <childnode refid="50044" relation="include">
        </childnode>
        <childnode refid="50045" relation="include">
        </childnode>
        <childnode refid="50046" relation="include">
        </childnode>
        <childnode refid="50047" relation="include">
        </childnode>
        <childnode refid="50048" relation="include">
        </childnode>
        <childnode refid="50049" relation="include">
        </childnode>
        <childnode refid="50050" relation="include">
        </childnode>
        <childnode refid="50051" relation="include">
        </childnode>
        <childnode refid="50052" relation="include">
        </childnode>
        <childnode refid="50056" relation="include">
        </childnode>
        <childnode refid="50057" relation="include">
        </childnode>
        <childnode refid="50058" relation="include">
        </childnode>
        <childnode refid="50059" relation="include">
        </childnode>
        <childnode refid="50060" relation="include">
        </childnode>
        <childnode refid="50061" relation="include">
        </childnode>
        <childnode refid="50062" relation="include">
        </childnode>
        <childnode refid="50068" relation="include">
        </childnode>
        <childnode refid="50069" relation="include">
        </childnode>
        <childnode refid="50066" relation="include">
        </childnode>
        <childnode refid="50070" relation="include">
        </childnode>
        <childnode refid="50073" relation="include">
        </childnode>
        <childnode refid="50075" relation="include">
        </childnode>
        <childnode refid="50076" relation="include">
        </childnode>
        <childnode refid="50085" relation="include">
        </childnode>
        <childnode refid="50086" relation="include">
        </childnode>
      </node>
      <node id="50133">
        <label>single_tree_traverser_impl.hpp</label>
      </node>
      <node id="50114">
        <label>binary_space_tree/midpoint_split.hpp</label>
        <link refid="midpoint__split_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50115" relation="include">
        </childnode>
        <childnode refid="50116" relation="include">
        </childnode>
      </node>
      <node id="50096">
        <label>random</label>
      </node>
      <node id="50108">
        <label>ballbound_impl.hpp</label>
      </node>
      <node id="50134">
        <label>binary_space_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="50036">
        <label>cstdio</label>
      </node>
      <node id="50112">
        <label>address.hpp</label>
        <link refid="address_8hpp"/>
      </node>
      <node id="50143">
        <label>mlpack/core/tree/tree_traits.hpp</label>
        <link refid="tree__traits_8hpp"/>
      </node>
      <node id="50040">
        <label>tuple</label>
      </node>
      <node id="50045">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="50127">
        <label>binary_space_tree/ub_tree_split.hpp</label>
        <link refid="ub__tree__split_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50112" relation="include">
        </childnode>
        <childnode refid="50128" relation="include">
        </childnode>
      </node>
      <node id="50062">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="50045" relation="include">
        </childnode>
        <childnode refid="50046" relation="include">
        </childnode>
        <childnode refid="50047" relation="include">
        </childnode>
        <childnode refid="50049" relation="include">
        </childnode>
        <childnode refid="50063" relation="include">
        </childnode>
        <childnode refid="50064" relation="include">
        </childnode>
        <childnode refid="50065" relation="include">
        </childnode>
        <childnode refid="50066" relation="include">
        </childnode>
      </node>
      <node id="50129">
        <label>binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50130" relation="include">
        </childnode>
        <childnode refid="50114" relation="include">
        </childnode>
        <childnode refid="50131" relation="include">
        </childnode>
        <childnode refid="50101" relation="include">
        </childnode>
      </node>
      <node id="50105">
        <label>hrectbound.hpp</label>
        <link refid="hrectbound_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50103" relation="include">
        </childnode>
        <childnode refid="50091" relation="include">
        </childnode>
        <childnode refid="50104" relation="include">
        </childnode>
        <childnode refid="50106" relation="include">
        </childnode>
      </node>
      <node id="50126">
        <label>rp_tree_mean_split_impl.hpp</label>
      </node>
      <node id="50087">
        <label>em_fit.hpp</label>
        <link refid="em__fit_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50088" relation="include">
        </childnode>
        <childnode refid="50089" relation="include">
        </childnode>
        <childnode refid="50090" relation="include">
        </childnode>
        <childnode refid="50146" relation="include">
        </childnode>
        <childnode refid="50147" relation="include">
        </childnode>
      </node>
      <node id="50097">
        <label>max_variance_new_cluster.hpp</label>
        <link refid="max__variance__new__cluster_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50098" relation="include">
        </childnode>
      </node>
      <node id="50145">
        <label>kmeans_impl.hpp</label>
      </node>
      <node id="50094">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50095" relation="include">
        </childnode>
        <childnode refid="50096" relation="include">
        </childnode>
      </node>
      <node id="50041">
        <label>utility</label>
      </node>
      <node id="50065">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="50056">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="50101">
        <label>mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50102" relation="include">
        </childnode>
        <childnode refid="50114" relation="include">
        </childnode>
        <childnode refid="50117" relation="include">
        </childnode>
        <childnode refid="50119" relation="include">
        </childnode>
        <childnode refid="50121" relation="include">
        </childnode>
        <childnode refid="50123" relation="include">
        </childnode>
        <childnode refid="50127" relation="include">
        </childnode>
        <childnode refid="50129" relation="include">
        </childnode>
        <childnode refid="50132" relation="include">
        </childnode>
        <childnode refid="50134" relation="include">
        </childnode>
        <childnode refid="50135" relation="include">
        </childnode>
        <childnode refid="50137" relation="include">
        </childnode>
        <childnode refid="50138" relation="include">
        </childnode>
        <childnode refid="50141" relation="include">
        </childnode>
        <childnode refid="50142" relation="include">
        </childnode>
        <childnode refid="50144" relation="include">
        </childnode>
      </node>
      <node id="50053">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="50054" relation="include">
        </childnode>
      </node>
      <node id="50076">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="50077" relation="include">
        </childnode>
        <childnode refid="50078" relation="include">
        </childnode>
        <childnode refid="50079" relation="include">
        </childnode>
        <childnode refid="50080" relation="include">
        </childnode>
        <childnode refid="50081" relation="include">
        </childnode>
        <childnode refid="50082" relation="include">
        </childnode>
        <childnode refid="50083" relation="include">
        </childnode>
        <childnode refid="50084" relation="include">
        </childnode>
      </node>
      <node id="50054">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="50068">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="50066" relation="include">
        </childnode>
        <childnode refid="50062" relation="include">
        </childnode>
        <childnode refid="50069" relation="include">
        </childnode>
      </node>
      <node id="50037">
        <label>cstdlib</label>
      </node>
      <node id="50032">
        <label>cctype</label>
      </node>
      <node id="50055">
        <label>unordered_map</label>
      </node>
      <node id="50090">
        <label>mlpack/methods/kmeans/kmeans.hpp</label>
        <link refid="kmeans_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50091" relation="include">
        </childnode>
        <childnode refid="50093" relation="include">
        </childnode>
        <childnode refid="50097" relation="include">
        </childnode>
        <childnode refid="50099" relation="include">
        </childnode>
        <childnode refid="50101" relation="include">
        </childnode>
        <childnode refid="50145" relation="include">
        </childnode>
      </node>
      <node id="50093">
        <label>sample_initialization.hpp</label>
        <link refid="sample__initialization_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50094" relation="include">
        </childnode>
      </node>
      <node id="50034">
        <label>climits</label>
      </node>
      <node id="50082">
        <label>mutex</label>
      </node>
      <node id="50078">
        <label>chrono</label>
      </node>
      <node id="50106">
        <label>hrectbound_impl.hpp</label>
      </node>
      <node id="50086">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="50123">
        <label>binary_space_tree/rp_tree_mean_split.hpp</label>
        <link refid="rp__tree__mean__split_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50121" relation="include">
        </childnode>
        <childnode refid="50115" relation="include">
        </childnode>
        <childnode refid="50124" relation="include">
        </childnode>
        <childnode refid="50126" relation="include">
        </childnode>
      </node>
      <node id="50120">
        <label>vantage_point_split_impl.hpp</label>
      </node>
      <node id="50084">
        <label>thread</label>
      </node>
      <node id="50107">
        <label>ballbound.hpp</label>
        <link refid="ballbound_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50091" relation="include">
        </childnode>
        <childnode refid="50104" relation="include">
        </childnode>
        <childnode refid="50108" relation="include">
        </childnode>
      </node>
      <node id="50122">
        <label>rp_tree_max_split_impl.hpp</label>
      </node>
      <node id="50115">
        <label>mlpack/core/tree/perform_split.hpp</label>
        <link refid="perform__split_8hpp"/>
      </node>
      <node id="50099">
        <label>naive_kmeans.hpp</label>
        <link refid="naive__kmeans_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50100" relation="include">
        </childnode>
      </node>
      <node id="50072">
        <label>type_traits</label>
      </node>
      <node id="50138">
        <label>binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50139" relation="include">
        </childnode>
        <childnode refid="50101" relation="include">
        </childnode>
        <childnode refid="50140" relation="include">
        </childnode>
      </node>
      <node id="50048">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="50144">
        <label>binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="50101" relation="include">
        </childnode>
      </node>
      <node id="50042">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="50066">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="50044" relation="include">
        </childnode>
        <childnode refid="50045" relation="include">
        </childnode>
        <childnode refid="50046" relation="include">
        </childnode>
        <childnode refid="50047" relation="include">
        </childnode>
        <childnode refid="50067" relation="include">
        </childnode>
      </node>
      <node id="50110">
        <label>hollow_ball_bound_impl.hpp</label>
      </node>
      <node id="50038">
        <label>cstring</label>
      </node>
      <node id="50057">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="50113">
        <label>cellbound_impl.hpp</label>
      </node>
      <node id="50128">
        <label>ub_tree_split_impl.hpp</label>
      </node>
      <node id="50111">
        <label>cellbound.hpp</label>
        <link refid="cellbound_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50103" relation="include">
        </childnode>
        <childnode refid="50091" relation="include">
        </childnode>
        <childnode refid="50104" relation="include">
        </childnode>
        <childnode refid="50112" relation="include">
        </childnode>
        <childnode refid="50113" relation="include">
        </childnode>
      </node>
      <node id="50046">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="50088">
        <label>mlpack/core/dists/gaussian_distribution.hpp</label>
        <link refid="gaussian__distribution_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
      </node>
      <node id="50091">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50092" relation="include">
        </childnode>
      </node>
      <node id="50119">
        <label>binary_space_tree/vantage_point_split.hpp</label>
        <link refid="vantage__point__split_8hpp"/>
        <childnode refid="50030" relation="include">
        </childnode>
        <childnode refid="50115" relation="include">
        </childnode>
        <childnode refid="50094" relation="include">
        </childnode>
        <childnode refid="50120" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="50149">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/gmm.hpp</label>
        <link refid="gmm_8hpp"/>
        <childnode refid="50150" relation="include">
        </childnode>
      </node>
      <node id="50150">
        <label>/home/aakash/mlpack/src/mlpack/methods/hmm/hmm_model.hpp</label>
        <link refid="hmm__model_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1gmm_1_1GMM" prot="public">mlpack::gmm::GMM</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1gmm">mlpack::gmm</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Parikshit Ram (<ulink url="mailto:pram@cc.gatech.edu">pram@cc.gatech.edu</ulink>) </para></simplesect>
<simplesect kind="author"><para>Michael Fox</para></simplesect>
Defines a Gaussian Mixture model and estimates the parameters of the model.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_MOG_MOG_EM_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_MOG_MOG_EM_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>default<sp/>fitting<sp/>method<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="em__fit_8hpp" kindref="compound">em_fit.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">gmm<sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classmlpack_1_1gmm_1_1GMM" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1gmm_1_1GMM" kindref="compound">GMM</ref></highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>gaussians;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimensionality;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>std::vector&lt;distribution::GaussianDistribution&gt;<sp/>dists;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>arma::vec<sp/>weights;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96" refid="classmlpack_1_1gmm_1_1GMM_1a0848a828790e4f2dcebd3be297c31622" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a0848a828790e4f2dcebd3be297c31622" kindref="member">GMM</ref>()<sp/>:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gaussians(0),</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dimensionality(0)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Warn<sp/>the<sp/>user.<sp/><sp/>They<sp/>probably<sp/>don&apos;t<sp/>want<sp/>to<sp/>do<sp/>this.<sp/><sp/>If<sp/>this<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>being<sp/>used<sp/>(because<sp/>it<sp/>is<sp/>required<sp/>by<sp/>some<sp/>template<sp/>classes),<sp/>the<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>know<sp/>that<sp/>it<sp/>is<sp/>potentially<sp/>dangerous.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>Log::Debug<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;GMM::GMM():<sp/>no<sp/>parameters<sp/>given;<sp/>Estimate()<sp/>may<sp/>fail<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;unless<sp/>parameters<sp/>are<sp/>set.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a0848a828790e4f2dcebd3be297c31622" kindref="member">GMM</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>gaussians,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimensionality);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="classmlpack_1_1gmm_1_1GMM_1a6c36db07dcbd3c3236596baaf55cd373" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a6c36db07dcbd3c3236596baaf55cd373" kindref="member">GMM</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;distribution::GaussianDistribution&gt;<sp/>&amp;<sp/>dists,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/>weights)<sp/>:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gaussians(dists.size()),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dimensionality((!dists.empty())<sp/>?<sp/>dists[0].Mean().n_elem<sp/>:<sp/>0),</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dists(dists),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>weights(weights)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do.<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a0848a828790e4f2dcebd3be297c31622" kindref="member">GMM</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM" kindref="compound">GMM</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1gmm_1_1GMM" kindref="compound">GMM</ref>&amp;<sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a06fc875f2c82e831a10a7c38f9919cb3" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM" kindref="compound">GMM</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classmlpack_1_1gmm_1_1GMM_1a130ce966c49ab36f847f8fac950f1e39" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a130ce966c49ab36f847f8fac950f1e39" kindref="member">Gaussians</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gaussians;<sp/>}</highlight></codeline>
<codeline lineno="138" refid="classmlpack_1_1gmm_1_1GMM_1a78eda6bfb9e9462afa0fc85e32abe1af" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a78eda6bfb9e9462afa0fc85e32abe1af" kindref="member">Dimensionality</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dimensionality;<sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classmlpack_1_1gmm_1_1GMM_1a14b393b6da8638dcc2d27c878e2e5c35" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1distribution_1_1GaussianDistribution" kindref="compound">distribution::GaussianDistribution</ref>&amp;<sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a14b393b6da8638dcc2d27c878e2e5c35" kindref="member">Component</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dists[i];<sp/>}</highlight></codeline>
<codeline lineno="152" refid="classmlpack_1_1gmm_1_1GMM_1a91d594ca41a307e58506ca5f57a6b0c0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1distribution_1_1GaussianDistribution" kindref="compound">distribution::GaussianDistribution</ref>&amp;<sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a91d594ca41a307e58506ca5f57a6b0c0" kindref="member">Component</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dists[i];<sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classmlpack_1_1gmm_1_1GMM_1ab2c1e663a100784ff6753e3eec8453dd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1ab2c1e663a100784ff6753e3eec8453dd" kindref="member">Weights</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>weights;<sp/>}</highlight></codeline>
<codeline lineno="157" refid="classmlpack_1_1gmm_1_1GMM_1a8361070d4a9097e29c005dd5dc6ca54d" refkind="member"><highlight class="normal"><sp/><sp/>arma::vec&amp;<sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a8361070d4a9097e29c005dd5dc6ca54d" kindref="member">Weights</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>weights;<sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1ab72935d592516e77511d0b5e703c0d41" kindref="member">Probability</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/>observation)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1ab72935d592516e77511d0b5e703c0d41" kindref="member">Probability</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>observation,<sp/>arma::vec&amp;<sp/>probs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a7063c1fb92f512f32bf44542c7528739" kindref="member">LogProbability</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/>observation)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a7063c1fb92f512f32bf44542c7528739" kindref="member">LogProbability</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>observation,<sp/>arma::vec&amp;<sp/>logProbs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1ab72935d592516e77511d0b5e703c0d41" kindref="member">Probability</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/>observation,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>component)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a7063c1fb92f512f32bf44542c7528739" kindref="member">LogProbability</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/>observation,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>component)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>arma::vec<sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a2c6f8d5bb4eacf7de767d2172b320756" kindref="member">Random</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FittingType<sp/>=<sp/>EMFit&lt;&gt;&gt;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1ad33ec5cf10980e0b315280ea51ef41ed" kindref="member">Train</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>observations,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>trials<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useExistingModel<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FittingType<sp/>fitter<sp/>=<sp/>FittingType());</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FittingType<sp/>=<sp/>EMFit&lt;&gt;&gt;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1ad33ec5cf10980e0b315280ea51ef41ed" kindref="member">Train</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>observations,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/>probabilities,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>trials<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useExistingModel<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FittingType<sp/>fitter<sp/>=<sp/>FittingType());</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a4e6c4f4110899f4f4fd18b46d3d141c6" kindref="member">Classify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>observations,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Row&lt;size_t&gt;&amp;<sp/>labels)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1gmm_1_1GMM_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>LogLikelihood(</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>dataPoints,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;distribution::GaussianDistribution&gt;&amp;<sp/>distsL,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/>weights)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal">};</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>gmm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gmm_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/gmm.hpp"/>
  </compounddef>
</doxygen>
