<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="svd__convolution_8hpp" kind="file" language="C++">
    <compoundname>svd_convolution.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="border__modes_8hpp" local="yes">border_modes.hpp</includes>
    <includes refid="fft__convolution_8hpp" local="yes">fft_convolution.hpp</includes>
    <includes refid="naive__convolution_8hpp" local="yes">naive_convolution.hpp</includes>
    <includedby refid="atrous__convolution_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/ann/layer/atrous_convolution.hpp</includedby>
    <includedby refid="convolution_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/ann/layer/convolution.hpp</includedby>
    <includedby refid="transposed__convolution_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/ann/layer/transposed_convolution.hpp</includedby>
    <incdepgraph>
      <node id="27565">
        <label>list</label>
      </node>
      <node id="27562">
        <label>atomic</label>
      </node>
      <node id="27552">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="27528">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="27564">
        <label>iomanip</label>
      </node>
      <node id="27537">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="27538" relation="include">
        </childnode>
        <childnode refid="27540" relation="include">
        </childnode>
      </node>
      <node id="27520">
        <label>cstdint</label>
      </node>
      <node id="27529">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="27536">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="27559">
        <label>arma_config.hpp</label>
      </node>
      <node id="27549">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="27516">
        <label>cmath</label>
      </node>
      <node id="27535">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="27524">
        <label>stdexcept</label>
      </node>
      <node id="27544">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="27529" relation="include">
        </childnode>
        <childnode refid="27531" relation="include">
        </childnode>
        <childnode refid="27532" relation="include">
        </childnode>
        <childnode refid="27530" relation="include">
        </childnode>
      </node>
      <node id="27568">
        <label>string</label>
      </node>
      <node id="27556">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="27557" relation="include">
        </childnode>
        <childnode refid="27523" relation="include">
        </childnode>
      </node>
      <node id="27566">
        <label>map</label>
      </node>
      <node id="27518">
        <label>cfloat</label>
      </node>
      <node id="27548">
        <label>boost/variant.hpp</label>
      </node>
      <node id="27570">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="27532">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="27555">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="27556" relation="include">
        </childnode>
        <childnode refid="27532" relation="include">
        </childnode>
        <childnode refid="27539" relation="include">
        </childnode>
        <childnode refid="27557" relation="include">
        </childnode>
      </node>
      <node id="27545">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="27543">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="27529" relation="include">
        </childnode>
        <childnode refid="27531" relation="include">
        </childnode>
        <childnode refid="27532" relation="include">
        </childnode>
        <childnode refid="27530" relation="include">
        </childnode>
      </node>
      <node id="27546">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="27529" relation="include">
        </childnode>
        <childnode refid="27531" relation="include">
        </childnode>
        <childnode refid="27532" relation="include">
        </childnode>
        <childnode refid="27530" relation="include">
        </childnode>
      </node>
      <node id="27534">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="27573">
        <label>fft_convolution.hpp</label>
        <link refid="fft__convolution_8hpp"/>
        <childnode refid="27515" relation="include">
        </childnode>
        <childnode refid="27572" relation="include">
        </childnode>
      </node>
      <node id="27554">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="27530" relation="include">
        </childnode>
        <childnode refid="27531" relation="include">
        </childnode>
        <childnode refid="27532" relation="include">
        </childnode>
        <childnode refid="27542" relation="include">
        </childnode>
        <childnode refid="27551" relation="include">
        </childnode>
      </node>
      <node id="27558">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="27559" relation="include">
        </childnode>
      </node>
      <node id="27574">
        <label>naive_convolution.hpp</label>
        <link refid="naive__convolution_8hpp"/>
        <childnode refid="27515" relation="include">
        </childnode>
        <childnode refid="27572" relation="include">
        </childnode>
      </node>
      <node id="27560">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="27515">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="27516" relation="include">
        </childnode>
        <childnode refid="27517" relation="include">
        </childnode>
        <childnode refid="27518" relation="include">
        </childnode>
        <childnode refid="27519" relation="include">
        </childnode>
        <childnode refid="27520" relation="include">
        </childnode>
        <childnode refid="27521" relation="include">
        </childnode>
        <childnode refid="27522" relation="include">
        </childnode>
        <childnode refid="27523" relation="include">
        </childnode>
        <childnode refid="27524" relation="include">
        </childnode>
        <childnode refid="27525" relation="include">
        </childnode>
        <childnode refid="27526" relation="include">
        </childnode>
        <childnode refid="27527" relation="include">
        </childnode>
        <childnode refid="27528" relation="include">
        </childnode>
        <childnode refid="27529" relation="include">
        </childnode>
        <childnode refid="27530" relation="include">
        </childnode>
        <childnode refid="27531" relation="include">
        </childnode>
        <childnode refid="27532" relation="include">
        </childnode>
        <childnode refid="27533" relation="include">
        </childnode>
        <childnode refid="27534" relation="include">
        </childnode>
        <childnode refid="27535" relation="include">
        </childnode>
        <childnode refid="27536" relation="include">
        </childnode>
        <childnode refid="27537" relation="include">
        </childnode>
        <childnode refid="27541" relation="include">
        </childnode>
        <childnode refid="27542" relation="include">
        </childnode>
        <childnode refid="27543" relation="include">
        </childnode>
        <childnode refid="27544" relation="include">
        </childnode>
        <childnode refid="27545" relation="include">
        </childnode>
        <childnode refid="27546" relation="include">
        </childnode>
        <childnode refid="27547" relation="include">
        </childnode>
        <childnode refid="27553" relation="include">
        </childnode>
        <childnode refid="27554" relation="include">
        </childnode>
        <childnode refid="27551" relation="include">
        </childnode>
        <childnode refid="27555" relation="include">
        </childnode>
        <childnode refid="27558" relation="include">
        </childnode>
        <childnode refid="27560" relation="include">
        </childnode>
        <childnode refid="27561" relation="include">
        </childnode>
        <childnode refid="27570" relation="include">
        </childnode>
        <childnode refid="27571" relation="include">
        </childnode>
      </node>
      <node id="27521">
        <label>cstdio</label>
      </node>
      <node id="27525">
        <label>tuple</label>
      </node>
      <node id="27530">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="27547">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="27530" relation="include">
        </childnode>
        <childnode refid="27531" relation="include">
        </childnode>
        <childnode refid="27532" relation="include">
        </childnode>
        <childnode refid="27534" relation="include">
        </childnode>
        <childnode refid="27548" relation="include">
        </childnode>
        <childnode refid="27549" relation="include">
        </childnode>
        <childnode refid="27550" relation="include">
        </childnode>
        <childnode refid="27551" relation="include">
        </childnode>
      </node>
      <node id="27526">
        <label>utility</label>
      </node>
      <node id="27550">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="27541">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="27538">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="27539" relation="include">
        </childnode>
      </node>
      <node id="27561">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="27562" relation="include">
        </childnode>
        <childnode refid="27563" relation="include">
        </childnode>
        <childnode refid="27564" relation="include">
        </childnode>
        <childnode refid="27565" relation="include">
        </childnode>
        <childnode refid="27566" relation="include">
        </childnode>
        <childnode refid="27567" relation="include">
        </childnode>
        <childnode refid="27568" relation="include">
        </childnode>
        <childnode refid="27569" relation="include">
        </childnode>
      </node>
      <node id="27539">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="27553">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="27551" relation="include">
        </childnode>
        <childnode refid="27547" relation="include">
        </childnode>
        <childnode refid="27554" relation="include">
        </childnode>
      </node>
      <node id="27522">
        <label>cstdlib</label>
      </node>
      <node id="27517">
        <label>cctype</label>
      </node>
      <node id="27514">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/convolution_rules/svd_convolution.hpp</label>
        <link refid="svd__convolution_8hpp"/>
        <childnode refid="27515" relation="include">
        </childnode>
        <childnode refid="27572" relation="include">
        </childnode>
        <childnode refid="27573" relation="include">
        </childnode>
        <childnode refid="27574" relation="include">
        </childnode>
      </node>
      <node id="27540">
        <label>unordered_map</label>
      </node>
      <node id="27519">
        <label>climits</label>
      </node>
      <node id="27567">
        <label>mutex</label>
      </node>
      <node id="27563">
        <label>chrono</label>
      </node>
      <node id="27571">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="27569">
        <label>thread</label>
      </node>
      <node id="27557">
        <label>type_traits</label>
      </node>
      <node id="27533">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="27527">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="27551">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="27529" relation="include">
        </childnode>
        <childnode refid="27530" relation="include">
        </childnode>
        <childnode refid="27531" relation="include">
        </childnode>
        <childnode refid="27532" relation="include">
        </childnode>
        <childnode refid="27552" relation="include">
        </childnode>
      </node>
      <node id="27572">
        <label>border_modes.hpp</label>
        <link refid="border__modes_8hpp"/>
      </node>
      <node id="27523">
        <label>cstring</label>
      </node>
      <node id="27542">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="27531">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="27587">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/convolution.hpp</label>
        <link refid="convolution_8hpp"/>
        <childnode refid="27577" relation="include">
        </childnode>
      </node>
      <node id="27577">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="27578" relation="include">
        </childnode>
        <childnode refid="27579" relation="include">
        </childnode>
        <childnode refid="27584" relation="include">
        </childnode>
        <childnode refid="27585" relation="include">
        </childnode>
        <childnode refid="27581" relation="include">
        </childnode>
        <childnode refid="27582" relation="include">
        </childnode>
        <childnode refid="27583" relation="include">
        </childnode>
        <childnode refid="27586" relation="include">
        </childnode>
      </node>
      <node id="27585">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/rnn.hpp</label>
        <link refid="rnn_8hpp"/>
      </node>
      <node id="27581">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/categorical_dqn.hpp</label>
        <link refid="categorical__dqn_8hpp"/>
      </node>
      <node id="27588">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/transposed_convolution.hpp</label>
        <link refid="transposed__convolution_8hpp"/>
        <childnode refid="27577" relation="include">
        </childnode>
      </node>
      <node id="27578">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/brnn.hpp</label>
        <link refid="brnn_8hpp"/>
      </node>
      <node id="27584">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer_names.hpp</label>
        <link refid="layer__names_8hpp"/>
      </node>
      <node id="27586">
        <label>/home/aakash/mlpack/src/mlpack/tests/custom_layer.hpp</label>
        <link refid="custom__layer_8hpp"/>
      </node>
      <node id="27575">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/convolution_rules/svd_convolution.hpp</label>
        <link refid="svd__convolution_8hpp"/>
        <childnode refid="27576" relation="include">
        </childnode>
        <childnode refid="27587" relation="include">
        </childnode>
        <childnode refid="27588" relation="include">
        </childnode>
      </node>
      <node id="27579">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp</label>
        <link refid="ffn_8hpp"/>
        <childnode refid="27580" relation="include">
        </childnode>
        <childnode refid="27581" relation="include">
        </childnode>
        <childnode refid="27582" relation="include">
        </childnode>
        <childnode refid="27583" relation="include">
        </childnode>
      </node>
      <node id="27582">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp</label>
        <link refid="dueling__dqn_8hpp"/>
      </node>
      <node id="27580">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp</label>
        <link refid="gan_8hpp"/>
      </node>
      <node id="27576">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/atrous_convolution.hpp</label>
        <link refid="atrous__convolution_8hpp"/>
        <childnode refid="27577" relation="include">
        </childnode>
      </node>
      <node id="27583">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/simple_dqn.hpp</label>
        <link refid="simple__dqn_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1ann_1_1SVDConvolution" prot="public">mlpack::ann::SVDConvolution</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1ann">mlpack::ann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Marcus Edel</para></simplesect>
Implementation of the convolution using the singular value decomposition to speed up the computation.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_ANN_CONVOLUTION_RULES_SVD_CONVOLUTION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_ANN_CONVOLUTION_RULES_SVD_CONVOLUTION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="border__modes_8hpp" kindref="compound">border_modes.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fft__convolution_8hpp" kindref="compound">fft_convolution.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="naive__convolution_8hpp" kindref="compound">naive_convolution.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ann<sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BorderMode<sp/>=<sp/>FullConvolution&gt;</highlight></codeline>
<codeline lineno="38" refid="classmlpack_1_1ann_1_1SVDConvolution" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1ann_1_1SVDConvolution" kindref="compound">SVDConvolution</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Perform<sp/>a<sp/>convolution<sp/>(valid<sp/>or<sp/>full<sp/>mode)<sp/>using<sp/>singular<sp/>value</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/>*<sp/>decomposition.<sp/>By<sp/>using<sp/>singular<sp/>value<sp/>decomposition<sp/>of<sp/>the<sp/>filter<sp/>matrix</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/>*<sp/>the<sp/>convolution<sp/>can<sp/>be<sp/>expressed<sp/>as<sp/>a<sp/>sum<sp/>of<sp/>outer<sp/>products.<sp/>Each<sp/>product</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/>*<sp/>can<sp/>be<sp/>computed<sp/>efficiently<sp/>as<sp/>convolution<sp/>with<sp/>a<sp/>row<sp/>and<sp/>a<sp/>column<sp/>vector.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/>*<sp/>The<sp/>individual<sp/>convolutions<sp/>are<sp/>computed<sp/>with<sp/>the<sp/>naive<sp/>implementation</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/>*<sp/>which<sp/>is<sp/>fast<sp/>if<sp/>the<sp/>filter<sp/>is<sp/>low-dimensional.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>input<sp/>Input<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>filter<sp/>Filter<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>conolution.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>output<sp/>Output<sp/>data<sp/>that<sp/>contains<sp/>the<sp/>results<sp/>of<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dW<sp/>Stride<sp/>of<sp/>filter<sp/>application<sp/>in<sp/>the<sp/>x<sp/>direction.</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dH<sp/>Stride<sp/>of<sp/>filter<sp/>application<sp/>in<sp/>the<sp/>y<sp/>direction.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="56" refid="classmlpack_1_1ann_1_1SVDConvolution_1aaff7a735c01552aa46deafa7a7331b1c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1SVDConvolution_1aaff7a735c01552aa46deafa7a7331b1c" kindref="member">Convolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>filter,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>output)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>naive<sp/>convolution<sp/>in<sp/>case<sp/>the<sp/>filter<sp/>isn&apos;t<sp/>two<sp/>dimensional<sp/>or<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filter<sp/>is<sp/>bigger<sp/>than<sp/>the<sp/>input.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filter.n_rows<sp/>&gt;<sp/>input.n_rows<sp/>||<sp/>filter.n_cols<sp/>&gt;<sp/>input.n_cols<sp/>||</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter.n_rows<sp/>==<sp/>1<sp/>||<sp/>filter.n_cols<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1NaiveConvolution_1adde8ddb6df77ab42370e7c28c26af974" kindref="member">NaiveConvolution&lt;BorderMode&gt;::Convolution</ref>(input,<sp/>filter,<sp/>output);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;<sp/>U,<sp/>V,<sp/>subOutput;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::Col&lt;eT&gt;<sp/>s;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::svd_econ(U,<sp/>s,<sp/>V,<sp/>filter);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rank<sp/>approximation<sp/>using<sp/>the<sp/>singular<sp/>values<sp/>calculated<sp/>with<sp/>singular</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>decomposition<sp/>of<sp/>dense<sp/>filter<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>arma::sum(s<sp/>&gt;<sp/>(s.n_elem<sp/>*<sp/>arma::max(s)<sp/>*</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::datum::eps));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>for<sp/>separability<sp/>based<sp/>on<sp/>the<sp/>rank<sp/>of<sp/>the<sp/>kernel<sp/>and<sp/>take</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>advantage<sp/>of<sp/>the<sp/>low<sp/>rank.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rank<sp/>*<sp/>(filter.n_rows<sp/>+<sp/>filter.n_cols)<sp/>&lt;<sp/>filter.n_elem)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;<sp/>subFilter<sp/>=<sp/>V.unsafe_col(0)<sp/>*<sp/>s(0);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1NaiveConvolution_1adde8ddb6df77ab42370e7c28c26af974" kindref="member">NaiveConvolution&lt;BorderMode&gt;::Convolution</ref>(input,<sp/>subFilter,<sp/>subOutput);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subOutput<sp/>=<sp/>subOutput.t();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1NaiveConvolution_1adde8ddb6df77ab42370e7c28c26af974" kindref="member">NaiveConvolution&lt;BorderMode&gt;::Convolution</ref>(subOutput,<sp/>U.unsafe_col(0),</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;<sp/>temp;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>1;<sp/>r<sp/>&lt;<sp/>rank;<sp/>r++)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subFilter<sp/>=<sp/>V.unsafe_col(r)<sp/>*<sp/>s(r);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1NaiveConvolution_1adde8ddb6df77ab42370e7c28c26af974" kindref="member">NaiveConvolution&lt;BorderMode&gt;::Convolution</ref>(input,<sp/>subFilter,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subOutput);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subOutput<sp/>=<sp/>subOutput.t();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1NaiveConvolution_1adde8ddb6df77ab42370e7c28c26af974" kindref="member">NaiveConvolution&lt;BorderMode&gt;::Convolution</ref>(subOutput,<sp/>U.unsafe_col(r),</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>+=<sp/>temp;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/>output.t();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1FFTConvolution_1a2982c8389e46e6ba1a839e8cd23eb5f9" kindref="member">FFTConvolution&lt;BorderMode&gt;::Convolution</ref>(input,<sp/>filter,<sp/>output);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Perform<sp/>a<sp/>convolution<sp/>using<sp/>3rd<sp/>order<sp/>tensors.</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>input<sp/>Input<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>filter<sp/>Filter<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>conolution.</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>output<sp/>Output<sp/>data<sp/>that<sp/>contains<sp/>the<sp/>results<sp/>of<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dW<sp/>Stride<sp/>of<sp/>filter<sp/>application<sp/>in<sp/>the<sp/>x<sp/>direction.</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dH<sp/>Stride<sp/>of<sp/>filter<sp/>application<sp/>in<sp/>the<sp/>y<sp/>direction.</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="122" refid="classmlpack_1_1ann_1_1SVDConvolution_1aa37ddacedb28e6dce994110781a184f6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1SVDConvolution_1aa37ddacedb28e6dce994110781a184f6" kindref="member">Convolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Cube&lt;eT&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Cube&lt;eT&gt;&amp;<sp/>filter,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Cube&lt;eT&gt;&amp;<sp/>output)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;<sp/>convOutput;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1SVDConvolution_1aaff7a735c01552aa46deafa7a7331b1c" kindref="member">SVDConvolution&lt;BorderMode&gt;::Convolution</ref>(input.slice(0),<sp/>filter.slice(0),</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convOutput);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>arma::Cube&lt;eT&gt;(convOutput.n_rows,<sp/>convOutput.n_cols,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.n_slices);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>output.slice(0)<sp/>=<sp/>convOutput;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>input.n_slices;<sp/>++i)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1SVDConvolution_1aaff7a735c01552aa46deafa7a7331b1c" kindref="member">SVDConvolution&lt;BorderMode&gt;::Convolution</ref>(input.slice(i),<sp/>filter.slice(i),</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.slice(i));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Perform<sp/>a<sp/>convolution<sp/>using<sp/>dense<sp/>matrix<sp/>as<sp/>input<sp/>and<sp/>a<sp/>3rd<sp/>order<sp/>tensors</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/>*<sp/>as<sp/>filter<sp/>and<sp/>output.</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>input<sp/>Input<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>filter<sp/>Filter<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>conolution.</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>output<sp/>Output<sp/>data<sp/>that<sp/>contains<sp/>the<sp/>results<sp/>of<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dW<sp/>Stride<sp/>of<sp/>filter<sp/>application<sp/>in<sp/>the<sp/>x<sp/>direction.</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dH<sp/>Stride<sp/>of<sp/>filter<sp/>application<sp/>in<sp/>the<sp/>y<sp/>direction.</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="152" refid="classmlpack_1_1ann_1_1SVDConvolution_1ae95a7b7e102c7b7b92666bd6e7e04c22" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1SVDConvolution_1ae95a7b7e102c7b7b92666bd6e7e04c22" kindref="member">Convolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Cube&lt;eT&gt;&amp;<sp/>filter,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Cube&lt;eT&gt;&amp;<sp/>output)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;<sp/>convOutput;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1SVDConvolution_1aaff7a735c01552aa46deafa7a7331b1c" kindref="member">SVDConvolution&lt;BorderMode&gt;::Convolution</ref>(input,<sp/>filter.slice(0),<sp/>convOutput);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>arma::Cube&lt;eT&gt;(convOutput.n_rows,<sp/>convOutput.n_cols,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter.n_slices);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>output.slice(0)<sp/>=<sp/>convOutput;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>filter.n_slices;<sp/>++i)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1SVDConvolution_1aaff7a735c01552aa46deafa7a7331b1c" kindref="member">SVDConvolution&lt;BorderMode&gt;::Convolution</ref>(input,<sp/>filter.slice(i),</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.slice(i));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Perform<sp/>a<sp/>convolution<sp/>using<sp/>a<sp/>3rd<sp/>order<sp/>tensors<sp/>as<sp/>input<sp/>and<sp/>output<sp/>and<sp/>a</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/>*<sp/>dense<sp/>matrix<sp/>as<sp/>filter.</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>input<sp/>Input<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>filter<sp/>Filter<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>conolution.</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>output<sp/>Output<sp/>data<sp/>that<sp/>contains<sp/>the<sp/>results<sp/>of<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dW<sp/>Stride<sp/>of<sp/>filter<sp/>application<sp/>in<sp/>the<sp/>x<sp/>direction.</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dH<sp/>Stride<sp/>of<sp/>filter<sp/>application<sp/>in<sp/>the<sp/>y<sp/>direction.</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="181" refid="classmlpack_1_1ann_1_1SVDConvolution_1ae14e839c68e6e5d32d8083c3d364ef64" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1SVDConvolution_1ae14e839c68e6e5d32d8083c3d364ef64" kindref="member">Convolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Cube&lt;eT&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>filter,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Cube&lt;eT&gt;&amp;<sp/>output)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;<sp/>convOutput;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1SVDConvolution_1aaff7a735c01552aa46deafa7a7331b1c" kindref="member">SVDConvolution&lt;BorderMode&gt;::Convolution</ref>(input.slice(0),<sp/>filter,<sp/>convOutput);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>arma::Cube&lt;eT&gt;(convOutput.n_rows,<sp/>convOutput.n_cols,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.n_slices);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>output.slice(0)<sp/>=<sp/>convOutput;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>input.n_slices;<sp/>++i)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1SVDConvolution_1aaff7a735c01552aa46deafa7a7331b1c" kindref="member">SVDConvolution&lt;BorderMode&gt;::Convolution</ref>(input.slice(i),<sp/>filter,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.slice(i));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal">};<sp/><sp/></highlight><highlight class="comment">//<sp/>class<sp/>SVDConvolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/convolution_rules/svd_convolution.hpp"/>
  </compounddef>
</doxygen>
