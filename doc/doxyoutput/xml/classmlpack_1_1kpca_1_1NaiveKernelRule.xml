<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1kpca_1_1NaiveKernelRule" kind="class" language="C++" prot="public">
    <compoundname>mlpack::kpca::NaiveKernelRule</compoundname>
    <includes refid="naive__method_8hpp" local="no">naive_method.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename KernelType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmlpack_1_1kpca_1_1NaiveKernelRule_1a38b9096fb257a933f5681831c9654671" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void ApplyKernelMatrix</definition>
        <argsstring>(const arma::mat &amp;data, arma::mat &amp;transformedData, arma::vec &amp;eigval, arma::mat &amp;eigvec, const size_t, KernelType kernel=KernelType())</argsstring>
        <name>ApplyKernelMatrix</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>transformedData</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>eigval</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>eigvec</declname>
        </param>
        <param>
          <type>const size_t</type>
        </param>
        <param>
          <type>KernelType</type>
          <declname>kernel</declname>
          <defval>KernelType()</defval>
        </param>
        <briefdescription>
<para>Construct the exact kernel matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data points. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transformedData</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix to output results into. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eigval</parametername>
</parameternamelist>
<parameterdescription>
<para>KPCA eigenvalues will be written to this vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eigvec</parametername>
</parameternamelist>
<parameterdescription>
<para>KPCA eigenvectors will be written to this matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(rank) Rank to be used for matrix approximation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kernel</parametername>
</parameternamelist>
<parameterdescription>
<para>Kernel to be used for computation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kernel_pca/kernel_rules/naive_method.hpp" line="35" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kernel_pca/kernel_rules/naive_method.hpp" bodystart="35" bodyend="92"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/kernel_pca/kernel_rules/naive_method.hpp" line="23" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kernel_pca/kernel_rules/naive_method.hpp" bodystart="22" bodyend="93"/>
    <listofallmembers>
      <member refid="classmlpack_1_1kpca_1_1NaiveKernelRule_1a38b9096fb257a933f5681831c9654671" prot="public" virt="non-virtual"><scope>mlpack::kpca::NaiveKernelRule</scope><name>ApplyKernelMatrix</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
