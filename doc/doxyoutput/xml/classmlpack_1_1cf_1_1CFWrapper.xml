<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1cf_1_1CFWrapper" kind="class" language="C++" prot="public">
    <compoundname>mlpack::cf::CFWrapper</compoundname>
    <basecompoundref refid="classmlpack_1_1cf_1_1CFWrapperBase" prot="public" virt="non-virtual">CFWrapperBase</basecompoundref>
    <includes refid="cf__model_8hpp" local="no">cf_model.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename DecompositionPolicy</type>
      </param>
      <param>
        <type>typename NormalizationPolicy</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="classmlpack_1_1cf_1_1CFWrapper_1ab3a99733c27e27fe3b5204e5c29fa58b" prot="protected" static="no">
        <type><ref refid="classmlpack_1_1cf_1_1CFType" kindref="compound">CFType</ref>&lt; DecompositionPolicy, NormalizationPolicy &gt;</type>
        <definition>typedef CFType&lt;DecompositionPolicy, NormalizationPolicy&gt; CFModelType</definition>
        <argsstring></argsstring>
        <name>CFModelType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="91" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classmlpack_1_1cf_1_1CFWrapper_1ac41c0dab695bad32610adb98813a8e03" prot="protected" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1cf_1_1CFWrapper_1ab3a99733c27e27fe3b5204e5c29fa58b" kindref="member">CFModelType</ref></type>
        <definition>CFModelType cf</definition>
        <argsstring></argsstring>
        <name>cf</name>
        <briefdescription>
<para>This is the CF object that we are wrapping. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="156" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFWrapper_1aeed748fe1f1ae910198e8c3d454d9a05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CFWrapper</definition>
        <argsstring>()</argsstring>
        <name>CFWrapper</name>
        <briefdescription>
<para>Create the <ref refid="classmlpack_1_1cf_1_1CFWrapper" kindref="compound">CFWrapper</ref> object, using default parameters to initialize the held CF object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="96" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFWrapper_1a6c9fe1dd052abe1ea6f41f508d8a12f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CFWrapper</definition>
        <argsstring>(const arma::mat &amp;data, const DecompositionPolicy &amp;decomposition, const size_t numUsersForSimilarity, const size_t rank, const size_t maxIterations, const size_t minResidue, const bool mit)</argsstring>
        <name>CFWrapper</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const DecompositionPolicy &amp;</type>
          <declname>decomposition</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>numUsersForSimilarity</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>rank</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>maxIterations</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>minResidue</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>mit</declname>
        </param>
        <briefdescription>
<para>Create the <ref refid="classmlpack_1_1cf_1_1CFWrapper" kindref="compound">CFWrapper</ref> object, initializing the held CF object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="99" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" bodystart="99" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFWrapper_1ab10ab909d67a29b5d9eb7b70c68c0265" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual ~CFWrapper</definition>
        <argsstring>()</argsstring>
        <name>~CFWrapper</name>
        <briefdescription>
<para>Destroy the <ref refid="classmlpack_1_1cf_1_1CFWrapper" kindref="compound">CFWrapper</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="121" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFWrapper_1a4408b593924d45ed5703e81a27c89a4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1cf_1_1CFWrapper_1ab3a99733c27e27fe3b5204e5c29fa58b" kindref="member">CFModelType</ref> &amp;</type>
        <definition>CFModelType&amp; CF</definition>
        <argsstring>()</argsstring>
        <name>CF</name>
        <briefdescription>
<para>Get the <ref refid="classmlpack_1_1cf_1_1CFType" kindref="compound">CFType</ref> object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="124" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" bodystart="124" bodyend="124"/>
        <references refid="classmlpack_1_1cf_1_1CFWrapperBase_1aefd1ffc070784adf594bd91a2469a6c7">CFWrapperBase::GetRecommendations</references>
        <references refid="classmlpack_1_1cf_1_1CFWrapperBase_1a3de57e8cd8b989a1e7e719c80f39d07b">CFWrapperBase::Predict</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFWrapper_1af9bba55939ac1cb5bc1c4828094f502c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classmlpack_1_1cf_1_1CFWrapper" kindref="compound">CFWrapper</ref> *</type>
        <definition>virtual CFWrapper* Clone</definition>
        <argsstring>() const</argsstring>
        <name>Clone</name>
        <reimplements refid="classmlpack_1_1cf_1_1CFWrapperBase_1a390b40d2a1416852dd64201e55dac770">Clone</reimplements>
        <briefdescription>
<para>Clone the <ref refid="classmlpack_1_1cf_1_1CFWrapper" kindref="compound">CFWrapper</ref> object. This handles polymorphism correctly. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="118" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFWrapper_1aaa12de12e686286f465afa8a399677d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetRecommendations</definition>
        <argsstring>(const NeighborSearchTypes nsType, const InterpolationTypes interpolationType, const size_t numRecs, arma::Mat&lt; size_t &gt; &amp;recommendations)</argsstring>
        <name>GetRecommendations</name>
        <reimplements refid="classmlpack_1_1cf_1_1CFWrapperBase_1aefd1ffc070784adf594bd91a2469a6c7">GetRecommendations</reimplements>
        <param>
          <type>const <ref refid="namespacemlpack_1_1cf_1abde1eb199c5812cbca1a647cf1730732" kindref="member">NeighborSearchTypes</ref></type>
          <declname>nsType</declname>
        </param>
        <param>
          <type>const <ref refid="namespacemlpack_1_1cf_1a06410b91b9d0ee6d70901dd29775ecd5" kindref="member">InterpolationTypes</ref></type>
          <declname>interpolationType</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>numRecs</declname>
        </param>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>recommendations</declname>
        </param>
        <briefdescription>
<para>Compute recommendations for all users. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFWrapper_1ab3b85ddacc36d16322f28f5b5a113d0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void GetRecommendations</definition>
        <argsstring>(const NeighborSearchTypes nsType, const InterpolationTypes interpolationType, const size_t numRecs, arma::Mat&lt; size_t &gt; &amp;recommendations, const arma::Col&lt; size_t &gt; &amp;users)</argsstring>
        <name>GetRecommendations</name>
        <reimplements refid="classmlpack_1_1cf_1_1CFWrapperBase_1af9ad22de59a4e9396157809f41f6c5dc">GetRecommendations</reimplements>
        <param>
          <type>const <ref refid="namespacemlpack_1_1cf_1abde1eb199c5812cbca1a647cf1730732" kindref="member">NeighborSearchTypes</ref></type>
          <declname>nsType</declname>
        </param>
        <param>
          <type>const <ref refid="namespacemlpack_1_1cf_1a06410b91b9d0ee6d70901dd29775ecd5" kindref="member">InterpolationTypes</ref></type>
          <declname>interpolationType</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>numRecs</declname>
        </param>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>recommendations</declname>
        </param>
        <param>
          <type>const arma::Col&lt; size_t &gt; &amp;</type>
          <declname>users</declname>
        </param>
        <briefdescription>
<para>Compute recommendations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFWrapper_1adeae1e56456f3c8c71d0da5542ee4415" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Predict</definition>
        <argsstring>(const NeighborSearchTypes nsType, const InterpolationTypes interpolationType, const arma::Mat&lt; size_t &gt; &amp;combinations, arma::vec &amp;predictions)</argsstring>
        <name>Predict</name>
        <reimplements refid="classmlpack_1_1cf_1_1CFWrapperBase_1a3de57e8cd8b989a1e7e719c80f39d07b">Predict</reimplements>
        <param>
          <type>const <ref refid="namespacemlpack_1_1cf_1abde1eb199c5812cbca1a647cf1730732" kindref="member">NeighborSearchTypes</ref></type>
          <declname>nsType</declname>
        </param>
        <param>
          <type>const <ref refid="namespacemlpack_1_1cf_1a06410b91b9d0ee6d70901dd29775ecd5" kindref="member">InterpolationTypes</ref></type>
          <declname>interpolationType</declname>
        </param>
        <param>
          <type>const arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>combinations</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>predictions</declname>
        </param>
        <briefdescription>
<para>Compute predictions for users. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1cf_1_1CFWrapper_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="149" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" bodystart="149" bodyend="152"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classmlpack_1_1cf_1_1CFWrapper" kindref="compound">CFWrapper</ref> class wraps the functionality of all CF types. </para>    </briefdescription>
    <detaileddescription>
<para>If special handling is needed for a future CF type, this class can be extended. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="549">
        <label>CFWrapper&lt; DecompositionPolicy, NormalizationPolicy &gt;</label>
        <link refid="classmlpack_1_1cf_1_1CFWrapper"/>
        <childnode refid="550" relation="public-inheritance">
        </childnode>
      </node>
      <node id="550">
        <label>CFWrapperBase</label>
        <link refid="classmlpack_1_1cf_1_1CFWrapperBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="553">
        <label>CFType&lt; DecompositionPolicy, NormalizationPolicy &gt;</label>
        <link refid="classmlpack_1_1cf_1_1CFType"/>
        <childnode refid="554" relation="template-instance">
          <edgelabel>&lt; DecompositionPolicy, NormalizationPolicy &gt;</edgelabel>
        </childnode>
      </node>
      <node id="551">
        <label>CFWrapper&lt; DecompositionPolicy, NormalizationPolicy &gt;</label>
        <link refid="classmlpack_1_1cf_1_1CFWrapper"/>
        <childnode refid="552" relation="public-inheritance">
        </childnode>
        <childnode refid="553" relation="usage">
          <edgelabel>cf</edgelabel>
        </childnode>
      </node>
      <node id="554">
        <label>CFType&lt; DecompositionPolicy, NormalizationType &gt;</label>
        <link refid="classmlpack_1_1cf_1_1CFType"/>
      </node>
      <node id="552">
        <label>CFWrapperBase</label>
        <link refid="classmlpack_1_1cf_1_1CFWrapperBase"/>
      </node>
    </collaborationgraph>
    <location file="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" line="89" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp" bodystart="88" bodyend="157"/>
    <listofallmembers>
      <member refid="classmlpack_1_1cf_1_1CFWrapper_1ac41c0dab695bad32610adb98813a8e03" prot="protected" virt="non-virtual"><scope>mlpack::cf::CFWrapper</scope><name>cf</name></member>
      <member refid="classmlpack_1_1cf_1_1CFWrapper_1a4408b593924d45ed5703e81a27c89a4f" prot="public" virt="non-virtual"><scope>mlpack::cf::CFWrapper</scope><name>CF</name></member>
      <member refid="classmlpack_1_1cf_1_1CFWrapper_1ab3a99733c27e27fe3b5204e5c29fa58b" prot="protected" virt="non-virtual"><scope>mlpack::cf::CFWrapper</scope><name>CFModelType</name></member>
      <member refid="classmlpack_1_1cf_1_1CFWrapper_1aeed748fe1f1ae910198e8c3d454d9a05" prot="public" virt="non-virtual"><scope>mlpack::cf::CFWrapper</scope><name>CFWrapper</name></member>
      <member refid="classmlpack_1_1cf_1_1CFWrapper_1a6c9fe1dd052abe1ea6f41f508d8a12f3" prot="public" virt="non-virtual"><scope>mlpack::cf::CFWrapper</scope><name>CFWrapper</name></member>
      <member refid="classmlpack_1_1cf_1_1CFWrapperBase_1a5536395b99c030b97a2860df3e2ae5c4" prot="public" virt="non-virtual"><scope>mlpack::cf::CFWrapper</scope><name>CFWrapperBase</name></member>
      <member refid="classmlpack_1_1cf_1_1CFWrapper_1af9bba55939ac1cb5bc1c4828094f502c" prot="public" virt="virtual"><scope>mlpack::cf::CFWrapper</scope><name>Clone</name></member>
      <member refid="classmlpack_1_1cf_1_1CFWrapper_1aaa12de12e686286f465afa8a399677d2" prot="public" virt="virtual"><scope>mlpack::cf::CFWrapper</scope><name>GetRecommendations</name></member>
      <member refid="classmlpack_1_1cf_1_1CFWrapper_1ab3b85ddacc36d16322f28f5b5a113d0d" prot="public" virt="virtual"><scope>mlpack::cf::CFWrapper</scope><name>GetRecommendations</name></member>
      <member refid="classmlpack_1_1cf_1_1CFWrapper_1adeae1e56456f3c8c71d0da5542ee4415" prot="public" virt="virtual"><scope>mlpack::cf::CFWrapper</scope><name>Predict</name></member>
      <member refid="classmlpack_1_1cf_1_1CFWrapper_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::cf::CFWrapper</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1cf_1_1CFWrapper_1ab10ab909d67a29b5d9eb7b70c68c0265" prot="public" virt="virtual"><scope>mlpack::cf::CFWrapper</scope><name>~CFWrapper</name></member>
      <member refid="classmlpack_1_1cf_1_1CFWrapperBase_1ac017d61192618af5a5f70a671c2a886b" prot="public" virt="virtual"><scope>mlpack::cf::CFWrapper</scope><name>~CFWrapperBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
