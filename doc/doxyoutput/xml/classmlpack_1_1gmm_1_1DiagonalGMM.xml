<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1gmm_1_1DiagonalGMM" kind="class" language="C++" prot="public">
    <compoundname>mlpack::gmm::DiagonalGMM</compoundname>
    <includes refid="diagonal__gmm_8hpp" local="no">diagonal_gmm.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1gmm_1_1DiagonalGMM_1a24ddaaffe28b96a6d94d9c12681a03b9" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t dimensionality</definition>
        <argsstring></argsstring>
        <name>dimensionality</name>
        <briefdescription>
<para>The dimensionality of the model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="80" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1gmm_1_1DiagonalGMM_1aaa98b6c940395b93370880b4c446c29d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classmlpack_1_1distribution_1_1DiagonalGaussianDistribution" kindref="compound">distribution::DiagonalGaussianDistribution</ref> &gt;</type>
        <definition>std::vector&lt;distribution::DiagonalGaussianDistribution&gt; dists</definition>
        <argsstring></argsstring>
        <name>dists</name>
        <briefdescription>
<para>Vector of Gaussians. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="83" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1gmm_1_1DiagonalGMM_1a61696e781157d6276e7ef7786e5ea3d7" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t gaussians</definition>
        <argsstring></argsstring>
        <name>gaussians</name>
        <briefdescription>
<para>The number of Gaussians in the model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="78" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1gmm_1_1DiagonalGMM_1ab88610abad7d31c50287ddd63847d81c" prot="private" static="no" mutable="no">
        <type>arma::vec</type>
        <definition>arma::vec weights</definition>
        <argsstring></argsstring>
        <name>weights</name>
        <briefdescription>
<para>Vector of a priori weights for each Gaussian. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="86" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1gmm_1_1DiagonalGMM_1a789ea6c102741e2b8305042a12b933fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DiagonalGMM</definition>
        <argsstring>()</argsstring>
        <name>DiagonalGMM</name>
        <briefdescription>
<para>Create an empty Diagonal Gaussian Mixture Model, with zero gaussians. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="92" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" bodystart="92" bodyend="101"/>
        <referencedby refid="classmlpack_1_1gmm_1_1DiagonalGMM_1af7d5a7ba750481b1183248c762058196" compoundref="diagonal__gmm_8hpp" startline="118" endline="123">DiagonalGMM::DiagonalGMM</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1gmm_1_1DiagonalGMM_1aa4f5bdc8cf6f346d6cad2643cb0eb095" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DiagonalGMM</definition>
        <argsstring>(const size_t gaussians, const size_t dimensionality)</argsstring>
        <name>DiagonalGMM</name>
        <param>
          <type>const size_t</type>
          <declname>gaussians</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>dimensionality</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classmlpack_1_1gmm_1_1GMM" kindref="compound">GMM</ref> with the given number of Gaussians, each of which have the specified dimensionality. </para>        </briefdescription>
        <detaileddescription>
<para>The means and covariances will be set to 0.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gaussians</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of Gaussians in this <ref refid="classmlpack_1_1gmm_1_1DiagonalGMM" kindref="compound">DiagonalGMM</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dimensionality</parametername>
</parameternamelist>
<parameterdescription>
<para>Dimensionality of each Gaussian. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1gmm_1_1DiagonalGMM_1af7d5a7ba750481b1183248c762058196" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DiagonalGMM</definition>
        <argsstring>(const std::vector&lt; distribution::DiagonalGaussianDistribution &gt; &amp;dists, const arma::vec &amp;weights)</argsstring>
        <name>DiagonalGMM</name>
        <param>
          <type>const std::vector&lt; <ref refid="classmlpack_1_1distribution_1_1DiagonalGaussianDistribution" kindref="compound">distribution::DiagonalGaussianDistribution</ref> &gt; &amp;</type>
          <declname>dists</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>weights</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classmlpack_1_1gmm_1_1DiagonalGMM" kindref="compound">DiagonalGMM</ref> with the given dists and weights. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dists</parametername>
</parameternamelist>
<parameterdescription>
<para>Distributions of the model. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weights</parametername>
</parameternamelist>
<parameterdescription>
<para>Weights of the model. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="118" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" bodystart="118" bodyend="123"/>
        <references refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a789ea6c102741e2b8305042a12b933fb" compoundref="diagonal__gmm_8hpp" startline="92" endline="101">DiagonalGMM::DiagonalGMM</references>
        <references refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a19d53bdafcc58b3e441a7b9ab72f322d">DiagonalGMM::operator=</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1gmm_1_1DiagonalGMM_1ae557e17efa07cd2c68c29174f2f64dfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DiagonalGMM</definition>
        <argsstring>(const DiagonalGMM &amp;other)</argsstring>
        <name>DiagonalGMM</name>
        <param>
          <type>const <ref refid="classmlpack_1_1gmm_1_1DiagonalGMM" kindref="compound">DiagonalGMM</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor for DiagonalGMMs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1gmm_1_1DiagonalGMM_1a4e6c4f4110899f4f4fd18b46d3d141c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Classify</definition>
        <argsstring>(const arma::mat &amp;observations, arma::Row&lt; size_t &gt; &amp;labels) const</argsstring>
        <name>Classify</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>observations</declname>
        </param>
        <param>
          <type>arma::Row&lt; size_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
<para>Classify the given observations as being from an individual component in this <ref refid="classmlpack_1_1gmm_1_1DiagonalGMM" kindref="compound">DiagonalGMM</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>The resultant classifications are stored in the &apos;labels&apos; object, and each label will be between 0 and (<ref refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a130ce966c49ab36f847f8fac950f1e39" kindref="member">Gaussians()</ref> - 1). Supposing that a point was classified with label 2, and that our <ref refid="classmlpack_1_1gmm_1_1DiagonalGMM" kindref="compound">DiagonalGMM</ref> object was called &apos;dgmm&apos;, one could access the relevant Gaussian distribution as follows:</para><para><programlisting><codeline><highlight class="normal">arma::vec<sp/>mean<sp/>=<sp/>dgmm.Means()[2];</highlight></codeline>
<codeline><highlight class="normal">arma::mat<sp/>covariance<sp/>=<sp/>dgmm.Covariances()[2];</highlight></codeline>
<codeline><highlight class="normal">double<sp/>priorWeight<sp/>=<sp/>dgmm.Weights()[2];</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observations</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix of observations to classify. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Object which will be filled with labels. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="299" column="1"/>
        <referencedby refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a8361070d4a9097e29c005dd5dc6ca54d" compoundref="diagonal__gmm_8hpp" startline="159" endline="159">DiagonalGMM::Weights</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1gmm_1_1DiagonalGMM_1ac426d44a14e21af69f260506ad7b9793" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classmlpack_1_1distribution_1_1DiagonalGaussianDistribution" kindref="compound">distribution::DiagonalGaussianDistribution</ref> &amp;</type>
        <definition>const distribution::DiagonalGaussianDistribution&amp; Component</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>Component</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return a const reference to a component distribution. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of component. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="141" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1gmm_1_1DiagonalGMM_1a283969670b4d2ed4bb7394e2bc30c3a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1distribution_1_1DiagonalGaussianDistribution" kindref="compound">distribution::DiagonalGaussianDistribution</ref> &amp;</type>
        <definition>distribution::DiagonalGaussianDistribution&amp; Component</definition>
        <argsstring>(size_t i)</argsstring>
        <name>Component</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Return a reference to a component distribution. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of component. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="151" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1gmm_1_1DiagonalGMM_1a78eda6bfb9e9462afa0fc85e32abe1af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Dimensionality</definition>
        <argsstring>() const</argsstring>
        <name>Dimensionality</name>
        <briefdescription>
<para>Return the dimensionality of the model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="134" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1gmm_1_1DiagonalGMM_1a130ce966c49ab36f847f8fac950f1e39" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Gaussians</definition>
        <argsstring>() const</argsstring>
        <name>Gaussians</name>
        <briefdescription>
<para>Return the number of Gaussians in the model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="132" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1gmm_1_1DiagonalGMM_1a7063c1fb92f512f32bf44542c7528739" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double LogProbability</definition>
        <argsstring>(const arma::vec &amp;observation) const</argsstring>
        <name>LogProbability</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>observation</declname>
        </param>
        <briefdescription>
<para>Return the log probability that the given observation came from this distribution. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observation</parametername>
</parameternamelist>
<parameterdescription>
<para>Observation to evaluate the log-probability of. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="183" column="1"/>
        <referencedby refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a8361070d4a9097e29c005dd5dc6ca54d" compoundref="diagonal__gmm_8hpp" startline="159" endline="159">DiagonalGMM::Weights</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1gmm_1_1DiagonalGMM_1a36f5c23ddd588e40e9465a56bfafabab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LogProbability</definition>
        <argsstring>(const arma::mat &amp;observation, arma::vec &amp;logProbs) const</argsstring>
        <name>LogProbability</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>observation</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>logProbs</declname>
        </param>
        <briefdescription>
<para>Return the log probability that the given observation matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observation</parametername>
</parameternamelist>
<parameterdescription>
<para>Observation to evaluate the log-probability of. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>logProbs</parametername>
</parameternamelist>
<parameterdescription>
<para>Stores the value of log-probability for observation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1gmm_1_1DiagonalGMM_1a5df8a8ba219eda2fb45a1f24e18a6320" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double LogProbability</definition>
        <argsstring>(const arma::vec &amp;observation, const size_t component) const</argsstring>
        <name>LogProbability</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>observation</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>component</declname>
        </param>
        <briefdescription>
<para>Return the log probability that the given observation came from the given Gaussian component in this distribution. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observation</parametername>
</parameternamelist>
<parameterdescription>
<para>Observation to evaluate the probability of. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>component</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the component of the <ref refid="classmlpack_1_1gmm_1_1DiagonalGMM" kindref="compound">DiagonalGMM</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1gmm_1_1DiagonalGMM_1a19d53bdafcc58b3e441a7b9ab72f322d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1gmm_1_1DiagonalGMM" kindref="compound">DiagonalGMM</ref> &amp;</type>
        <definition>DiagonalGMM&amp; operator=</definition>
        <argsstring>(const DiagonalGMM &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmlpack_1_1gmm_1_1DiagonalGMM" kindref="compound">DiagonalGMM</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy operator for DiagonalGMMs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="129" column="1"/>
        <referencedby refid="classmlpack_1_1gmm_1_1DiagonalGMM_1af7d5a7ba750481b1183248c762058196" compoundref="diagonal__gmm_8hpp" startline="118" endline="123">DiagonalGMM::DiagonalGMM</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1gmm_1_1DiagonalGMM_1ab72935d592516e77511d0b5e703c0d41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Probability</definition>
        <argsstring>(const arma::vec &amp;observation) const</argsstring>
        <name>Probability</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>observation</declname>
        </param>
        <briefdescription>
<para>Return the probability that the given observation came from this distribution. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observation</parametername>
</parameternamelist>
<parameterdescription>
<para>Observation to evaluate the probability of. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="167" column="1"/>
        <referencedby refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a8361070d4a9097e29c005dd5dc6ca54d" compoundref="diagonal__gmm_8hpp" startline="159" endline="159">DiagonalGMM::Weights</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1gmm_1_1DiagonalGMM_1aca6288954f9a21aa3a555e431124b765" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Probability</definition>
        <argsstring>(const arma::mat &amp;observation, arma::vec &amp;probs) const</argsstring>
        <name>Probability</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>observation</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>probs</declname>
        </param>
        <briefdescription>
<para>Return the probability that the given observation matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observation</parametername>
</parameternamelist>
<parameterdescription>
<para>Observation to evaluate the probability of. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>probs</parametername>
</parameternamelist>
<parameterdescription>
<para>Stores the value of probability for observation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1gmm_1_1DiagonalGMM_1afcd98507a97e8592a6e10b2794285224" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Probability</definition>
        <argsstring>(const arma::vec &amp;observation, const size_t component) const</argsstring>
        <name>Probability</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>observation</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>component</declname>
        </param>
        <briefdescription>
<para>Return the probability that the given observation came from the given Gaussian component in this distribution. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observation</parametername>
</parameternamelist>
<parameterdescription>
<para>Observation to evaluate the probability of. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>component</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the component of the <ref refid="classmlpack_1_1gmm_1_1DiagonalGMM" kindref="compound">DiagonalGMM</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1gmm_1_1DiagonalGMM_1a2c6f8d5bb4eacf7de767d2172b320756" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>arma::vec</type>
        <definition>arma::vec Random</definition>
        <argsstring>() const</argsstring>
        <name>Random</name>
        <briefdescription>
<para>Return a randomly generated observation according to the probability distribution defined by this object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Random observation from this <ref refid="classmlpack_1_1gmm_1_1DiagonalGMM" kindref="compound">DiagonalGMM</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="218" column="1"/>
        <referencedby refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a8361070d4a9097e29c005dd5dc6ca54d" compoundref="diagonal__gmm_8hpp" startline="159" endline="159">DiagonalGMM::Weights</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1gmm_1_1DiagonalGMM_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the <ref refid="classmlpack_1_1gmm_1_1DiagonalGMM" kindref="compound">DiagonalGMM</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="306" column="1"/>
        <referencedby refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a8361070d4a9097e29c005dd5dc6ca54d" compoundref="diagonal__gmm_8hpp" startline="159" endline="159">DiagonalGMM::Weights</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1gmm_1_1DiagonalGMM_1ad33ec5cf10980e0b315280ea51ef41ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FittingType</type>
            <defval><ref refid="classmlpack_1_1gmm_1_1EMFit" kindref="compound">EMFit</ref>&lt;<ref refid="classmlpack_1_1kmeans_1_1KMeans" kindref="compound">kmeans::KMeans</ref>&lt;&gt;, <ref refid="classmlpack_1_1gmm_1_1DiagonalConstraint" kindref="compound">DiagonalConstraint</ref>,      <ref refid="classmlpack_1_1distribution_1_1DiagonalGaussianDistribution" kindref="compound">distribution::DiagonalGaussianDistribution</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double Train</definition>
        <argsstring>(const arma::mat &amp;observations, const size_t trials=1, const bool useExistingModel=false, FittingType fitter=FittingType())</argsstring>
        <name>Train</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>observations</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>trials</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>useExistingModel</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>FittingType</type>
          <declname>fitter</declname>
          <defval>FittingType()</defval>
        </param>
        <briefdescription>
<para>Estimate the probability distribution directly from the given observations, using the given algorithm in the FittingType class to fit the data. </para>        </briefdescription>
        <detaileddescription>
<para>The fitting will be performed &apos;trials&apos; times; from these trials, the model with the greatest log-likelihood will be selected. By default, only one trial is performed. The log-likelihood of the best fitting is returned.</para><para>Optionally, the existing model can be used as an initial model for the estimation by setting &apos;useExistingModel&apos; to true. If the fitting procedure is deterministic after the initial position is given, then &apos;trials&apos; should be set to 1.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observations</parametername>
</parameternamelist>
<parameterdescription>
<para>Observations of the model. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trials</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of trials to perform; the model in these trials with the greatest log-likelihood will be selected. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useExistingModel</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, the existing model is used as an initial model for the estimation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fitter</parametername>
</parameternamelist>
<parameterdescription>
<para>Fitting type that estimates observations. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The log-likelihood of the best fit. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="244" column="1"/>
        <referencedby refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a8361070d4a9097e29c005dd5dc6ca54d" compoundref="diagonal__gmm_8hpp" startline="159" endline="159">DiagonalGMM::Weights</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1gmm_1_1DiagonalGMM_1a6c28af6823c03973003fefdf026b2b53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FittingType</type>
            <defval><ref refid="classmlpack_1_1gmm_1_1EMFit" kindref="compound">EMFit</ref>&lt;<ref refid="classmlpack_1_1kmeans_1_1KMeans" kindref="compound">kmeans::KMeans</ref>&lt;&gt;, <ref refid="classmlpack_1_1gmm_1_1DiagonalConstraint" kindref="compound">DiagonalConstraint</ref>,      <ref refid="classmlpack_1_1distribution_1_1DiagonalGaussianDistribution" kindref="compound">distribution::DiagonalGaussianDistribution</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double Train</definition>
        <argsstring>(const arma::mat &amp;observations, const arma::vec &amp;probabilities, const size_t trials=1, const bool useExistingModel=false, FittingType fitter=FittingType())</argsstring>
        <name>Train</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>observations</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>probabilities</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>trials</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>useExistingModel</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>FittingType</type>
          <declname>fitter</declname>
          <defval>FittingType()</defval>
        </param>
        <briefdescription>
<para>Estimate the probability distribution directly from the given observations, taking into account the probability of each observation actually being from this distribution, and using the given algorithm in the FittingType class to fit the data. </para>        </briefdescription>
        <detaileddescription>
<para>The fitting will be performed &apos;trials&apos; times; from these trials, the model with the greatest log-likelihood will be selected. By default, only one trial is performed. The log-likelihood of the best fitting is returned.</para><para>Optionally, the existing model can be used as an initial model for the estimation by setting &apos;useExistingModel&apos; to true. If the fitting procedure is deterministic after the initial position is given, then &apos;trials&apos; should be set to 1.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observations</parametername>
</parameternamelist>
<parameterdescription>
<para>Observations of the model. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>probabilities</parametername>
</parameternamelist>
<parameterdescription>
<para>Probability of each observation being from this distribution. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trials</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of trials to perform; the model in these trials with the greatest log-likelihood will be selected. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>useExistingModel</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, the existing model is used as an initial model for the estimation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fitter</parametername>
</parameternamelist>
<parameterdescription>
<para>Fitting type that estimates observations. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The log-likelihood of the best fit. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1gmm_1_1DiagonalGMM_1ab2c1e663a100784ff6753e3eec8453dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::vec &amp;</type>
        <definition>const arma::vec&amp; Weights</definition>
        <argsstring>() const</argsstring>
        <name>Weights</name>
        <briefdescription>
<para>Return a const reference to the a priori weights of each Gaussian. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="157" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1gmm_1_1DiagonalGMM_1a8361070d4a9097e29c005dd5dc6ca54d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>arma::vec &amp;</type>
        <definition>arma::vec&amp; Weights</definition>
        <argsstring>()</argsstring>
        <name>Weights</name>
        <briefdescription>
<para>Return a reference to the a priori weights of each Gaussian. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="159" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" bodystart="159" bodyend="159"/>
        <references refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a4e6c4f4110899f4f4fd18b46d3d141c6">DiagonalGMM::Classify</references>
        <references refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a7063c1fb92f512f32bf44542c7528739">DiagonalGMM::LogProbability</references>
        <references refid="classmlpack_1_1gmm_1_1DiagonalGMM_1ab72935d592516e77511d0b5e703c0d41">DiagonalGMM::Probability</references>
        <references refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a2c6f8d5bb4eacf7de767d2172b320756">DiagonalGMM::Random</references>
        <references refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a65cba07328997659bec80b9879b15a51">DiagonalGMM::serialize</references>
        <references refid="classmlpack_1_1gmm_1_1DiagonalGMM_1ad33ec5cf10980e0b315280ea51ef41ed">DiagonalGMM::Train</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmlpack_1_1gmm_1_1DiagonalGMM_1af1cbae2c7a70042114db27e6f1237ea3" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double LogLikelihood</definition>
        <argsstring>(const arma::mat &amp;observations, const std::vector&lt; distribution::DiagonalGaussianDistribution &gt; &amp;dists, const arma::vec &amp;weights) const</argsstring>
        <name>LogLikelihood</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>observations</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classmlpack_1_1distribution_1_1DiagonalGaussianDistribution" kindref="compound">distribution::DiagonalGaussianDistribution</ref> &gt; &amp;</type>
          <declname>dists</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>weights</declname>
        </param>
        <briefdescription>
<para>This function computes the log-likelihood of the given model and is used by <ref refid="classmlpack_1_1gmm_1_1DiagonalGMM_1ad33ec5cf10980e0b315280ea51ef41ed" kindref="member">DiagonalGMM::Train()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observations</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix of observations. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>means</parametername>
</parameternamelist>
<parameterdescription>
<para>Means of the given mixture model. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>covariances</parametername>
</parameternamelist>
<parameterdescription>
<para>Covariances of the given mixture model. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weights</parametername>
</parameternamelist>
<parameterdescription>
<para>Weights of the given mixture model. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="318" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A Diagonal Gaussian Mixture Model. </para>    </briefdescription>
    <detaileddescription>
<para>This class uses maximum likelihood loss functions to estimate the parameters of the <ref refid="classmlpack_1_1gmm_1_1DiagonalGMM" kindref="compound">DiagonalGMM</ref> on a given dataset via the given fitting mechanism, defined by the FittingType template parameter. The <ref refid="classmlpack_1_1gmm_1_1DiagonalGMM" kindref="compound">DiagonalGMM</ref> can be trained using normal data, or data with probabilities of being from this <ref refid="classmlpack_1_1gmm_1_1GMM" kindref="compound">GMM</ref> (see <ref refid="classmlpack_1_1gmm_1_1DiagonalGMM_1ad33ec5cf10980e0b315280ea51ef41ed" kindref="member">DiagonalGMM::Train()</ref> for more information). The <ref refid="classmlpack_1_1gmm_1_1DiagonalGMM" kindref="compound">DiagonalGMM</ref> is the same as <ref refid="classmlpack_1_1gmm_1_1GMM" kindref="compound">GMM</ref> except for wrapping gmm_diag class.</para><para>The <ref refid="classmlpack_1_1gmm_1_1DiagonalGMM_1ad33ec5cf10980e0b315280ea51ef41ed" kindref="member">Train()</ref> method uses a template type &apos;FittingType&apos;. The FittingType template class must provide a way for the <ref refid="classmlpack_1_1gmm_1_1DiagonalGMM" kindref="compound">DiagonalGMM</ref> to train on data. It must provide the following two functions:</para><para><programlisting><codeline><highlight class="normal">void<sp/>Estimate(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>arma::mat&amp;<sp/>observations,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;distribution::DiagonalGaussianDistribution&gt;&amp;<sp/>dists,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>weights);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>Estimate(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>arma::mat&amp;<sp/>observations,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>arma::vec&amp;<sp/>probabilities,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;distribution::DiagonalGaussianDistribution&gt;&amp;<sp/>dists,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>weights);</highlight></codeline>
</programlisting></para><para>Example use:</para><para><programlisting><codeline><highlight class="normal">//<sp/>Set<sp/>up<sp/>a<sp/>mixture<sp/>of<sp/>5<sp/>gaussians<sp/>in<sp/>a<sp/>4-dimensional<sp/>space.</highlight></codeline>
<codeline><highlight class="normal">DiagonalGMM<sp/>g(5,<sp/>4);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Train<sp/>the<sp/>DiagonalGMM<sp/>given<sp/>the<sp/>data<sp/>observations,<sp/>using<sp/>the<sp/>default</highlight></codeline>
<codeline><highlight class="normal">//<sp/>EM<sp/>fitting<sp/>mechanism.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">g.Train(data);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Get<sp/>the<sp/>probability<sp/>of<sp/>&apos;observation&apos;<sp/>being<sp/>observed<sp/>from<sp/>this</highlight></codeline>
<codeline><highlight class="normal">//<sp/>DiagoanlGMM.</highlight></codeline>
<codeline><highlight class="normal">double<sp/>probability<sp/>=<sp/>g.Probability(observation);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Get<sp/>a<sp/>random<sp/>observation<sp/>from<sp/>the<sp/>DiagonalGMM.</highlight></codeline>
<codeline><highlight class="normal">arma::vec<sp/>observation<sp/>=<sp/>g.Random();</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" line="75" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp" bodystart="74" bodyend="322"/>
    <listofallmembers>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a4e6c4f4110899f4f4fd18b46d3d141c6" prot="public" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>Classify</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1ac426d44a14e21af69f260506ad7b9793" prot="public" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>Component</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a283969670b4d2ed4bb7394e2bc30c3a7" prot="public" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>Component</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a789ea6c102741e2b8305042a12b933fb" prot="public" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>DiagonalGMM</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1aa4f5bdc8cf6f346d6cad2643cb0eb095" prot="public" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>DiagonalGMM</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1af7d5a7ba750481b1183248c762058196" prot="public" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>DiagonalGMM</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1ae557e17efa07cd2c68c29174f2f64dfb" prot="public" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>DiagonalGMM</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a24ddaaffe28b96a6d94d9c12681a03b9" prot="private" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>dimensionality</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a78eda6bfb9e9462afa0fc85e32abe1af" prot="public" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>Dimensionality</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1aaa98b6c940395b93370880b4c446c29d" prot="private" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>dists</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a61696e781157d6276e7ef7786e5ea3d7" prot="private" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>gaussians</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a130ce966c49ab36f847f8fac950f1e39" prot="public" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>Gaussians</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1af1cbae2c7a70042114db27e6f1237ea3" prot="private" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>LogLikelihood</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a7063c1fb92f512f32bf44542c7528739" prot="public" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>LogProbability</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a36f5c23ddd588e40e9465a56bfafabab" prot="public" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>LogProbability</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a5df8a8ba219eda2fb45a1f24e18a6320" prot="public" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>LogProbability</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a19d53bdafcc58b3e441a7b9ab72f322d" prot="public" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>operator=</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1ab72935d592516e77511d0b5e703c0d41" prot="public" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>Probability</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1aca6288954f9a21aa3a555e431124b765" prot="public" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>Probability</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1afcd98507a97e8592a6e10b2794285224" prot="public" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>Probability</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a2c6f8d5bb4eacf7de767d2172b320756" prot="public" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>Random</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1ad33ec5cf10980e0b315280ea51ef41ed" prot="public" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>Train</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a6c28af6823c03973003fefdf026b2b53" prot="public" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>Train</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1ab88610abad7d31c50287ddd63847d81c" prot="private" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>weights</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1ab2c1e663a100784ff6753e3eec8453dd" prot="public" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>Weights</name></member>
      <member refid="classmlpack_1_1gmm_1_1DiagonalGMM_1a8361070d4a9097e29c005dd5dc6ca54d" prot="public" virt="non-virtual"><scope>mlpack::gmm::DiagonalGMM</scope><name>Weights</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
