<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="range__search_8hpp" kind="file" language="C++">
    <compoundname>range_search.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="lmetric_8hpp" local="no">mlpack/core/metrics/lmetric.hpp</includes>
    <includes refid="binary__space__tree_8hpp" local="no">mlpack/core/tree/binary_space_tree.hpp</includes>
    <includes refid="range__search__stat_8hpp" local="yes">range_search_stat.hpp</includes>
    <includes local="yes">range_search_impl.hpp</includes>
    <includedby refid="dbscan_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp</includedby>
    <includedby refid="rs__model_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/range_search/rs_model.hpp</includedby>
    <incdepgraph>
      <node id="54308">
        <label>list</label>
      </node>
      <node id="54359">
        <label>breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="54351">
        <label>binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="54258" relation="include">
        </childnode>
        <childnode refid="54348" relation="include">
        </childnode>
        <childnode refid="54352" relation="include">
        </childnode>
      </node>
      <node id="54361">
        <label>binary_space_tree/traits.hpp</label>
        <link refid="binary__space__tree_2traits_8hpp"/>
        <childnode refid="54362" relation="include">
        </childnode>
        <childnode refid="54323" relation="include">
        </childnode>
      </node>
      <node id="54305">
        <label>atomic</label>
      </node>
      <node id="54295">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="54257">
        <label>/home/aakash/mlpack/src/mlpack/methods/range_search/range_search.hpp</label>
        <link refid="range__search_8hpp"/>
        <childnode refid="54258" relation="include">
        </childnode>
        <childnode refid="54315" relation="include">
        </childnode>
        <childnode refid="54317" relation="include">
        </childnode>
        <childnode refid="54364" relation="include">
        </childnode>
        <childnode refid="54365" relation="include">
        </childnode>
      </node>
      <node id="54271">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="54307">
        <label>iomanip</label>
      </node>
      <node id="54358">
        <label>queue</label>
      </node>
      <node id="54320">
        <label>bound_traits.hpp</label>
        <link refid="bound__traits_8hpp"/>
      </node>
      <node id="54365">
        <label>range_search_impl.hpp</label>
      </node>
      <node id="54333">
        <label>binary_space_tree/mean_split.hpp</label>
        <link refid="mean__split_8hpp"/>
        <childnode refid="54258" relation="include">
        </childnode>
        <childnode refid="54331" relation="include">
        </childnode>
        <childnode refid="54334" relation="include">
        </childnode>
      </node>
      <node id="54316">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="54280">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="54281" relation="include">
        </childnode>
        <childnode refid="54283" relation="include">
        </childnode>
      </node>
      <node id="54263">
        <label>cstdint</label>
      </node>
      <node id="54272">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="54279">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="54360">
        <label>binary_space_tree/breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="54337">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="54334">
        <label>mean_split_impl.hpp</label>
      </node>
      <node id="54302">
        <label>arma_config.hpp</label>
      </node>
      <node id="54325">
        <label>hollow_ball_bound.hpp</label>
        <link refid="hollow__ball__bound_8hpp"/>
        <childnode refid="54258" relation="include">
        </childnode>
        <childnode refid="54315" relation="include">
        </childnode>
        <childnode refid="54320" relation="include">
        </childnode>
        <childnode refid="54326" relation="include">
        </childnode>
      </node>
      <node id="54349">
        <label>../statistic.hpp</label>
        <link refid="statistic_8hpp"/>
      </node>
      <node id="54344">
        <label>lin_alg_impl.hpp</label>
      </node>
      <node id="54292">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="54259">
        <label>cmath</label>
      </node>
      <node id="54318">
        <label>bounds.hpp</label>
        <link refid="bounds_8hpp"/>
        <childnode refid="54319" relation="include">
        </childnode>
        <childnode refid="54315" relation="include">
        </childnode>
        <childnode refid="54320" relation="include">
        </childnode>
        <childnode refid="54321" relation="include">
        </childnode>
        <childnode refid="54323" relation="include">
        </childnode>
        <childnode refid="54325" relation="include">
        </childnode>
        <childnode refid="54327" relation="include">
        </childnode>
      </node>
      <node id="54278">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="54267">
        <label>stdexcept</label>
      </node>
      <node id="54354">
        <label>binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="54258" relation="include">
        </childnode>
        <childnode refid="54348" relation="include">
        </childnode>
        <childnode refid="54355" relation="include">
        </childnode>
      </node>
      <node id="54287">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="54272" relation="include">
        </childnode>
        <childnode refid="54274" relation="include">
        </childnode>
        <childnode refid="54275" relation="include">
        </childnode>
        <childnode refid="54273" relation="include">
        </childnode>
      </node>
      <node id="54319">
        <label>mlpack/core/math/range.hpp</label>
      </node>
      <node id="54311">
        <label>string</label>
      </node>
      <node id="54340">
        <label>binary_space_tree/rp_tree_max_split.hpp</label>
        <link refid="rp__tree__max__split_8hpp"/>
        <childnode refid="54258" relation="include">
        </childnode>
        <childnode refid="54331" relation="include">
        </childnode>
        <childnode refid="54341" relation="include">
        </childnode>
      </node>
      <node id="54332">
        <label>midpoint_split_impl.hpp</label>
      </node>
      <node id="54299">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="54300" relation="include">
        </childnode>
        <childnode refid="54266" relation="include">
        </childnode>
      </node>
      <node id="54309">
        <label>map</label>
      </node>
      <node id="54355">
        <label>dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="54343">
        <label>mlpack/core/math/lin_alg.hpp</label>
        <link refid="lin__alg_8hpp"/>
        <childnode refid="54258" relation="include">
        </childnode>
        <childnode refid="54344" relation="include">
        </childnode>
      </node>
      <node id="54261">
        <label>cfloat</label>
      </node>
      <node id="54291">
        <label>boost/variant.hpp</label>
      </node>
      <node id="54313">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="54275">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="54298">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="54299" relation="include">
        </childnode>
        <childnode refid="54275" relation="include">
        </childnode>
        <childnode refid="54282" relation="include">
        </childnode>
        <childnode refid="54300" relation="include">
        </childnode>
      </node>
      <node id="54288">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="54286">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="54272" relation="include">
        </childnode>
        <childnode refid="54274" relation="include">
        </childnode>
        <childnode refid="54275" relation="include">
        </childnode>
        <childnode refid="54273" relation="include">
        </childnode>
      </node>
      <node id="54289">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="54272" relation="include">
        </childnode>
        <childnode refid="54274" relation="include">
        </childnode>
        <childnode refid="54275" relation="include">
        </childnode>
        <childnode refid="54273" relation="include">
        </childnode>
      </node>
      <node id="54350">
        <label>binary_space_tree_impl.hpp</label>
      </node>
      <node id="54277">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="54297">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="54273" relation="include">
        </childnode>
        <childnode refid="54274" relation="include">
        </childnode>
        <childnode refid="54275" relation="include">
        </childnode>
        <childnode refid="54285" relation="include">
        </childnode>
        <childnode refid="54294" relation="include">
        </childnode>
      </node>
      <node id="54301">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="54302" relation="include">
        </childnode>
      </node>
      <node id="54356">
        <label>binary_space_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="54303">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="54258">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="54259" relation="include">
        </childnode>
        <childnode refid="54260" relation="include">
        </childnode>
        <childnode refid="54261" relation="include">
        </childnode>
        <childnode refid="54262" relation="include">
        </childnode>
        <childnode refid="54263" relation="include">
        </childnode>
        <childnode refid="54264" relation="include">
        </childnode>
        <childnode refid="54265" relation="include">
        </childnode>
        <childnode refid="54266" relation="include">
        </childnode>
        <childnode refid="54267" relation="include">
        </childnode>
        <childnode refid="54268" relation="include">
        </childnode>
        <childnode refid="54269" relation="include">
        </childnode>
        <childnode refid="54270" relation="include">
        </childnode>
        <childnode refid="54271" relation="include">
        </childnode>
        <childnode refid="54272" relation="include">
        </childnode>
        <childnode refid="54273" relation="include">
        </childnode>
        <childnode refid="54274" relation="include">
        </childnode>
        <childnode refid="54275" relation="include">
        </childnode>
        <childnode refid="54276" relation="include">
        </childnode>
        <childnode refid="54277" relation="include">
        </childnode>
        <childnode refid="54278" relation="include">
        </childnode>
        <childnode refid="54279" relation="include">
        </childnode>
        <childnode refid="54280" relation="include">
        </childnode>
        <childnode refid="54284" relation="include">
        </childnode>
        <childnode refid="54285" relation="include">
        </childnode>
        <childnode refid="54286" relation="include">
        </childnode>
        <childnode refid="54287" relation="include">
        </childnode>
        <childnode refid="54288" relation="include">
        </childnode>
        <childnode refid="54289" relation="include">
        </childnode>
        <childnode refid="54290" relation="include">
        </childnode>
        <childnode refid="54296" relation="include">
        </childnode>
        <childnode refid="54297" relation="include">
        </childnode>
        <childnode refid="54294" relation="include">
        </childnode>
        <childnode refid="54298" relation="include">
        </childnode>
        <childnode refid="54301" relation="include">
        </childnode>
        <childnode refid="54303" relation="include">
        </childnode>
        <childnode refid="54304" relation="include">
        </childnode>
        <childnode refid="54313" relation="include">
        </childnode>
        <childnode refid="54314" relation="include">
        </childnode>
      </node>
      <node id="54352">
        <label>single_tree_traverser_impl.hpp</label>
      </node>
      <node id="54330">
        <label>binary_space_tree/midpoint_split.hpp</label>
        <link refid="midpoint__split_8hpp"/>
        <childnode refid="54258" relation="include">
        </childnode>
        <childnode refid="54331" relation="include">
        </childnode>
        <childnode refid="54332" relation="include">
        </childnode>
      </node>
      <node id="54338">
        <label>random</label>
      </node>
      <node id="54324">
        <label>ballbound_impl.hpp</label>
      </node>
      <node id="54353">
        <label>binary_space_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="54264">
        <label>cstdio</label>
      </node>
      <node id="54328">
        <label>address.hpp</label>
        <link refid="address_8hpp"/>
      </node>
      <node id="54362">
        <label>mlpack/core/tree/tree_traits.hpp</label>
        <link refid="tree__traits_8hpp"/>
      </node>
      <node id="54364">
        <label>range_search_stat.hpp</label>
        <link refid="range__search__stat_8hpp"/>
        <childnode refid="54258" relation="include">
        </childnode>
      </node>
      <node id="54268">
        <label>tuple</label>
      </node>
      <node id="54273">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="54346">
        <label>binary_space_tree/ub_tree_split.hpp</label>
        <link refid="ub__tree__split_8hpp"/>
        <childnode refid="54258" relation="include">
        </childnode>
        <childnode refid="54328" relation="include">
        </childnode>
        <childnode refid="54347" relation="include">
        </childnode>
      </node>
      <node id="54290">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="54273" relation="include">
        </childnode>
        <childnode refid="54274" relation="include">
        </childnode>
        <childnode refid="54275" relation="include">
        </childnode>
        <childnode refid="54277" relation="include">
        </childnode>
        <childnode refid="54291" relation="include">
        </childnode>
        <childnode refid="54292" relation="include">
        </childnode>
        <childnode refid="54293" relation="include">
        </childnode>
        <childnode refid="54294" relation="include">
        </childnode>
      </node>
      <node id="54348">
        <label>binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="54258" relation="include">
        </childnode>
        <childnode refid="54349" relation="include">
        </childnode>
        <childnode refid="54330" relation="include">
        </childnode>
        <childnode refid="54350" relation="include">
        </childnode>
        <childnode refid="54317" relation="include">
        </childnode>
      </node>
      <node id="54321">
        <label>hrectbound.hpp</label>
        <link refid="hrectbound_8hpp"/>
        <childnode refid="54258" relation="include">
        </childnode>
        <childnode refid="54319" relation="include">
        </childnode>
        <childnode refid="54315" relation="include">
        </childnode>
        <childnode refid="54320" relation="include">
        </childnode>
        <childnode refid="54322" relation="include">
        </childnode>
      </node>
      <node id="54345">
        <label>rp_tree_mean_split_impl.hpp</label>
      </node>
      <node id="54336">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="54258" relation="include">
        </childnode>
        <childnode refid="54337" relation="include">
        </childnode>
        <childnode refid="54338" relation="include">
        </childnode>
      </node>
      <node id="54269">
        <label>utility</label>
      </node>
      <node id="54293">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="54284">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="54317">
        <label>mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="54258" relation="include">
        </childnode>
        <childnode refid="54318" relation="include">
        </childnode>
        <childnode refid="54330" relation="include">
        </childnode>
        <childnode refid="54333" relation="include">
        </childnode>
        <childnode refid="54335" relation="include">
        </childnode>
        <childnode refid="54340" relation="include">
        </childnode>
        <childnode refid="54342" relation="include">
        </childnode>
        <childnode refid="54346" relation="include">
        </childnode>
        <childnode refid="54348" relation="include">
        </childnode>
        <childnode refid="54351" relation="include">
        </childnode>
        <childnode refid="54353" relation="include">
        </childnode>
        <childnode refid="54354" relation="include">
        </childnode>
        <childnode refid="54356" relation="include">
        </childnode>
        <childnode refid="54357" relation="include">
        </childnode>
        <childnode refid="54360" relation="include">
        </childnode>
        <childnode refid="54361" relation="include">
        </childnode>
        <childnode refid="54363" relation="include">
        </childnode>
      </node>
      <node id="54281">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="54282" relation="include">
        </childnode>
      </node>
      <node id="54304">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="54305" relation="include">
        </childnode>
        <childnode refid="54306" relation="include">
        </childnode>
        <childnode refid="54307" relation="include">
        </childnode>
        <childnode refid="54308" relation="include">
        </childnode>
        <childnode refid="54309" relation="include">
        </childnode>
        <childnode refid="54310" relation="include">
        </childnode>
        <childnode refid="54311" relation="include">
        </childnode>
        <childnode refid="54312" relation="include">
        </childnode>
      </node>
      <node id="54282">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="54296">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="54294" relation="include">
        </childnode>
        <childnode refid="54290" relation="include">
        </childnode>
        <childnode refid="54297" relation="include">
        </childnode>
      </node>
      <node id="54265">
        <label>cstdlib</label>
      </node>
      <node id="54260">
        <label>cctype</label>
      </node>
      <node id="54283">
        <label>unordered_map</label>
      </node>
      <node id="54262">
        <label>climits</label>
      </node>
      <node id="54310">
        <label>mutex</label>
      </node>
      <node id="54306">
        <label>chrono</label>
      </node>
      <node id="54322">
        <label>hrectbound_impl.hpp</label>
      </node>
      <node id="54314">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="54342">
        <label>binary_space_tree/rp_tree_mean_split.hpp</label>
        <link refid="rp__tree__mean__split_8hpp"/>
        <childnode refid="54258" relation="include">
        </childnode>
        <childnode refid="54340" relation="include">
        </childnode>
        <childnode refid="54331" relation="include">
        </childnode>
        <childnode refid="54343" relation="include">
        </childnode>
        <childnode refid="54345" relation="include">
        </childnode>
      </node>
      <node id="54339">
        <label>vantage_point_split_impl.hpp</label>
      </node>
      <node id="54312">
        <label>thread</label>
      </node>
      <node id="54323">
        <label>ballbound.hpp</label>
        <link refid="ballbound_8hpp"/>
        <childnode refid="54258" relation="include">
        </childnode>
        <childnode refid="54315" relation="include">
        </childnode>
        <childnode refid="54320" relation="include">
        </childnode>
        <childnode refid="54324" relation="include">
        </childnode>
      </node>
      <node id="54341">
        <label>rp_tree_max_split_impl.hpp</label>
      </node>
      <node id="54331">
        <label>mlpack/core/tree/perform_split.hpp</label>
        <link refid="perform__split_8hpp"/>
      </node>
      <node id="54300">
        <label>type_traits</label>
      </node>
      <node id="54357">
        <label>binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="54258" relation="include">
        </childnode>
        <childnode refid="54358" relation="include">
        </childnode>
        <childnode refid="54317" relation="include">
        </childnode>
        <childnode refid="54359" relation="include">
        </childnode>
      </node>
      <node id="54276">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="54363">
        <label>binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="54317" relation="include">
        </childnode>
      </node>
      <node id="54270">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="54294">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="54272" relation="include">
        </childnode>
        <childnode refid="54273" relation="include">
        </childnode>
        <childnode refid="54274" relation="include">
        </childnode>
        <childnode refid="54275" relation="include">
        </childnode>
        <childnode refid="54295" relation="include">
        </childnode>
      </node>
      <node id="54326">
        <label>hollow_ball_bound_impl.hpp</label>
      </node>
      <node id="54266">
        <label>cstring</label>
      </node>
      <node id="54285">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="54329">
        <label>cellbound_impl.hpp</label>
      </node>
      <node id="54347">
        <label>ub_tree_split_impl.hpp</label>
      </node>
      <node id="54327">
        <label>cellbound.hpp</label>
        <link refid="cellbound_8hpp"/>
        <childnode refid="54258" relation="include">
        </childnode>
        <childnode refid="54319" relation="include">
        </childnode>
        <childnode refid="54315" relation="include">
        </childnode>
        <childnode refid="54320" relation="include">
        </childnode>
        <childnode refid="54328" relation="include">
        </childnode>
        <childnode refid="54329" relation="include">
        </childnode>
      </node>
      <node id="54274">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="54315">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="54258" relation="include">
        </childnode>
        <childnode refid="54316" relation="include">
        </childnode>
      </node>
      <node id="54335">
        <label>binary_space_tree/vantage_point_split.hpp</label>
        <link refid="vantage__point__split_8hpp"/>
        <childnode refid="54258" relation="include">
        </childnode>
        <childnode refid="54331" relation="include">
        </childnode>
        <childnode refid="54336" relation="include">
        </childnode>
        <childnode refid="54339" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="54366">
        <label>/home/aakash/mlpack/src/mlpack/methods/range_search/range_search.hpp</label>
        <link refid="range__search_8hpp"/>
        <childnode refid="54367" relation="include">
        </childnode>
        <childnode refid="54368" relation="include">
        </childnode>
      </node>
      <node id="54367">
        <label>/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp</label>
        <link refid="dbscan_8hpp"/>
      </node>
      <node id="54369">
        <label>/home/aakash/mlpack/src/mlpack/tests/main_tests/range_search_utils.hpp</label>
        <link refid="range__search__utils_8hpp"/>
      </node>
      <node id="54368">
        <label>/home/aakash/mlpack/src/mlpack/methods/range_search/rs_model.hpp</label>
        <link refid="rs__model_8hpp"/>
        <childnode refid="54369" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1range_1_1LeafSizeRSWrapper" prot="public">mlpack::range::LeafSizeRSWrapper</innerclass>
    <innerclass refid="classmlpack_1_1range_1_1RangeSearch" prot="public">mlpack::range::RangeSearch</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1range">mlpack::range</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ryan Curtin</para></simplesect>
Defines the RangeSearch class, which performs a generalized range search on points.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_RANGE_SEARCH_RANGE_SEARCH_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_RANGE_SEARCH_RANGE_SEARCH_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="lmetric_8hpp" kindref="compound">mlpack/core/metrics/lmetric.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="binary__space__tree_8hpp" kindref="compound">mlpack/core/tree/binary_space_tree.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="range__search__stat_8hpp" kindref="compound">range_search_stat.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="22" refid="namespacemlpack_1_1range" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">range<sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMetricType,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeStatType,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMatType&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TreeType&gt;</highlight></codeline>
<codeline lineno="28" refid="classmlpack_1_1range_1_1LeafSizeRSWrapper" refkind="compound"><highlight class="normal">class<sp/><ref refid="classmlpack_1_1range_1_1LeafSizeRSWrapper" kindref="compound">LeafSizeRSWrapper</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MetricType<sp/>=<sp/><ref refid="namespacemlpack_1_1metric_1a0306f114fdf32dcdfa8f015408cfc37d" kindref="member">metric::EuclideanDistance</ref>,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType<sp/>=<sp/>arma::mat,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMetricType,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeStatType,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TreeMatType&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TreeType<sp/>=<sp/><ref refid="classmlpack_1_1tree_1_1BinarySpaceTree" kindref="compound">tree::KDTree</ref>&gt;</highlight></codeline>
<codeline lineno="45" refid="classmlpack_1_1range_1_1RangeSearch" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1range_1_1RangeSearch" kindref="compound">RangeSearch</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49" refid="classmlpack_1_1range_1_1RangeSearch_1a5cbbe0e3dd87208f402ebd5a35dcd608" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TreeType&lt;MetricType,<sp/>RangeSearchStat,<sp/>MatType&gt;<sp/><ref refid="classmlpack_1_1range_1_1RangeSearch_1a5cbbe0e3dd87208f402ebd5a35dcd608" kindref="member">Tree</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1range_1_1RangeSearch_1a9292d974d50191623b9f26d7f2ccea1d" kindref="member">RangeSearch</ref>(MatType<sp/>referenceSet,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>naive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>singleMode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MetricType<sp/>metric<sp/>=<sp/>MetricType());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1range_1_1RangeSearch_1a9292d974d50191623b9f26d7f2ccea1d" kindref="member">RangeSearch</ref>(Tree*<sp/>referenceTree,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>singleMode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MetricType<sp/>metric<sp/>=<sp/>MetricType());</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1range_1_1RangeSearch_1a9292d974d50191623b9f26d7f2ccea1d" kindref="member">RangeSearch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>naive<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>singleMode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MetricType<sp/>metric<sp/>=<sp/>MetricType());</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1range_1_1RangeSearch_1a9292d974d50191623b9f26d7f2ccea1d" kindref="member">RangeSearch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RangeSearch" kindref="compound">RangeSearch</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1range_1_1RangeSearch_1a9292d974d50191623b9f26d7f2ccea1d" kindref="member">RangeSearch</ref>(<ref refid="classmlpack_1_1range_1_1RangeSearch" kindref="compound">RangeSearch</ref>&amp;&amp;<sp/>other);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1range_1_1RangeSearch" kindref="compound">RangeSearch</ref>&amp;<sp/><ref refid="classmlpack_1_1range_1_1RangeSearch_1a9b0922f9fb5439cf21e6873f8a9a84b5" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RangeSearch" kindref="compound">RangeSearch</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1range_1_1RangeSearch" kindref="compound">RangeSearch</ref>&amp;<sp/><ref refid="classmlpack_1_1range_1_1RangeSearch_1a9b0922f9fb5439cf21e6873f8a9a84b5" kindref="member">operator=</ref>(<ref refid="classmlpack_1_1range_1_1RangeSearch" kindref="compound">RangeSearch</ref>&amp;&amp;<sp/>other);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1range_1_1RangeSearch_1a250641479dfc9c4881bdae8c960f767f" kindref="member">~RangeSearch</ref>();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RangeSearch_1a27ba39af83e3cb01f2e6fbec159adf0e" kindref="member">Train</ref>(MatType<sp/>referenceSet);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RangeSearch_1a27ba39af83e3cb01f2e6fbec159adf0e" kindref="member">Train</ref>(Tree*<sp/>referenceTree);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RangeSearch_1a0df148abcabf67c5876e942e12279f8e" kindref="member">Search</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>querySet,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>math::Range&amp;<sp/>range,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;size_t&gt;&gt;&amp;<sp/>neighbors,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;double&gt;&gt;&amp;<sp/>distances);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RangeSearch_1a0df148abcabf67c5876e942e12279f8e" kindref="member">Search</ref>(Tree*<sp/>queryTree,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>math::Range&amp;<sp/>range,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;size_t&gt;&gt;&amp;<sp/>neighbors,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;double&gt;&gt;&amp;<sp/>distances);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RangeSearch_1a0df148abcabf67c5876e942e12279f8e" kindref="member">Search</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>math::Range&amp;<sp/>range,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;size_t&gt;&gt;&amp;<sp/>neighbors,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;double&gt;&gt;&amp;<sp/>distances);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="classmlpack_1_1range_1_1RangeSearch_1a7477b3e8499a6158bbe177e7f30d4947" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RangeSearch_1a7477b3e8499a6158bbe177e7f30d4947" kindref="member">SingleMode</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>singleMode;<sp/>}</highlight></codeline>
<codeline lineno="274" refid="classmlpack_1_1range_1_1RangeSearch_1adadacd63ddeadf138d834b1fdc632773" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1range_1_1RangeSearch_1adadacd63ddeadf138d834b1fdc632773" kindref="member">SingleMode</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>singleMode;<sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="classmlpack_1_1range_1_1RangeSearch_1a343230e7d7344e3f7d5f5f2eb89cf2c5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RangeSearch_1a343230e7d7344e3f7d5f5f2eb89cf2c5" kindref="member">Naive</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>naive;<sp/>}</highlight></codeline>
<codeline lineno="279" refid="classmlpack_1_1range_1_1RangeSearch_1af7d397adca3f411b4e2d2f977b280ce6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1range_1_1RangeSearch_1af7d397adca3f411b4e2d2f977b280ce6" kindref="member">Naive</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>naive;<sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="classmlpack_1_1range_1_1RangeSearch_1a3f4bd5d0aa64ea090796725f7755287d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RangeSearch_1a3f4bd5d0aa64ea090796725f7755287d" kindref="member">BaseCases</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>baseCases;<sp/>}</highlight></codeline>
<codeline lineno="284" refid="classmlpack_1_1range_1_1RangeSearch_1a4d1e40c0bf406280a237ca1b487e3c62" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RangeSearch_1a4d1e40c0bf406280a237ca1b487e3c62" kindref="member">Scores</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scores;<sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1range_1_1RangeSearch_1a72d63b74c8166dff8e1a9006905ad9ca" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>version);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="classmlpack_1_1range_1_1RangeSearch_1a0a975940b302b4efec85bbe2d8b36251" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/><ref refid="classmlpack_1_1range_1_1RangeSearch_1a0a975940b302b4efec85bbe2d8b36251" kindref="member">ReferenceSet</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*referenceSet;<sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="classmlpack_1_1range_1_1RangeSearch_1a92cb2297c084f56afea6f37e3c894f52" refkind="member"><highlight class="normal"><sp/><sp/>Tree*<sp/><ref refid="classmlpack_1_1range_1_1RangeSearch_1a92cb2297c084f56afea6f37e3c894f52" kindref="member">ReferenceTree</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>referenceTree;<sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>std::vector&lt;size_t&gt;<sp/>oldFromNewReferences;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>Tree*<sp/>referenceTree;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType*<sp/>referenceSet;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>treeOwner;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>naive;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>singleMode;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>MetricType<sp/>metric;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>baseCases;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>scores;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="classmlpack_1_1range_1_1RangeSearch_1af99d59b0c664ebe9313200fcfeaf66ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1range_1_1LeafSizeRSWrapper" kindref="compound">LeafSizeRSWrapper</ref>&lt;TreeType&gt;;</highlight></codeline>
<codeline lineno="323"><highlight class="normal">};</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;range_search_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/range_search/range_search.hpp"/>
  </compounddef>
</doxygen>
