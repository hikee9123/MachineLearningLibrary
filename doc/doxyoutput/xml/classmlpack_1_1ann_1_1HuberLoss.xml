<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1ann_1_1HuberLoss" kind="class" language="C++" prot="public">
    <compoundname>mlpack::ann::HuberLoss</compoundname>
    <includes refid="huber__loss_8hpp" local="no">huber_loss.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename InputDataType</type>
        <defval>arma::mat</defval>
      </param>
      <param>
        <type>typename OutputDataType</type>
        <defval>arma::mat</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1HuberLoss_1a9ea1a8f5ef3e6d20b362385e1288c72c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double delta</definition>
        <argsstring></argsstring>
        <name>delta</name>
        <briefdescription>
<para>Hyperparameter <computeroutput>delta</computeroutput> defines the point upto which MSE is considered. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" line="98" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1HuberLoss_1a847445b85c86eaac587af2a0f40d17e9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool mean</definition>
        <argsstring></argsstring>
        <name>mean</name>
        <briefdescription>
<para>Reduction type. If true, performs mean of loss else sum. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" line="101" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1HuberLoss_1a77fc4c7d9e92ac78bf2c4239477f54bc" prot="private" static="no" mutable="no">
        <type>OutputDataType</type>
        <definition>OutputDataType outputParameter</definition>
        <argsstring></argsstring>
        <name>outputParameter</name>
        <briefdescription>
<para>Locally-stored output parameter object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" line="95" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1ann_1_1HuberLoss_1af05212ee761a4171dcdd1d0065848bbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HuberLoss</definition>
        <argsstring>(const double delta=1.0, const bool mean=true)</argsstring>
        <name>HuberLoss</name>
        <param>
          <type>const double</type>
          <declname>delta</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>mean</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Create the <ref refid="classmlpack_1_1ann_1_1HuberLoss" kindref="compound">HuberLoss</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>delta</parametername>
</parameternamelist>
<parameterdescription>
<para>The threshold value upto which squared error is followed and after which absolute error is considered. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mean</parametername>
</parameternamelist>
<parameterdescription>
<para>If true then mean loss is computed otherwise sum. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1HuberLoss_1add41dbaf358dc099750dc6064cb7e0d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PredictionType</type>
          </param>
          <param>
            <type>typename TargetType</type>
          </param>
          <param>
            <type>typename LossType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Backward</definition>
        <argsstring>(const PredictionType &amp;prediction, const TargetType &amp;target, LossType &amp;loss)</argsstring>
        <name>Backward</name>
        <param>
          <type>const PredictionType &amp;</type>
          <declname>prediction</declname>
        </param>
        <param>
          <type>const TargetType &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>LossType &amp;</type>
          <declname>loss</declname>
        </param>
        <briefdescription>
<para>Ordinary feed backward pass of a neural network. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prediction</parametername>
</parameternamelist>
<parameterdescription>
<para>Predictions used for evaluating the specified loss function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The target vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>loss</parametername>
</parameternamelist>
<parameterdescription>
<para>The calculated error. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1HuberLoss_1acb1f7d73ed8ec9121d6d0e45b560d8fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Delta</definition>
        <argsstring>() const</argsstring>
        <name>Delta</name>
        <briefdescription>
<para>Get the value of delta. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" line="78" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1HuberLoss_1a9fcb8a5caa7165245d5aa803b0a94a7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; Delta</definition>
        <argsstring>()</argsstring>
        <name>Delta</name>
        <briefdescription>
<para>Set the value of delta. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" line="80" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1HuberLoss_1ab3640059898ea76c13709b8099316fe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PredictionType</type>
          </param>
          <param>
            <type>typename TargetType</type>
          </param>
        </templateparamlist>
        <type>PredictionType::elem_type</type>
        <definition>PredictionType::elem_type Forward</definition>
        <argsstring>(const PredictionType &amp;prediction, const TargetType &amp;target)</argsstring>
        <name>Forward</name>
        <param>
          <type>const PredictionType &amp;</type>
          <declname>prediction</declname>
        </param>
        <param>
          <type>const TargetType &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>Computes the Huber Loss function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prediction</parametername>
</parameternamelist>
<parameterdescription>
<para>Predictions used for evaluating the specified loss function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>target</parametername>
</parameternamelist>
<parameterdescription>
<para>The target vector. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1HuberLoss_1ab3fece30ee983f7dc98302bacde75efe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Mean</definition>
        <argsstring>() const</argsstring>
        <name>Mean</name>
        <briefdescription>
<para>Get the value of reduction type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" line="83" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1HuberLoss_1ab9d30d78fb30a243c70e8dd27a88bf49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool &amp;</type>
        <definition>bool&amp; Mean</definition>
        <argsstring>()</argsstring>
        <name>Mean</name>
        <briefdescription>
<para>Set the value of reduction type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" line="85" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" bodystart="85" bodyend="85"/>
        <references refid="classmlpack_1_1ann_1_1HuberLoss_1a65cba07328997659bec80b9879b15a51">HuberLoss&lt; InputDataType, OutputDataType &gt;::serialize</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1HuberLoss_1a8bae962cc603d1cab8d80ec78f8d505d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>OutputDataType &amp;</type>
        <definition>OutputDataType&amp; OutputParameter</definition>
        <argsstring>() const</argsstring>
        <name>OutputParameter</name>
        <briefdescription>
<para>Get the output parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" line="73" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1HuberLoss_1a21d5f745f02c709625a4ee0907f004a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>OutputDataType &amp;</type>
        <definition>OutputDataType&amp; OutputParameter</definition>
        <argsstring>()</argsstring>
        <name>OutputParameter</name>
        <briefdescription>
<para>Modify the output parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" line="75" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1HuberLoss_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the layer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" line="91" column="1"/>
        <referencedby refid="classmlpack_1_1ann_1_1HuberLoss_1ab9d30d78fb30a243c70e8dd27a88bf49" compoundref="huber__loss_8hpp" startline="85" endline="85">HuberLoss&lt; InputDataType, OutputDataType &gt;::Mean</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The Huber loss is a loss function used in robust regression, that is less sensitive to outliers in data than the squared error loss. </para>    </briefdescription>
    <detaileddescription>
<para>This function is quadratic for small values of <formula id="128">$ y - f(x) $</formula>, and linear for large values, with equal values and slopes of the different sections at the two points where <formula id="129">$ |y - f(x)| = delta $</formula>.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>InputDataType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the input data (arma::colvec, arma::mat, arma::sp_mat or arma::cube). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>OutputDataType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the output data (arma::colvec, arma::mat, arma::sp_mat or arma::cube). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" line="37" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/loss_functions/huber_loss.hpp" bodystart="36" bodyend="102"/>
    <listofallmembers>
      <member refid="classmlpack_1_1ann_1_1HuberLoss_1add41dbaf358dc099750dc6064cb7e0d7" prot="public" virt="non-virtual"><scope>mlpack::ann::HuberLoss</scope><name>Backward</name></member>
      <member refid="classmlpack_1_1ann_1_1HuberLoss_1acb1f7d73ed8ec9121d6d0e45b560d8fa" prot="public" virt="non-virtual"><scope>mlpack::ann::HuberLoss</scope><name>Delta</name></member>
      <member refid="classmlpack_1_1ann_1_1HuberLoss_1a9fcb8a5caa7165245d5aa803b0a94a7c" prot="public" virt="non-virtual"><scope>mlpack::ann::HuberLoss</scope><name>Delta</name></member>
      <member refid="classmlpack_1_1ann_1_1HuberLoss_1a9ea1a8f5ef3e6d20b362385e1288c72c" prot="private" virt="non-virtual"><scope>mlpack::ann::HuberLoss</scope><name>delta</name></member>
      <member refid="classmlpack_1_1ann_1_1HuberLoss_1ab3640059898ea76c13709b8099316fe8" prot="public" virt="non-virtual"><scope>mlpack::ann::HuberLoss</scope><name>Forward</name></member>
      <member refid="classmlpack_1_1ann_1_1HuberLoss_1af05212ee761a4171dcdd1d0065848bbb" prot="public" virt="non-virtual"><scope>mlpack::ann::HuberLoss</scope><name>HuberLoss</name></member>
      <member refid="classmlpack_1_1ann_1_1HuberLoss_1ab3fece30ee983f7dc98302bacde75efe" prot="public" virt="non-virtual"><scope>mlpack::ann::HuberLoss</scope><name>Mean</name></member>
      <member refid="classmlpack_1_1ann_1_1HuberLoss_1ab9d30d78fb30a243c70e8dd27a88bf49" prot="public" virt="non-virtual"><scope>mlpack::ann::HuberLoss</scope><name>Mean</name></member>
      <member refid="classmlpack_1_1ann_1_1HuberLoss_1a847445b85c86eaac587af2a0f40d17e9" prot="private" virt="non-virtual"><scope>mlpack::ann::HuberLoss</scope><name>mean</name></member>
      <member refid="classmlpack_1_1ann_1_1HuberLoss_1a8bae962cc603d1cab8d80ec78f8d505d" prot="public" virt="non-virtual"><scope>mlpack::ann::HuberLoss</scope><name>OutputParameter</name></member>
      <member refid="classmlpack_1_1ann_1_1HuberLoss_1a21d5f745f02c709625a4ee0907f004a5" prot="public" virt="non-virtual"><scope>mlpack::ann::HuberLoss</scope><name>OutputParameter</name></member>
      <member refid="classmlpack_1_1ann_1_1HuberLoss_1a77fc4c7d9e92ac78bf2c4239477f54bc" prot="private" virt="non-virtual"><scope>mlpack::ann::HuberLoss</scope><name>outputParameter</name></member>
      <member refid="classmlpack_1_1ann_1_1HuberLoss_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::ann::HuberLoss</scope><name>serialize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
