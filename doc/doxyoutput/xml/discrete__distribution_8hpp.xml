<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="discrete__distribution_8hpp" kind="file" language="C++">
    <compoundname>discrete_distribution.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="no">mlpack/core/util/log.hpp</includes>
    <includes refid="random_8hpp" local="no">mlpack/core/math/random.hpp</includes>
    <includedby refid="core_8hpp" local="no">/home/aakash/mlpack/src/mlpack/core.hpp</includedby>
    <includedby refid="augmented_2tasks_2add_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/ann/augmented/tasks/add.hpp</includedby>
    <includedby refid="copy_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/ann/augmented/tasks/copy.hpp</includedby>
    <includedby refid="hmm_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/hmm/hmm.hpp</includedby>
    <includedby refid="aggregated__policy_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/policy/aggregated_policy.hpp</includedby>
    <includedby refid="mock__categorical__data_8hpp" local="no">/home/aakash/mlpack/src/mlpack/tests/mock_categorical_data.hpp</includedby>
    <incdepgraph>
      <node id="9794">
        <label>list</label>
      </node>
      <node id="9791">
        <label>atomic</label>
      </node>
      <node id="9781">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="9757">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="9793">
        <label>iomanip</label>
      </node>
      <node id="9766">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="9767" relation="include">
        </childnode>
        <childnode refid="9769" relation="include">
        </childnode>
      </node>
      <node id="9749">
        <label>cstdint</label>
      </node>
      <node id="9758">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="9765">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="9802">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="9788">
        <label>arma_config.hpp</label>
      </node>
      <node id="9778">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="9745">
        <label>cmath</label>
      </node>
      <node id="9764">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="9753">
        <label>stdexcept</label>
      </node>
      <node id="9773">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="9758" relation="include">
        </childnode>
        <childnode refid="9760" relation="include">
        </childnode>
        <childnode refid="9761" relation="include">
        </childnode>
        <childnode refid="9759" relation="include">
        </childnode>
      </node>
      <node id="9797">
        <label>string</label>
      </node>
      <node id="9785">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="9786" relation="include">
        </childnode>
        <childnode refid="9752" relation="include">
        </childnode>
      </node>
      <node id="9795">
        <label>map</label>
      </node>
      <node id="9747">
        <label>cfloat</label>
      </node>
      <node id="9777">
        <label>boost/variant.hpp</label>
      </node>
      <node id="9799">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="9761">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="9784">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="9785" relation="include">
        </childnode>
        <childnode refid="9761" relation="include">
        </childnode>
        <childnode refid="9768" relation="include">
        </childnode>
        <childnode refid="9786" relation="include">
        </childnode>
      </node>
      <node id="9774">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="9772">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="9758" relation="include">
        </childnode>
        <childnode refid="9760" relation="include">
        </childnode>
        <childnode refid="9761" relation="include">
        </childnode>
        <childnode refid="9759" relation="include">
        </childnode>
      </node>
      <node id="9775">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="9758" relation="include">
        </childnode>
        <childnode refid="9760" relation="include">
        </childnode>
        <childnode refid="9761" relation="include">
        </childnode>
        <childnode refid="9759" relation="include">
        </childnode>
      </node>
      <node id="9763">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="9783">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="9759" relation="include">
        </childnode>
        <childnode refid="9760" relation="include">
        </childnode>
        <childnode refid="9761" relation="include">
        </childnode>
        <childnode refid="9771" relation="include">
        </childnode>
        <childnode refid="9780" relation="include">
        </childnode>
      </node>
      <node id="9787">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="9788" relation="include">
        </childnode>
      </node>
      <node id="9789">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="9744">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="9745" relation="include">
        </childnode>
        <childnode refid="9746" relation="include">
        </childnode>
        <childnode refid="9747" relation="include">
        </childnode>
        <childnode refid="9748" relation="include">
        </childnode>
        <childnode refid="9749" relation="include">
        </childnode>
        <childnode refid="9750" relation="include">
        </childnode>
        <childnode refid="9751" relation="include">
        </childnode>
        <childnode refid="9752" relation="include">
        </childnode>
        <childnode refid="9753" relation="include">
        </childnode>
        <childnode refid="9754" relation="include">
        </childnode>
        <childnode refid="9755" relation="include">
        </childnode>
        <childnode refid="9756" relation="include">
        </childnode>
        <childnode refid="9757" relation="include">
        </childnode>
        <childnode refid="9758" relation="include">
        </childnode>
        <childnode refid="9759" relation="include">
        </childnode>
        <childnode refid="9760" relation="include">
        </childnode>
        <childnode refid="9761" relation="include">
        </childnode>
        <childnode refid="9762" relation="include">
        </childnode>
        <childnode refid="9763" relation="include">
        </childnode>
        <childnode refid="9764" relation="include">
        </childnode>
        <childnode refid="9765" relation="include">
        </childnode>
        <childnode refid="9766" relation="include">
        </childnode>
        <childnode refid="9770" relation="include">
        </childnode>
        <childnode refid="9771" relation="include">
        </childnode>
        <childnode refid="9772" relation="include">
        </childnode>
        <childnode refid="9773" relation="include">
        </childnode>
        <childnode refid="9774" relation="include">
        </childnode>
        <childnode refid="9775" relation="include">
        </childnode>
        <childnode refid="9776" relation="include">
        </childnode>
        <childnode refid="9782" relation="include">
        </childnode>
        <childnode refid="9783" relation="include">
        </childnode>
        <childnode refid="9780" relation="include">
        </childnode>
        <childnode refid="9784" relation="include">
        </childnode>
        <childnode refid="9787" relation="include">
        </childnode>
        <childnode refid="9789" relation="include">
        </childnode>
        <childnode refid="9790" relation="include">
        </childnode>
        <childnode refid="9799" relation="include">
        </childnode>
        <childnode refid="9800" relation="include">
        </childnode>
      </node>
      <node id="9803">
        <label>random</label>
      </node>
      <node id="9750">
        <label>cstdio</label>
      </node>
      <node id="9754">
        <label>tuple</label>
      </node>
      <node id="9759">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="9776">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="9759" relation="include">
        </childnode>
        <childnode refid="9760" relation="include">
        </childnode>
        <childnode refid="9761" relation="include">
        </childnode>
        <childnode refid="9763" relation="include">
        </childnode>
        <childnode refid="9777" relation="include">
        </childnode>
        <childnode refid="9778" relation="include">
        </childnode>
        <childnode refid="9779" relation="include">
        </childnode>
        <childnode refid="9780" relation="include">
        </childnode>
      </node>
      <node id="9801">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="9744" relation="include">
        </childnode>
        <childnode refid="9802" relation="include">
        </childnode>
        <childnode refid="9803" relation="include">
        </childnode>
      </node>
      <node id="9755">
        <label>utility</label>
      </node>
      <node id="9779">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="9770">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="9767">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="9768" relation="include">
        </childnode>
      </node>
      <node id="9790">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="9791" relation="include">
        </childnode>
        <childnode refid="9792" relation="include">
        </childnode>
        <childnode refid="9793" relation="include">
        </childnode>
        <childnode refid="9794" relation="include">
        </childnode>
        <childnode refid="9795" relation="include">
        </childnode>
        <childnode refid="9796" relation="include">
        </childnode>
        <childnode refid="9797" relation="include">
        </childnode>
        <childnode refid="9798" relation="include">
        </childnode>
      </node>
      <node id="9768">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="9782">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="9780" relation="include">
        </childnode>
        <childnode refid="9776" relation="include">
        </childnode>
        <childnode refid="9783" relation="include">
        </childnode>
      </node>
      <node id="9751">
        <label>cstdlib</label>
      </node>
      <node id="9743">
        <label>/home/aakash/mlpack/src/mlpack/core/dists/discrete_distribution.hpp</label>
        <link refid="discrete__distribution_8hpp"/>
        <childnode refid="9744" relation="include">
        </childnode>
        <childnode refid="9789" relation="include">
        </childnode>
        <childnode refid="9801" relation="include">
        </childnode>
      </node>
      <node id="9746">
        <label>cctype</label>
      </node>
      <node id="9769">
        <label>unordered_map</label>
      </node>
      <node id="9748">
        <label>climits</label>
      </node>
      <node id="9796">
        <label>mutex</label>
      </node>
      <node id="9792">
        <label>chrono</label>
      </node>
      <node id="9800">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="9798">
        <label>thread</label>
      </node>
      <node id="9786">
        <label>type_traits</label>
      </node>
      <node id="9762">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="9756">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="9780">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="9758" relation="include">
        </childnode>
        <childnode refid="9759" relation="include">
        </childnode>
        <childnode refid="9760" relation="include">
        </childnode>
        <childnode refid="9761" relation="include">
        </childnode>
        <childnode refid="9781" relation="include">
        </childnode>
      </node>
      <node id="9752">
        <label>cstring</label>
      </node>
      <node id="9771">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="9760">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="9848">
        <label>/home/aakash/mlpack/src/mlpack/tests/serialization.hpp</label>
        <link refid="serialization_8hpp"/>
      </node>
      <node id="9811">
        <label>/home/aakash/mlpack/src/mlpack/core/cv/metrics/accuracy.hpp</label>
        <link refid="accuracy_8hpp"/>
      </node>
      <node id="9810">
        <label>/home/aakash/mlpack/src/mlpack/core/hpt/hpt.hpp</label>
        <link refid="src_2mlpack_2core_2hpt_2hpt_8hpp"/>
      </node>
      <node id="9851">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/augmented/tasks/add.hpp</label>
        <link refid="augmented_2tasks_2add_8hpp"/>
      </node>
      <node id="9855">
        <label>/home/aakash/mlpack/src/mlpack/methods/hmm/hmm_regression.hpp</label>
        <link refid="hmm__regression_8hpp"/>
      </node>
      <node id="9840">
        <label>/home/aakash/mlpack/src/mlpack/methods/decision_tree/decision_tree.hpp</label>
        <link refid="decision__tree_8hpp"/>
        <childnode refid="9841" relation="include">
        </childnode>
        <childnode refid="9842" relation="include">
        </childnode>
      </node>
      <node id="9837">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp</label>
        <link refid="cf__model_8hpp"/>
      </node>
      <node id="9853">
        <label>/home/aakash/mlpack/src/mlpack/methods/hmm/hmm.hpp</label>
        <link refid="hmm_8hpp"/>
        <childnode refid="9854" relation="include">
        </childnode>
        <childnode refid="9855" relation="include">
        </childnode>
        <childnode refid="9856" relation="include">
        </childnode>
      </node>
      <node id="9817">
        <label>/home/aakash/mlpack/src/mlpack/core/cv/metrics/recall.hpp</label>
        <link refid="recall_8hpp"/>
      </node>
      <node id="9812">
        <label>/home/aakash/mlpack/src/mlpack/core/cv/metrics/f1.hpp</label>
        <link refid="f1_8hpp"/>
      </node>
      <node id="9857">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/policy/aggregated_policy.hpp</label>
        <link refid="aggregated__policy_8hpp"/>
      </node>
      <node id="9827">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="9828" relation="include">
        </childnode>
        <childnode refid="9829" relation="include">
        </childnode>
        <childnode refid="9833" relation="include">
        </childnode>
        <childnode refid="9834" relation="include">
        </childnode>
        <childnode refid="9830" relation="include">
        </childnode>
        <childnode refid="9831" relation="include">
        </childnode>
        <childnode refid="9832" relation="include">
        </childnode>
        <childnode refid="9835" relation="include">
        </childnode>
      </node>
      <node id="9805">
        <label>/home/aakash/mlpack/src/mlpack/core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="9806" relation="include">
        </childnode>
        <childnode refid="9811" relation="include">
        </childnode>
        <childnode refid="9812" relation="include">
        </childnode>
        <childnode refid="9813" relation="include">
        </childnode>
        <childnode refid="9814" relation="include">
        </childnode>
        <childnode refid="9815" relation="include">
        </childnode>
        <childnode refid="9816" relation="include">
        </childnode>
        <childnode refid="9817" relation="include">
        </childnode>
        <childnode refid="9818" relation="include">
        </childnode>
        <childnode refid="9819" relation="include">
        </childnode>
        <childnode refid="9820" relation="include">
        </childnode>
        <childnode refid="9821" relation="include">
        </childnode>
        <childnode refid="9822" relation="include">
        </childnode>
        <childnode refid="9824" relation="include">
        </childnode>
        <childnode refid="9825" relation="include">
        </childnode>
        <childnode refid="9826" relation="include">
        </childnode>
        <childnode refid="9833" relation="include">
        </childnode>
        <childnode refid="9836" relation="include">
        </childnode>
        <childnode refid="9837" relation="include">
        </childnode>
        <childnode refid="9838" relation="include">
        </childnode>
        <childnode refid="9839" relation="include">
        </childnode>
        <childnode refid="9843" relation="include">
        </childnode>
        <childnode refid="9844" relation="include">
        </childnode>
        <childnode refid="9845" relation="include">
        </childnode>
        <childnode refid="9846" relation="include">
        </childnode>
        <childnode refid="9847" relation="include">
        </childnode>
        <childnode refid="9848" relation="include">
        </childnode>
        <childnode refid="9849" relation="include">
        </childnode>
        <childnode refid="9850" relation="include">
        </childnode>
      </node>
      <node id="9820">
        <label>/home/aakash/mlpack/src/mlpack/core/data/one_hot_encoding.hpp</label>
        <link refid="one__hot__encoding_8hpp"/>
        <childnode refid="9805" relation="include">
        </childnode>
      </node>
      <node id="9826">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/recurrent.hpp</label>
        <link refid="recurrent_8hpp"/>
        <childnode refid="9827" relation="include">
        </childnode>
      </node>
      <node id="9845">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/environment/acrobot.hpp</label>
        <link refid="acrobot_8hpp"/>
      </node>
      <node id="9841">
        <label>/home/aakash/mlpack/src/mlpack/methods/adaboost/adaboost.hpp</label>
        <link refid="adaboost_8hpp"/>
      </node>
      <node id="9836">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/rbm/rbm.hpp</label>
        <link refid="rbm_8hpp"/>
      </node>
      <node id="9834">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/rnn.hpp</label>
        <link refid="rnn_8hpp"/>
      </node>
      <node id="9830">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/categorical_dqn.hpp</label>
        <link refid="categorical__dqn_8hpp"/>
      </node>
      <node id="9813">
        <label>/home/aakash/mlpack/src/mlpack/core/cv/metrics/facilities.hpp</label>
        <link refid="facilities_8hpp"/>
      </node>
      <node id="9838">
        <label>/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp</label>
        <link refid="dbscan_8hpp"/>
      </node>
      <node id="9856">
        <label>/home/aakash/mlpack/src/mlpack/tests/main_tests/hmm_test_utils.hpp</label>
        <link refid="hmm__test__utils_8hpp"/>
      </node>
      <node id="9847">
        <label>/home/aakash/mlpack/src/mlpack/tests/main_tests/range_search_utils.hpp</label>
        <link refid="range__search__utils_8hpp"/>
      </node>
      <node id="9823">
        <label>/home/aakash/mlpack/src/mlpack/core/hpt/deduce_hp_types.hpp</label>
        <link refid="deduce__hp__types_8hpp"/>
        <childnode refid="9810" relation="include">
        </childnode>
      </node>
      <node id="9842">
        <label>/home/aakash/mlpack/src/mlpack/methods/random_forest/random_forest.hpp</label>
        <link refid="random__forest_8hpp"/>
      </node>
      <node id="9807">
        <label>/home/aakash/mlpack/src/mlpack/core/cv/cv_base.hpp</label>
        <link refid="cv__base_8hpp"/>
        <childnode refid="9808" relation="include">
        </childnode>
        <childnode refid="9809" relation="include">
        </childnode>
      </node>
      <node id="9819">
        <label>/home/aakash/mlpack/src/mlpack/core/data/load_csv.hpp</label>
        <link refid="load__csv_8hpp"/>
      </node>
      <node id="9849">
        <label>/home/aakash/mlpack/src/mlpack/tests/test_catch_tools.hpp</label>
        <link refid="test__catch__tools_8hpp"/>
        <childnode refid="9848" relation="include">
        </childnode>
      </node>
      <node id="9815">
        <label>/home/aakash/mlpack/src/mlpack/core/cv/metrics/precision.hpp</label>
        <link refid="precision_8hpp"/>
      </node>
      <node id="9808">
        <label>/home/aakash/mlpack/src/mlpack/core/cv/k_fold_cv.hpp</label>
        <link refid="k__fold__cv_8hpp"/>
      </node>
      <node id="9828">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/brnn.hpp</label>
        <link refid="brnn_8hpp"/>
      </node>
      <node id="9850">
        <label>/home/aakash/mlpack/src/mlpack/tests/test_function_tools.hpp</label>
        <link refid="test__function__tools_8hpp"/>
      </node>
      <node id="9833">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer_names.hpp</label>
        <link refid="layer__names_8hpp"/>
      </node>
      <node id="9835">
        <label>/home/aakash/mlpack/src/mlpack/tests/custom_layer.hpp</label>
        <link refid="custom__layer_8hpp"/>
      </node>
      <node id="9843">
        <label>/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp</label>
        <link refid="kde__model_8hpp"/>
      </node>
      <node id="9814">
        <label>/home/aakash/mlpack/src/mlpack/core/cv/metrics/mse.hpp</label>
        <link refid="mse_8hpp"/>
      </node>
      <node id="9858">
        <label>/home/aakash/mlpack/src/mlpack/tests/mock_categorical_data.hpp</label>
        <link refid="mock__categorical__data_8hpp"/>
      </node>
      <node id="9804">
        <label>/home/aakash/mlpack/src/mlpack/core/dists/discrete_distribution.hpp</label>
        <link refid="discrete__distribution_8hpp"/>
        <childnode refid="9805" relation="include">
        </childnode>
        <childnode refid="9851" relation="include">
        </childnode>
        <childnode refid="9852" relation="include">
        </childnode>
        <childnode refid="9853" relation="include">
        </childnode>
        <childnode refid="9857" relation="include">
        </childnode>
        <childnode refid="9858" relation="include">
        </childnode>
      </node>
      <node id="9829">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp</label>
        <link refid="ffn_8hpp"/>
        <childnode refid="9825" relation="include">
        </childnode>
        <childnode refid="9830" relation="include">
        </childnode>
        <childnode refid="9831" relation="include">
        </childnode>
        <childnode refid="9832" relation="include">
        </childnode>
      </node>
      <node id="9821">
        <label>/home/aakash/mlpack/src/mlpack/core/hpt/cv_function.hpp</label>
        <link refid="cv__function_8hpp"/>
      </node>
      <node id="9831">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp</label>
        <link refid="dueling__dqn_8hpp"/>
      </node>
      <node id="9816">
        <label>/home/aakash/mlpack/src/mlpack/core/cv/metrics/r2_score.hpp</label>
        <link refid="r2__score_8hpp"/>
      </node>
      <node id="9844">
        <label>/home/aakash/mlpack/src/mlpack/methods/preprocess/scaling_model.hpp</label>
        <link refid="scaling__model_8hpp"/>
      </node>
      <node id="9852">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/augmented/tasks/copy.hpp</label>
        <link refid="copy_8hpp"/>
      </node>
      <node id="9854">
        <label>/home/aakash/mlpack/src/mlpack/methods/hmm/hmm_model.hpp</label>
        <link refid="hmm__model_8hpp"/>
      </node>
      <node id="9825">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp</label>
        <link refid="gan_8hpp"/>
      </node>
      <node id="9824">
        <label>/home/aakash/mlpack/src/mlpack/methods/adaboost/adaboost_model.hpp</label>
        <link refid="adaboost__model_8hpp"/>
      </node>
      <node id="9806">
        <label>/home/aakash/mlpack/src/mlpack/core/cv/meta_info_extractor.hpp</label>
        <link refid="meta__info__extractor_8hpp"/>
        <childnode refid="9807" relation="include">
        </childnode>
        <childnode refid="9808" relation="include">
        </childnode>
        <childnode refid="9809" relation="include">
        </childnode>
        <childnode refid="9810" relation="include">
        </childnode>
      </node>
      <node id="9832">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/simple_dqn.hpp</label>
        <link refid="simple__dqn_8hpp"/>
      </node>
      <node id="9809">
        <label>/home/aakash/mlpack/src/mlpack/core/cv/simple_cv.hpp</label>
        <link refid="simple__cv_8hpp"/>
      </node>
      <node id="9839">
        <label>/home/aakash/mlpack/src/mlpack/methods/decision_tree/gini_gain.hpp</label>
        <link refid="gini__gain_8hpp"/>
        <childnode refid="9840" relation="include">
        </childnode>
      </node>
      <node id="9846">
        <label>/home/aakash/mlpack/src/mlpack/tests/ann_test_tools.hpp</label>
        <link refid="ann__test__tools_8hpp"/>
      </node>
      <node id="9818">
        <label>/home/aakash/mlpack/src/mlpack/core/cv/metrics/silhouette_score.hpp</label>
        <link refid="silhouette__score_8hpp"/>
      </node>
      <node id="9822">
        <label>/home/aakash/mlpack/src/mlpack/core/hpt/fixed.hpp</label>
        <link refid="fixed_8hpp"/>
        <childnode refid="9823" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1distribution_1_1DiscreteDistribution" prot="public">mlpack::distribution::DiscreteDistribution</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1distribution">mlpack::distribution</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ryan Curtin </para></simplesect>
<simplesect kind="author"><para>Rohan Raj</para></simplesect>
Implementation of the discrete distribution, where each discrete observation has a given probability.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="14"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_DISTRIBUTIONS_DISCRETE_DISTRIBUTION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_DISTRIBUTIONS_DISCRETE_DISTRIBUTION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mlpack/core/util/log.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="random_8hpp" kindref="compound">mlpack/core/math/random.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">distribution<sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classmlpack_1_1distribution_1_1DiscreteDistribution" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution" kindref="compound">DiscreteDistribution</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52" refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a354d0d2ba43923b6f81b1747809dace0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a354d0d2ba43923b6f81b1747809dace0" kindref="member">DiscreteDistribution</ref>()<sp/>:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>probabilities(<ref refid="namespacestd" kindref="compound">std</ref>::vector&lt;arma::vec&gt;(1)){<sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do.<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1ae715f8fa95dfd6f96f94348dcd9bf5a6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1ae715f8fa95dfd6f96f94348dcd9bf5a6" kindref="member">DiscreteDistribution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numObservations)<sp/>:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>probabilities(<ref refid="namespacestd" kindref="compound">std</ref>::vector&lt;arma::vec&gt;(1,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::ones&lt;arma::vec&gt;(numObservations)<sp/>/<sp/>numObservations))</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do.<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1ad61f6ecc3bc550bdff56da47871813b5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1ad61f6ecc3bc550bdff56da47871813b5" kindref="member">DiscreteDistribution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Col&lt;size_t&gt;&amp;<sp/>numObservations)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numObservations.n_elem;<sp/>++i)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numObs<sp/>=<sp/>size_t(numObservations[i]);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numObs<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>oss;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;number<sp/>of<sp/>observations<sp/>for<sp/>dimension<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>0,<sp/>but<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;must<sp/>be<sp/>greater<sp/>than<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(oss.str());</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>probabilities.push_back(arma::ones&lt;arma::vec&gt;(numObs)<sp/>/<sp/>numObs);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1ac11a63ab01caa525fede366a32f0371d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1ac11a63ab01caa525fede366a32f0371d" kindref="member">DiscreteDistribution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;arma::vec&gt;&amp;<sp/>probabilities)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>probabilities.size();<sp/>++i)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec<sp/>temp<sp/>=<sp/>probabilities[i];</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>accu(temp);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sum<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;probabilities.push_back(temp<sp/>/<sp/>sum);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;probabilities.push_back(arma::ones&lt;arma::vec&gt;(temp.n_elem)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>temp.n_elem);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a78eda6bfb9e9462afa0fc85e32abe1af" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a78eda6bfb9e9462afa0fc85e32abe1af" kindref="member">Dimensionality</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>probabilities.size();<sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1ab72935d592516e77511d0b5e703c0d41" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1ab72935d592516e77511d0b5e703c0d41" kindref="member">Probability</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/>observation)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="128"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>probability<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>the<sp/>observation<sp/>has<sp/>the<sp/>same<sp/>dimension<sp/>with<sp/>the<sp/>probabilities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(observation.n_elem<sp/>!=<sp/>probabilities.size())</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Log::Fatal<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DiscreteDistribution::Probability():<sp/>observation<sp/>has<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;incorrect<sp/>dimension<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>observation.n_elem<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>but<sp/>should<sp/>have&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>dimension<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>probabilities.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dimension<sp/>=<sp/>0;<sp/>dimension<sp/>&lt;<sp/>observation.n_elem;<sp/>dimension++)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adding<sp/>0.5<sp/>helps<sp/>ensure<sp/>that<sp/>we<sp/>cast<sp/>the<sp/>floating<sp/>point<sp/>to<sp/>a<sp/>size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>correctly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>obs<sp/>=<sp/>size_t(observation(dimension)<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>that<sp/>the<sp/>observation<sp/>is<sp/>within<sp/>the<sp/>bounds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(obs<sp/>&gt;=<sp/>probabilities[dimension].n_elem)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Log::Fatal<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DiscreteDistribution::Probability():<sp/>received<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;observation<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>obs<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;<sp/>observation<sp/>must<sp/>be<sp/>in<sp/>[0,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>probabilities[dimension].n_elem<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]<sp/>for<sp/>this<sp/>distribution.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>probability<sp/>*=<sp/>probabilities[dimension][obs];</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>probability;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a7063c1fb92f512f32bf44542c7528739" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a7063c1fb92f512f32bf44542c7528739" kindref="member">LogProbability</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/>observation)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="167"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>consider<sp/>storing<sp/>log<sp/>probabilities<sp/>instead?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>log(<ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1ab72935d592516e77511d0b5e703c0d41" kindref="member">Probability</ref>(observation));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a1e516aca34e9c99caf1431a822d87fc6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a1e516aca34e9c99caf1431a822d87fc6" kindref="member">Probability</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>x,<sp/>arma::vec&amp;<sp/>probabilities)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="180"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>probabilities.set_size(x.n_cols);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>x.n_cols;<sp/>++i)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>probabilities(i)<sp/>=<sp/><ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1ab72935d592516e77511d0b5e703c0d41" kindref="member">Probability</ref>(x.unsafe_col(i));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1aabd4dbf56bd3d719aede447516d68296" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1aabd4dbf56bd3d719aede447516d68296" kindref="member">LogProbability</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>x,<sp/>arma::vec&amp;<sp/>logProbabilities)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="195"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>logProbabilities.set_size(x.n_cols);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>x.n_cols;<sp/>++i)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logProbabilities(i)<sp/>=<sp/>log(<ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1ab72935d592516e77511d0b5e703c0d41" kindref="member">Probability</ref>(x.unsafe_col(i)));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>arma::vec<sp/><ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a2c6f8d5bb4eacf7de767d2172b320756" kindref="member">Random</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a269c6f8a40ce41a5f7b6d035aef58238" kindref="member">Train</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>observations);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a269c6f8a40ce41a5f7b6d035aef58238" kindref="member">Train</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>observations,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/>probabilities);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a5345d11b5eb6c28dbf0f252e1110909b" refkind="member"><highlight class="normal"><sp/><sp/>arma::vec&amp;<sp/><ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a5345d11b5eb6c28dbf0f252e1110909b" kindref="member">Probabilities</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dim<sp/>=<sp/>0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>probabilities[dim];<sp/>}</highlight></codeline>
<codeline lineno="234" refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a5742ca9717cead69c579e7a1af5f487d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/><ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a5742ca9717cead69c579e7a1af5f487d" kindref="member">Probabilities</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dim<sp/>=<sp/>0)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="235"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>probabilities[dim];<sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="241" refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a65cba07328997659bec80b9879b15a51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1distribution_1_1DiscreteDistribution_1a65cba07328997659bec80b9879b15a51" kindref="member">serialize</ref>(Archive&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>ar(CEREAL_NVP(probabilities));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>std::vector&lt;arma::vec&gt;<sp/>probabilities;</highlight></codeline>
<codeline lineno="250"><highlight class="normal">};</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/dists/discrete_distribution.hpp"/>
  </compounddef>
</doxygen>
