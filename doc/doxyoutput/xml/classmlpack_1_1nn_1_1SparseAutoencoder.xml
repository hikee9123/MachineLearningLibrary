<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1nn_1_1SparseAutoencoder" kind="class" language="C++" prot="public">
    <compoundname>mlpack::nn::SparseAutoencoder</compoundname>
    <includes refid="sparse__autoencoder_8hpp" local="no">sparse_autoencoder.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1nn_1_1SparseAutoencoder_1a9424343761f8c4f4c1afe8f5b6bf471b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double beta</definition>
        <argsstring></argsstring>
        <name>beta</name>
        <briefdescription>
<para>KL divergence parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" line="210" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1nn_1_1SparseAutoencoder_1ad807388d5d1fc99793b27be860a1a204" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t hiddenSize</definition>
        <argsstring></argsstring>
        <name>hiddenSize</name>
        <briefdescription>
<para>Size of the hidden layer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" line="206" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1nn_1_1SparseAutoencoder_1a3db359547eed8cfd48ca821d95f577af" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double lambda</definition>
        <argsstring></argsstring>
        <name>lambda</name>
        <briefdescription>
<para>L2-regularization parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" line="208" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1nn_1_1SparseAutoencoder_1ac475c49ee5a4f316e1dbc6b7dab47b6f" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat parameters</definition>
        <argsstring></argsstring>
        <name>parameters</name>
        <briefdescription>
<para>Parameters after optimization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" line="202" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1nn_1_1SparseAutoencoder_1a3ed57096651b587c2bf716fa78048153" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double rho</definition>
        <argsstring></argsstring>
        <name>rho</name>
        <briefdescription>
<para>Sparsity parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" line="212" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1nn_1_1SparseAutoencoder_1a0381a080118c46d9bd4177072d1e646c" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t visibleSize</definition>
        <argsstring></argsstring>
        <name>visibleSize</name>
        <briefdescription>
<para>Size of the visible layer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" line="204" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1nn_1_1SparseAutoencoder_1a5fbf00d7a7ca616f6128c15d72dac06f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OptimizerType</type>
            <defval>ens::L_BFGS</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>SparseAutoencoder</definition>
        <argsstring>(const arma::mat &amp;data, const size_t visibleSize, const size_t hiddenSize, const double lambda=0.0001, const double beta=3, const double rho=0.01, OptimizerType optimizer=OptimizerType())</argsstring>
        <name>SparseAutoencoder</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>visibleSize</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>hiddenSize</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>lambda</declname>
          <defval>0.0001</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>beta</declname>
          <defval>3</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>rho</declname>
          <defval>0.01</defval>
        </param>
        <param>
          <type>OptimizerType</type>
          <declname>optimizer</declname>
          <defval>OptimizerType()</defval>
        </param>
        <briefdescription>
<para>Construct the sparse autoencoder model with the given training data. </para>        </briefdescription>
        <detaileddescription>
<para>This will train the model. The parameters &apos;lambda&apos;, &apos;beta&apos; and &apos;rho&apos; can be set optionally. Changing these parameters will have an effect on regularization and sparsity of the model.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OptimizerType</parametername>
</parameternamelist>
<parameterdescription>
<para>The optimizer to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data with each column as one example. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>visibleSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of input vector expected at the visible layer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hiddenSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of input vector expected at the hidden layer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambda</parametername>
</parameternamelist>
<parameterdescription>
<para>L2-regularization parameter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beta</parametername>
</parameternamelist>
<parameterdescription>
<para>KL divergence parameter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rho</parametername>
</parameternamelist>
<parameterdescription>
<para>Sparsity parameter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>optimizer</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired optimizer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1nn_1_1SparseAutoencoder_1a29f0cbc477c227939ebaaf99b0b94ea5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OptimizerType</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>CallbackTypes</declname>
            <defname>CallbackTypes</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>SparseAutoencoder</definition>
        <argsstring>(const arma::mat &amp;data, const size_t visibleSize, const size_t hiddenSize, const double lambda, const double beta, const double rho, OptimizerType optimizer, CallbackTypes &amp;&amp;... callbacks)</argsstring>
        <name>SparseAutoencoder</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>visibleSize</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>hiddenSize</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>lambda</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>rho</declname>
        </param>
        <param>
          <type>OptimizerType</type>
          <declname>optimizer</declname>
        </param>
        <param>
          <type>CallbackTypes &amp;&amp;...</type>
          <declname>callbacks</declname>
        </param>
        <briefdescription>
<para>Construct the sparse autoencoder model with the given training data. </para>        </briefdescription>
        <detaileddescription>
<para>This will train the model. The parameters &apos;lambda&apos;, &apos;beta&apos; and &apos;rho&apos; can be set optionally. Changing these parameters will have an effect on regularization and sparsity of the model.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OptimizerType</parametername>
</parameternamelist>
<parameterdescription>
<para>The optimizer to use. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CallbackTypes</parametername>
</parameternamelist>
<parameterdescription>
<para>Types of Callback Functions. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data with each column as one example. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>visibleSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of input vector expected at the visible layer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hiddenSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of input vector expected at the hidden layer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lambda</parametername>
</parameternamelist>
<parameterdescription>
<para>L2-regularization parameter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beta</parametername>
</parameternamelist>
<parameterdescription>
<para>KL divergence parameter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rho</parametername>
</parameternamelist>
<parameterdescription>
<para>Sparsity parameter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>optimizer</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired optimizer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callbacks</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function for ensmallen optimizer <computeroutput>OptimizerType</computeroutput>. See <ulink url="https://www.ensmallen.org/docs.html#callback-documentation">https://www.ensmallen.org/docs.html#callback-documentation</ulink>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1nn_1_1SparseAutoencoder_1ac48f9c3723fbeb5d97e8382b706bb20d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Beta</definition>
        <argsstring>(const double b)</argsstring>
        <name>Beta</name>
        <param>
          <type>const double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Sets the KL divergence parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" line="177" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1nn_1_1SparseAutoencoder_1ad1b9206255af52171cb88dfb7c326576" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Beta</definition>
        <argsstring>() const</argsstring>
        <name>Beta</name>
        <briefdescription>
<para>Gets the KL divergence parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" line="183" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" bodystart="183" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1nn_1_1SparseAutoencoder_1ad16d07cc1fe0b0df569ab3c0ca0562fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetNewFeatures</definition>
        <argsstring>(arma::mat &amp;data, arma::mat &amp;features)</argsstring>
        <name>GetNewFeatures</name>
        <param>
          <type>arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>features</declname>
        </param>
        <briefdescription>
<para>Transforms the provided data into the representation learned by the sparse autoencoder. </para>        </briefdescription>
        <detaileddescription>
<para>The function basically performs a feedforward computation using the learned weights, and returns the hidden layer activations.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix of the provided data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para>The hidden layer representation of the provided data. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1nn_1_1SparseAutoencoder_1aef6f7e6478c5268a8762768f2bed7cf3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HiddenSize</definition>
        <argsstring>(const size_t hidden)</argsstring>
        <name>HiddenSize</name>
        <param>
          <type>const size_t</type>
          <declname>hidden</declname>
        </param>
        <briefdescription>
<para>Sets size of the hidden layer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" line="153" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1nn_1_1SparseAutoencoder_1a820e775a98d21ef0d06283a445e0813a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t HiddenSize</definition>
        <argsstring>() const</argsstring>
        <name>HiddenSize</name>
        <briefdescription>
<para>Gets the size of the hidden layer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" line="159" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1nn_1_1SparseAutoencoder_1af476ed1916ad9b39eaddd7e7ac108f4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Lambda</definition>
        <argsstring>(const double l)</argsstring>
        <name>Lambda</name>
        <param>
          <type>const double</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Sets the L2-regularization parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" line="165" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1nn_1_1SparseAutoencoder_1a53535041275cedd0ec3de67ca032aa94" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Lambda</definition>
        <argsstring>() const</argsstring>
        <name>Lambda</name>
        <briefdescription>
<para>Gets the L2-regularization parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" line="171" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" bodystart="171" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1nn_1_1SparseAutoencoder_1a97ac05cf618f1f137a4aa8fcd4e48539" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Rho</definition>
        <argsstring>(const double r)</argsstring>
        <name>Rho</name>
        <param>
          <type>const double</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Sets the sparsity parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" line="189" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" bodystart="189" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1nn_1_1SparseAutoencoder_1a309719b378c0bb1962982a8162e58e84" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Rho</definition>
        <argsstring>() const</argsstring>
        <name>Rho</name>
        <briefdescription>
<para>Gets the sparsity parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" line="195" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" bodystart="195" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1nn_1_1SparseAutoencoder_1a78a48b3c359a36dbc1d6936d7c8ba276" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Sigmoid</definition>
        <argsstring>(const arma::mat &amp;x, arma::mat &amp;output) const</argsstring>
        <name>Sigmoid</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Returns the elementwise sigmoid of the passed matrix, where the sigmoid function of a real number &apos;x&apos; is [1 / (1 + exp(-x))]. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix of real values for which we require the sigmoid activation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Output matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" line="135" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1nn_1_1SparseAutoencoder_1a56ba0c1d534d55c931e725914b00a100" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void VisibleSize</definition>
        <argsstring>(const size_t visible)</argsstring>
        <name>VisibleSize</name>
        <param>
          <type>const size_t</type>
          <declname>visible</declname>
        </param>
        <briefdescription>
<para>Sets size of the visible layer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" line="141" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1nn_1_1SparseAutoencoder_1a3cea635d43096bb8cd925c74dcdd1d48" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t VisibleSize</definition>
        <argsstring>() const</argsstring>
        <name>VisibleSize</name>
        <briefdescription>
<para>Gets size of the visible layer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" line="147" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" bodystart="147" bodyend="150"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A sparse autoencoder is a neural network whose aim to learn compressed representations of the data, typically for dimensionality reduction, with a constraint on the activity of the neurons in the network. </para>    </briefdescription>
    <detaileddescription>
<para>Sparse autoencoders can be stacked together to learn a hierarchy of features, which provide a better representation of the data for classification. This is a method used in the recently developed field of deep learning. More technical details about the model can be found on the following webpage:</para><para><ulink url="http://deeplearning.stanford.edu/wiki/index.php/UFLDL_Tutorial">http://deeplearning.stanford.edu/wiki/index.php/UFLDL_Tutorial</ulink></para><para>An example of how to use the interface is shown below:</para><para><programlisting><codeline><highlight class="normal">arma::mat<sp/>data;<sp/>//<sp/>Data<sp/>matrix.</highlight></codeline>
<codeline><highlight class="normal">const<sp/>size_t<sp/>vSize<sp/>=<sp/>64;<sp/>//<sp/>Size<sp/>of<sp/>visible<sp/>layer,<sp/>depends<sp/>on<sp/>the<sp/>data.</highlight></codeline>
<codeline><highlight class="normal">const<sp/>size_t<sp/>hSize<sp/>=<sp/>25;<sp/>//<sp/>Size<sp/>of<sp/>hidden<sp/>layer,<sp/>depends<sp/>on<sp/>requirements.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Train<sp/>the<sp/>model<sp/>using<sp/>default<sp/>options.</highlight></codeline>
<codeline><highlight class="normal">SparseAutoencoder<sp/>encoder1(data,<sp/>vSize,<sp/>hSize);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">const<sp/>size_t<sp/>numBasis<sp/>=<sp/>5;<sp/>//<sp/>Parameter<sp/>required<sp/>for<sp/>L-BFGS<sp/>algorithm.</highlight></codeline>
<codeline><highlight class="normal">const<sp/>size_t<sp/>numIterations<sp/>=<sp/>100;<sp/>//<sp/>Maximum<sp/>number<sp/>of<sp/>iterations.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Use<sp/>an<sp/>instantiated<sp/>optimizer<sp/>for<sp/>the<sp/>training.</highlight></codeline>
<codeline><highlight class="normal">SparseAutoencoderFunction<sp/>saf(data,<sp/>vSize,<sp/>hSize);</highlight></codeline>
<codeline><highlight class="normal">L_BFGS&lt;SparseAutoencoderFunction&gt;<sp/>optimizer(saf,<sp/>numBasis,<sp/>numIterations);</highlight></codeline>
<codeline><highlight class="normal">SparseAutoencoder&lt;L_BFGS&gt;<sp/>encoder2(optimizer);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">arma::mat<sp/>features1,<sp/>features2;<sp/>//<sp/>Matrices<sp/>for<sp/>storing<sp/>new<sp/>representations.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Get<sp/>new<sp/>representations<sp/>from<sp/>the<sp/>trained<sp/>models.</highlight></codeline>
<codeline><highlight class="normal">encoder1.GetNewFeatures(data,<sp/>features1);</highlight></codeline>
<codeline><highlight class="normal">encoder2.GetNewFeatures(data,<sp/>features2);</highlight></codeline>
</programlisting></para><para>This implementation allows the use of arbitrary mlpack optimizers via the OptimizerType template parameter. </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" line="64" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder.hpp" bodystart="63" bodyend="213"/>
    <listofallmembers>
      <member refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a9424343761f8c4f4c1afe8f5b6bf471b" prot="private" virt="non-virtual"><scope>mlpack::nn::SparseAutoencoder</scope><name>beta</name></member>
      <member refid="classmlpack_1_1nn_1_1SparseAutoencoder_1ac48f9c3723fbeb5d97e8382b706bb20d" prot="public" virt="non-virtual"><scope>mlpack::nn::SparseAutoencoder</scope><name>Beta</name></member>
      <member refid="classmlpack_1_1nn_1_1SparseAutoencoder_1ad1b9206255af52171cb88dfb7c326576" prot="public" virt="non-virtual"><scope>mlpack::nn::SparseAutoencoder</scope><name>Beta</name></member>
      <member refid="classmlpack_1_1nn_1_1SparseAutoencoder_1ad16d07cc1fe0b0df569ab3c0ca0562fb" prot="public" virt="non-virtual"><scope>mlpack::nn::SparseAutoencoder</scope><name>GetNewFeatures</name></member>
      <member refid="classmlpack_1_1nn_1_1SparseAutoencoder_1ad807388d5d1fc99793b27be860a1a204" prot="private" virt="non-virtual"><scope>mlpack::nn::SparseAutoencoder</scope><name>hiddenSize</name></member>
      <member refid="classmlpack_1_1nn_1_1SparseAutoencoder_1aef6f7e6478c5268a8762768f2bed7cf3" prot="public" virt="non-virtual"><scope>mlpack::nn::SparseAutoencoder</scope><name>HiddenSize</name></member>
      <member refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a820e775a98d21ef0d06283a445e0813a" prot="public" virt="non-virtual"><scope>mlpack::nn::SparseAutoencoder</scope><name>HiddenSize</name></member>
      <member refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a3db359547eed8cfd48ca821d95f577af" prot="private" virt="non-virtual"><scope>mlpack::nn::SparseAutoencoder</scope><name>lambda</name></member>
      <member refid="classmlpack_1_1nn_1_1SparseAutoencoder_1af476ed1916ad9b39eaddd7e7ac108f4b" prot="public" virt="non-virtual"><scope>mlpack::nn::SparseAutoencoder</scope><name>Lambda</name></member>
      <member refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a53535041275cedd0ec3de67ca032aa94" prot="public" virt="non-virtual"><scope>mlpack::nn::SparseAutoencoder</scope><name>Lambda</name></member>
      <member refid="classmlpack_1_1nn_1_1SparseAutoencoder_1ac475c49ee5a4f316e1dbc6b7dab47b6f" prot="private" virt="non-virtual"><scope>mlpack::nn::SparseAutoencoder</scope><name>parameters</name></member>
      <member refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a3ed57096651b587c2bf716fa78048153" prot="private" virt="non-virtual"><scope>mlpack::nn::SparseAutoencoder</scope><name>rho</name></member>
      <member refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a97ac05cf618f1f137a4aa8fcd4e48539" prot="public" virt="non-virtual"><scope>mlpack::nn::SparseAutoencoder</scope><name>Rho</name></member>
      <member refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a309719b378c0bb1962982a8162e58e84" prot="public" virt="non-virtual"><scope>mlpack::nn::SparseAutoencoder</scope><name>Rho</name></member>
      <member refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a78a48b3c359a36dbc1d6936d7c8ba276" prot="public" virt="non-virtual"><scope>mlpack::nn::SparseAutoencoder</scope><name>Sigmoid</name></member>
      <member refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a5fbf00d7a7ca616f6128c15d72dac06f" prot="public" virt="non-virtual"><scope>mlpack::nn::SparseAutoencoder</scope><name>SparseAutoencoder</name></member>
      <member refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a29f0cbc477c227939ebaaf99b0b94ea5" prot="public" virt="non-virtual"><scope>mlpack::nn::SparseAutoencoder</scope><name>SparseAutoencoder</name></member>
      <member refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a0381a080118c46d9bd4177072d1e646c" prot="private" virt="non-virtual"><scope>mlpack::nn::SparseAutoencoder</scope><name>visibleSize</name></member>
      <member refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a56ba0c1d534d55c931e725914b00a100" prot="public" virt="non-virtual"><scope>mlpack::nn::SparseAutoencoder</scope><name>VisibleSize</name></member>
      <member refid="classmlpack_1_1nn_1_1SparseAutoencoder_1a3cea635d43096bb8cd925c74dcdd1d48" prot="public" virt="non-virtual"><scope>mlpack::nn::SparseAutoencoder</scope><name>VisibleSize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
