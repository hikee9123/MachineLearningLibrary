<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1tree_1_1VantagePointSplit" kind="class" language="C++" prot="public">
    <compoundname>mlpack::tree::VantagePointSplit</compoundname>
    <includes refid="vantage__point__split_8hpp" local="no">vantage_point_split.hpp</includes>
    <innerclass refid="structmlpack_1_1tree_1_1VantagePointSplit_1_1SplitInfo" prot="public">mlpack::tree::VantagePointSplit::SplitInfo</innerclass>
    <templateparamlist>
      <param>
        <type>typename BoundType</type>
      </param>
      <param>
        <type>typename MatType</type>
        <defval>arma::mat</defval>
      </param>
      <param>
        <type>size_t</type>
        <declname>MaxNumSamples</declname>
        <defname>MaxNumSamples</defname>
        <defval>100</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmlpack_1_1tree_1_1VantagePointSplit_1a227d0c7e23e98fcd6c81ecab357a791f" prot="public" static="no">
        <type>MatType::elem_type</type>
        <definition>typedef MatType::elem_type ElemType</definition>
        <argsstring></argsstring>
        <name>ElemType</name>
        <briefdescription>
<para>The matrix element type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/vantage_point_split.hpp" line="36" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/vantage_point_split.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmlpack_1_1tree_1_1VantagePointSplit_1a79faa898201367f659c88a82cb694be9" prot="public" static="no">
        <type>BoundType::MetricType</type>
        <definition>typedef BoundType::MetricType MetricType</definition>
        <argsstring></argsstring>
        <name>MetricType</name>
        <briefdescription>
<para>The bounding shape type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/vantage_point_split.hpp" line="38" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/vantage_point_split.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1VantagePointSplit_1af0fc61f469596cb8796d1966564ecbcb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VecType</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool AssignToLeftNode</definition>
        <argsstring>(const VecType &amp;point, const SplitInfo &amp;splitInfo)</argsstring>
        <name>AssignToLeftNode</name>
        <param>
          <type>const VecType &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const <ref refid="structmlpack_1_1tree_1_1VantagePointSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref> &amp;</type>
          <declname>splitInfo</declname>
        </param>
        <briefdescription>
<para>Indicates that a point should be assigned to the left subtree. </para>        </briefdescription>
        <detaileddescription>
<para>This method returns true if a point should be assigned to the left subtree, i.e., if the distance from the point to the vantage point is less then the median value. Otherwise it returns false.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>The point that is being assigned. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>splitInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>An information about the split. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/vantage_point_split.hpp" line="136" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/vantage_point_split.hpp" bodystart="136" bodyend="141"/>
        <references refid="structmlpack_1_1tree_1_1VantagePointSplit_1_1SplitInfo_1aefb95f787fcd1b21b8a22aa287e2e9a9" compoundref="vantage__point__split_8hpp" startline="47">VantagePointSplit&lt; BoundType, MatType, MaxNumSamples &gt;::SplitInfo::metric</references>
        <references refid="structmlpack_1_1tree_1_1VantagePointSplit_1_1SplitInfo_1ab59cdbc0470f8193c2002e2d033c9c87" compoundref="vantage__point__split_8hpp" startline="45">VantagePointSplit&lt; BoundType, MatType, MaxNumSamples &gt;::SplitInfo::mu</references>
        <references refid="structmlpack_1_1tree_1_1VantagePointSplit_1_1SplitInfo_1a1e5774bac565e84f45fc10db407fa3ac" compoundref="vantage__point__split_8hpp" startline="43">VantagePointSplit&lt; BoundType, MatType, MaxNumSamples &gt;::SplitInfo::vantagePoint</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1VantagePointSplit_1aace8240352cb3ea61c975987b91a80a6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t PerformSplit</definition>
        <argsstring>(MatType &amp;data, const size_t begin, const size_t count, const SplitInfo &amp;splitInfo)</argsstring>
        <name>PerformSplit</name>
        <param>
          <type>MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const <ref refid="structmlpack_1_1tree_1_1VantagePointSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref> &amp;</type>
          <declname>splitInfo</declname>
        </param>
        <briefdescription>
<para>Perform the split process according to the information about the split. </para>        </briefdescription>
        <detaileddescription>
<para>This will order the dataset such that points that belong to the left subtree are on the left of the split column, and points from the right subtree are on the right side of the split column.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The dataset used by the binary space tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the starting point in the dataset that belongs to this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points in this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>splitInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>The information about the split. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/vantage_point_split.hpp" line="92" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/vantage_point_split.hpp" bodystart="92" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1VantagePointSplit_1af99e13e8418a8bb6b602435fbd7e4e64" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t PerformSplit</definition>
        <argsstring>(MatType &amp;data, const size_t begin, const size_t count, const SplitInfo &amp;splitInfo, std::vector&lt; size_t &gt; &amp;oldFromNew)</argsstring>
        <name>PerformSplit</name>
        <param>
          <type>MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const <ref refid="structmlpack_1_1tree_1_1VantagePointSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref> &amp;</type>
          <declname>splitInfo</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; &amp;</type>
          <declname>oldFromNew</declname>
        </param>
        <briefdescription>
<para>Perform the split process according to the information about the split and return the list of changed indices. </para>        </briefdescription>
        <detaileddescription>
<para>This will order the dataset such that points that belong to the left subtree are on the left of the split column, and points from the right subtree are on the right side of the split column.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The dataset used by the binary space tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the starting point in the dataset that belongs to this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points in this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>splitInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>The information about the split. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldFromNew</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector which will be filled with the old positions for each new point. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/vantage_point_split.hpp" line="116" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/vantage_point_split.hpp" bodystart="116" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1VantagePointSplit_1ae326f86e681c01ed2fd5d3d12123e7bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SplitNode</definition>
        <argsstring>(const BoundType &amp;bound, MatType &amp;data, const size_t begin, const size_t count, SplitInfo &amp;splitInfo)</argsstring>
        <name>SplitNode</name>
        <param>
          <type>const BoundType &amp;</type>
          <declname>bound</declname>
        </param>
        <param>
          <type>MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="structmlpack_1_1tree_1_1VantagePointSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref> &amp;</type>
          <declname>splitInfo</declname>
        </param>
        <briefdescription>
<para>Split the node according to the distance to a vantage point. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bound</parametername>
</parameternamelist>
<parameterdescription>
<para>The bound used for this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The dataset used by the binary space tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the starting point in the dataset that belongs to this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points in this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>splitInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>An information about the split. This information contains the vantage point and the median distance to the vantage point. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/vantage_point_split.hpp" line="74" column="1"/>
        <referencedby refid="structmlpack_1_1tree_1_1VantagePointSplit_1_1SplitInfo_1afb282cb1a9a0f77128f3529ef65a6c87" compoundref="vantage__point__split_8hpp" startline="55" endline="60">VantagePointSplit&lt; BoundType, MatType, MaxNumSamples &gt;::SplitInfo::SplitInfo</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1VantagePointSplit_1a470f364e8444e2563aa6346b9c48ee31" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SelectVantagePoint</definition>
        <argsstring>(const MetricType &amp;metric, const MatType &amp;data, const size_t begin, const size_t count, size_t &amp;vantagePoint, ElemType &amp;mu)</argsstring>
        <name>SelectVantagePoint</name>
        <param>
          <type>const <ref refid="classmlpack_1_1tree_1_1VantagePointSplit_1a79faa898201367f659c88a82cb694be9" kindref="member">MetricType</ref> &amp;</type>
          <declname>metric</declname>
        </param>
        <param>
          <type>const MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>vantagePoint</declname>
        </param>
        <param>
          <type><ref refid="classmlpack_1_1tree_1_1VantagePointSplit_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref> &amp;</type>
          <declname>mu</declname>
        </param>
        <briefdescription>
<para>Select the best vantage point, i.e., the point with the largest second moment of the distance from a number of random node points to the vantage point. </para>        </briefdescription>
        <detaileddescription>
<para>Firstly this method selects no more than MaxNumSamples random points. Then it evaluates each point, i.e., calculates the corresponding second moment and selects the point with the largest moment. Each random point belongs to the node.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>metric</parametername>
</parameternamelist>
<parameterdescription>
<para>The metric used by the tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The dataset used by the tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the starting point in the dataset that belongs to this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points in this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vantagePoint</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the vantage point in the dataset. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mu</parametername>
</parameternamelist>
<parameterdescription>
<para>The median value of distance form the vantage point to a number of random points. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/vantage_point_split.hpp" line="161" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class splits a binary space partitioning tree node according to the median distance to the vantage point. </para>    </briefdescription>
    <detaileddescription>
<para>Thus points that are closer to the vantage point belong to the left subtree and points that are farther from the vantage point belong to the right subtree. </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/vantage_point_split.hpp" line="33" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/vantage_point_split.hpp" bodystart="32" bodyend="167"/>
    <listofallmembers>
      <member refid="classmlpack_1_1tree_1_1VantagePointSplit_1af0fc61f469596cb8796d1966564ecbcb" prot="public" virt="non-virtual"><scope>mlpack::tree::VantagePointSplit</scope><name>AssignToLeftNode</name></member>
      <member refid="classmlpack_1_1tree_1_1VantagePointSplit_1a227d0c7e23e98fcd6c81ecab357a791f" prot="public" virt="non-virtual"><scope>mlpack::tree::VantagePointSplit</scope><name>ElemType</name></member>
      <member refid="classmlpack_1_1tree_1_1VantagePointSplit_1a79faa898201367f659c88a82cb694be9" prot="public" virt="non-virtual"><scope>mlpack::tree::VantagePointSplit</scope><name>MetricType</name></member>
      <member refid="classmlpack_1_1tree_1_1VantagePointSplit_1aace8240352cb3ea61c975987b91a80a6" prot="public" virt="non-virtual"><scope>mlpack::tree::VantagePointSplit</scope><name>PerformSplit</name></member>
      <member refid="classmlpack_1_1tree_1_1VantagePointSplit_1af99e13e8418a8bb6b602435fbd7e4e64" prot="public" virt="non-virtual"><scope>mlpack::tree::VantagePointSplit</scope><name>PerformSplit</name></member>
      <member refid="classmlpack_1_1tree_1_1VantagePointSplit_1a470f364e8444e2563aa6346b9c48ee31" prot="private" virt="non-virtual"><scope>mlpack::tree::VantagePointSplit</scope><name>SelectVantagePoint</name></member>
      <member refid="classmlpack_1_1tree_1_1VantagePointSplit_1ae326f86e681c01ed2fd5d3d12123e7bd" prot="public" virt="non-virtual"><scope>mlpack::tree::VantagePointSplit</scope><name>SplitNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
