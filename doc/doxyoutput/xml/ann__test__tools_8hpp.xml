<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="ann__test__tools_8hpp" kind="file" language="C++">
    <compoundname>ann_test_tools.hpp</compoundname>
    <includes refid="core_8hpp" local="no">mlpack/core.hpp</includes>
    <incdepgraph>
      <node id="60539">
        <label>list</label>
      </node>
      <node id="60568">
        <label>save_impl.hpp</label>
      </node>
      <node id="60536">
        <label>atomic</label>
      </node>
      <node id="60560">
        <label>dataset_mapper_impl.hpp</label>
      </node>
      <node id="60566">
        <label>load_image_impl.hpp</label>
      </node>
      <node id="60526">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="60502">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="60538">
        <label>iomanip</label>
      </node>
      <node id="60598">
        <label>mlpack/core/kernels/linear_kernel.hpp</label>
        <link refid="linear__kernel_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
      </node>
      <node id="60593">
        <label>mlpack/core/data/confusion_matrix.hpp</label>
        <link refid="confusion__matrix_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
        <childnode refid="60594" relation="include">
        </childnode>
      </node>
      <node id="60608">
        <label>mlpack/core/kernels/laplacian_kernel.hpp</label>
        <link refid="laplacian__kernel_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
      </node>
      <node id="60575">
        <label>float.h</label>
      </node>
      <node id="60604">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="60511">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="60512" relation="include">
        </childnode>
        <childnode refid="60514" relation="include">
        </childnode>
      </node>
      <node id="60494">
        <label>cstdint</label>
      </node>
      <node id="60606">
        <label>epanechnikov_kernel_impl.hpp</label>
      </node>
      <node id="60597">
        <label>mlpack/core/kernels/kernel_traits.hpp</label>
        <link refid="kernel__traits_8hpp"/>
      </node>
      <node id="60503">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="60510">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="60591">
        <label>mlpack/core/dists/gamma_distribution.hpp</label>
        <link refid="gamma__distribution_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
        <childnode refid="60576" relation="include">
        </childnode>
      </node>
      <node id="60555">
        <label>mlpack/core/data/load.hpp</label>
        <link refid="load_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
        <childnode refid="60534" relation="include">
        </childnode>
        <childnode refid="60542" relation="include">
        </childnode>
        <childnode refid="60556" relation="include">
        </childnode>
        <childnode refid="60557" relation="include">
        </childnode>
        <childnode refid="60561" relation="include">
        </childnode>
        <childnode refid="60564" relation="include">
        </childnode>
        <childnode refid="60565" relation="include">
        </childnode>
        <childnode refid="60566" relation="include">
        </childnode>
      </node>
      <node id="60550">
        <label>program_doc.hpp</label>
        <link refid="program__doc_8hpp"/>
      </node>
      <node id="60573">
        <label>stdlib.h</label>
      </node>
      <node id="60577">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="60533">
        <label>arma_config.hpp</label>
      </node>
      <node id="60612">
        <label>mlpack/core/kernels/spherical_kernel.hpp</label>
        <link refid="spherical__kernel_8hpp"/>
        <childnode refid="60613" relation="include">
        </childnode>
        <childnode refid="60489" relation="include">
        </childnode>
      </node>
      <node id="60553">
        <label>params.hpp</label>
        <link refid="params_8hpp"/>
        <childnode refid="60552" relation="include">
        </childnode>
        <childnode refid="60549" relation="include">
        </childnode>
        <childnode refid="60554" relation="include">
        </childnode>
      </node>
      <node id="60581">
        <label>lin_alg_impl.hpp</label>
      </node>
      <node id="60607">
        <label>mlpack/core/kernels/hyperbolic_tangent_kernel.hpp</label>
        <link refid="hyperbolic__tangent__kernel_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
      </node>
      <node id="60488">
        <label>mlpack/core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
        <childnode refid="60502" relation="include">
        </childnode>
        <childnode refid="60534" relation="include">
        </childnode>
        <childnode refid="60546" relation="include">
        </childnode>
        <childnode refid="60544" relation="include">
        </childnode>
        <childnode refid="60555" relation="include">
        </childnode>
        <childnode refid="60567" relation="include">
        </childnode>
        <childnode refid="60570" relation="include">
        </childnode>
        <childnode refid="60572" relation="include">
        </childnode>
        <childnode refid="60576" relation="include">
        </childnode>
        <childnode refid="60579" relation="include">
        </childnode>
        <childnode refid="60580" relation="include">
        </childnode>
        <childnode refid="60582" relation="include">
        </childnode>
        <childnode refid="60583" relation="include">
        </childnode>
        <childnode refid="60584" relation="include">
        </childnode>
        <childnode refid="60585" relation="include">
        </childnode>
        <childnode refid="60587" relation="include">
        </childnode>
        <childnode refid="60588" relation="include">
        </childnode>
        <childnode refid="60589" relation="include">
        </childnode>
        <childnode refid="60590" relation="include">
        </childnode>
        <childnode refid="60591" relation="include">
        </childnode>
        <childnode refid="60592" relation="include">
        </childnode>
        <childnode refid="60593" relation="include">
        </childnode>
        <childnode refid="60595" relation="include">
        </childnode>
        <childnode refid="60597" relation="include">
        </childnode>
        <childnode refid="60598" relation="include">
        </childnode>
        <childnode refid="60599" relation="include">
        </childnode>
        <childnode refid="60600" relation="include">
        </childnode>
        <childnode refid="60602" relation="include">
        </childnode>
        <childnode refid="60605" relation="include">
        </childnode>
        <childnode refid="60607" relation="include">
        </childnode>
        <childnode refid="60608" relation="include">
        </childnode>
        <childnode refid="60609" relation="include">
        </childnode>
        <childnode refid="60612" relation="include">
        </childnode>
        <childnode refid="60614" relation="include">
        </childnode>
        <childnode refid="60615" relation="include">
        </childnode>
      </node>
      <node id="60569">
        <label>io_impl.hpp</label>
      </node>
      <node id="60523">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="60595">
        <label>mlpack/core/data/one_hot_encoding.hpp</label>
        <link refid="one__hot__encoding_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
        <childnode refid="60488" relation="include">
        </childnode>
        <childnode refid="60596" relation="include">
        </childnode>
      </node>
      <node id="60490">
        <label>cmath</label>
      </node>
      <node id="60509">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="60498">
        <label>stdexcept</label>
      </node>
      <node id="60518">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="60503" relation="include">
        </childnode>
        <childnode refid="60505" relation="include">
        </childnode>
        <childnode refid="60506" relation="include">
        </childnode>
        <childnode refid="60504" relation="include">
        </childnode>
      </node>
      <node id="60582">
        <label>mlpack/core/math/range.hpp</label>
      </node>
      <node id="60601">
        <label>cosine_distance_impl.hpp</label>
      </node>
      <node id="60559">
        <label>mlpack/core/data/map_policies/datatype.hpp</label>
        <link refid="datatype_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
      </node>
      <node id="60542">
        <label>string</label>
      </node>
      <node id="60530">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="60531" relation="include">
        </childnode>
        <childnode refid="60497" relation="include">
        </childnode>
      </node>
      <node id="60600">
        <label>mlpack/core/kernels/cosine_distance.hpp</label>
        <link refid="cosine__distance_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
        <childnode refid="60597" relation="include">
        </childnode>
        <childnode refid="60601" relation="include">
        </childnode>
      </node>
      <node id="60540">
        <label>map</label>
      </node>
      <node id="60580">
        <label>mlpack/core/math/lin_alg.hpp</label>
        <link refid="lin__alg_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
        <childnode refid="60581" relation="include">
        </childnode>
      </node>
      <node id="60492">
        <label>cfloat</label>
      </node>
      <node id="60549">
        <label>binding_details.hpp</label>
        <link refid="binding__details_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
        <childnode refid="60550" relation="include">
        </childnode>
      </node>
      <node id="60522">
        <label>boost/variant.hpp</label>
      </node>
      <node id="60590">
        <label>mlpack/core/dists/laplace_distribution.hpp</label>
        <link refid="laplace__distribution_8hpp"/>
      </node>
      <node id="60544">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="60506">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="60529">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="60530" relation="include">
        </childnode>
        <childnode refid="60506" relation="include">
        </childnode>
        <childnode refid="60513" relation="include">
        </childnode>
        <childnode refid="60531" relation="include">
        </childnode>
      </node>
      <node id="60519">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="60587">
        <label>mlpack/core/math/make_alias.hpp</label>
        <link refid="make__alias_8hpp"/>
      </node>
      <node id="60605">
        <label>mlpack/core/kernels/epanechnikov_kernel.hpp</label>
        <link refid="epanechnikov__kernel_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
        <childnode refid="60597" relation="include">
        </childnode>
        <childnode refid="60606" relation="include">
        </childnode>
      </node>
      <node id="60592">
        <label>mlpack/core/dists/diagonal_gaussian_distribution.hpp</label>
        <link refid="diagonal__gaussian__distribution_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
      </node>
      <node id="60517">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="60503" relation="include">
        </childnode>
        <childnode refid="60505" relation="include">
        </childnode>
        <childnode refid="60506" relation="include">
        </childnode>
        <childnode refid="60504" relation="include">
        </childnode>
      </node>
      <node id="60520">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="60503" relation="include">
        </childnode>
        <childnode refid="60505" relation="include">
        </childnode>
        <childnode refid="60506" relation="include">
        </childnode>
        <childnode refid="60504" relation="include">
        </childnode>
      </node>
      <node id="60579">
        <label>mlpack/core/math/random_basis.hpp</label>
        <link refid="random__basis_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
      </node>
      <node id="60548">
        <label>boost/any.hpp</label>
      </node>
      <node id="60508">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="60528">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="60504" relation="include">
        </childnode>
        <childnode refid="60505" relation="include">
        </childnode>
        <childnode refid="60506" relation="include">
        </childnode>
        <childnode refid="60516" relation="include">
        </childnode>
        <childnode refid="60525" relation="include">
        </childnode>
      </node>
      <node id="60532">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="60533" relation="include">
        </childnode>
      </node>
      <node id="60534">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="60489">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="60490" relation="include">
        </childnode>
        <childnode refid="60491" relation="include">
        </childnode>
        <childnode refid="60492" relation="include">
        </childnode>
        <childnode refid="60493" relation="include">
        </childnode>
        <childnode refid="60494" relation="include">
        </childnode>
        <childnode refid="60495" relation="include">
        </childnode>
        <childnode refid="60496" relation="include">
        </childnode>
        <childnode refid="60497" relation="include">
        </childnode>
        <childnode refid="60498" relation="include">
        </childnode>
        <childnode refid="60499" relation="include">
        </childnode>
        <childnode refid="60500" relation="include">
        </childnode>
        <childnode refid="60501" relation="include">
        </childnode>
        <childnode refid="60502" relation="include">
        </childnode>
        <childnode refid="60503" relation="include">
        </childnode>
        <childnode refid="60504" relation="include">
        </childnode>
        <childnode refid="60505" relation="include">
        </childnode>
        <childnode refid="60506" relation="include">
        </childnode>
        <childnode refid="60507" relation="include">
        </childnode>
        <childnode refid="60508" relation="include">
        </childnode>
        <childnode refid="60509" relation="include">
        </childnode>
        <childnode refid="60510" relation="include">
        </childnode>
        <childnode refid="60511" relation="include">
        </childnode>
        <childnode refid="60515" relation="include">
        </childnode>
        <childnode refid="60516" relation="include">
        </childnode>
        <childnode refid="60517" relation="include">
        </childnode>
        <childnode refid="60518" relation="include">
        </childnode>
        <childnode refid="60519" relation="include">
        </childnode>
        <childnode refid="60520" relation="include">
        </childnode>
        <childnode refid="60521" relation="include">
        </childnode>
        <childnode refid="60527" relation="include">
        </childnode>
        <childnode refid="60528" relation="include">
        </childnode>
        <childnode refid="60525" relation="include">
        </childnode>
        <childnode refid="60529" relation="include">
        </childnode>
        <childnode refid="60532" relation="include">
        </childnode>
        <childnode refid="60534" relation="include">
        </childnode>
        <childnode refid="60535" relation="include">
        </childnode>
        <childnode refid="60544" relation="include">
        </childnode>
        <childnode refid="60545" relation="include">
        </childnode>
      </node>
      <node id="60571">
        <label>normalize_labels_impl.hpp</label>
      </node>
      <node id="60596">
        <label>one_hot_encoding_impl.hpp</label>
      </node>
      <node id="60578">
        <label>random</label>
      </node>
      <node id="60602">
        <label>mlpack/core/kernels/gaussian_kernel.hpp</label>
        <link refid="gaussian__kernel_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
        <childnode refid="60603" relation="include">
        </childnode>
        <childnode refid="60597" relation="include">
        </childnode>
      </node>
      <node id="60558">
        <label>map_policies/increment_policy.hpp</label>
        <link refid="increment__policy_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
        <childnode refid="60514" relation="include">
        </childnode>
        <childnode refid="60559" relation="include">
        </childnode>
      </node>
      <node id="60495">
        <label>cstdio</label>
      </node>
      <node id="60562">
        <label>extension.hpp</label>
        <link refid="extension_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
      </node>
      <node id="60499">
        <label>tuple</label>
      </node>
      <node id="60504">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="60521">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="60504" relation="include">
        </childnode>
        <childnode refid="60505" relation="include">
        </childnode>
        <childnode refid="60506" relation="include">
        </childnode>
        <childnode refid="60508" relation="include">
        </childnode>
        <childnode refid="60522" relation="include">
        </childnode>
        <childnode refid="60523" relation="include">
        </childnode>
        <childnode refid="60524" relation="include">
        </childnode>
        <childnode refid="60525" relation="include">
        </childnode>
      </node>
      <node id="60563">
        <label>image_info_impl.hpp</label>
      </node>
      <node id="60610">
        <label>vector</label>
      </node>
      <node id="60565">
        <label>load_vec_impl.hpp</label>
      </node>
      <node id="60551">
        <label>version.hpp</label>
        <link refid="src_2mlpack_2core_2util_2version_8hpp"/>
        <childnode refid="60542" relation="include">
        </childnode>
      </node>
      <node id="60572">
        <label>mlpack/core/math/clamp.hpp</label>
        <link refid="clamp_8hpp"/>
        <childnode refid="60573" relation="include">
        </childnode>
        <childnode refid="60574" relation="include">
        </childnode>
        <childnode refid="60575" relation="include">
        </childnode>
      </node>
      <node id="60576">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
        <childnode refid="60577" relation="include">
        </childnode>
        <childnode refid="60578" relation="include">
        </childnode>
      </node>
      <node id="60500">
        <label>utility</label>
      </node>
      <node id="60524">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="60564">
        <label>load_model_impl.hpp</label>
      </node>
      <node id="60515">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="60512">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="60513" relation="include">
        </childnode>
      </node>
      <node id="60609">
        <label>mlpack/core/kernels/pspectrum_string_kernel.hpp</label>
        <link refid="pspectrum__string__kernel_8hpp"/>
        <childnode refid="60540" relation="include">
        </childnode>
        <childnode refid="60542" relation="include">
        </childnode>
        <childnode refid="60610" relation="include">
        </childnode>
        <childnode refid="60489" relation="include">
        </childnode>
        <childnode refid="60534" relation="include">
        </childnode>
        <childnode refid="60611" relation="include">
        </childnode>
      </node>
      <node id="60584">
        <label>mlpack/core/math/shuffle_data.hpp</label>
        <link refid="shuffle__data_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
      </node>
      <node id="60570">
        <label>mlpack/core/data/normalize_labels.hpp</label>
        <link refid="normalize__labels_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
        <childnode refid="60571" relation="include">
        </childnode>
      </node>
      <node id="60535">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="60536" relation="include">
        </childnode>
        <childnode refid="60537" relation="include">
        </childnode>
        <childnode refid="60538" relation="include">
        </childnode>
        <childnode refid="60539" relation="include">
        </childnode>
        <childnode refid="60540" relation="include">
        </childnode>
        <childnode refid="60541" relation="include">
        </childnode>
        <childnode refid="60542" relation="include">
        </childnode>
        <childnode refid="60543" relation="include">
        </childnode>
      </node>
      <node id="60513">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="60527">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="60525" relation="include">
        </childnode>
        <childnode refid="60521" relation="include">
        </childnode>
        <childnode refid="60528" relation="include">
        </childnode>
      </node>
      <node id="60574">
        <label>math.h</label>
      </node>
      <node id="60552">
        <label>param_data.hpp</label>
        <link refid="param__data_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
        <childnode refid="60548" relation="include">
        </childnode>
      </node>
      <node id="60496">
        <label>cstdlib</label>
      </node>
      <node id="60588">
        <label>mlpack/core/dists/discrete_distribution.hpp</label>
        <link refid="discrete__distribution_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
        <childnode refid="60534" relation="include">
        </childnode>
        <childnode refid="60576" relation="include">
        </childnode>
      </node>
      <node id="60491">
        <label>cctype</label>
      </node>
      <node id="60547">
        <label>iostream</label>
      </node>
      <node id="60599">
        <label>mlpack/core/kernels/polynomial_kernel.hpp</label>
        <link refid="polynomial__kernel_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
      </node>
      <node id="60594">
        <label>confusion_matrix_impl.hpp</label>
      </node>
      <node id="60514">
        <label>unordered_map</label>
      </node>
      <node id="60561">
        <label>image_info.hpp</label>
        <link refid="image__info_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
        <childnode refid="60562" relation="include">
        </childnode>
        <childnode refid="60563" relation="include">
        </childnode>
      </node>
      <node id="60493">
        <label>climits</label>
      </node>
      <node id="60557">
        <label>dataset_mapper.hpp</label>
        <link refid="dataset__mapper_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
        <childnode refid="60514" relation="include">
        </childnode>
        <childnode refid="60558" relation="include">
        </childnode>
        <childnode refid="60560" relation="include">
        </childnode>
      </node>
      <node id="60585">
        <label>mlpack/core/math/ccov.hpp</label>
        <link refid="ccov_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
        <childnode refid="60586" relation="include">
        </childnode>
      </node>
      <node id="60541">
        <label>mutex</label>
      </node>
      <node id="60567">
        <label>mlpack/core/data/save.hpp</label>
        <link refid="save_8hpp"/>
        <childnode refid="60534" relation="include">
        </childnode>
        <childnode refid="60501" relation="include">
        </childnode>
        <childnode refid="60542" relation="include">
        </childnode>
        <childnode refid="60556" relation="include">
        </childnode>
        <childnode refid="60561" relation="include">
        </childnode>
        <childnode refid="60568" relation="include">
        </childnode>
      </node>
      <node id="60537">
        <label>chrono</label>
      </node>
      <node id="60545">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="60586">
        <label>ccov_impl.hpp</label>
      </node>
      <node id="60613">
        <label>boost/math/special_functions/gamma.hpp</label>
      </node>
      <node id="60543">
        <label>thread</label>
      </node>
      <node id="60615">
        <label>mlpack/core/kernels/cauchy_kernel.hpp</label>
        <link refid="cauchy__kernel_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
        <childnode refid="60603" relation="include">
        </childnode>
        <childnode refid="60597" relation="include">
        </childnode>
      </node>
      <node id="60554">
        <label>params_impl.hpp</label>
      </node>
      <node id="60531">
        <label>type_traits</label>
      </node>
      <node id="60507">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="60611">
        <label>pspectrum_string_kernel_impl.hpp</label>
      </node>
      <node id="60501">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="60525">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="60503" relation="include">
        </childnode>
        <childnode refid="60504" relation="include">
        </childnode>
        <childnode refid="60505" relation="include">
        </childnode>
        <childnode refid="60506" relation="include">
        </childnode>
        <childnode refid="60526" relation="include">
        </childnode>
      </node>
      <node id="60583">
        <label>mlpack/core/math/round.hpp</label>
        <link refid="round_8hpp"/>
      </node>
      <node id="60614">
        <label>mlpack/core/kernels/triangular_kernel.hpp</label>
        <link refid="triangular__kernel_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
        <childnode refid="60603" relation="include">
        </childnode>
      </node>
      <node id="60497">
        <label>cstring</label>
      </node>
      <node id="60516">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="60487">
        <label>/home/aakash/mlpack/src/mlpack/tests/ann_test_tools.hpp</label>
        <link refid="ann__test__tools_8hpp"/>
        <childnode refid="60488" relation="include">
        </childnode>
      </node>
      <node id="60546">
        <label>mlpack/core/util/io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="60547" relation="include">
        </childnode>
        <childnode refid="60539" relation="include">
        </childnode>
        <childnode refid="60540" relation="include">
        </childnode>
        <childnode refid="60542" relation="include">
        </childnode>
        <childnode refid="60548" relation="include">
        </childnode>
        <childnode refid="60489" relation="include">
        </childnode>
        <childnode refid="60535" relation="include">
        </childnode>
        <childnode refid="60549" relation="include">
        </childnode>
        <childnode refid="60550" relation="include">
        </childnode>
        <childnode refid="60551" relation="include">
        </childnode>
        <childnode refid="60552" relation="include">
        </childnode>
        <childnode refid="60553" relation="include">
        </childnode>
        <childnode refid="60555" relation="include">
        </childnode>
        <childnode refid="60567" relation="include">
        </childnode>
        <childnode refid="60569" relation="include">
        </childnode>
      </node>
      <node id="60505">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="60589">
        <label>mlpack/core/dists/gaussian_distribution.hpp</label>
        <link refid="gaussian__distribution_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
      </node>
      <node id="60603">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="60489" relation="include">
        </childnode>
        <childnode refid="60604" relation="include">
        </childnode>
      </node>
      <node id="60556">
        <label>format.hpp</label>
        <link refid="format_8hpp"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="ann__test__tools_8hpp_1ac9a7683ed87dc1de9e61256d5789890e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class FunctionType</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double CheckGradient</definition>
        <argsstring>(FunctionType &amp;function, const double eps=1e-7)</argsstring>
        <name>CheckGradient</name>
        <param>
          <type>FunctionType &amp;</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>eps</declname>
          <defval>1e-7</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/tests/ann_test_tools.hpp" line="188" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/tests/ann_test_tools.hpp" bodystart="188" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="ann__test__tools_8hpp_1aa2e1d55cd23ecfcf17f1e450f04f8101" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class FunctionType</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double CheckRegularizerGradient</definition>
        <argsstring>(FunctionType &amp;function, const double eps=1e-7)</argsstring>
        <name>CheckRegularizerGradient</name>
        <param>
          <type>FunctionType &amp;</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>eps</declname>
          <defval>1e-7</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/tests/ann_test_tools.hpp" line="223" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/tests/ann_test_tools.hpp" bodystart="223" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="ann__test__tools_8hpp_1a06340d9e2c0ed07062ca1ba10f30ec92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ModuleType</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double CustomJacobianTest</definition>
        <argsstring>(ModuleType &amp;module, arma::mat &amp;input, const double perturbation=1e-6)</argsstring>
        <name>CustomJacobianTest</name>
        <param>
          <type>ModuleType &amp;</type>
          <declname>module</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>perturbation</declname>
          <defval>1e-6</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/tests/ann_test_tools.hpp" line="105" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/tests/ann_test_tools.hpp" bodystart="105" bodyend="150"/>
        <references refid="ann__test__tools_8hpp_1a78777fe2acf29b2cda6cf91dd1d03131" compoundref="ann__test__tools_8hpp" startline="22" endline="27">ResetFunction</references>
      </memberdef>
      <memberdef kind="function" id="ann__test__tools_8hpp_1a07d364fc0ab9e484ce9b46ac2732ca42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ModuleType</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double JacobianPerformanceTest</definition>
        <argsstring>(ModuleType &amp;module, arma::mat &amp;input, arma::mat &amp;target, const double eps=1e-6)</argsstring>
        <name>JacobianPerformanceTest</name>
        <param>
          <type>ModuleType &amp;</type>
          <declname>module</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>eps</declname>
          <defval>1e-6</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/tests/ann_test_tools.hpp" line="155" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/tests/ann_test_tools.hpp" bodystart="155" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="ann__test__tools_8hpp_1a6c1852980c9a5957091df64a2e33016c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ModuleType</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double JacobianTest</definition>
        <argsstring>(ModuleType &amp;module, arma::mat &amp;input, const double minValue=-2, const double maxValue=-1, const double perturbation=1e-6)</argsstring>
        <name>JacobianTest</name>
        <param>
          <type>ModuleType &amp;</type>
          <declname>module</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>minValue</declname>
          <defval>-2</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>maxValue</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>perturbation</declname>
          <defval>1e-6</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/tests/ann_test_tools.hpp" line="40" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/tests/ann_test_tools.hpp" bodystart="40" bodyend="99"/>
        <references refid="classmlpack_1_1ann_1_1RandomInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" compoundref="ann_2init__rules_2random__init_8hpp" startline="56" endline="64">RandomInitialization::Initialize</references>
        <references refid="ann__test__tools_8hpp_1a78777fe2acf29b2cda6cf91dd1d03131" compoundref="ann__test__tools_8hpp" startline="22" endline="27">ResetFunction</references>
      </memberdef>
      <memberdef kind="function" id="ann__test__tools_8hpp_1a78777fe2acf29b2cda6cf91dd1d03131" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ResetFunction</definition>
        <argsstring>(T &amp;layer, typename std::enable_if&lt; HasResetCheck&lt; T, void(T::*)()&gt;::value &gt;::type *=0)</argsstring>
        <name>ResetFunction</name>
        <param>
          <type>T &amp;</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>typename std::enable_if&lt; HasResetCheck&lt; T, void(T::*)()&gt;::value &gt;::type *</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/tests/ann_test_tools.hpp" line="22" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/tests/ann_test_tools.hpp" bodystart="22" bodyend="27"/>
        <referencedby refid="ann__test__tools_8hpp_1a06340d9e2c0ed07062ca1ba10f30ec92" compoundref="ann__test__tools_8hpp" startline="105" endline="150">CustomJacobianTest</referencedby>
        <referencedby refid="ann__test__tools_8hpp_1a6c1852980c9a5957091df64a2e33016c" compoundref="ann__test__tools_8hpp" startline="40" endline="99">JacobianTest</referencedby>
      </memberdef>
      <memberdef kind="function" id="ann__test__tools_8hpp_1a7f908c6765e1fbb5640310539b265b97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ResetFunction</definition>
        <argsstring>(T &amp;, typename std::enable_if&lt;!HasResetCheck&lt; T, void(T::*)()&gt;::value &gt;::type *=0)</argsstring>
        <name>ResetFunction</name>
        <param>
          <type>T &amp;</type>
        </param>
        <param>
          <type>typename std::enable_if&lt;!HasResetCheck&lt; T, void(T::*)()&gt;::value &gt;::type *</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/tests/ann_test_tools.hpp" line="30" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/tests/ann_test_tools.hpp" bodystart="30" bodyend="35"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Marcus Edel</para></simplesect>
This file includes some useful functions for ann tests.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_TESTS_ANN_TEST_TOOLS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_TESTS_ANN_TEST_TOOLS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="core_8hpp" kindref="compound">mlpack/core.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack_1_1ann" kindref="compound">mlpack::ann</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>which<sp/>calls<sp/>the<sp/>Reset<sp/>function<sp/>of<sp/>the<sp/>given<sp/>module.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="22" refid="ann__test__tools_8hpp_1a78777fe2acf29b2cda6cf91dd1d03131" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ann__test__tools_8hpp_1a78777fe2acf29b2cda6cf91dd1d03131" kindref="member">ResetFunction</ref>(</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>T&amp;<sp/>layer,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;HasResetCheck&lt;T,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(T::*)()&gt;::value&gt;::type*<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>layer.Reset();</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="30" refid="ann__test__tools_8hpp_1a7f908c6765e1fbb5640310539b265b97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ann__test__tools_8hpp_1a78777fe2acf29b2cda6cf91dd1d03131" kindref="member">ResetFunction</ref>(</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>T&amp;<sp/></highlight><highlight class="comment">/*<sp/>layer<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;!HasResetCheck&lt;T,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(T::*)()&gt;::value&gt;::type*<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Approximate<sp/>Jacobian<sp/>and<sp/>supposedly-true<sp/>Jacobian,<sp/>then<sp/>compare<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>similarly<sp/>to<sp/>before.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModuleType&gt;</highlight></codeline>
<codeline lineno="40" refid="ann__test__tools_8hpp_1a6c1852980c9a5957091df64a2e33016c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="ann__test__tools_8hpp_1a6c1852980c9a5957091df64a2e33016c" kindref="member">JacobianTest</ref>(ModuleType&amp;<sp/>module,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>input,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minValue<sp/>=<sp/>-2,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxValue<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>perturbation<sp/>=<sp/>1e-6)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>arma::mat<sp/>output,<sp/>outputA,<sp/>outputB,<sp/>jacobianA,<sp/>jacobianB;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>input<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1ann_1_1RandomInitialization" kindref="compound">RandomInitialization</ref><sp/>init(minValue,<sp/>maxValue);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>init.<ref refid="classmlpack_1_1ann_1_1RandomInitialization_1a5cfe472251a41fffd45b170bb0d3c1bd" kindref="member">Initialize</ref>(input,<sp/>input.n_rows,<sp/>input.n_cols);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>module<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="ann__test__tools_8hpp_1a78777fe2acf29b2cda6cf91dd1d03131" kindref="member">ResetFunction</ref>(module);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>jacobian<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>module.Forward(input,<sp/>output);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>jacobianA<sp/>=<sp/>arma::zeros(input.n_elem,<sp/>output.n_elem);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Share<sp/>the<sp/>input<sp/>paramter<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>arma::mat<sp/>sin<sp/>=<sp/>arma::mat(input.memptr(),<sp/>input.n_rows,<sp/>input.n_cols,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>input.n_elem;<sp/>++i)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>original<sp/>=<sp/>sin(i);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>sin(i)<sp/>=<sp/>original<sp/>-<sp/>perturbation;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>module.Forward(input,<sp/>outputA);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>sin(i)<sp/>=<sp/>original<sp/>+<sp/>perturbation;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>module.Forward(input,<sp/>outputB);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>sin(i)<sp/>=<sp/>original;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>outputB<sp/>-=<sp/>outputA;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>outputB<sp/>/=<sp/>2<sp/>*<sp/>perturbation;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>jacobianA.row(i)<sp/>=<sp/>outputB.t();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>derivative<sp/>parameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>arma::mat<sp/>deriv<sp/>=<sp/>arma::zeros(output.n_rows,<sp/>output.n_cols);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Share<sp/>the<sp/>derivative<sp/>parameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>arma::mat<sp/>derivTemp<sp/>=<sp/>arma::mat(deriv.memptr(),<sp/>deriv.n_rows,<sp/>deriv.n_cols,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>jacobian<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>jacobianB<sp/>=<sp/>arma::zeros(input.n_elem,<sp/>output.n_elem);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>derivTemp.n_elem;<sp/>++i)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>deriv.zeros();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>derivTemp(i)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::mat<sp/>delta;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>module.Backward(input,<sp/>deriv,<sp/>delta);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>jacobianB.col(i)<sp/>=<sp/>delta;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arma::max(arma::max(arma::abs(jacobianA<sp/>-<sp/>jacobianB)));</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Custom<sp/>Jacobian<sp/>Test<sp/>where<sp/>we<sp/>get<sp/>the<sp/>input<sp/>from<sp/>outside<sp/>of<sp/>this<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unlike<sp/>the<sp/>original<sp/>Jacobian<sp/>Test<sp/>where<sp/>input<sp/>is<sp/>generated<sp/>inside<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>funcion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModuleType&gt;</highlight></codeline>
<codeline lineno="105" refid="ann__test__tools_8hpp_1a06340d9e2c0ed07062ca1ba10f30ec92" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="ann__test__tools_8hpp_1a06340d9e2c0ed07062ca1ba10f30ec92" kindref="member">CustomJacobianTest</ref>(ModuleType&amp;<sp/>module,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>input,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>perturbation<sp/>=<sp/>1e-6)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>arma::mat<sp/>output,<sp/>outputA,<sp/>outputB,<sp/>jacobianA,<sp/>jacobianB;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>module<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="ann__test__tools_8hpp_1a78777fe2acf29b2cda6cf91dd1d03131" kindref="member">ResetFunction</ref>(module);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>jacobian<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>module.Forward(input,<sp/>output);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>jacobianA<sp/>=<sp/>arma::zeros(input.n_elem,<sp/>output.n_elem);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>input.n_elem;<sp/>++i)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>original<sp/>=<sp/>input(i);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>input(i)<sp/>=<sp/>original<sp/>-<sp/>perturbation;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>module.Forward(input,<sp/>outputA);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>input(i)<sp/>=<sp/>original<sp/>+<sp/>perturbation;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>module.Forward(input,<sp/>outputB);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>input(i)<sp/>=<sp/>original;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>outputB<sp/>-=<sp/>outputA;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>outputB<sp/>/=<sp/>2<sp/>*<sp/>perturbation;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>jacobianA.row(i)<sp/>=<sp/>outputB.t();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>derivative<sp/>parameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>arma::mat<sp/>deriv<sp/>=<sp/>arma::zeros(output.n_rows,<sp/>output.n_cols);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>jacobian<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>jacobianB<sp/>=<sp/>arma::zeros(input.n_elem,<sp/>output.n_elem);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>deriv.n_elem;<sp/>++i)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>deriv.zeros();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>deriv(i)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::mat<sp/>delta;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>module.Backward(input,<sp/>deriv,<sp/>delta);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>jacobianB.col(i)<sp/>=<sp/>delta;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arma::max(arma::max(arma::abs(jacobianA<sp/>-<sp/>jacobianB)));</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Approximate<sp/>Jacobian<sp/>and<sp/>supposedly-true<sp/>Jacobian,<sp/>then<sp/>compare<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>similarly<sp/>to<sp/>before.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ModuleType&gt;</highlight></codeline>
<codeline lineno="155" refid="ann__test__tools_8hpp_1a07d364fc0ab9e484ce9b46ac2732ca42" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="ann__test__tools_8hpp_1a07d364fc0ab9e484ce9b46ac2732ca42" kindref="member">JacobianPerformanceTest</ref>(ModuleType&amp;<sp/>module,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>input,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>target,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps<sp/>=<sp/>1e-6)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>module.Forward(input,<sp/>target);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>arma::mat<sp/>delta;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>module.Backward(input,<sp/>target,<sp/>delta);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>arma::mat<sp/>centralDifference<sp/>=<sp/>arma::zeros(delta.n_rows,<sp/>delta.n_cols);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>arma::mat<sp/>inputTemp<sp/>=<sp/>arma::mat(input.memptr(),<sp/>input.n_rows,<sp/>input.n_cols,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>arma::mat<sp/>centralDifferenceTemp<sp/>=<sp/>arma::mat(centralDifference.memptr(),</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>centralDifference.n_rows,<sp/>centralDifference.n_cols,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>input.n_elem;<sp/>++i)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>inputTemp(i)<sp/>=<sp/>inputTemp(i)<sp/>+<sp/>eps;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>outputA<sp/>=<sp/>module.Forward(input,<sp/>target);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>inputTemp(i)<sp/>=<sp/>inputTemp(i)<sp/>-<sp/>(2<sp/>*<sp/>eps);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>outputB<sp/>=<sp/>module.Forward(input,<sp/>target);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>centralDifferenceTemp(i)<sp/>=<sp/>(outputA<sp/>-<sp/>outputB)<sp/>/<sp/>(2<sp/>*<sp/>eps);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>inputTemp(i)<sp/>=<sp/>inputTemp(i)<sp/>+<sp/>eps;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arma::max(arma::max(arma::abs(centralDifference<sp/>-<sp/>delta)));</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Simple<sp/>numerical<sp/>gradient<sp/>checker.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FunctionType&gt;</highlight></codeline>
<codeline lineno="188" refid="ann__test__tools_8hpp_1ac9a7683ed87dc1de9e61256d5789890e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="ann__test__tools_8hpp_1ac9a7683ed87dc1de9e61256d5789890e" kindref="member">CheckGradient</ref>(FunctionType&amp;<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps<sp/>=<sp/>1e-7)</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>gradients<sp/>for<sp/>the<sp/>current<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>arma::mat<sp/>orgGradient,<sp/>gradient,<sp/>estGradient;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">.Gradient(orgGradient);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>estGradient<sp/>=<sp/>arma::zeros(orgGradient.n_rows,<sp/>orgGradient.n_cols);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>numeric<sp/>approximations<sp/>to<sp/>gradient.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>orgGradient.n_elem;<sp/>++i)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">.Parameters()(i);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perturb<sp/>parameter<sp/>with<sp/>a<sp/>positive<sp/>constant<sp/>and<sp/>get<sp/>costs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">.Parameters()(i)<sp/>+=<sp/>eps;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>costPlus<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">.Gradient(gradient);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perturb<sp/>parameter<sp/>with<sp/>a<sp/>negative<sp/>constant<sp/>and<sp/>get<sp/>costs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">.Parameters()(i)<sp/>-=<sp/>(2<sp/>*<sp/>eps);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>costMinus<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">.Gradient(gradient);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>the<sp/>parameter<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">.Parameters()(i)<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>numerical<sp/>gradients<sp/>using<sp/>the<sp/>costs<sp/>calculated<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>estGradient(i)<sp/>=<sp/>(costPlus<sp/>-<sp/>costMinus)<sp/>/<sp/>(2<sp/>*<sp/>eps);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Estimate<sp/>error<sp/>of<sp/>gradient.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arma::norm(orgGradient<sp/>-<sp/>estGradient)<sp/>/</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::norm(orgGradient<sp/>+<sp/>estGradient);</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Simple<sp/>numerical<sp/>gradient<sp/>checker<sp/>for<sp/>regularizers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FunctionType&gt;</highlight></codeline>
<codeline lineno="223" refid="ann__test__tools_8hpp_1aa2e1d55cd23ecfcf17f1e450f04f8101" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="ann__test__tools_8hpp_1aa2e1d55cd23ecfcf17f1e450f04f8101" kindref="member">CheckRegularizerGradient</ref>(FunctionType&amp;<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eps<sp/>=<sp/>1e-7)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>gradients<sp/>for<sp/>the<sp/>current<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>arma::mat<sp/>weight<sp/>=<sp/>arma::randu(10,<sp/>10);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>arma::mat<sp/>orgGradient<sp/>=<sp/>arma::zeros(10<sp/>*<sp/>10,<sp/>1);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">.Gradient(weight,<sp/>orgGradient);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>arma::mat<sp/>estGradient<sp/>=<sp/>arma::zeros(weight.n_rows,<sp/>weight.n_cols);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>numeric<sp/>approximations<sp/>to<sp/>gradient.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>weight.n_rows;<sp/>++i)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>weight.n_cols;<sp/>++j)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>weight(i,<sp/>j);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>weight(i,<sp/>j)<sp/>+=<sp/>eps;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>costPlus<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">.Output(weight,<sp/>i,<sp/>j);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>weight(i,<sp/>j)<sp/>-=<sp/>(2<sp/>*<sp/>eps);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>costMinus<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">.Output(weight,<sp/>i,<sp/>j);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>the<sp/>weight<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>weight(i,<sp/>j)<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>estGradient(i,<sp/>j)<sp/>=<sp/>(costPlus<sp/>-<sp/>costMinus)<sp/>/<sp/>(2<sp/>*<sp/>eps);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>estGradient<sp/>=<sp/>arma::vectorise(estGradient);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Estimate<sp/>error<sp/>of<sp/>gradient.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arma::norm(orgGradient<sp/>-<sp/>estGradient)<sp/>/</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::norm(orgGradient<sp/>+<sp/>estGradient);</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/tests/ann_test_tools.hpp"/>
  </compounddef>
</doxygen>
