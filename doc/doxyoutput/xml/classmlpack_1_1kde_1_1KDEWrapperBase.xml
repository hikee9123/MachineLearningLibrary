<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1kde_1_1KDEWrapperBase" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>mlpack::kde::KDEWrapperBase</compoundname>
    <derivedcompoundref refid="classmlpack_1_1kde_1_1KDEWrapper" prot="public" virt="non-virtual">KDEWrapper&lt; KernelType, TreeType &gt;</derivedcompoundref>
    <includes refid="kde__model_8hpp" local="no">kde_model.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEWrapperBase_1ac1313101961cb19928ea3946dedc6ad9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>KDEWrapperBase</definition>
        <argsstring>()</argsstring>
        <name>KDEWrapperBase</name>
        <briefdescription>
<para>Create the <ref refid="classmlpack_1_1kde_1_1KDEWrapperBase" kindref="compound">KDEWrapperBase</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>The base class does not hold anything, so this constructor does nothing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="76" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEWrapperBase_1ae58d12a345c8353b6c5338e620e68d59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual ~KDEWrapperBase</definition>
        <argsstring>()</argsstring>
        <name>~KDEWrapperBase</name>
        <briefdescription>
<para>Destruct the <ref refid="classmlpack_1_1kde_1_1KDEWrapperBase" kindref="compound">KDEWrapperBase</ref> (nothing to do). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="83" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEWrapperBase_1a1c0162417e08001b37ce9aaacc761773" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void AbsoluteError</definition>
        <argsstring>(const double absError)=0</argsstring>
        <name>AbsoluteError</name>
        <reimplementedby refid="classmlpack_1_1kde_1_1KDEWrapper_1a0b9d34d8e38ac36cd2ca2118466d0953">AbsoluteError</reimplementedby>
        <param>
          <type>const double</type>
          <declname>absError</declname>
        </param>
        <briefdescription>
<para>Modify the absolute error tolerance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEWrapperBase_1a1ebaea5971fb978c1e23657dc8c55a17" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Bandwidth</definition>
        <argsstring>(const double bw)=0</argsstring>
        <name>Bandwidth</name>
        <reimplementedby refid="classmlpack_1_1kde_1_1KDEWrapper_1a3d47a1b167a794ee6c4d646ee46254b6">Bandwidth</reimplementedby>
        <param>
          <type>const double</type>
          <declname>bw</declname>
        </param>
        <briefdescription>
<para>Modify the bandwidth of the kernel. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEWrapperBase_1ae7622cb6081c01a9346b9845c916be0a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classmlpack_1_1kde_1_1KDEWrapperBase" kindref="compound">KDEWrapperBase</ref> *</type>
        <definition>virtual KDEWrapperBase* Clone</definition>
        <argsstring>() const =0</argsstring>
        <name>Clone</name>
        <reimplementedby refid="classmlpack_1_1kde_1_1KDEWrapper_1a0ba337bbc529b82831c60d60b9441d08">Clone</reimplementedby>
        <briefdescription>
<para>Create a new <ref refid="classmlpack_1_1kde_1_1KDEWrapperBase" kindref="compound">KDEWrapperBase</ref> that is the same as this one. </para>        </briefdescription>
        <detaileddescription>
<para>This function will properly handle polymorphism. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEWrapperBase_1a7815883137a47fda73c3ac1f608eef0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Evaluate</definition>
        <argsstring>(arma::mat &amp;&amp;querySet, arma::vec &amp;estimates)=0</argsstring>
        <name>Evaluate</name>
        <reimplementedby refid="classmlpack_1_1kde_1_1KDEWrapper_1a52a2ccd4d4e143187436097916dae748">Evaluate</reimplementedby>
        <param>
          <type>arma::mat &amp;&amp;</type>
          <declname>querySet</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>estimates</declname>
        </param>
        <briefdescription>
<para>Perform bichromatic <ref refid="classmlpack_1_1kde_1_1KDE" kindref="compound">KDE</ref> (i.e. <ref refid="classmlpack_1_1kde_1_1KDE" kindref="compound">KDE</ref> with a separate query set). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEWrapperBase_1ae9574287052493ece978538a96a8fb98" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Evaluate</definition>
        <argsstring>(arma::vec &amp;estimates)=0</argsstring>
        <name>Evaluate</name>
        <reimplementedby refid="classmlpack_1_1kde_1_1KDEWrapper_1aecea217fc025d169adadd10f78a77fa5">Evaluate</reimplementedby>
        <param>
          <type>arma::vec &amp;</type>
          <declname>estimates</declname>
        </param>
        <briefdescription>
<para>Perform monochromatic <ref refid="classmlpack_1_1kde_1_1KDE" kindref="compound">KDE</ref> (i.e. with the reference set as the query set). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEWrapperBase_1ad7e08030744c69b2c47446d9d846487c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void MCBreakCoef</definition>
        <argsstring>(const double breakCoef)=0</argsstring>
        <name>MCBreakCoef</name>
        <reimplementedby refid="classmlpack_1_1kde_1_1KDEWrapper_1a4bbcfabadfb5b781249c7ea4125677ac">MCBreakCoef</reimplementedby>
        <param>
          <type>const double</type>
          <declname>breakCoef</declname>
        </param>
        <briefdescription>
<para>Modify the Monte Carlo break coefficient. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEWrapperBase_1a2e9a7a651dd745d46880139cc0e7b720" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void MCEntryCoef</definition>
        <argsstring>(const double entryCoef)=0</argsstring>
        <name>MCEntryCoef</name>
        <reimplementedby refid="classmlpack_1_1kde_1_1KDEWrapper_1a04a0caefbe404092e3d18baabd3baef7">MCEntryCoef</reimplementedby>
        <param>
          <type>const double</type>
          <declname>entryCoef</declname>
        </param>
        <briefdescription>
<para>Modify the Monte Carlo entry coefficient. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEWrapperBase_1aa17a084342c0caafda4d046545e5993b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t MCInitialSampleSize</definition>
        <argsstring>() const =0</argsstring>
        <name>MCInitialSampleSize</name>
        <reimplementedby refid="classmlpack_1_1kde_1_1KDEWrapper_1a615951cec49961d82ea4497a3073b7b8">MCInitialSampleSize</reimplementedby>
        <briefdescription>
<para>Get the Monte Carlo sample size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEWrapperBase_1abb328957925b5cd31e13e8e27efc0071" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t &amp;</type>
        <definition>virtual size_t&amp; MCInitialSampleSize</definition>
        <argsstring>()=0</argsstring>
        <name>MCInitialSampleSize</name>
        <reimplementedby refid="classmlpack_1_1kde_1_1KDEWrapper_1adfcd113c0ea444a40d8720aa693e6686">MCInitialSampleSize</reimplementedby>
        <briefdescription>
<para>Modify the Monte Carlo sample size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEWrapperBase_1a73f434ac1df0cc309db1e11c9439059d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void MCProb</definition>
        <argsstring>(const double mcProb)=0</argsstring>
        <name>MCProb</name>
        <reimplementedby refid="classmlpack_1_1kde_1_1KDEWrapper_1a3cb963e1bd6ee5c7d1121d774bb17afc">MCProb</reimplementedby>
        <param>
          <type>const double</type>
          <declname>mcProb</declname>
        </param>
        <briefdescription>
<para>Modify the Monte Carlo probability. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEWrapperBase_1ab38fc729a0a6f58a4d9ef6e38a9959cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespacemlpack_1_1kde_1a0ff4f94721e558082ebf9d0ef6183d38" kindref="member">KDEMode</ref></type>
        <definition>virtual KDEMode Mode</definition>
        <argsstring>() const =0</argsstring>
        <name>Mode</name>
        <reimplementedby refid="classmlpack_1_1kde_1_1KDEWrapper_1a80cc32208d4e19c3196d97d0992829ef">Mode</reimplementedby>
        <briefdescription>
<para>Get the search mode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="114" column="1"/>
        <referencedby refid="classmlpack_1_1kde_1_1KDEModel_1a6f3cb532b850ad02807a209193ff2289" compoundref="kde__model_8hpp" startline="412" endline="412">KDEModel::Mode</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEWrapperBase_1a06cd29610512406d9ea63f325856983a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespacemlpack_1_1kde_1a0ff4f94721e558082ebf9d0ef6183d38" kindref="member">KDEMode</ref> &amp;</type>
        <definition>virtual KDEMode&amp; Mode</definition>
        <argsstring>()=0</argsstring>
        <name>Mode</name>
        <reimplementedby refid="classmlpack_1_1kde_1_1KDEWrapper_1afe26b90d4fcc474c9d074bad2a667279">Mode</reimplementedby>
        <briefdescription>
<para>Modify the search mode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEWrapperBase_1a7e1172b47c3d2775ceb49bed772c44cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool MonteCarlo</definition>
        <argsstring>() const =0</argsstring>
        <name>MonteCarlo</name>
        <reimplementedby refid="classmlpack_1_1kde_1_1KDEWrapper_1a3c91c4e6858fc5d602622548d043fdc2">MonteCarlo</reimplementedby>
        <briefdescription>
<para>Get whether Monte Carlo search is being used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEWrapperBase_1ad5ee40ede39f0233b7f01e74d3c1e1c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool &amp;</type>
        <definition>virtual bool&amp; MonteCarlo</definition>
        <argsstring>()=0</argsstring>
        <name>MonteCarlo</name>
        <reimplementedby refid="classmlpack_1_1kde_1_1KDEWrapper_1aa9f25dddb2e9608e47417d6808adfb2f">MonteCarlo</reimplementedby>
        <briefdescription>
<para>Modify whether Monte Carlo search is being used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEWrapperBase_1aef3e830b36580b39b0ddb75ea89f4d8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void RelativeError</definition>
        <argsstring>(const double relError)=0</argsstring>
        <name>RelativeError</name>
        <reimplementedby refid="classmlpack_1_1kde_1_1KDEWrapper_1a50e2786ac18e3f69fb4e164b68920390">RelativeError</reimplementedby>
        <param>
          <type>const double</type>
          <declname>relError</declname>
        </param>
        <briefdescription>
<para>Modify the relative error tolerance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1kde_1_1KDEWrapperBase_1af72c25a0ebac1dc4d40f76b9a2f5e149" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Train</definition>
        <argsstring>(arma::mat &amp;&amp;referenceSet)=0</argsstring>
        <name>Train</name>
        <reimplementedby refid="classmlpack_1_1kde_1_1KDEWrapper_1ac9780b7b68f55a2fb2df95768aec1bd4">Train</reimplementedby>
        <param>
          <type>arma::mat &amp;&amp;</type>
          <declname>referenceSet</declname>
        </param>
        <briefdescription>
<para>Train the model (build the tree). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="119" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classmlpack_1_1kde_1_1KDEWrapperBase" kindref="compound">KDEWrapperBase</ref> is a base wrapper class for holding all <ref refid="classmlpack_1_1kde_1_1KDE" kindref="compound">KDE</ref> types supported by <ref refid="classmlpack_1_1kde_1_1KDEModel" kindref="compound">KDEModel</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>All <ref refid="classmlpack_1_1kde_1_1KDE" kindref="compound">KDE</ref> type wrappers inheirt from this class, allowing a simple interface via inheritance for all the different types we want to support. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="920">
        <label>KDEWrapper&lt; KernelType, TreeType &gt;</label>
        <link refid="classmlpack_1_1kde_1_1KDEWrapper"/>
        <childnode refid="919" relation="public-inheritance">
        </childnode>
      </node>
      <node id="919">
        <label>KDEWrapperBase</label>
        <link refid="classmlpack_1_1kde_1_1KDEWrapperBase"/>
      </node>
    </inheritancegraph>
    <location file="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" line="72" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp" bodystart="71" bodyend="127"/>
    <listofallmembers>
      <member refid="classmlpack_1_1kde_1_1KDEWrapperBase_1a1c0162417e08001b37ce9aaacc761773" prot="public" virt="pure-virtual"><scope>mlpack::kde::KDEWrapperBase</scope><name>AbsoluteError</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEWrapperBase_1a1ebaea5971fb978c1e23657dc8c55a17" prot="public" virt="pure-virtual"><scope>mlpack::kde::KDEWrapperBase</scope><name>Bandwidth</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEWrapperBase_1ae7622cb6081c01a9346b9845c916be0a" prot="public" virt="pure-virtual"><scope>mlpack::kde::KDEWrapperBase</scope><name>Clone</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEWrapperBase_1a7815883137a47fda73c3ac1f608eef0a" prot="public" virt="pure-virtual"><scope>mlpack::kde::KDEWrapperBase</scope><name>Evaluate</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEWrapperBase_1ae9574287052493ece978538a96a8fb98" prot="public" virt="pure-virtual"><scope>mlpack::kde::KDEWrapperBase</scope><name>Evaluate</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEWrapperBase_1ac1313101961cb19928ea3946dedc6ad9" prot="public" virt="non-virtual"><scope>mlpack::kde::KDEWrapperBase</scope><name>KDEWrapperBase</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEWrapperBase_1ad7e08030744c69b2c47446d9d846487c" prot="public" virt="pure-virtual"><scope>mlpack::kde::KDEWrapperBase</scope><name>MCBreakCoef</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEWrapperBase_1a2e9a7a651dd745d46880139cc0e7b720" prot="public" virt="pure-virtual"><scope>mlpack::kde::KDEWrapperBase</scope><name>MCEntryCoef</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEWrapperBase_1aa17a084342c0caafda4d046545e5993b" prot="public" virt="pure-virtual"><scope>mlpack::kde::KDEWrapperBase</scope><name>MCInitialSampleSize</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEWrapperBase_1abb328957925b5cd31e13e8e27efc0071" prot="public" virt="pure-virtual"><scope>mlpack::kde::KDEWrapperBase</scope><name>MCInitialSampleSize</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEWrapperBase_1a73f434ac1df0cc309db1e11c9439059d" prot="public" virt="pure-virtual"><scope>mlpack::kde::KDEWrapperBase</scope><name>MCProb</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEWrapperBase_1ab38fc729a0a6f58a4d9ef6e38a9959cf" prot="public" virt="pure-virtual"><scope>mlpack::kde::KDEWrapperBase</scope><name>Mode</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEWrapperBase_1a06cd29610512406d9ea63f325856983a" prot="public" virt="pure-virtual"><scope>mlpack::kde::KDEWrapperBase</scope><name>Mode</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEWrapperBase_1a7e1172b47c3d2775ceb49bed772c44cf" prot="public" virt="pure-virtual"><scope>mlpack::kde::KDEWrapperBase</scope><name>MonteCarlo</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEWrapperBase_1ad5ee40ede39f0233b7f01e74d3c1e1c0" prot="public" virt="pure-virtual"><scope>mlpack::kde::KDEWrapperBase</scope><name>MonteCarlo</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEWrapperBase_1aef3e830b36580b39b0ddb75ea89f4d8a" prot="public" virt="pure-virtual"><scope>mlpack::kde::KDEWrapperBase</scope><name>RelativeError</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEWrapperBase_1af72c25a0ebac1dc4d40f76b9a2f5e149" prot="public" virt="pure-virtual"><scope>mlpack::kde::KDEWrapperBase</scope><name>Train</name></member>
      <member refid="classmlpack_1_1kde_1_1KDEWrapperBase_1ae58d12a345c8353b6c5338e620e68d59" prot="public" virt="virtual"><scope>mlpack::kde::KDEWrapperBase</scope><name>~KDEWrapperBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
