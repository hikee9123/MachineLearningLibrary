<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1neighbor_1_1NSModel" kind="class" language="C++" prot="public">
    <compoundname>mlpack::neighbor::NSModel</compoundname>
    <includes refid="ns__model_8hpp" local="no">ns_model.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename SortPolicy</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8d" prot="public" static="no">
        <name>TreeTypes</name>
        <enumvalue id="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8daa688e9cd1158916bc183aa517724568c" prot="public">
          <name>KD_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8da92f172b47c8ae18ed401f8bf9f5ecad3" prot="public">
          <name>COVER_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8da2a93dc779a94d5f09b72ffbdc5ac9cd9" prot="public">
          <name>R_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8dae5b37a52c347bc7ef3d23fde0941d27b" prot="public">
          <name>R_STAR_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8da994ef1bcca8841d5b7d1431b99fcb10d" prot="public">
          <name>BALL_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8da6560e35678b39452afce0f0fcc7f6059" prot="public">
          <name>X_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8da470c5bcf4135483a37e9a87f061e1c5c" prot="public">
          <name>HILBERT_R_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8da4e91a297c1504b34ca1a9cdcd6ba22ff" prot="public">
          <name>R_PLUS_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8da1208f6f2a7b337e4edbd02a8de98d3f5" prot="public">
          <name>R_PLUS_PLUS_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8daa8a6aade44830d33165414079bf8dd1c" prot="public">
          <name>VP_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8dae6815061fe1e77dc1b2ae96b07b40250" prot="public">
          <name>RP_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8da0e4ed6912ca7a8232754df8771365c96" prot="public">
          <name>MAX_RP_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8dae380b83ef5a8ba2c32c569705a8b66fc" prot="public">
          <name>SPILL_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8dae36341db74fc7194b238cf7c528a7fbc" prot="public">
          <name>UB_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8daabefbb1ea7a801b1b00c9b0709dcec50" prot="public">
          <name>OCTREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum type to identify each accepted tree type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="348" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="347" bodyend="364"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1NSModel_1abffeae6dee4a6bad9885ba0f39d309f3" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t leafSize</definition>
        <argsstring></argsstring>
        <name>leafSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="375" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1NSModel_1ab5d8385d49e2a64b56e6089f0f27c461" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1neighbor_1_1NSWrapperBase" kindref="compound">NSWrapperBase</ref> *</type>
        <definition>NSWrapperBase* nSearch</definition>
        <argsstring></argsstring>
        <name>nSearch</name>
        <briefdescription>
<para>nSearch holds an instance of the <ref refid="classmlpack_1_1neighbor_1_1NeighborSearch" kindref="compound">NeighborSearch</ref> class for the current treeType. </para>        </briefdescription>
        <detaileddescription>
<para>It is initialized every time BuildModel is executed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="383" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1NSModel_1a58d43069f572c93d4569d25c57a9cb6a" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat q</definition>
        <argsstring></argsstring>
        <name>q</name>
        <briefdescription>
<para>This is the random projection matrix; only used if randomBasis is true. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="373" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1NSModel_1a68c01c84182e9de56ad31dbf792d7a5b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool randomBasis</definition>
        <argsstring></argsstring>
        <name>randomBasis</name>
        <briefdescription>
<para>If true, random projections are used. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="371" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1NSModel_1a3ed57096651b587c2bf716fa78048153" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double rho</definition>
        <argsstring></argsstring>
        <name>rho</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="377" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1NSModel_1ae5f7c26321910a384f6f0d37910858a2" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double tau</definition>
        <argsstring></argsstring>
        <name>tau</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="376" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1NSModel_1a4c037c9b8e9f3f7d429a0f3f4326a067" prot="private" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8d" kindref="member">TreeTypes</ref></type>
        <definition>TreeTypes treeType</definition>
        <argsstring></argsstring>
        <name>treeType</name>
        <briefdescription>
<para>Tree type considered for neighbor search. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="368" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="368" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1a79e4c6c22da7f04fc8f9a5bae9b688e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NSModel</definition>
        <argsstring>(TreeTypes treeType=TreeTypes::KD_TREE, bool randomBasis=false)</argsstring>
        <name>NSModel</name>
        <param>
          <type><ref refid="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8d" kindref="member">TreeTypes</ref></type>
          <declname>treeType</declname>
          <defval>TreeTypes::KD_TREE</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>randomBasis</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Initialize the <ref refid="classmlpack_1_1neighbor_1_1NSModel" kindref="compound">NSModel</ref> with the given type and whether or not a random basis should be used. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>treeType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of tree to use. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>randomBasis</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether or not to project the points onto a random basis before searching. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="394" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1a6377c3a4b61de368dedff9fa95304359" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NSModel</definition>
        <argsstring>(const NSModel &amp;other)</argsstring>
        <name>NSModel</name>
        <param>
          <type>const <ref refid="classmlpack_1_1neighbor_1_1NSModel" kindref="compound">NSModel</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy the given <ref refid="classmlpack_1_1neighbor_1_1NSModel" kindref="compound">NSModel</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Model to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="401" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1a8eba8cadae0d4294becc60ec69cf158d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NSModel</definition>
        <argsstring>(NSModel &amp;&amp;other)</argsstring>
        <name>NSModel</name>
        <param>
          <type><ref refid="classmlpack_1_1neighbor_1_1NSModel" kindref="compound">NSModel</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Take ownership of the given <ref refid="classmlpack_1_1neighbor_1_1NSModel" kindref="compound">NSModel</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Model to take ownership of. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="408" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1a25d5032163e2f4db1c2330d689df8434" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~NSModel</definition>
        <argsstring>()</argsstring>
        <name>~NSModel</name>
        <briefdescription>
<para>Clean memory, if necessary. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="425" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1a69bf91e73fafd7d8ecd2e52a0f83b022" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BuildModel</definition>
        <argsstring>(util::Timers &amp;timers, arma::mat &amp;&amp;referenceSet, const NeighborSearchMode searchMode, const double epsilon=0)</argsstring>
        <name>BuildModel</name>
        <param>
          <type><ref refid="classmlpack_1_1util_1_1Timers" kindref="compound">util::Timers</ref> &amp;</type>
          <declname>timers</declname>
        </param>
        <param>
          <type>arma::mat &amp;&amp;</type>
          <declname>referenceSet</declname>
        </param>
        <param>
          <type>const <ref refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15" kindref="member">NeighborSearchMode</ref></type>
          <declname>searchMode</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>epsilon</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Build the reference tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="467" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1aff320b9a86b77a150e630c01d5888273" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const arma::mat &amp;</type>
        <definition>const arma::mat&amp; Dataset</definition>
        <argsstring>() const</argsstring>
        <name>Dataset</name>
        <briefdescription>
<para>Expose the dataset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="432" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1af6d960193bb5db37e51416e12bf720de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Epsilon</definition>
        <argsstring>() const</argsstring>
        <name>Epsilon</name>
        <briefdescription>
<para>Expose Epsilon. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="451" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1ab6a080993b32456443eced5df2f8b9b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; Epsilon</definition>
        <argsstring>()</argsstring>
        <name>Epsilon</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="452" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1a407a10954f142968edc38f36c321c6b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InitializeModel</definition>
        <argsstring>(const NeighborSearchMode searchMode, const double epsilon)</argsstring>
        <name>InitializeModel</name>
        <param>
          <type>const <ref refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15" kindref="member">NeighborSearchMode</ref></type>
          <declname>searchMode</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>epsilon</declname>
        </param>
        <briefdescription>
<para>Initialize the model type. (This does not perform any training.) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="463" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1ab81b93ebb200783ca4c5747f31889fa0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t LeafSize</definition>
        <argsstring>() const</argsstring>
        <name>LeafSize</name>
        <briefdescription>
<para>Expose LeafSize. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="439" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="439" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1a0966773f5b7ef0c324ed40b1cf4b94d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t &amp;</type>
        <definition>size_t&amp; LeafSize</definition>
        <argsstring>()</argsstring>
        <name>LeafSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="440" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="440" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1a8423369eb2979b36475f0e3fd533c274" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1neighbor_1_1NSModel" kindref="compound">NSModel</ref> &amp;</type>
        <definition>NSModel&amp; operator=</definition>
        <argsstring>(const NSModel &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmlpack_1_1neighbor_1_1NSModel" kindref="compound">NSModel</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy the given <ref refid="classmlpack_1_1neighbor_1_1NSModel" kindref="compound">NSModel</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Model to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="415" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1a9a971bffd9a24a23a0e2216b24a60cf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmlpack_1_1neighbor_1_1NSModel" kindref="compound">NSModel</ref> &amp;</type>
        <definition>NSModel&amp; operator=</definition>
        <argsstring>(NSModel &amp;&amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classmlpack_1_1neighbor_1_1NSModel" kindref="compound">NSModel</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Take ownership of the given <ref refid="classmlpack_1_1neighbor_1_1NSModel" kindref="compound">NSModel</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>Model to take ownership of. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="422" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1ae3053ad1e3b42eb1ae4105aecd060cf6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool RandomBasis</definition>
        <argsstring>() const</argsstring>
        <name>RandomBasis</name>
        <briefdescription>
<para>Expose randomBasis. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="459" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="459" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1a8111114602e748b38c0875f82f323544" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool &amp;</type>
        <definition>bool&amp; RandomBasis</definition>
        <argsstring>()</argsstring>
        <name>RandomBasis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="460" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="460" bodyend="460"/>
        <references refid="classmlpack_1_1neighbor_1_1NSWrapperBase_1a77e0c8a26bf09774799738767d39e898">NSWrapperBase::Search</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1a309719b378c0bb1962982a8162e58e84" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Rho</definition>
        <argsstring>() const</argsstring>
        <name>Rho</name>
        <briefdescription>
<para>Expose Rho. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="447" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="447" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1a10001faac75d91c05a3c0bfd711b901a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; Rho</definition>
        <argsstring>()</argsstring>
        <name>Rho</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="448" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="448" bodyend="448"/>
        <references refid="classmlpack_1_1neighbor_1_1NSWrapperBase_1a9bd0afbec99b28bbc273e297ec9fe352">NSWrapperBase::Epsilon</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1ae3c1f70a13bbab4c7e217bd1a39a1a6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Search</definition>
        <argsstring>(util::Timers &amp;timers, arma::mat &amp;&amp;querySet, const size_t k, arma::Mat&lt; size_t &gt; &amp;neighbors, arma::mat &amp;distances)</argsstring>
        <name>Search</name>
        <param>
          <type><ref refid="classmlpack_1_1util_1_1Timers" kindref="compound">util::Timers</ref> &amp;</type>
          <declname>timers</declname>
        </param>
        <param>
          <type>arma::mat &amp;&amp;</type>
          <declname>querySet</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>neighbors</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>distances</declname>
        </param>
        <briefdescription>
<para>Perform neighbor search. The query set will be reordered. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="473" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1ad0c89bf9e4a4b75a1292795e8657e069" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Search</definition>
        <argsstring>(util::Timers &amp;timers, const size_t k, arma::Mat&lt; size_t &gt; &amp;neighbors, arma::mat &amp;distances)</argsstring>
        <name>Search</name>
        <param>
          <type><ref refid="classmlpack_1_1util_1_1Timers" kindref="compound">util::Timers</ref> &amp;</type>
          <declname>timers</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>neighbors</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>distances</declname>
        </param>
        <briefdescription>
<para>Perform monochromatic neighbor search. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="480" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1a23cdc4b734a3dc41722aaded92244fd4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15" kindref="member">NeighborSearchMode</ref></type>
        <definition>NeighborSearchMode SearchMode</definition>
        <argsstring>() const</argsstring>
        <name>SearchMode</name>
        <briefdescription>
<para>Expose SearchMode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="435" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1a6071cc412821cb4ce4364fbc2a0a8533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacemlpack_1_1neighbor_1a1a65d2ce978562ab36affdc59938ef15" kindref="member">NeighborSearchMode</ref> &amp;</type>
        <definition>NeighborSearchMode&amp; SearchMode</definition>
        <argsstring>()</argsstring>
        <name>SearchMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="436" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the neighbor search model. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="429" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1a4a4b0fafde4cc4c856a53025dc8c4c21" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Tau</definition>
        <argsstring>() const</argsstring>
        <name>Tau</name>
        <briefdescription>
<para>Expose Tau. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="443" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="443" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1ad522d61ed716a322376adea25ebdbc90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; Tau</definition>
        <argsstring>()</argsstring>
        <name>Tau</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="444" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="444" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1a98cbe53c61f1681514056f78a89a57b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string TreeName</definition>
        <argsstring>() const</argsstring>
        <name>TreeName</name>
        <briefdescription>
<para>Return a string representation of the current tree type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="486" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1adb3d0b75d7754ec6741d890232576ffc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8d" kindref="member">TreeTypes</ref></type>
        <definition>TreeTypes TreeType</definition>
        <argsstring>() const</argsstring>
        <name>TreeType</name>
        <briefdescription>
<para>Expose treeType. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="455" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="455" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NSModel_1a56b0460c7769ea1ef9d8314026ef36c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8d" kindref="member">TreeTypes</ref> &amp;</type>
        <definition>TreeTypes&amp; TreeType</definition>
        <argsstring>()</argsstring>
        <name>TreeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="456" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="456" bodyend="456"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classmlpack_1_1neighbor_1_1NSModel" kindref="compound">NSModel</ref> class provides an easy way to serialize a model, abstracts away the different types of trees, and also reflects the <ref refid="classmlpack_1_1neighbor_1_1NeighborSearch" kindref="compound">NeighborSearch</ref> API. </para>    </briefdescription>
    <detaileddescription>
<para>This class is meant to be used by the command-line mlpack_knn and mlpack_kfn programs, and thus does not have the same complete functionality and flexibility as the <ref refid="classmlpack_1_1neighbor_1_1NeighborSearch" kindref="compound">NeighborSearch</ref> class. So if you are using it outside of mlpack_knn and mlpack_kfn, be aware that it is limited!</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>SortPolicy</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort policy for distances; see NearestNeighborSort. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" line="344" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp" bodystart="343" bodyend="487"/>
    <listofallmembers>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8da994ef1bcca8841d5b7d1431b99fcb10d" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>BALL_TREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a69bf91e73fafd7d8ecd2e52a0f83b022" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>BuildModel</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8da92f172b47c8ae18ed401f8bf9f5ecad3" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>COVER_TREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1aff320b9a86b77a150e630c01d5888273" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>Dataset</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1af6d960193bb5db37e51416e12bf720de" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>Epsilon</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1ab6a080993b32456443eced5df2f8b9b9" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>Epsilon</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8da470c5bcf4135483a37e9a87f061e1c5c" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>HILBERT_R_TREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a407a10954f142968edc38f36c321c6b8" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>InitializeModel</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8daa688e9cd1158916bc183aa517724568c" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>KD_TREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1abffeae6dee4a6bad9885ba0f39d309f3" prot="private" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>leafSize</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1ab81b93ebb200783ca4c5747f31889fa0" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>LeafSize</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a0966773f5b7ef0c324ed40b1cf4b94d1" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>LeafSize</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8da0e4ed6912ca7a8232754df8771365c96" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>MAX_RP_TREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1ab5d8385d49e2a64b56e6089f0f27c461" prot="private" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>nSearch</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a79e4c6c22da7f04fc8f9a5bae9b688e1" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>NSModel</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a6377c3a4b61de368dedff9fa95304359" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>NSModel</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a8eba8cadae0d4294becc60ec69cf158d" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>NSModel</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8daabefbb1ea7a801b1b00c9b0709dcec50" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>OCTREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a8423369eb2979b36475f0e3fd533c274" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>operator=</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a9a971bffd9a24a23a0e2216b24a60cf3" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>operator=</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a58d43069f572c93d4569d25c57a9cb6a" prot="private" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>q</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8da1208f6f2a7b337e4edbd02a8de98d3f5" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>R_PLUS_PLUS_TREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8da4e91a297c1504b34ca1a9cdcd6ba22ff" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>R_PLUS_TREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8dae5b37a52c347bc7ef3d23fde0941d27b" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>R_STAR_TREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8da2a93dc779a94d5f09b72ffbdc5ac9cd9" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>R_TREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a68c01c84182e9de56ad31dbf792d7a5b" prot="private" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>randomBasis</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1ae3053ad1e3b42eb1ae4105aecd060cf6" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>RandomBasis</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a8111114602e748b38c0875f82f323544" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>RandomBasis</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a309719b378c0bb1962982a8162e58e84" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>Rho</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a10001faac75d91c05a3c0bfd711b901a" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>Rho</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a3ed57096651b587c2bf716fa78048153" prot="private" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>rho</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8dae6815061fe1e77dc1b2ae96b07b40250" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>RP_TREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1ae3c1f70a13bbab4c7e217bd1a39a1a6b" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>Search</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1ad0c89bf9e4a4b75a1292795e8657e069" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>Search</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a23cdc4b734a3dc41722aaded92244fd4" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>SearchMode</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a6071cc412821cb4ce4364fbc2a0a8533" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>SearchMode</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8dae380b83ef5a8ba2c32c569705a8b66fc" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>SPILL_TREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a4a4b0fafde4cc4c856a53025dc8c4c21" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>Tau</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1ad522d61ed716a322376adea25ebdbc90" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>Tau</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1ae5f7c26321910a384f6f0d37910858a2" prot="private" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>tau</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a98cbe53c61f1681514056f78a89a57b8" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>TreeName</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a4c037c9b8e9f3f7d429a0f3f4326a067" prot="private" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>treeType</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1adb3d0b75d7754ec6741d890232576ffc" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>TreeType</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a56b0460c7769ea1ef9d8314026ef36c6" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>TreeType</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8d" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>TreeTypes</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8dae36341db74fc7194b238cf7c528a7fbc" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>UB_TREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8daa8a6aade44830d33165414079bf8dd1c" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>VP_TREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a6597b8539c6114170dc185d332ba4c8da6560e35678b39452afce0f0fcc7f6059" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>X_TREE</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NSModel_1a25d5032163e2f4db1c2330d689df8434" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NSModel</scope><name>~NSModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
