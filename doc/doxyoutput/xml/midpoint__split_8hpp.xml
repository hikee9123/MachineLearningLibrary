<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="midpoint__split_8hpp" kind="file" language="C++">
    <compoundname>midpoint_split.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="perform__split_8hpp" local="no">mlpack/core/tree/perform_split.hpp</includes>
    <includes local="yes">midpoint_split_impl.hpp</includes>
    <includedby refid="binary__space__tree_2binary__space__tree_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/binary_space_tree.hpp</includedby>
    <includedby refid="binary__space__tree_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree.hpp</includedby>
    <incdepgraph>
      <node id="14473">
        <label>list</label>
      </node>
      <node id="14470">
        <label>atomic</label>
      </node>
      <node id="14460">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="14436">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="14472">
        <label>iomanip</label>
      </node>
      <node id="14445">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="14446" relation="include">
        </childnode>
        <childnode refid="14448" relation="include">
        </childnode>
      </node>
      <node id="14428">
        <label>cstdint</label>
      </node>
      <node id="14437">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="14444">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="14467">
        <label>arma_config.hpp</label>
      </node>
      <node id="14457">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="14424">
        <label>cmath</label>
      </node>
      <node id="14443">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="14432">
        <label>stdexcept</label>
      </node>
      <node id="14452">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="14437" relation="include">
        </childnode>
        <childnode refid="14439" relation="include">
        </childnode>
        <childnode refid="14440" relation="include">
        </childnode>
        <childnode refid="14438" relation="include">
        </childnode>
      </node>
      <node id="14476">
        <label>string</label>
      </node>
      <node id="14481">
        <label>midpoint_split_impl.hpp</label>
      </node>
      <node id="14464">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="14465" relation="include">
        </childnode>
        <childnode refid="14431" relation="include">
        </childnode>
      </node>
      <node id="14474">
        <label>map</label>
      </node>
      <node id="14426">
        <label>cfloat</label>
      </node>
      <node id="14456">
        <label>boost/variant.hpp</label>
      </node>
      <node id="14478">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="14440">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="14463">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="14464" relation="include">
        </childnode>
        <childnode refid="14440" relation="include">
        </childnode>
        <childnode refid="14447" relation="include">
        </childnode>
        <childnode refid="14465" relation="include">
        </childnode>
      </node>
      <node id="14453">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="14451">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="14437" relation="include">
        </childnode>
        <childnode refid="14439" relation="include">
        </childnode>
        <childnode refid="14440" relation="include">
        </childnode>
        <childnode refid="14438" relation="include">
        </childnode>
      </node>
      <node id="14454">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="14437" relation="include">
        </childnode>
        <childnode refid="14439" relation="include">
        </childnode>
        <childnode refid="14440" relation="include">
        </childnode>
        <childnode refid="14438" relation="include">
        </childnode>
      </node>
      <node id="14442">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="14462">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="14438" relation="include">
        </childnode>
        <childnode refid="14439" relation="include">
        </childnode>
        <childnode refid="14440" relation="include">
        </childnode>
        <childnode refid="14450" relation="include">
        </childnode>
        <childnode refid="14459" relation="include">
        </childnode>
      </node>
      <node id="14466">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="14467" relation="include">
        </childnode>
      </node>
      <node id="14468">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="14423">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="14424" relation="include">
        </childnode>
        <childnode refid="14425" relation="include">
        </childnode>
        <childnode refid="14426" relation="include">
        </childnode>
        <childnode refid="14427" relation="include">
        </childnode>
        <childnode refid="14428" relation="include">
        </childnode>
        <childnode refid="14429" relation="include">
        </childnode>
        <childnode refid="14430" relation="include">
        </childnode>
        <childnode refid="14431" relation="include">
        </childnode>
        <childnode refid="14432" relation="include">
        </childnode>
        <childnode refid="14433" relation="include">
        </childnode>
        <childnode refid="14434" relation="include">
        </childnode>
        <childnode refid="14435" relation="include">
        </childnode>
        <childnode refid="14436" relation="include">
        </childnode>
        <childnode refid="14437" relation="include">
        </childnode>
        <childnode refid="14438" relation="include">
        </childnode>
        <childnode refid="14439" relation="include">
        </childnode>
        <childnode refid="14440" relation="include">
        </childnode>
        <childnode refid="14441" relation="include">
        </childnode>
        <childnode refid="14442" relation="include">
        </childnode>
        <childnode refid="14443" relation="include">
        </childnode>
        <childnode refid="14444" relation="include">
        </childnode>
        <childnode refid="14445" relation="include">
        </childnode>
        <childnode refid="14449" relation="include">
        </childnode>
        <childnode refid="14450" relation="include">
        </childnode>
        <childnode refid="14451" relation="include">
        </childnode>
        <childnode refid="14452" relation="include">
        </childnode>
        <childnode refid="14453" relation="include">
        </childnode>
        <childnode refid="14454" relation="include">
        </childnode>
        <childnode refid="14455" relation="include">
        </childnode>
        <childnode refid="14461" relation="include">
        </childnode>
        <childnode refid="14462" relation="include">
        </childnode>
        <childnode refid="14459" relation="include">
        </childnode>
        <childnode refid="14463" relation="include">
        </childnode>
        <childnode refid="14466" relation="include">
        </childnode>
        <childnode refid="14468" relation="include">
        </childnode>
        <childnode refid="14469" relation="include">
        </childnode>
        <childnode refid="14478" relation="include">
        </childnode>
        <childnode refid="14479" relation="include">
        </childnode>
      </node>
      <node id="14422">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/midpoint_split.hpp</label>
        <link refid="midpoint__split_8hpp"/>
        <childnode refid="14423" relation="include">
        </childnode>
        <childnode refid="14480" relation="include">
        </childnode>
        <childnode refid="14481" relation="include">
        </childnode>
      </node>
      <node id="14429">
        <label>cstdio</label>
      </node>
      <node id="14433">
        <label>tuple</label>
      </node>
      <node id="14438">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="14455">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="14438" relation="include">
        </childnode>
        <childnode refid="14439" relation="include">
        </childnode>
        <childnode refid="14440" relation="include">
        </childnode>
        <childnode refid="14442" relation="include">
        </childnode>
        <childnode refid="14456" relation="include">
        </childnode>
        <childnode refid="14457" relation="include">
        </childnode>
        <childnode refid="14458" relation="include">
        </childnode>
        <childnode refid="14459" relation="include">
        </childnode>
      </node>
      <node id="14434">
        <label>utility</label>
      </node>
      <node id="14458">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="14449">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="14446">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="14447" relation="include">
        </childnode>
      </node>
      <node id="14469">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="14470" relation="include">
        </childnode>
        <childnode refid="14471" relation="include">
        </childnode>
        <childnode refid="14472" relation="include">
        </childnode>
        <childnode refid="14473" relation="include">
        </childnode>
        <childnode refid="14474" relation="include">
        </childnode>
        <childnode refid="14475" relation="include">
        </childnode>
        <childnode refid="14476" relation="include">
        </childnode>
        <childnode refid="14477" relation="include">
        </childnode>
      </node>
      <node id="14447">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="14461">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="14459" relation="include">
        </childnode>
        <childnode refid="14455" relation="include">
        </childnode>
        <childnode refid="14462" relation="include">
        </childnode>
      </node>
      <node id="14430">
        <label>cstdlib</label>
      </node>
      <node id="14425">
        <label>cctype</label>
      </node>
      <node id="14448">
        <label>unordered_map</label>
      </node>
      <node id="14427">
        <label>climits</label>
      </node>
      <node id="14475">
        <label>mutex</label>
      </node>
      <node id="14471">
        <label>chrono</label>
      </node>
      <node id="14479">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="14477">
        <label>thread</label>
      </node>
      <node id="14480">
        <label>mlpack/core/tree/perform_split.hpp</label>
        <link refid="perform__split_8hpp"/>
      </node>
      <node id="14465">
        <label>type_traits</label>
      </node>
      <node id="14441">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="14435">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="14459">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="14437" relation="include">
        </childnode>
        <childnode refid="14438" relation="include">
        </childnode>
        <childnode refid="14439" relation="include">
        </childnode>
        <childnode refid="14440" relation="include">
        </childnode>
        <childnode refid="14460" relation="include">
        </childnode>
      </node>
      <node id="14431">
        <label>cstring</label>
      </node>
      <node id="14450">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="14439">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="14525">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="14484" relation="include">
        </childnode>
      </node>
      <node id="14499">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/pelleg_moore_kmeans.hpp</label>
        <link refid="pelleg__moore__kmeans_8hpp"/>
      </node>
      <node id="14513">
        <label>/home/aakash/mlpack/src/mlpack/methods/lmnn/lmnn_function.hpp</label>
        <link refid="lmnn__function_8hpp"/>
        <childnode refid="14514" relation="include">
        </childnode>
      </node>
      <node id="14517">
        <label>/home/aakash/mlpack/src/mlpack/methods/range_search/range_search.hpp</label>
        <link refid="range__search_8hpp"/>
        <childnode refid="14518" relation="include">
        </childnode>
        <childnode refid="14519" relation="include">
        </childnode>
      </node>
      <node id="14515">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/typedef.hpp</label>
        <link refid="methods_2neighbor__search_2typedef_8hpp"/>
        <childnode refid="14500" relation="include">
        </childnode>
      </node>
      <node id="14504">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp</label>
        <link refid="cf__model_8hpp"/>
      </node>
      <node id="14506">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp</label>
        <link refid="regularized__svd__method_8hpp"/>
      </node>
      <node id="14526">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="14484" relation="include">
        </childnode>
      </node>
      <node id="14503">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/bias_svd_method.hpp</label>
        <link refid="bias__svd__method_8hpp"/>
      </node>
      <node id="14501">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf.hpp</label>
        <link refid="cf_8hpp"/>
        <childnode refid="14502" relation="include">
        </childnode>
        <childnode refid="14504" relation="include">
        </childnode>
        <childnode refid="14505" relation="include">
        </childnode>
        <childnode refid="14507" relation="include">
        </childnode>
      </node>
      <node id="14509">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/cosine_search.hpp</label>
        <link refid="cosine__search_8hpp"/>
      </node>
      <node id="14523">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_typedef.hpp</label>
        <link refid="ra__typedef_8hpp"/>
        <childnode refid="14522" relation="include">
        </childnode>
      </node>
      <node id="14518">
        <label>/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp</label>
        <link refid="dbscan_8hpp"/>
      </node>
      <node id="14495">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/gmm.hpp</label>
        <link refid="gmm_8hpp"/>
        <childnode refid="14494" relation="include">
        </childnode>
      </node>
      <node id="14520">
        <label>/home/aakash/mlpack/src/mlpack/tests/main_tests/range_search_utils.hpp</label>
        <link refid="range__search__utils_8hpp"/>
      </node>
      <node id="14490">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/dual_tree_kmeans.hpp</label>
        <link refid="dual__tree__kmeans_8hpp"/>
      </node>
      <node id="14507">
        <label>/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp</label>
        <link refid="svdplusplus_8hpp"/>
        <childnode refid="14508" relation="include">
        </childnode>
      </node>
      <node id="14493">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp</label>
        <link refid="diagonal__gmm_8hpp"/>
        <childnode refid="14494" relation="include">
        </childnode>
      </node>
      <node id="14516">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp</label>
        <link refid="ns__model_8hpp"/>
      </node>
      <node id="14482">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/midpoint_split.hpp</label>
        <link refid="midpoint__split_8hpp"/>
        <childnode refid="14483" relation="include">
        </childnode>
        <childnode refid="14484" relation="include">
        </childnode>
      </node>
      <node id="14522">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_search.hpp</label>
        <link refid="ra__search_8hpp"/>
        <childnode refid="14521" relation="include">
        </childnode>
        <childnode refid="14523" relation="include">
        </childnode>
      </node>
      <node id="14498">
        <label>/home/aakash/mlpack/src/mlpack/methods/nystroem_method/nystroem_method.hpp</label>
        <link refid="nystroem__method_2nystroem__method_8hpp"/>
        <childnode refid="14497" relation="include">
        </childnode>
      </node>
      <node id="14512">
        <label>/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp</label>
        <link refid="constraints_8hpp"/>
        <childnode refid="14513" relation="include">
        </childnode>
      </node>
      <node id="14510">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/lmetric_search.hpp</label>
        <link refid="lmetric__search_8hpp"/>
        <childnode refid="14501" relation="include">
        </childnode>
      </node>
      <node id="14514">
        <label>/home/aakash/mlpack/src/mlpack/methods/lmnn/lmnn.hpp</label>
        <link refid="lmnn_8hpp"/>
      </node>
      <node id="14502">
        <label>/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp</label>
        <link refid="bias__svd_8hpp"/>
        <childnode refid="14503" relation="include">
        </childnode>
      </node>
      <node id="14483">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="14484" relation="include">
        </childnode>
        <childnode refid="14525" relation="include">
        </childnode>
        <childnode refid="14526" relation="include">
        </childnode>
        <childnode refid="14500" relation="include">
        </childnode>
      </node>
      <node id="14521">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp</label>
        <link refid="ra__model_8hpp"/>
      </node>
      <node id="14492">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/em_fit.hpp</label>
        <link refid="em__fit_8hpp"/>
        <childnode refid="14493" relation="include">
        </childnode>
        <childnode refid="14495" relation="include">
        </childnode>
      </node>
      <node id="14489">
        <label>/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp</label>
        <link refid="kde__model_8hpp"/>
      </node>
      <node id="14484">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="14483" relation="include">
        </childnode>
        <childnode refid="14485" relation="include">
        </childnode>
        <childnode refid="14486" relation="include">
        </childnode>
        <childnode refid="14487" relation="include">
        </childnode>
        <childnode refid="14488" relation="include">
        </childnode>
        <childnode refid="14489" relation="include">
        </childnode>
        <childnode refid="14490" relation="include">
        </childnode>
        <childnode refid="14491" relation="include">
        </childnode>
        <childnode refid="14499" relation="include">
        </childnode>
        <childnode refid="14500" relation="include">
        </childnode>
        <childnode refid="14516" relation="include">
        </childnode>
        <childnode refid="14517" relation="include">
        </childnode>
        <childnode refid="14519" relation="include">
        </childnode>
        <childnode refid="14521" relation="include">
        </childnode>
        <childnode refid="14522" relation="include">
        </childnode>
        <childnode refid="14524" relation="include">
        </childnode>
      </node>
      <node id="14508">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svdplusplus_method.hpp</label>
        <link refid="svdplusplus__method_8hpp"/>
      </node>
      <node id="14505">
        <label>/home/aakash/mlpack/src/mlpack/methods/regularized_svd/regularized_svd.hpp</label>
        <link refid="regularized__svd_8hpp"/>
        <childnode refid="14506" relation="include">
        </childnode>
      </node>
      <node id="14524">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_query_stat.hpp</label>
        <link refid="ra__query__stat_8hpp"/>
        <childnode refid="14522" relation="include">
        </childnode>
      </node>
      <node id="14500">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search.hpp</label>
        <link refid="neighbor__search_8hpp"/>
        <childnode refid="14501" relation="include">
        </childnode>
        <childnode refid="14509" relation="include">
        </childnode>
        <childnode refid="14510" relation="include">
        </childnode>
        <childnode refid="14511" relation="include">
        </childnode>
        <childnode refid="14490" relation="include">
        </childnode>
        <childnode refid="14512" relation="include">
        </childnode>
        <childnode refid="14515" relation="include">
        </childnode>
        <childnode refid="14516" relation="include">
        </childnode>
      </node>
      <node id="14519">
        <label>/home/aakash/mlpack/src/mlpack/methods/range_search/rs_model.hpp</label>
        <link refid="rs__model_8hpp"/>
        <childnode refid="14520" relation="include">
        </childnode>
      </node>
      <node id="14488">
        <label>/home/aakash/mlpack/src/mlpack/methods/kde/kde.hpp</label>
        <link refid="kde_8hpp"/>
        <childnode refid="14489" relation="include">
        </childnode>
      </node>
      <node id="14511">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/pearson_search.hpp</label>
        <link refid="pearson__search_8hpp"/>
      </node>
      <node id="14491">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/kmeans.hpp</label>
        <link refid="kmeans_8hpp"/>
        <childnode refid="14492" relation="include">
        </childnode>
        <childnode refid="14496" relation="include">
        </childnode>
      </node>
      <node id="14487">
        <label>/home/aakash/mlpack/src/mlpack/methods/emst/dtb.hpp</label>
        <link refid="dtb_8hpp"/>
      </node>
      <node id="14496">
        <label>/home/aakash/mlpack/src/mlpack/methods/nystroem_method/kmeans_selection.hpp</label>
        <link refid="kmeans__selection_8hpp"/>
        <childnode refid="14497" relation="include">
        </childnode>
        <childnode refid="14498" relation="include">
        </childnode>
      </node>
      <node id="14494">
        <label>/home/aakash/mlpack/src/mlpack/methods/hmm/hmm_model.hpp</label>
        <link refid="hmm__model_8hpp"/>
      </node>
      <node id="14497">
        <label>/home/aakash/mlpack/src/mlpack/methods/kernel_pca/kernel_rules/nystroem_method.hpp</label>
        <link refid="kernel__pca_2kernel__rules_2nystroem__method_8hpp"/>
      </node>
      <node id="14485">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="14484" relation="include">
        </childnode>
      </node>
      <node id="14486">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="14484" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1tree_1_1MidpointSplit" prot="public">mlpack::tree::MidpointSplit</innerclass>
    <innerclass refid="structmlpack_1_1tree_1_1MidpointSplit_1_1SplitInfo" prot="public">mlpack::tree::MidpointSplit::SplitInfo</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1tree">mlpack::tree</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Yash Vadalia </para></simplesect>
<simplesect kind="author"><para>Ryan Curtin</para></simplesect>
Definition of MidpointSplit, a class that splits a binary space partitioning tree node into two parts using the midpoint of the values in a certain dimension. The dimension to split on is the dimension with maximum variance.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="15"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_TREE_BINARY_SPACE_TREE_MIDPOINT_SPLIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_TREE_BINARY_SPACE_TREE_MIDPOINT_SPLIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="perform__split_8hpp" kindref="compound">mlpack/core/tree/perform_split.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tree<sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BoundType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType<sp/>=<sp/>arma::mat&gt;</highlight></codeline>
<codeline lineno="30" refid="classmlpack_1_1tree_1_1MidpointSplit" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1tree_1_1MidpointSplit" kindref="compound">MidpointSplit</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34" refid="structmlpack_1_1tree_1_1MidpointSplit_1_1SplitInfo" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmlpack_1_1tree_1_1MidpointSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="37" refid="structmlpack_1_1tree_1_1MidpointSplit_1_1SplitInfo_1a351b01278d3022d478536e0a84a1808e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1tree_1_1MidpointSplit_1_1SplitInfo_1a351b01278d3022d478536e0a84a1808e" kindref="member">splitDimension</ref>;</highlight></codeline>
<codeline lineno="39" refid="structmlpack_1_1tree_1_1MidpointSplit_1_1SplitInfo_1a414b35a0916562712a643bf4aa7904dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1tree_1_1MidpointSplit_1_1SplitInfo_1a414b35a0916562712a643bf4aa7904dd" kindref="member">splitVal</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1MidpointSplit_1ae326f86e681c01ed2fd5d3d12123e7bd" kindref="member">SplitNode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoundType&amp;<sp/>bound,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>begin,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmlpack_1_1tree_1_1MidpointSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref>&amp;<sp/>splitInfo);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classmlpack_1_1tree_1_1MidpointSplit_1aace8240352cb3ea61c975987b91a80a6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1MidpointSplit_1aace8240352cb3ea61c975987b91a80a6" kindref="member">PerformSplit</ref>(MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>begin,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1tree_1_1MidpointSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref>&amp;<sp/>splitInfo)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>split::PerformSplit&lt;MatType,<sp/>MidpointSplit&gt;(data,<sp/>begin,<sp/>count,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitInfo);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classmlpack_1_1tree_1_1MidpointSplit_1af99e13e8418a8bb6b602435fbd7e4e64" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1MidpointSplit_1af99e13e8418a8bb6b602435fbd7e4e64" kindref="member">PerformSplit</ref>(MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>begin,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1tree_1_1MidpointSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref>&amp;<sp/>splitInfo,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;size_t&gt;&amp;<sp/>oldFromNew)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>split::PerformSplit&lt;MatType,<sp/>MidpointSplit&gt;(data,<sp/>begin,<sp/>count,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitInfo,<sp/>oldFromNew);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType&gt;</highlight></codeline>
<codeline lineno="113" refid="classmlpack_1_1tree_1_1MidpointSplit_1af0fc61f469596cb8796d1966564ecbcb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1MidpointSplit_1af0fc61f469596cb8796d1966564ecbcb" kindref="member">AssignToLeftNode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>point,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1tree_1_1MidpointSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref>&amp;<sp/>splitInfo)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>point[splitInfo.<ref refid="structmlpack_1_1tree_1_1MidpointSplit_1_1SplitInfo_1a351b01278d3022d478536e0a84a1808e" kindref="member">splitDimension</ref>]<sp/>&lt;<sp/>splitInfo.<ref refid="structmlpack_1_1tree_1_1MidpointSplit_1_1SplitInfo_1a414b35a0916562712a643bf4aa7904dd" kindref="member">splitVal</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal">};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;midpoint_split_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/midpoint_split.hpp"/>
  </compounddef>
</doxygen>
