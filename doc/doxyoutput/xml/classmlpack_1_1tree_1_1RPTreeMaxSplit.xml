<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1tree_1_1RPTreeMaxSplit" kind="class" language="C++" prot="public">
    <compoundname>mlpack::tree::RPTreeMaxSplit</compoundname>
    <includes refid="rp__tree__max__split_8hpp" local="no">rp_tree_max_split.hpp</includes>
    <innerclass refid="structmlpack_1_1tree_1_1RPTreeMaxSplit_1_1SplitInfo" prot="public">mlpack::tree::RPTreeMaxSplit::SplitInfo</innerclass>
    <templateparamlist>
      <param>
        <type>typename BoundType</type>
      </param>
      <param>
        <type>typename MatType</type>
        <defval>arma::mat</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmlpack_1_1tree_1_1RPTreeMaxSplit_1a227d0c7e23e98fcd6c81ecab357a791f" prot="public" static="no">
        <type>MatType::elem_type</type>
        <definition>typedef MatType::elem_type ElemType</definition>
        <argsstring></argsstring>
        <name>ElemType</name>
        <briefdescription>
<para>The element type held by the matrix type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_max_split.hpp" line="36" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_max_split.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1RPTreeMaxSplit_1af0fc61f469596cb8796d1966564ecbcb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename VecType</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool AssignToLeftNode</definition>
        <argsstring>(const VecType &amp;point, const SplitInfo &amp;splitInfo)</argsstring>
        <name>AssignToLeftNode</name>
        <param>
          <type>const VecType &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const <ref refid="structmlpack_1_1tree_1_1RPTreeMaxSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref> &amp;</type>
          <declname>splitInfo</declname>
        </param>
        <briefdescription>
<para>Indicates that a point should be assigned to the left subtree. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>The point that is being assigned. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>splitInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>An information about the split. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_max_split.hpp" line="116" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_max_split.hpp" bodystart="116" bodyend="119"/>
        <references refid="structmlpack_1_1tree_1_1RPTreeMaxSplit_1_1SplitInfo_1a620f4f39e225b65a841f34c53b94515f" compoundref="rp__tree__max__split_8hpp" startline="41">RPTreeMaxSplit&lt; BoundType, MatType &gt;::SplitInfo::direction</references>
        <references refid="structmlpack_1_1tree_1_1RPTreeMaxSplit_1_1SplitInfo_1a0940adf91ff7f1747d68384a012683d3" compoundref="rp__tree__max__split_8hpp" startline="43">RPTreeMaxSplit&lt; BoundType, MatType &gt;::SplitInfo::splitVal</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1RPTreeMaxSplit_1aace8240352cb3ea61c975987b91a80a6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t PerformSplit</definition>
        <argsstring>(MatType &amp;data, const size_t begin, const size_t count, const SplitInfo &amp;splitInfo)</argsstring>
        <name>PerformSplit</name>
        <param>
          <type>MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const <ref refid="structmlpack_1_1tree_1_1RPTreeMaxSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref> &amp;</type>
          <declname>splitInfo</declname>
        </param>
        <briefdescription>
<para>Perform the split process according to the information about the split. </para>        </briefdescription>
        <detaileddescription>
<para>This will order the dataset such that points that belong to the left subtree are on the left of the split column, and points from the right subtree are on the right side of the split column.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The dataset used by the binary space tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the starting point in the dataset that belongs to this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points in this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>splitInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>The information about the split. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_max_split.hpp" line="75" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_max_split.hpp" bodystart="75" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1RPTreeMaxSplit_1af99e13e8418a8bb6b602435fbd7e4e64" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t PerformSplit</definition>
        <argsstring>(MatType &amp;data, const size_t begin, const size_t count, const SplitInfo &amp;splitInfo, std::vector&lt; size_t &gt; &amp;oldFromNew)</argsstring>
        <name>PerformSplit</name>
        <param>
          <type>MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const <ref refid="structmlpack_1_1tree_1_1RPTreeMaxSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref> &amp;</type>
          <declname>splitInfo</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; &amp;</type>
          <declname>oldFromNew</declname>
        </param>
        <briefdescription>
<para>Perform the split process according to the information about the split and return the list of changed indices. </para>        </briefdescription>
        <detaileddescription>
<para>This will order the dataset such that points that belong to the left subtree are on the left of the split column, and points from the right subtree are on the right side of the split column.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The dataset used by the binary space tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the starting point in the dataset that belongs to this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points in this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>splitInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>The information about the split. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldFromNew</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector which will be filled with the old positions for each new point. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_max_split.hpp" line="99" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_max_split.hpp" bodystart="99" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1tree_1_1RPTreeMaxSplit_1a563632ed24c69523f20a12d9a28eaeaa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool SplitNode</definition>
        <argsstring>(const BoundType &amp;, MatType &amp;data, const size_t begin, const size_t count, SplitInfo &amp;splitInfo)</argsstring>
        <name>SplitNode</name>
        <param>
          <type>const BoundType &amp;</type>
        </param>
        <param>
          <type>MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="structmlpack_1_1tree_1_1RPTreeMaxSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref> &amp;</type>
          <declname>splitInfo</declname>
        </param>
        <briefdescription>
<para>Split the node by a random hyperplane. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*</parametername>
</parameternamelist>
<parameterdescription>
<para>(bound) The bound used for this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The dataset used by the binary space tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the starting point in the dataset that belongs to this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points in this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>splitInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>An information about the split. This information contains the direction and the value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_max_split.hpp" line="57" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classmlpack_1_1tree_1_1RPTreeMaxSplit_1a51b25e193f667f8655fea191d1d07f0b" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool GetSplitVal</definition>
        <argsstring>(const MatType &amp;data, const size_t begin, const size_t count, const arma::Col&lt; ElemType &gt; &amp;direction, ElemType &amp;splitVal)</argsstring>
        <name>GetSplitVal</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const arma::Col&lt; <ref refid="classmlpack_1_1tree_1_1RPTreeMaxSplit_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref> &gt; &amp;</type>
          <declname>direction</declname>
        </param>
        <param>
          <type><ref refid="classmlpack_1_1tree_1_1RPTreeMaxSplit_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref> &amp;</type>
          <declname>splitVal</declname>
        </param>
        <briefdescription>
<para>This method finds the position of the hyperplane that will split the node. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The dataset used by the binary space tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the starting point in the dataset that belongs to this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points in this node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>A random vector that is the normal to the hyperplane which will split the node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>splitVal</parametername>
</parameternamelist>
<parameterdescription>
<para>The value according which the node will be split. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_max_split.hpp" line="133" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class splits a node by a random hyperplane. </para>    </briefdescription>
    <detaileddescription>
<para>In order to choose the hyperplane we need to choose the normal to the hyperplane and the position of the hyperplane i.e. the scalar product of the normal and a point.</para><para>A point will be assigned to the left subtree if the product of this point and the normal is less or equal to the split value (i.e. the position of the hyperplane). </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_max_split.hpp" line="33" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_max_split.hpp" bodystart="32" bodyend="138"/>
    <listofallmembers>
      <member refid="classmlpack_1_1tree_1_1RPTreeMaxSplit_1af0fc61f469596cb8796d1966564ecbcb" prot="public" virt="non-virtual"><scope>mlpack::tree::RPTreeMaxSplit</scope><name>AssignToLeftNode</name></member>
      <member refid="classmlpack_1_1tree_1_1RPTreeMaxSplit_1a227d0c7e23e98fcd6c81ecab357a791f" prot="public" virt="non-virtual"><scope>mlpack::tree::RPTreeMaxSplit</scope><name>ElemType</name></member>
      <member refid="classmlpack_1_1tree_1_1RPTreeMaxSplit_1a51b25e193f667f8655fea191d1d07f0b" prot="private" virt="non-virtual"><scope>mlpack::tree::RPTreeMaxSplit</scope><name>GetSplitVal</name></member>
      <member refid="classmlpack_1_1tree_1_1RPTreeMaxSplit_1aace8240352cb3ea61c975987b91a80a6" prot="public" virt="non-virtual"><scope>mlpack::tree::RPTreeMaxSplit</scope><name>PerformSplit</name></member>
      <member refid="classmlpack_1_1tree_1_1RPTreeMaxSplit_1af99e13e8418a8bb6b602435fbd7e4e64" prot="public" virt="non-virtual"><scope>mlpack::tree::RPTreeMaxSplit</scope><name>PerformSplit</name></member>
      <member refid="classmlpack_1_1tree_1_1RPTreeMaxSplit_1a563632ed24c69523f20a12d9a28eaeaa" prot="public" virt="non-virtual"><scope>mlpack::tree::RPTreeMaxSplit</scope><name>SplitNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
