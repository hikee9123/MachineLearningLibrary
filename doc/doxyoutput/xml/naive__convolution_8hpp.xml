<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="naive__convolution_8hpp" kind="file" language="C++">
    <compoundname>naive_convolution.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="border__modes_8hpp" local="yes">border_modes.hpp</includes>
    <includedby refid="svd__convolution_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/ann/convolution_rules/svd_convolution.hpp</includedby>
    <includedby refid="layer__types_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/ann/layer/layer_types.hpp</includedby>
    <includedby refid="atrous__convolution_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/ann/layer/atrous_convolution.hpp</includedby>
    <includedby refid="convolution_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/ann/layer/convolution.hpp</includedby>
    <includedby refid="transposed__convolution_8hpp" local="no">/home/aakash/mlpack/src/mlpack/methods/ann/layer/transposed_convolution.hpp</includedby>
    <incdepgraph>
      <node id="27061">
        <label>list</label>
      </node>
      <node id="27058">
        <label>atomic</label>
      </node>
      <node id="27048">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="27024">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="27060">
        <label>iomanip</label>
      </node>
      <node id="27033">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="27034" relation="include">
        </childnode>
        <childnode refid="27036" relation="include">
        </childnode>
      </node>
      <node id="27016">
        <label>cstdint</label>
      </node>
      <node id="27025">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="27032">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="27055">
        <label>arma_config.hpp</label>
      </node>
      <node id="27045">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="27012">
        <label>cmath</label>
      </node>
      <node id="27031">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="27020">
        <label>stdexcept</label>
      </node>
      <node id="27040">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="27025" relation="include">
        </childnode>
        <childnode refid="27027" relation="include">
        </childnode>
        <childnode refid="27028" relation="include">
        </childnode>
        <childnode refid="27026" relation="include">
        </childnode>
      </node>
      <node id="27064">
        <label>string</label>
      </node>
      <node id="27052">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="27053" relation="include">
        </childnode>
        <childnode refid="27019" relation="include">
        </childnode>
      </node>
      <node id="27062">
        <label>map</label>
      </node>
      <node id="27014">
        <label>cfloat</label>
      </node>
      <node id="27044">
        <label>boost/variant.hpp</label>
      </node>
      <node id="27066">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="27028">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="27051">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="27052" relation="include">
        </childnode>
        <childnode refid="27028" relation="include">
        </childnode>
        <childnode refid="27035" relation="include">
        </childnode>
        <childnode refid="27053" relation="include">
        </childnode>
      </node>
      <node id="27041">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="27039">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="27025" relation="include">
        </childnode>
        <childnode refid="27027" relation="include">
        </childnode>
        <childnode refid="27028" relation="include">
        </childnode>
        <childnode refid="27026" relation="include">
        </childnode>
      </node>
      <node id="27042">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="27025" relation="include">
        </childnode>
        <childnode refid="27027" relation="include">
        </childnode>
        <childnode refid="27028" relation="include">
        </childnode>
        <childnode refid="27026" relation="include">
        </childnode>
      </node>
      <node id="27030">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="27050">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="27026" relation="include">
        </childnode>
        <childnode refid="27027" relation="include">
        </childnode>
        <childnode refid="27028" relation="include">
        </childnode>
        <childnode refid="27038" relation="include">
        </childnode>
        <childnode refid="27047" relation="include">
        </childnode>
      </node>
      <node id="27054">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="27055" relation="include">
        </childnode>
      </node>
      <node id="27010">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/convolution_rules/naive_convolution.hpp</label>
        <link refid="naive__convolution_8hpp"/>
        <childnode refid="27011" relation="include">
        </childnode>
        <childnode refid="27068" relation="include">
        </childnode>
      </node>
      <node id="27056">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="27011">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="27012" relation="include">
        </childnode>
        <childnode refid="27013" relation="include">
        </childnode>
        <childnode refid="27014" relation="include">
        </childnode>
        <childnode refid="27015" relation="include">
        </childnode>
        <childnode refid="27016" relation="include">
        </childnode>
        <childnode refid="27017" relation="include">
        </childnode>
        <childnode refid="27018" relation="include">
        </childnode>
        <childnode refid="27019" relation="include">
        </childnode>
        <childnode refid="27020" relation="include">
        </childnode>
        <childnode refid="27021" relation="include">
        </childnode>
        <childnode refid="27022" relation="include">
        </childnode>
        <childnode refid="27023" relation="include">
        </childnode>
        <childnode refid="27024" relation="include">
        </childnode>
        <childnode refid="27025" relation="include">
        </childnode>
        <childnode refid="27026" relation="include">
        </childnode>
        <childnode refid="27027" relation="include">
        </childnode>
        <childnode refid="27028" relation="include">
        </childnode>
        <childnode refid="27029" relation="include">
        </childnode>
        <childnode refid="27030" relation="include">
        </childnode>
        <childnode refid="27031" relation="include">
        </childnode>
        <childnode refid="27032" relation="include">
        </childnode>
        <childnode refid="27033" relation="include">
        </childnode>
        <childnode refid="27037" relation="include">
        </childnode>
        <childnode refid="27038" relation="include">
        </childnode>
        <childnode refid="27039" relation="include">
        </childnode>
        <childnode refid="27040" relation="include">
        </childnode>
        <childnode refid="27041" relation="include">
        </childnode>
        <childnode refid="27042" relation="include">
        </childnode>
        <childnode refid="27043" relation="include">
        </childnode>
        <childnode refid="27049" relation="include">
        </childnode>
        <childnode refid="27050" relation="include">
        </childnode>
        <childnode refid="27047" relation="include">
        </childnode>
        <childnode refid="27051" relation="include">
        </childnode>
        <childnode refid="27054" relation="include">
        </childnode>
        <childnode refid="27056" relation="include">
        </childnode>
        <childnode refid="27057" relation="include">
        </childnode>
        <childnode refid="27066" relation="include">
        </childnode>
        <childnode refid="27067" relation="include">
        </childnode>
      </node>
      <node id="27017">
        <label>cstdio</label>
      </node>
      <node id="27021">
        <label>tuple</label>
      </node>
      <node id="27026">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="27043">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="27026" relation="include">
        </childnode>
        <childnode refid="27027" relation="include">
        </childnode>
        <childnode refid="27028" relation="include">
        </childnode>
        <childnode refid="27030" relation="include">
        </childnode>
        <childnode refid="27044" relation="include">
        </childnode>
        <childnode refid="27045" relation="include">
        </childnode>
        <childnode refid="27046" relation="include">
        </childnode>
        <childnode refid="27047" relation="include">
        </childnode>
      </node>
      <node id="27022">
        <label>utility</label>
      </node>
      <node id="27046">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="27037">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="27034">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="27035" relation="include">
        </childnode>
      </node>
      <node id="27057">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="27058" relation="include">
        </childnode>
        <childnode refid="27059" relation="include">
        </childnode>
        <childnode refid="27060" relation="include">
        </childnode>
        <childnode refid="27061" relation="include">
        </childnode>
        <childnode refid="27062" relation="include">
        </childnode>
        <childnode refid="27063" relation="include">
        </childnode>
        <childnode refid="27064" relation="include">
        </childnode>
        <childnode refid="27065" relation="include">
        </childnode>
      </node>
      <node id="27035">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="27049">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="27047" relation="include">
        </childnode>
        <childnode refid="27043" relation="include">
        </childnode>
        <childnode refid="27050" relation="include">
        </childnode>
      </node>
      <node id="27018">
        <label>cstdlib</label>
      </node>
      <node id="27013">
        <label>cctype</label>
      </node>
      <node id="27036">
        <label>unordered_map</label>
      </node>
      <node id="27015">
        <label>climits</label>
      </node>
      <node id="27063">
        <label>mutex</label>
      </node>
      <node id="27059">
        <label>chrono</label>
      </node>
      <node id="27067">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="27065">
        <label>thread</label>
      </node>
      <node id="27053">
        <label>type_traits</label>
      </node>
      <node id="27029">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="27023">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="27047">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="27025" relation="include">
        </childnode>
        <childnode refid="27026" relation="include">
        </childnode>
        <childnode refid="27027" relation="include">
        </childnode>
        <childnode refid="27028" relation="include">
        </childnode>
        <childnode refid="27048" relation="include">
        </childnode>
      </node>
      <node id="27068">
        <label>border_modes.hpp</label>
        <link refid="border__modes_8hpp"/>
      </node>
      <node id="27019">
        <label>cstring</label>
      </node>
      <node id="27038">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="27027">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="27112">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/radial_basis_function.hpp</label>
        <link refid="radial__basis__function_8hpp"/>
        <childnode refid="27084" relation="include">
        </childnode>
      </node>
      <node id="27119">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/parameters_visitor.hpp</label>
        <link refid="parameters__visitor_8hpp"/>
        <childnode refid="27120" relation="include">
        </childnode>
      </node>
      <node id="27094">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/multiply_merge.hpp</label>
        <link refid="multiply__merge_8hpp"/>
        <childnode refid="27072" relation="include">
        </childnode>
      </node>
      <node id="27089">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/gru.hpp</label>
        <link refid="gru_8hpp"/>
        <childnode refid="27072" relation="include">
        </childnode>
      </node>
      <node id="27088">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/sequential.hpp</label>
        <link refid="sequential_8hpp"/>
        <childnode refid="27087" relation="include">
        </childnode>
        <childnode refid="27089" relation="include">
        </childnode>
        <childnode refid="27090" relation="include">
        </childnode>
        <childnode refid="27091" relation="include">
        </childnode>
        <childnode refid="27072" relation="include">
        </childnode>
      </node>
      <node id="27117">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/gradient_zero_visitor.hpp</label>
        <link refid="gradient__zero__visitor_8hpp"/>
      </node>
      <node id="27106">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/glimpse.hpp</label>
        <link refid="glimpse_8hpp"/>
        <childnode refid="27072" relation="include">
        </childnode>
      </node>
      <node id="27082">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/convolution.hpp</label>
        <link refid="convolution_8hpp"/>
        <childnode refid="27072" relation="include">
        </childnode>
      </node>
      <node id="27072">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/layer.hpp</label>
        <link refid="layer_8hpp"/>
        <childnode refid="27073" relation="include">
        </childnode>
        <childnode refid="27074" relation="include">
        </childnode>
        <childnode refid="27079" relation="include">
        </childnode>
        <childnode refid="27080" relation="include">
        </childnode>
        <childnode refid="27076" relation="include">
        </childnode>
        <childnode refid="27077" relation="include">
        </childnode>
        <childnode refid="27078" relation="include">
        </childnode>
        <childnode refid="27081" relation="include">
        </childnode>
      </node>
      <node id="27091">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/recurrent.hpp</label>
        <link refid="recurrent_8hpp"/>
        <childnode refid="27072" relation="include">
        </childnode>
      </node>
      <node id="27098">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/output_parameter_visitor.hpp</label>
        <link refid="output__parameter__visitor_8hpp"/>
        <childnode refid="27073" relation="include">
        </childnode>
        <childnode refid="27074" relation="include">
        </childnode>
        <childnode refid="27075" relation="include">
        </childnode>
        <childnode refid="27086" relation="include">
        </childnode>
        <childnode refid="27093" relation="include">
        </childnode>
        <childnode refid="27088" relation="include">
        </childnode>
        <childnode refid="27089" relation="include">
        </childnode>
        <childnode refid="27092" relation="include">
        </childnode>
        <childnode refid="27094" relation="include">
        </childnode>
        <childnode refid="27090" relation="include">
        </childnode>
        <childnode refid="27091" relation="include">
        </childnode>
        <childnode refid="27095" relation="include">
        </childnode>
        <childnode refid="27080" relation="include">
        </childnode>
      </node>
      <node id="27121">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/reset_cell_visitor.hpp</label>
        <link refid="reset__cell__visitor_8hpp"/>
      </node>
      <node id="27115">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/forward_visitor.hpp</label>
        <link refid="forward__visitor_8hpp"/>
      </node>
      <node id="27108">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/linear3d.hpp</label>
        <link refid="linear3d_8hpp"/>
        <childnode refid="27084" relation="include">
        </childnode>
        <childnode refid="27072" relation="include">
        </childnode>
      </node>
      <node id="27080">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/rnn.hpp</label>
        <link refid="rnn_8hpp"/>
      </node>
      <node id="27076">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/categorical_dqn.hpp</label>
        <link refid="categorical__dqn_8hpp"/>
      </node>
      <node id="27101">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/adaptive_mean_pooling.hpp</label>
        <link refid="adaptive__mean__pooling_8hpp"/>
        <childnode refid="27084" relation="include">
        </childnode>
        <childnode refid="27072" relation="include">
        </childnode>
      </node>
      <node id="27111">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/vr_class_reward.hpp</label>
        <link refid="vr__class__reward_8hpp"/>
        <childnode refid="27072" relation="include">
        </childnode>
      </node>
      <node id="27113">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/add_visitor.hpp</label>
        <link refid="add__visitor_8hpp"/>
      </node>
      <node id="27116">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/gradient_visitor.hpp</label>
        <link refid="gradient__visitor_8hpp"/>
      </node>
      <node id="27085">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/delete_visitor.hpp</label>
        <link refid="delete__visitor_8hpp"/>
        <childnode refid="27073" relation="include">
        </childnode>
        <childnode refid="27074" relation="include">
        </childnode>
        <childnode refid="27086" relation="include">
        </childnode>
        <childnode refid="27093" relation="include">
        </childnode>
        <childnode refid="27088" relation="include">
        </childnode>
        <childnode refid="27092" relation="include">
        </childnode>
        <childnode refid="27094" relation="include">
        </childnode>
        <childnode refid="27091" relation="include">
        </childnode>
        <childnode refid="27095" relation="include">
        </childnode>
        <childnode refid="27080" relation="include">
        </childnode>
      </node>
      <node id="27095">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/weight_norm.hpp</label>
        <link refid="weight__norm_8hpp"/>
        <childnode refid="27072" relation="include">
        </childnode>
      </node>
      <node id="27110">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/reparametrization.hpp</label>
        <link refid="reparametrization_8hpp"/>
        <childnode refid="27084" relation="include">
        </childnode>
        <childnode refid="27072" relation="include">
        </childnode>
      </node>
      <node id="27105">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/util/check_input_shape.hpp</label>
        <link refid="check__input__shape_8hpp"/>
      </node>
      <node id="27069">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/convolution_rules/naive_convolution.hpp</label>
        <link refid="naive__convolution_8hpp"/>
        <childnode refid="27070" relation="include">
        </childnode>
        <childnode refid="27084" relation="include">
        </childnode>
        <childnode refid="27071" relation="include">
        </childnode>
        <childnode refid="27082" relation="include">
        </childnode>
        <childnode refid="27083" relation="include">
        </childnode>
      </node>
      <node id="27083">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/transposed_convolution.hpp</label>
        <link refid="transposed__convolution_8hpp"/>
        <childnode refid="27072" relation="include">
        </childnode>
      </node>
      <node id="27084">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/layer_types.hpp</label>
        <link refid="layer__types_8hpp"/>
        <childnode refid="27085" relation="include">
        </childnode>
        <childnode refid="27096" relation="include">
        </childnode>
        <childnode refid="27097" relation="include">
        </childnode>
        <childnode refid="27098" relation="include">
        </childnode>
        <childnode refid="27099" relation="include">
        </childnode>
        <childnode refid="27073" relation="include">
        </childnode>
        <childnode refid="27074" relation="include">
        </childnode>
        <childnode refid="27100" relation="include">
        </childnode>
        <childnode refid="27101" relation="include">
        </childnode>
        <childnode refid="27086" relation="include">
        </childnode>
        <childnode refid="27071" relation="include">
        </childnode>
        <childnode refid="27093" relation="include">
        </childnode>
        <childnode refid="27102" relation="include">
        </childnode>
        <childnode refid="27082" relation="include">
        </childnode>
        <childnode refid="27087" relation="include">
        </childnode>
        <childnode refid="27103" relation="include">
        </childnode>
        <childnode refid="27104" relation="include">
        </childnode>
        <childnode refid="27088" relation="include">
        </childnode>
        <childnode refid="27106" relation="include">
        </childnode>
        <childnode refid="27089" relation="include">
        </childnode>
        <childnode refid="27092" relation="include">
        </childnode>
        <childnode refid="27072" relation="include">
        </childnode>
        <childnode refid="27107" relation="include">
        </childnode>
        <childnode refid="27108" relation="include">
        </childnode>
        <childnode refid="27109" relation="include">
        </childnode>
        <childnode refid="27094" relation="include">
        </childnode>
        <childnode refid="27090" relation="include">
        </childnode>
        <childnode refid="27091" relation="include">
        </childnode>
        <childnode refid="27110" relation="include">
        </childnode>
        <childnode refid="27083" relation="include">
        </childnode>
        <childnode refid="27111" relation="include">
        </childnode>
        <childnode refid="27095" relation="include">
        </childnode>
        <childnode refid="27112" relation="include">
        </childnode>
        <childnode refid="27079" relation="include">
        </childnode>
        <childnode refid="27080" relation="include">
        </childnode>
        <childnode refid="27113" relation="include">
        </childnode>
        <childnode refid="27114" relation="include">
        </childnode>
        <childnode refid="27115" relation="include">
        </childnode>
        <childnode refid="27116" relation="include">
        </childnode>
        <childnode refid="27117" relation="include">
        </childnode>
        <childnode refid="27118" relation="include">
        </childnode>
        <childnode refid="27119" relation="include">
        </childnode>
        <childnode refid="27121" relation="include">
        </childnode>
      </node>
      <node id="27099">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/init_rules/network_init.hpp</label>
        <link refid="network__init_8hpp"/>
        <childnode refid="27073" relation="include">
        </childnode>
        <childnode refid="27074" relation="include">
        </childnode>
        <childnode refid="27080" relation="include">
        </childnode>
      </node>
      <node id="27086">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/add_merge.hpp</label>
        <link refid="add__merge_8hpp"/>
        <childnode refid="27087" relation="include">
        </childnode>
        <childnode refid="27088" relation="include">
        </childnode>
        <childnode refid="27089" relation="include">
        </childnode>
        <childnode refid="27092" relation="include">
        </childnode>
        <childnode refid="27072" relation="include">
        </childnode>
        <childnode refid="27090" relation="include">
        </childnode>
        <childnode refid="27091" relation="include">
        </childnode>
      </node>
      <node id="27107">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/linear_no_bias.hpp</label>
        <link refid="linear__no__bias_8hpp"/>
        <childnode refid="27084" relation="include">
        </childnode>
        <childnode refid="27072" relation="include">
        </childnode>
      </node>
      <node id="27073">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/brnn.hpp</label>
        <link refid="brnn_8hpp"/>
      </node>
      <node id="27079">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer_names.hpp</label>
        <link refid="layer__names_8hpp"/>
      </node>
      <node id="27120">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/sac.hpp</label>
        <link refid="sac_8hpp"/>
      </node>
      <node id="27081">
        <label>/home/aakash/mlpack/src/mlpack/tests/custom_layer.hpp</label>
        <link refid="custom__layer_8hpp"/>
      </node>
      <node id="27104">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/input_shape_visitor.hpp</label>
        <link refid="input__shape__visitor_8hpp"/>
        <childnode refid="27088" relation="include">
        </childnode>
        <childnode refid="27091" relation="include">
        </childnode>
        <childnode refid="27105" relation="include">
        </childnode>
      </node>
      <node id="27090">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/recurrent_attention.hpp</label>
        <link refid="recurrent__attention_8hpp"/>
        <childnode refid="27072" relation="include">
        </childnode>
      </node>
      <node id="27103">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/linear.hpp</label>
        <link refid="linear_8hpp"/>
        <childnode refid="27087" relation="include">
        </childnode>
        <childnode refid="27072" relation="include">
        </childnode>
      </node>
      <node id="27093">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/concat.hpp</label>
        <link refid="concat_8hpp"/>
        <childnode refid="27072" relation="include">
        </childnode>
      </node>
      <node id="27109">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/minibatch_discrimination.hpp</label>
        <link refid="minibatch__discrimination_8hpp"/>
        <childnode refid="27072" relation="include">
        </childnode>
      </node>
      <node id="27070">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/convolution_rules/svd_convolution.hpp</label>
        <link refid="svd__convolution_8hpp"/>
        <childnode refid="27071" relation="include">
        </childnode>
        <childnode refid="27082" relation="include">
        </childnode>
        <childnode refid="27083" relation="include">
        </childnode>
      </node>
      <node id="27074">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/ffn.hpp</label>
        <link refid="ffn_8hpp"/>
        <childnode refid="27075" relation="include">
        </childnode>
        <childnode refid="27076" relation="include">
        </childnode>
        <childnode refid="27077" relation="include">
        </childnode>
        <childnode refid="27078" relation="include">
        </childnode>
      </node>
      <node id="27077">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/dueling_dqn.hpp</label>
        <link refid="dueling__dqn_8hpp"/>
      </node>
      <node id="27102">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/concat_performance.hpp</label>
        <link refid="concat__performance_8hpp"/>
        <childnode refid="27072" relation="include">
        </childnode>
      </node>
      <node id="27087">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/dropconnect.hpp</label>
        <link refid="dropconnect_8hpp"/>
        <childnode refid="27072" relation="include">
        </childnode>
      </node>
      <node id="27097">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/copy_visitor.hpp</label>
        <link refid="copy__visitor_8hpp"/>
        <childnode refid="27073" relation="include">
        </childnode>
        <childnode refid="27074" relation="include">
        </childnode>
        <childnode refid="27088" relation="include">
        </childnode>
        <childnode refid="27091" relation="include">
        </childnode>
      </node>
      <node id="27096">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/delta_visitor.hpp</label>
        <link refid="delta__visitor_8hpp"/>
        <childnode refid="27073" relation="include">
        </childnode>
        <childnode refid="27074" relation="include">
        </childnode>
        <childnode refid="27086" relation="include">
        </childnode>
        <childnode refid="27093" relation="include">
        </childnode>
        <childnode refid="27088" relation="include">
        </childnode>
        <childnode refid="27089" relation="include">
        </childnode>
        <childnode refid="27092" relation="include">
        </childnode>
        <childnode refid="27094" relation="include">
        </childnode>
        <childnode refid="27090" relation="include">
        </childnode>
        <childnode refid="27091" relation="include">
        </childnode>
        <childnode refid="27095" relation="include">
        </childnode>
        <childnode refid="27080" relation="include">
        </childnode>
      </node>
      <node id="27075">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/gan/gan.hpp</label>
        <link refid="gan_8hpp"/>
      </node>
      <node id="27071">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/atrous_convolution.hpp</label>
        <link refid="atrous__convolution_8hpp"/>
        <childnode refid="27072" relation="include">
        </childnode>
      </node>
      <node id="27114">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/backward_visitor.hpp</label>
        <link refid="backward__visitor_8hpp"/>
      </node>
      <node id="27078">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/q_networks/simple_dqn.hpp</label>
        <link refid="simple__dqn_8hpp"/>
      </node>
      <node id="27118">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/visitor/parameters_set_visitor.hpp</label>
        <link refid="parameters__set__visitor_8hpp"/>
      </node>
      <node id="27100">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/adaptive_max_pooling.hpp</label>
        <link refid="adaptive__max__pooling_8hpp"/>
        <childnode refid="27084" relation="include">
        </childnode>
        <childnode refid="27072" relation="include">
        </childnode>
      </node>
      <node id="27092">
        <label>/home/aakash/mlpack/src/mlpack/methods/ann/layer/highway.hpp</label>
        <link refid="highway_8hpp"/>
        <childnode refid="27072" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1ann_1_1NaiveConvolution" prot="public">mlpack::ann::NaiveConvolution</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1ann">mlpack::ann</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Shangtong Zhang </para></simplesect>
<simplesect kind="author"><para>Marcus Edel</para></simplesect>
Implementation of the convolution.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_ANN_CONVOLUTION_RULES_NAIVE_CONVOLUTION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_ANN_CONVOLUTION_RULES_NAIVE_CONVOLUTION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="border__modes_8hpp" kindref="compound">border_modes.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ann<sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BorderMode<sp/>=<sp/>FullConvolution&gt;</highlight></codeline>
<codeline lineno="35" refid="classmlpack_1_1ann_1_1NaiveConvolution" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1ann_1_1NaiveConvolution" kindref="compound">NaiveConvolution</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Perform<sp/>a<sp/>convolution<sp/>(valid<sp/>mode).</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>input<sp/>Input<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>filter<sp/>Filter<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>output<sp/>Output<sp/>data<sp/>that<sp/>contains<sp/>the<sp/>results<sp/>of<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dW<sp/>Stride<sp/>of<sp/>filter<sp/>application<sp/>in<sp/>the<sp/>x<sp/>direction.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dH<sp/>Stride<sp/>of<sp/>filter<sp/>application<sp/>in<sp/>the<sp/>y<sp/>direction.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dilationW<sp/>The<sp/>dilation<sp/>factor<sp/>in<sp/>x<sp/>direction.</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dilationH<sp/>The<sp/>dilation<sp/>factor<sp/>in<sp/>y<sp/>direction.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Border<sp/>=<sp/>BorderMode&gt;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;Border,<sp/>ValidConvolution&gt;::value,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;::type</highlight></codeline>
<codeline lineno="52" refid="classmlpack_1_1ann_1_1NaiveConvolution_1adde8ddb6df77ab42370e7c28c26af974" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1ann_1_1NaiveConvolution_1adde8ddb6df77ab42370e7c28c26af974" kindref="member">Convolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>filter,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>output,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dW<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dH<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dilationW<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dilationH<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>arma::zeros&lt;arma::Mat&lt;eT&gt;<sp/>&gt;(</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(input.n_rows<sp/>-<sp/>(filter.n_rows<sp/>-<sp/>1)<sp/>*<sp/>dilationW<sp/>-<sp/>1)<sp/>/<sp/>dW<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(input.n_cols<sp/>-<sp/>(filter.n_cols<sp/>-<sp/>1)<sp/>*<sp/>dilationH<sp/>-<sp/><sp/>1)<sp/>/<sp/>dH<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>seems<sp/>to<sp/>be<sp/>about<sp/>3.5<sp/>times<sp/>faster<sp/>to<sp/>use<sp/>pointers<sp/>instead<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filter(ki,<sp/>kj)<sp/>*<sp/>input(leftInput<sp/>+<sp/>ki,<sp/>topInput<sp/>+<sp/>kj)<sp/>and<sp/>output(i,<sp/>j).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>eT*<sp/>outputPtr<sp/>=<sp/>output.memptr();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>output.n_cols;<sp/>++j)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>output.n_rows;<sp/>++i,<sp/>outputPtr++)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eT*<sp/>kernelPtr<sp/>=<sp/>filter.memptr();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>kj<sp/>=<sp/>0;<sp/>kj<sp/>&lt;<sp/>filter.n_cols;<sp/>++kj)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>eT*<sp/>inputPtr<sp/>=<sp/>input.colptr(kj<sp/>*<sp/>dilationW<sp/>+<sp/>j<sp/>*<sp/>dW)<sp/>+<sp/>i<sp/>*<sp/>dH;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ki<sp/>=<sp/>0;<sp/>ki<sp/>&lt;<sp/>filter.n_rows;<sp/>++ki,<sp/>++kernelPtr,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputPtr<sp/>+=<sp/>dilationH)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outputPtr<sp/>+=<sp/>*kernelPtr<sp/>*<sp/>(*inputPtr);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Perform<sp/>a<sp/>convolution<sp/>(full<sp/>mode).</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>input<sp/>Input<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>filter<sp/>Filter<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>output<sp/>Output<sp/>data<sp/>that<sp/>contains<sp/>the<sp/>results<sp/>of<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dW<sp/>Stride<sp/>of<sp/>filter<sp/>application<sp/>in<sp/>the<sp/>x<sp/>direction.</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dH<sp/>Stride<sp/>of<sp/>filter<sp/>application<sp/>in<sp/>the<sp/>y<sp/>direction.</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dilationW<sp/>The<sp/>dilation<sp/>factor<sp/>in<sp/>x<sp/>direction.</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dilationH<sp/>The<sp/>dilation<sp/>factor<sp/>in<sp/>y<sp/>direction.</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Border<sp/>=<sp/>BorderMode&gt;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;Border,<sp/>FullConvolution&gt;::value,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;::type</highlight></codeline>
<codeline lineno="98" refid="classmlpack_1_1ann_1_1NaiveConvolution_1a1ba06465fccd6afa80f4d6cfe9a9dec3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1ann_1_1NaiveConvolution_1a1ba06465fccd6afa80f4d6cfe9a9dec3" kindref="member">Convolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>filter,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>output,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dW<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dH<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dilationW<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dilationH<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>outputRows<sp/>=<sp/>(input.n_rows<sp/>-<sp/>1)<sp/>*<sp/>dW<sp/>+<sp/>2<sp/>*<sp/>(filter.n_rows<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>dilationW<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>outputCols<sp/>=<sp/>(input.n_cols<sp/>-<sp/>1)<sp/>*<sp/>dH<sp/>+<sp/>2<sp/>*<sp/>(filter.n_cols<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>dilationH<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dW;<sp/>++i)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((((i<sp/>+<sp/>outputRows<sp/>-<sp/>2<sp/>*<sp/>(filter.n_rows<sp/>-<sp/>1)<sp/>*<sp/>dilationW<sp/>-<sp/>1)<sp/>%<sp/>dW)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>dW)<sp/>%<sp/>dW)<sp/>==<sp/>i){</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputRows<sp/>+=<sp/>i;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dH;<sp/>++i)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((((i<sp/>+<sp/>outputCols<sp/>-<sp/>2<sp/>*<sp/>(filter.n_cols<sp/>-<sp/>1)<sp/>*<sp/>dilationH<sp/>-<sp/>1)<sp/>%<sp/>dH)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>dH)<sp/>%<sp/>dH)<sp/>==<sp/>i){</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputCols<sp/>+=<sp/>i;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pad<sp/>filter<sp/>and<sp/>input<sp/>to<sp/>the<sp/>working<sp/>output<sp/>shape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;<sp/>inputPadded<sp/>=<sp/>arma::zeros&lt;arma::Mat&lt;eT&gt;<sp/>&gt;(outputRows,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputCols);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>inputPadded.submat((filter.n_rows<sp/>-<sp/>1)<sp/>*<sp/>dilationW,<sp/>(filter.n_cols<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>dilationH,<sp/>(filter.n_rows<sp/>-<sp/>1)<sp/>*<sp/>dilationW<sp/>+<sp/>input.n_rows<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(filter.n_cols<sp/>-<sp/>1)<sp/>*<sp/>dilationH<sp/>+<sp/>input.n_cols<sp/>-<sp/>1)<sp/>=<sp/>input;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1NaiveConvolution_1adde8ddb6df77ab42370e7c28c26af974" kindref="member">NaiveConvolution&lt;ValidConvolution&gt;::Convolution</ref>(inputPadded,<sp/>filter,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output,<sp/>1,<sp/>1,<sp/>dilationW,<sp/>dilationH);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Perform<sp/>a<sp/>convolution<sp/>using<sp/>3rd<sp/>order<sp/>tensors.</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>input<sp/>Input<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>filter<sp/>Filter<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>output<sp/>Output<sp/>data<sp/>that<sp/>contains<sp/>the<sp/>results<sp/>of<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dW<sp/>Stride<sp/>of<sp/>filter<sp/>application<sp/>in<sp/>the<sp/>x<sp/>direction.</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dH<sp/>Stride<sp/>of<sp/>filter<sp/>application<sp/>in<sp/>the<sp/>y<sp/>direction.</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dilationW<sp/>The<sp/>dilation<sp/>factor<sp/>in<sp/>x<sp/>direction.</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dilationH<sp/>The<sp/>dilation<sp/>factor<sp/>in<sp/>y<sp/>direction.</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="151" refid="classmlpack_1_1ann_1_1NaiveConvolution_1ae2b55592952b28666d36015a4e42f9d6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1NaiveConvolution_1ae2b55592952b28666d36015a4e42f9d6" kindref="member">Convolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Cube&lt;eT&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Cube&lt;eT&gt;&amp;<sp/>filter,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Cube&lt;eT&gt;&amp;<sp/>output,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dW<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dH<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dilationW<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dilationH<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;<sp/>convOutput;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1NaiveConvolution_1adde8ddb6df77ab42370e7c28c26af974" kindref="member">NaiveConvolution&lt;BorderMode&gt;::Convolution</ref>(input.slice(0),<sp/>filter.slice(0),</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convOutput,<sp/>dW,<sp/>dH,<sp/>dilationW,<sp/>dilationH);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>arma::Cube&lt;eT&gt;(convOutput.n_rows,<sp/>convOutput.n_cols,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.n_slices);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>output.slice(0)<sp/>=<sp/>convOutput;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>input.n_slices;<sp/>++i)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1NaiveConvolution_1adde8ddb6df77ab42370e7c28c26af974" kindref="member">NaiveConvolution&lt;BorderMode&gt;::Convolution</ref>(input.slice(i),<sp/>filter.slice(i),</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.slice(i),<sp/>dW,<sp/>dH,<sp/>dilationW,<sp/>dilationH);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Perform<sp/>a<sp/>convolution<sp/>using<sp/>dense<sp/>matrix<sp/>as<sp/>input<sp/>and<sp/>a<sp/>3rd<sp/>order<sp/>tensors</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/>*<sp/>as<sp/>filter<sp/>and<sp/>output.</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>input<sp/>Input<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>filter<sp/>Filter<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>output<sp/>Output<sp/>data<sp/>that<sp/>contains<sp/>the<sp/>results<sp/>of<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dW<sp/>Stride<sp/>of<sp/>filter<sp/>application<sp/>in<sp/>the<sp/>x<sp/>direction.</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dH<sp/>Stride<sp/>of<sp/>filter<sp/>application<sp/>in<sp/>the<sp/>y<sp/>direction.</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dilationW<sp/>The<sp/>dilation<sp/>factor<sp/>in<sp/>x<sp/>direction.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dilationH<sp/>The<sp/>dilation<sp/>factor<sp/>in<sp/>y<sp/>direction.</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="187" refid="classmlpack_1_1ann_1_1NaiveConvolution_1ac2914aeee931814235a0e237aad5e6d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1NaiveConvolution_1ac2914aeee931814235a0e237aad5e6d1" kindref="member">Convolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Cube&lt;eT&gt;&amp;<sp/>filter,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Cube&lt;eT&gt;&amp;<sp/>output,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dW<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dH<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dilationW<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dilationH<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;<sp/>convOutput;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1NaiveConvolution_1adde8ddb6df77ab42370e7c28c26af974" kindref="member">NaiveConvolution&lt;BorderMode&gt;::Convolution</ref>(input,<sp/>filter.slice(0),</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convOutput,<sp/>dW,<sp/>dH,<sp/>dilationW,<sp/>dilationH);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>arma::Cube&lt;eT&gt;(convOutput.n_rows,<sp/>convOutput.n_cols,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter.n_slices);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>output.slice(0)<sp/>=<sp/>convOutput;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>filter.n_slices;<sp/>++i)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1NaiveConvolution_1adde8ddb6df77ab42370e7c28c26af974" kindref="member">NaiveConvolution&lt;BorderMode&gt;::Convolution</ref>(input,<sp/>filter.slice(i),</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.slice(i),<sp/>dW,<sp/>dH,<sp/>dilationW,<sp/>dilationH);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Perform<sp/>a<sp/>convolution<sp/>using<sp/>a<sp/>3rd<sp/>order<sp/>tensors<sp/>as<sp/>input<sp/>and<sp/>output<sp/>and<sp/>a</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/>*<sp/>dense<sp/>matrix<sp/>as<sp/>filter.</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>input<sp/>Input<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>filter<sp/>Filter<sp/>used<sp/>to<sp/>perform<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>output<sp/>Output<sp/>data<sp/>that<sp/>contains<sp/>the<sp/>results<sp/>of<sp/>the<sp/>convolution.</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dW<sp/>Stride<sp/>of<sp/>filter<sp/>application<sp/>in<sp/>the<sp/>x<sp/>direction.</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dH<sp/>Stride<sp/>of<sp/>filter<sp/>application<sp/>in<sp/>the<sp/>y<sp/>direction.</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dilationW<sp/>The<sp/>dilation<sp/>factor<sp/>in<sp/>x<sp/>direction.</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>dilationH<sp/>The<sp/>dilation<sp/>factor<sp/>in<sp/>y<sp/>direction.</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>eT&gt;</highlight></codeline>
<codeline lineno="223" refid="classmlpack_1_1ann_1_1NaiveConvolution_1a3afb255b85fb9c65054493f44104178f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1ann_1_1NaiveConvolution_1a3afb255b85fb9c65054493f44104178f" kindref="member">Convolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Cube&lt;eT&gt;&amp;<sp/>input,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Mat&lt;eT&gt;&amp;<sp/>filter,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::Cube&lt;eT&gt;&amp;<sp/>output,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dW<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dH<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dilationW<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dilationH<sp/>=<sp/>1)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Mat&lt;eT&gt;<sp/>convOutput;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1NaiveConvolution_1adde8ddb6df77ab42370e7c28c26af974" kindref="member">NaiveConvolution&lt;BorderMode&gt;::Convolution</ref>(input.slice(0),<sp/>filter,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convOutput,<sp/>dW,<sp/>dH,<sp/>dilationW,<sp/>dilationH);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>output<sp/>=<sp/>arma::Cube&lt;eT&gt;(convOutput.n_rows,<sp/>convOutput.n_cols,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input.n_slices);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>output.slice(0)<sp/>=<sp/>convOutput;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>input.n_slices;<sp/>++i)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1ann_1_1NaiveConvolution_1adde8ddb6df77ab42370e7c28c26af974" kindref="member">NaiveConvolution&lt;BorderMode&gt;::Convolution</ref>(input.slice(i),<sp/>filter,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output.slice(i),<sp/>dW,<sp/>dH,<sp/>dilationW,<sp/>dilationH);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal">};<sp/><sp/></highlight><highlight class="comment">//<sp/>class<sp/>NaiveConvolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>ann</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/convolution_rules/naive_convolution.hpp"/>
  </compounddef>
</doxygen>
