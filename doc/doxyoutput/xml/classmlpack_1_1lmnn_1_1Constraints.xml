<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1lmnn_1_1Constraints" kind="class" language="C++" prot="public">
    <compoundname>mlpack::lmnn::Constraints</compoundname>
    <includes refid="constraints_8hpp" local="no">constraints.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>MetricType</declname>
        <defname>MetricType</defname>
        <defval><ref refid="namespacemlpack_1_1metric_1a42614a1b47a4de6037e67742b94dd24d" kindref="member">metric::SquaredEuclideanDistance</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmlpack_1_1lmnn_1_1Constraints_1aa08fb5680ff446140b3272f720a96fda" prot="public" static="no">
        <type><ref refid="classmlpack_1_1neighbor_1_1NeighborSearch" kindref="compound">neighbor::NeighborSearch</ref>&lt; <ref refid="namespacemlpack_1_1neighbor_1af3f11fce33c041aa26b1c91107f71b0f" kindref="member">neighbor::NearestNeighborSort</ref>, MetricType &gt;</type>
        <definition>typedef neighbor::NeighborSearch&lt;neighbor::NearestNeighborSort, MetricType&gt; KNN</definition>
        <argsstring></argsstring>
        <name>KNN</name>
        <briefdescription>
<para>Convenience typedef. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" line="36" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1lmnn_1_1Constraints_1a801cc95c3e8b9e58b41df15162e29de6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; arma::uvec &gt;</type>
        <definition>std::vector&lt;arma::uvec&gt; indexDiff</definition>
        <argsstring></argsstring>
        <name>indexDiff</name>
        <briefdescription>
<para>Store indices of data points having different label. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" line="205" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1lmnn_1_1Constraints_1af5dac9753f2e356ced330773addce3ae" prot="private" static="no" mutable="no">
        <type>std::vector&lt; arma::uvec &gt;</type>
        <definition>std::vector&lt;arma::uvec&gt; indexSame</definition>
        <argsstring></argsstring>
        <name>indexSame</name>
        <briefdescription>
<para>Store indices of data points having similar label. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" line="202" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1lmnn_1_1Constraints_1a9389e4770ba454a2e14f870491495cb2" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t k</definition>
        <argsstring></argsstring>
        <name>k</name>
        <briefdescription>
<para>Number of target neighbors &amp; impostors to calulate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" line="196" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1lmnn_1_1Constraints_1a3ea0ad35696fadcedfdd10a0ec802007" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool precalculated</definition>
        <argsstring></argsstring>
        <name>precalculated</name>
        <briefdescription>
<para>False if nothing has ever been precalculated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" line="208" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1lmnn_1_1Constraints_1a2292934aba4532c5282dbd14545e13e0" prot="private" static="no" mutable="no">
        <type>arma::Row&lt; size_t &gt;</type>
        <definition>arma::Row&lt;size_t&gt; uniqueLabels</definition>
        <argsstring></argsstring>
        <name>uniqueLabels</name>
        <briefdescription>
<para>Store unique labels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" line="199" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" bodystart="199" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1lmnn_1_1Constraints_1adac15935bbabb85cd3485c18808ba141" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Constraints</definition>
        <argsstring>(const arma::mat &amp;dataset, const arma::Row&lt; size_t &gt; &amp;labels, const size_t k)</argsstring>
        <name>Constraints</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>dataset</declname>
        </param>
        <param>
          <type>const arma::Row&lt; size_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Constructor for creating a <ref refid="classmlpack_1_1lmnn_1_1Constraints" kindref="compound">Constraints</ref> instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataset</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset labels. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of target neighbors, impostors &amp; triplets. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lmnn_1_1Constraints_1abfcabe22bfb83c6bb991cc2b388936e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Impostors</definition>
        <argsstring>(arma::Mat&lt; size_t &gt; &amp;outputMatrix, const arma::mat &amp;dataset, const arma::Row&lt; size_t &gt; &amp;labels, const arma::vec &amp;norms)</argsstring>
        <name>Impostors</name>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>outputMatrix</declname>
        </param>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>dataset</declname>
        </param>
        <param>
          <type>const arma::Row&lt; size_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>norms</declname>
        </param>
        <briefdescription>
<para>Calculates k differently labeled nearest neighbors for each datapoint and writes them back to passed matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outputMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinates matrix to store impostors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataset</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset labels. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>norms</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset norms. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lmnn_1_1Constraints_1a10979b62f55833b0167713eea90fb7aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Impostors</definition>
        <argsstring>(arma::Mat&lt; size_t &gt; &amp;outputNeighbors, arma::mat &amp;outputDistance, const arma::mat &amp;dataset, const arma::Row&lt; size_t &gt; &amp;labels, const arma::vec &amp;norms)</argsstring>
        <name>Impostors</name>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>outputNeighbors</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>outputDistance</declname>
        </param>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>dataset</declname>
        </param>
        <param>
          <type>const arma::Row&lt; size_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>norms</declname>
        </param>
        <briefdescription>
<para>Calculates k differently labeled nearest neighbors &amp; distances to impostors for each datapoint and writes them back to passed matrices. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outputNeighbors</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinates matrix to store impostors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputDistance</parametername>
</parameternamelist>
<parameterdescription>
<para>matrix to store distance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataset</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset labels. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>norms</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset norms. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lmnn_1_1Constraints_1a91e83b8342dc413edbf0bb84b3626c1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Impostors</definition>
        <argsstring>(arma::Mat&lt; size_t &gt; &amp;outputMatrix, const arma::mat &amp;dataset, const arma::Row&lt; size_t &gt; &amp;labels, const arma::vec &amp;norms, const size_t begin, const size_t batchSize)</argsstring>
        <name>Impostors</name>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>outputMatrix</declname>
        </param>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>dataset</declname>
        </param>
        <param>
          <type>const arma::Row&lt; size_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>norms</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>batchSize</declname>
        </param>
        <briefdescription>
<para>Calculates k differently labeled nearest neighbors for a batch of dataset and writes them back to passed matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outputMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinates matrix to store impostors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataset</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset labels. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>norms</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset norms. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the initial point of dataset. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>batchSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of data points to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lmnn_1_1Constraints_1aa0e4d7d906ba2d35ae73addd2f16fc58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Impostors</definition>
        <argsstring>(arma::Mat&lt; size_t &gt; &amp;outputNeighbors, arma::mat &amp;outputDistance, const arma::mat &amp;dataset, const arma::Row&lt; size_t &gt; &amp;labels, const arma::vec &amp;norms, const size_t begin, const size_t batchSize)</argsstring>
        <name>Impostors</name>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>outputNeighbors</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>outputDistance</declname>
        </param>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>dataset</declname>
        </param>
        <param>
          <type>const arma::Row&lt; size_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>norms</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>batchSize</declname>
        </param>
        <briefdescription>
<para>Calculates k differently labeled nearest neighbors &amp; distances to impostors for a batch of dataset and writes them back to passed matrices. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outputNeighbors</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinates matrix to store impostors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputDistance</parametername>
</parameternamelist>
<parameterdescription>
<para>matrix to store distance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataset</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset labels. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>norms</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset norms. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the initial point of dataset. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>batchSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of data points to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lmnn_1_1Constraints_1a3ed52fc4ae78ae736b87d011e4b4539e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Impostors</definition>
        <argsstring>(arma::Mat&lt; size_t &gt; &amp;outputNeighbors, arma::mat &amp;outputDistance, const arma::mat &amp;dataset, const arma::Row&lt; size_t &gt; &amp;labels, const arma::vec &amp;norms, const arma::uvec &amp;points, const size_t numPoints)</argsstring>
        <name>Impostors</name>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>outputNeighbors</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>outputDistance</declname>
        </param>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>dataset</declname>
        </param>
        <param>
          <type>const arma::Row&lt; size_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>norms</declname>
        </param>
        <param>
          <type>const arma::uvec &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>numPoints</declname>
        </param>
        <briefdescription>
<para>Calculates k differently labeled nearest neighbors &amp; distances to impostors for some points of dataset and writes them back to passed matrices. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outputNeighbors</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinates matrix to store impostors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputDistance</parametername>
</parameternamelist>
<parameterdescription>
<para>matrix to store distance. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataset</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset labels. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>norms</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset norms. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>points</parametername>
</parameternamelist>
<parameterdescription>
<para>Indices of data points to calculate impostors on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numPoints</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of points to actually calculate impostors on. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lmnn_1_1Constraints_1ab749ea30c4c3d750ef3a619f32dc3e75" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const size_t &amp;</type>
        <definition>const size_t&amp; K</definition>
        <argsstring>() const</argsstring>
        <name>K</name>
        <briefdescription>
<para>Get the number of target neighbors (k). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" line="185" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" bodystart="185" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lmnn_1_1Constraints_1af80ea69c69c6463691509f509f3bff05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t &amp;</type>
        <definition>size_t&amp; K</definition>
        <argsstring>()</argsstring>
        <name>K</name>
        <briefdescription>
<para>Modify the number of target neighbors (k). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" line="187" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" bodystart="187" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lmnn_1_1Constraints_1a790fcea11094af39bfaf56648b567bb3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const bool &amp;</type>
        <definition>const bool&amp; PreCalulated</definition>
        <argsstring>() const</argsstring>
        <name>PreCalulated</name>
        <briefdescription>
<para>Access the boolean value of precalculated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" line="190" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" bodystart="190" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lmnn_1_1Constraints_1ab742fe13e365d0697626650901699a03" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool &amp;</type>
        <definition>bool&amp; PreCalulated</definition>
        <argsstring>()</argsstring>
        <name>PreCalulated</name>
        <briefdescription>
<para>Modify the value of precalculated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" line="192" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" bodystart="192" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lmnn_1_1Constraints_1aaae5fe77efd8a79d315f0979afe789dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TargetNeighbors</definition>
        <argsstring>(arma::Mat&lt; size_t &gt; &amp;outputMatrix, const arma::mat &amp;dataset, const arma::Row&lt; size_t &gt; &amp;labels, const arma::vec &amp;norms)</argsstring>
        <name>TargetNeighbors</name>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>outputMatrix</declname>
        </param>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>dataset</declname>
        </param>
        <param>
          <type>const arma::Row&lt; size_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>norms</declname>
        </param>
        <briefdescription>
<para>Calculates k similar labeled nearest neighbors and stores them into the passed matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outputMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinates matrix to store target neighbors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataset</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset labels. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>norms</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset norms. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lmnn_1_1Constraints_1a3ca672253666af68bdc44a76077dd233" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TargetNeighbors</definition>
        <argsstring>(arma::Mat&lt; size_t &gt; &amp;outputMatrix, const arma::mat &amp;dataset, const arma::Row&lt; size_t &gt; &amp;labels, const arma::vec &amp;norms, const size_t begin, const size_t batchSize)</argsstring>
        <name>TargetNeighbors</name>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>outputMatrix</declname>
        </param>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>dataset</declname>
        </param>
        <param>
          <type>const arma::Row&lt; size_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>norms</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>batchSize</declname>
        </param>
        <briefdescription>
<para>Calculates k similar labeled nearest neighbors for a batch of dataset and stores them into the passed matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outputMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinates matrix to store target neighbors. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataset</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset labels. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>norms</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset norms. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the initial point of dataset. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>batchSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of data points to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lmnn_1_1Constraints_1ad333e36741acf647d22926dc5bd80522" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Triplets</definition>
        <argsstring>(arma::Mat&lt; size_t &gt; &amp;outputMatrix, const arma::mat &amp;dataset, const arma::Row&lt; size_t &gt; &amp;labels, const arma::vec &amp;norms)</argsstring>
        <name>Triplets</name>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>outputMatrix</declname>
        </param>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>dataset</declname>
        </param>
        <param>
          <type>const arma::Row&lt; size_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>norms</declname>
        </param>
        <briefdescription>
<para>Generate triplets {i, j, l} for each datapoint i and writes back generated triplets to matrix passed. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outputMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinates matrix to store triplets. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataset</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>labels</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset labels. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>norms</parametername>
</parameternamelist>
<parameterdescription>
<para>Input dataset norms. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" line="179" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmlpack_1_1lmnn_1_1Constraints_1a7dd6282e6529ec84033bfc72f212d463" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Precalculate</definition>
        <argsstring>(const arma::Row&lt; size_t &gt; &amp;labels)</argsstring>
        <name>Precalculate</name>
        <param>
          <type>const arma::Row&lt; size_t &gt; &amp;</type>
          <declname>labels</declname>
        </param>
        <briefdescription>
<para>Precalculate the unique labels, and indices of similar and different datapoints on the basis of labels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1lmnn_1_1Constraints_1a9f87458121550a2ba1cd680e4ebe6232" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ReorderResults</definition>
        <argsstring>(const arma::mat &amp;distances, arma::Mat&lt; size_t &gt; &amp;neighbors, const arma::vec &amp;norms)</argsstring>
        <name>ReorderResults</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>distances</declname>
        </param>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>neighbors</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>norms</declname>
        </param>
        <briefdescription>
<para>Re-order neighbors on the basis of increasing norm in case of ties among distances. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" line="220" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface for generating distance based constraints on a given dataset, provided corresponding true labels and a quantity parameter (k) are specified. </para>    </briefdescription>
    <detaileddescription>
<para>Class provides <ref refid="classmlpack_1_1lmnn_1_1Constraints_1aaae5fe77efd8a79d315f0979afe789dd" kindref="member">TargetNeighbors()</ref> (Used for calculating target neighbors of each data point), <ref refid="classmlpack_1_1lmnn_1_1Constraints_1abfcabe22bfb83c6bb991cc2b388936e6" kindref="member">Impostors()</ref> (used for calculating impostors of each data point) and <ref refid="classmlpack_1_1lmnn_1_1Constraints_1ad333e36741acf647d22926dc5bd80522" kindref="member">Triplets()</ref> (Generates sets of {dataset, target neighbors, impostors} tripltets.) </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" line="32" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp" bodystart="31" bodyend="223"/>
    <listofallmembers>
      <member refid="classmlpack_1_1lmnn_1_1Constraints_1adac15935bbabb85cd3485c18808ba141" prot="public" virt="non-virtual"><scope>mlpack::lmnn::Constraints</scope><name>Constraints</name></member>
      <member refid="classmlpack_1_1lmnn_1_1Constraints_1abfcabe22bfb83c6bb991cc2b388936e6" prot="public" virt="non-virtual"><scope>mlpack::lmnn::Constraints</scope><name>Impostors</name></member>
      <member refid="classmlpack_1_1lmnn_1_1Constraints_1a10979b62f55833b0167713eea90fb7aa" prot="public" virt="non-virtual"><scope>mlpack::lmnn::Constraints</scope><name>Impostors</name></member>
      <member refid="classmlpack_1_1lmnn_1_1Constraints_1a91e83b8342dc413edbf0bb84b3626c1a" prot="public" virt="non-virtual"><scope>mlpack::lmnn::Constraints</scope><name>Impostors</name></member>
      <member refid="classmlpack_1_1lmnn_1_1Constraints_1aa0e4d7d906ba2d35ae73addd2f16fc58" prot="public" virt="non-virtual"><scope>mlpack::lmnn::Constraints</scope><name>Impostors</name></member>
      <member refid="classmlpack_1_1lmnn_1_1Constraints_1a3ed52fc4ae78ae736b87d011e4b4539e" prot="public" virt="non-virtual"><scope>mlpack::lmnn::Constraints</scope><name>Impostors</name></member>
      <member refid="classmlpack_1_1lmnn_1_1Constraints_1a801cc95c3e8b9e58b41df15162e29de6" prot="private" virt="non-virtual"><scope>mlpack::lmnn::Constraints</scope><name>indexDiff</name></member>
      <member refid="classmlpack_1_1lmnn_1_1Constraints_1af5dac9753f2e356ced330773addce3ae" prot="private" virt="non-virtual"><scope>mlpack::lmnn::Constraints</scope><name>indexSame</name></member>
      <member refid="classmlpack_1_1lmnn_1_1Constraints_1a9389e4770ba454a2e14f870491495cb2" prot="private" virt="non-virtual"><scope>mlpack::lmnn::Constraints</scope><name>k</name></member>
      <member refid="classmlpack_1_1lmnn_1_1Constraints_1ab749ea30c4c3d750ef3a619f32dc3e75" prot="public" virt="non-virtual"><scope>mlpack::lmnn::Constraints</scope><name>K</name></member>
      <member refid="classmlpack_1_1lmnn_1_1Constraints_1af80ea69c69c6463691509f509f3bff05" prot="public" virt="non-virtual"><scope>mlpack::lmnn::Constraints</scope><name>K</name></member>
      <member refid="classmlpack_1_1lmnn_1_1Constraints_1aa08fb5680ff446140b3272f720a96fda" prot="public" virt="non-virtual"><scope>mlpack::lmnn::Constraints</scope><name>KNN</name></member>
      <member refid="classmlpack_1_1lmnn_1_1Constraints_1a7dd6282e6529ec84033bfc72f212d463" prot="private" virt="non-virtual"><scope>mlpack::lmnn::Constraints</scope><name>Precalculate</name></member>
      <member refid="classmlpack_1_1lmnn_1_1Constraints_1a3ea0ad35696fadcedfdd10a0ec802007" prot="private" virt="non-virtual"><scope>mlpack::lmnn::Constraints</scope><name>precalculated</name></member>
      <member refid="classmlpack_1_1lmnn_1_1Constraints_1a790fcea11094af39bfaf56648b567bb3" prot="public" virt="non-virtual"><scope>mlpack::lmnn::Constraints</scope><name>PreCalulated</name></member>
      <member refid="classmlpack_1_1lmnn_1_1Constraints_1ab742fe13e365d0697626650901699a03" prot="public" virt="non-virtual"><scope>mlpack::lmnn::Constraints</scope><name>PreCalulated</name></member>
      <member refid="classmlpack_1_1lmnn_1_1Constraints_1a9f87458121550a2ba1cd680e4ebe6232" prot="private" virt="non-virtual"><scope>mlpack::lmnn::Constraints</scope><name>ReorderResults</name></member>
      <member refid="classmlpack_1_1lmnn_1_1Constraints_1aaae5fe77efd8a79d315f0979afe789dd" prot="public" virt="non-virtual"><scope>mlpack::lmnn::Constraints</scope><name>TargetNeighbors</name></member>
      <member refid="classmlpack_1_1lmnn_1_1Constraints_1a3ca672253666af68bdc44a76077dd233" prot="public" virt="non-virtual"><scope>mlpack::lmnn::Constraints</scope><name>TargetNeighbors</name></member>
      <member refid="classmlpack_1_1lmnn_1_1Constraints_1ad333e36741acf647d22926dc5bd80522" prot="public" virt="non-virtual"><scope>mlpack::lmnn::Constraints</scope><name>Triplets</name></member>
      <member refid="classmlpack_1_1lmnn_1_1Constraints_1a2292934aba4532c5282dbd14545e13e0" prot="private" virt="non-virtual"><scope>mlpack::lmnn::Constraints</scope><name>uniqueLabels</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
