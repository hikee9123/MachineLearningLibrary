<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="kernel__pca_2kernel__rules_2nystroem__method_8hpp" kind="file" language="C++">
    <compoundname>nystroem_method.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="kmeans__selection_8hpp" local="no">mlpack/methods/nystroem_method/kmeans_selection.hpp</includes>
    <includes refid="nystroem__method_2nystroem__method_8hpp" local="no">mlpack/methods/nystroem_method/nystroem_method.hpp</includes>
    <incdepgraph>
      <node id="51729">
        <label>list</label>
      </node>
      <node id="51787">
        <label>breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="51779">
        <label>binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51776" relation="include">
        </childnode>
        <childnode refid="51780" relation="include">
        </childnode>
      </node>
      <node id="51789">
        <label>binary_space_tree/traits.hpp</label>
        <link refid="binary__space__tree_2traits_8hpp"/>
        <childnode refid="51790" relation="include">
        </childnode>
        <childnode refid="51754" relation="include">
        </childnode>
      </node>
      <node id="51726">
        <label>atomic</label>
      </node>
      <node id="51716">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="51692">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="51728">
        <label>iomanip</label>
      </node>
      <node id="51786">
        <label>queue</label>
      </node>
      <node id="51751">
        <label>bound_traits.hpp</label>
        <link refid="bound__traits_8hpp"/>
      </node>
      <node id="51764">
        <label>binary_space_tree/mean_split.hpp</label>
        <link refid="mean__split_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51762" relation="include">
        </childnode>
        <childnode refid="51765" relation="include">
        </childnode>
      </node>
      <node id="51739">
        <label>lmetric_impl.hpp</label>
      </node>
      <node id="51701">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="51702" relation="include">
        </childnode>
        <childnode refid="51704" relation="include">
        </childnode>
      </node>
      <node id="51794">
        <label>nystroem_method_impl.hpp</label>
      </node>
      <node id="51684">
        <label>cstdint</label>
      </node>
      <node id="51693">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="51700">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="51788">
        <label>binary_space_tree/breadth_first_dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="51742">
        <label>mlpack/mlpack_export.hpp</label>
      </node>
      <node id="51765">
        <label>mean_split_impl.hpp</label>
      </node>
      <node id="51723">
        <label>arma_config.hpp</label>
      </node>
      <node id="51756">
        <label>hollow_ball_bound.hpp</label>
        <link refid="hollow__ball__bound_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51738" relation="include">
        </childnode>
        <childnode refid="51751" relation="include">
        </childnode>
        <childnode refid="51757" relation="include">
        </childnode>
      </node>
      <node id="51777">
        <label>../statistic.hpp</label>
        <link refid="statistic_8hpp"/>
      </node>
      <node id="51772">
        <label>lin_alg_impl.hpp</label>
      </node>
      <node id="51713">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="51680">
        <label>cmath</label>
      </node>
      <node id="51749">
        <label>bounds.hpp</label>
        <link refid="bounds_8hpp"/>
        <childnode refid="51750" relation="include">
        </childnode>
        <childnode refid="51738" relation="include">
        </childnode>
        <childnode refid="51751" relation="include">
        </childnode>
        <childnode refid="51752" relation="include">
        </childnode>
        <childnode refid="51754" relation="include">
        </childnode>
        <childnode refid="51756" relation="include">
        </childnode>
        <childnode refid="51758" relation="include">
        </childnode>
      </node>
      <node id="51699">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="51688">
        <label>stdexcept</label>
      </node>
      <node id="51782">
        <label>binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51776" relation="include">
        </childnode>
        <childnode refid="51783" relation="include">
        </childnode>
      </node>
      <node id="51708">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="51693" relation="include">
        </childnode>
        <childnode refid="51695" relation="include">
        </childnode>
        <childnode refid="51696" relation="include">
        </childnode>
        <childnode refid="51694" relation="include">
        </childnode>
      </node>
      <node id="51747">
        <label>naive_kmeans_impl.hpp</label>
      </node>
      <node id="51750">
        <label>mlpack/core/math/range.hpp</label>
      </node>
      <node id="51732">
        <label>string</label>
      </node>
      <node id="51768">
        <label>binary_space_tree/rp_tree_max_split.hpp</label>
        <link refid="rp__tree__max__split_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51762" relation="include">
        </childnode>
        <childnode refid="51769" relation="include">
        </childnode>
      </node>
      <node id="51763">
        <label>midpoint_split_impl.hpp</label>
      </node>
      <node id="51720">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="51721" relation="include">
        </childnode>
        <childnode refid="51687" relation="include">
        </childnode>
      </node>
      <node id="51730">
        <label>map</label>
      </node>
      <node id="51783">
        <label>dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="51771">
        <label>mlpack/core/math/lin_alg.hpp</label>
        <link refid="lin__alg_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51772" relation="include">
        </childnode>
      </node>
      <node id="51745">
        <label>max_variance_new_cluster_impl.hpp</label>
      </node>
      <node id="51682">
        <label>cfloat</label>
      </node>
      <node id="51712">
        <label>boost/variant.hpp</label>
      </node>
      <node id="51734">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="51696">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="51719">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="51720" relation="include">
        </childnode>
        <childnode refid="51696" relation="include">
        </childnode>
        <childnode refid="51703" relation="include">
        </childnode>
        <childnode refid="51721" relation="include">
        </childnode>
      </node>
      <node id="51709">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="51707">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="51693" relation="include">
        </childnode>
        <childnode refid="51695" relation="include">
        </childnode>
        <childnode refid="51696" relation="include">
        </childnode>
        <childnode refid="51694" relation="include">
        </childnode>
      </node>
      <node id="51710">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="51693" relation="include">
        </childnode>
        <childnode refid="51695" relation="include">
        </childnode>
        <childnode refid="51696" relation="include">
        </childnode>
        <childnode refid="51694" relation="include">
        </childnode>
      </node>
      <node id="51778">
        <label>binary_space_tree_impl.hpp</label>
      </node>
      <node id="51698">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="51718">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="51694" relation="include">
        </childnode>
        <childnode refid="51695" relation="include">
        </childnode>
        <childnode refid="51696" relation="include">
        </childnode>
        <childnode refid="51706" relation="include">
        </childnode>
        <childnode refid="51715" relation="include">
        </childnode>
      </node>
      <node id="51722">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="51723" relation="include">
        </childnode>
      </node>
      <node id="51784">
        <label>binary_space_tree/dual_tree_traverser_impl.hpp</label>
      </node>
      <node id="51724">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="51679">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="51680" relation="include">
        </childnode>
        <childnode refid="51681" relation="include">
        </childnode>
        <childnode refid="51682" relation="include">
        </childnode>
        <childnode refid="51683" relation="include">
        </childnode>
        <childnode refid="51684" relation="include">
        </childnode>
        <childnode refid="51685" relation="include">
        </childnode>
        <childnode refid="51686" relation="include">
        </childnode>
        <childnode refid="51687" relation="include">
        </childnode>
        <childnode refid="51688" relation="include">
        </childnode>
        <childnode refid="51689" relation="include">
        </childnode>
        <childnode refid="51690" relation="include">
        </childnode>
        <childnode refid="51691" relation="include">
        </childnode>
        <childnode refid="51692" relation="include">
        </childnode>
        <childnode refid="51693" relation="include">
        </childnode>
        <childnode refid="51694" relation="include">
        </childnode>
        <childnode refid="51695" relation="include">
        </childnode>
        <childnode refid="51696" relation="include">
        </childnode>
        <childnode refid="51697" relation="include">
        </childnode>
        <childnode refid="51698" relation="include">
        </childnode>
        <childnode refid="51699" relation="include">
        </childnode>
        <childnode refid="51700" relation="include">
        </childnode>
        <childnode refid="51701" relation="include">
        </childnode>
        <childnode refid="51705" relation="include">
        </childnode>
        <childnode refid="51706" relation="include">
        </childnode>
        <childnode refid="51707" relation="include">
        </childnode>
        <childnode refid="51708" relation="include">
        </childnode>
        <childnode refid="51709" relation="include">
        </childnode>
        <childnode refid="51710" relation="include">
        </childnode>
        <childnode refid="51711" relation="include">
        </childnode>
        <childnode refid="51717" relation="include">
        </childnode>
        <childnode refid="51718" relation="include">
        </childnode>
        <childnode refid="51715" relation="include">
        </childnode>
        <childnode refid="51719" relation="include">
        </childnode>
        <childnode refid="51722" relation="include">
        </childnode>
        <childnode refid="51724" relation="include">
        </childnode>
        <childnode refid="51725" relation="include">
        </childnode>
        <childnode refid="51734" relation="include">
        </childnode>
        <childnode refid="51735" relation="include">
        </childnode>
      </node>
      <node id="51780">
        <label>single_tree_traverser_impl.hpp</label>
      </node>
      <node id="51761">
        <label>binary_space_tree/midpoint_split.hpp</label>
        <link refid="midpoint__split_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51762" relation="include">
        </childnode>
        <childnode refid="51763" relation="include">
        </childnode>
      </node>
      <node id="51743">
        <label>random</label>
      </node>
      <node id="51755">
        <label>ballbound_impl.hpp</label>
      </node>
      <node id="51793">
        <label>mlpack/methods/nystroem_method/nystroem_method.hpp</label>
        <link refid="nystroem__method_2nystroem__method_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51736" relation="include">
        </childnode>
        <childnode refid="51794" relation="include">
        </childnode>
      </node>
      <node id="51781">
        <label>binary_space_tree/single_tree_traverser_impl.hpp</label>
      </node>
      <node id="51685">
        <label>cstdio</label>
      </node>
      <node id="51759">
        <label>address.hpp</label>
        <link refid="address_8hpp"/>
      </node>
      <node id="51790">
        <label>mlpack/core/tree/tree_traits.hpp</label>
        <link refid="tree__traits_8hpp"/>
      </node>
      <node id="51689">
        <label>tuple</label>
      </node>
      <node id="51694">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="51774">
        <label>binary_space_tree/ub_tree_split.hpp</label>
        <link refid="ub__tree__split_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51759" relation="include">
        </childnode>
        <childnode refid="51775" relation="include">
        </childnode>
      </node>
      <node id="51711">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="51694" relation="include">
        </childnode>
        <childnode refid="51695" relation="include">
        </childnode>
        <childnode refid="51696" relation="include">
        </childnode>
        <childnode refid="51698" relation="include">
        </childnode>
        <childnode refid="51712" relation="include">
        </childnode>
        <childnode refid="51713" relation="include">
        </childnode>
        <childnode refid="51714" relation="include">
        </childnode>
        <childnode refid="51715" relation="include">
        </childnode>
      </node>
      <node id="51776">
        <label>binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51777" relation="include">
        </childnode>
        <childnode refid="51761" relation="include">
        </childnode>
        <childnode refid="51778" relation="include">
        </childnode>
        <childnode refid="51748" relation="include">
        </childnode>
      </node>
      <node id="51752">
        <label>hrectbound.hpp</label>
        <link refid="hrectbound_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51750" relation="include">
        </childnode>
        <childnode refid="51738" relation="include">
        </childnode>
        <childnode refid="51751" relation="include">
        </childnode>
        <childnode refid="51753" relation="include">
        </childnode>
      </node>
      <node id="51773">
        <label>rp_tree_mean_split_impl.hpp</label>
      </node>
      <node id="51744">
        <label>max_variance_new_cluster.hpp</label>
        <link refid="max__variance__new__cluster_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51745" relation="include">
        </childnode>
      </node>
      <node id="51792">
        <label>kmeans_impl.hpp</label>
      </node>
      <node id="51741">
        <label>mlpack/core/math/random.hpp</label>
        <link refid="random_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51742" relation="include">
        </childnode>
        <childnode refid="51743" relation="include">
        </childnode>
      </node>
      <node id="51690">
        <label>utility</label>
      </node>
      <node id="51714">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="51705">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="51748">
        <label>mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51749" relation="include">
        </childnode>
        <childnode refid="51761" relation="include">
        </childnode>
        <childnode refid="51764" relation="include">
        </childnode>
        <childnode refid="51766" relation="include">
        </childnode>
        <childnode refid="51768" relation="include">
        </childnode>
        <childnode refid="51770" relation="include">
        </childnode>
        <childnode refid="51774" relation="include">
        </childnode>
        <childnode refid="51776" relation="include">
        </childnode>
        <childnode refid="51779" relation="include">
        </childnode>
        <childnode refid="51781" relation="include">
        </childnode>
        <childnode refid="51782" relation="include">
        </childnode>
        <childnode refid="51784" relation="include">
        </childnode>
        <childnode refid="51785" relation="include">
        </childnode>
        <childnode refid="51788" relation="include">
        </childnode>
        <childnode refid="51789" relation="include">
        </childnode>
        <childnode refid="51791" relation="include">
        </childnode>
      </node>
      <node id="51702">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="51703" relation="include">
        </childnode>
      </node>
      <node id="51725">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="51726" relation="include">
        </childnode>
        <childnode refid="51727" relation="include">
        </childnode>
        <childnode refid="51728" relation="include">
        </childnode>
        <childnode refid="51729" relation="include">
        </childnode>
        <childnode refid="51730" relation="include">
        </childnode>
        <childnode refid="51731" relation="include">
        </childnode>
        <childnode refid="51732" relation="include">
        </childnode>
        <childnode refid="51733" relation="include">
        </childnode>
      </node>
      <node id="51703">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="51717">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="51715" relation="include">
        </childnode>
        <childnode refid="51711" relation="include">
        </childnode>
        <childnode refid="51718" relation="include">
        </childnode>
      </node>
      <node id="51686">
        <label>cstdlib</label>
      </node>
      <node id="51681">
        <label>cctype</label>
      </node>
      <node id="51704">
        <label>unordered_map</label>
      </node>
      <node id="51737">
        <label>mlpack/methods/kmeans/kmeans.hpp</label>
        <link refid="kmeans_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51738" relation="include">
        </childnode>
        <childnode refid="51740" relation="include">
        </childnode>
        <childnode refid="51744" relation="include">
        </childnode>
        <childnode refid="51746" relation="include">
        </childnode>
        <childnode refid="51748" relation="include">
        </childnode>
        <childnode refid="51792" relation="include">
        </childnode>
      </node>
      <node id="51740">
        <label>sample_initialization.hpp</label>
        <link refid="sample__initialization_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51741" relation="include">
        </childnode>
      </node>
      <node id="51683">
        <label>climits</label>
      </node>
      <node id="51731">
        <label>mutex</label>
      </node>
      <node id="51727">
        <label>chrono</label>
      </node>
      <node id="51753">
        <label>hrectbound_impl.hpp</label>
      </node>
      <node id="51736">
        <label>mlpack/methods/nystroem_method/kmeans_selection.hpp</label>
        <link refid="kmeans__selection_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51737" relation="include">
        </childnode>
      </node>
      <node id="51735">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="51770">
        <label>binary_space_tree/rp_tree_mean_split.hpp</label>
        <link refid="rp__tree__mean__split_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51768" relation="include">
        </childnode>
        <childnode refid="51762" relation="include">
        </childnode>
        <childnode refid="51771" relation="include">
        </childnode>
        <childnode refid="51773" relation="include">
        </childnode>
      </node>
      <node id="51767">
        <label>vantage_point_split_impl.hpp</label>
      </node>
      <node id="51733">
        <label>thread</label>
      </node>
      <node id="51754">
        <label>ballbound.hpp</label>
        <link refid="ballbound_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51738" relation="include">
        </childnode>
        <childnode refid="51751" relation="include">
        </childnode>
        <childnode refid="51755" relation="include">
        </childnode>
      </node>
      <node id="51769">
        <label>rp_tree_max_split_impl.hpp</label>
      </node>
      <node id="51762">
        <label>mlpack/core/tree/perform_split.hpp</label>
        <link refid="perform__split_8hpp"/>
      </node>
      <node id="51746">
        <label>naive_kmeans.hpp</label>
        <link refid="naive__kmeans_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51747" relation="include">
        </childnode>
      </node>
      <node id="51678">
        <label>/home/aakash/mlpack/src/mlpack/methods/kernel_pca/kernel_rules/nystroem_method.hpp</label>
        <link refid="kernel__pca_2kernel__rules_2nystroem__method_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51736" relation="include">
        </childnode>
        <childnode refid="51793" relation="include">
        </childnode>
      </node>
      <node id="51721">
        <label>type_traits</label>
      </node>
      <node id="51785">
        <label>binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51786" relation="include">
        </childnode>
        <childnode refid="51748" relation="include">
        </childnode>
        <childnode refid="51787" relation="include">
        </childnode>
      </node>
      <node id="51697">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="51791">
        <label>binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="51748" relation="include">
        </childnode>
      </node>
      <node id="51691">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="51715">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="51693" relation="include">
        </childnode>
        <childnode refid="51694" relation="include">
        </childnode>
        <childnode refid="51695" relation="include">
        </childnode>
        <childnode refid="51696" relation="include">
        </childnode>
        <childnode refid="51716" relation="include">
        </childnode>
      </node>
      <node id="51757">
        <label>hollow_ball_bound_impl.hpp</label>
      </node>
      <node id="51687">
        <label>cstring</label>
      </node>
      <node id="51706">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="51760">
        <label>cellbound_impl.hpp</label>
      </node>
      <node id="51775">
        <label>ub_tree_split_impl.hpp</label>
      </node>
      <node id="51758">
        <label>cellbound.hpp</label>
        <link refid="cellbound_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51750" relation="include">
        </childnode>
        <childnode refid="51738" relation="include">
        </childnode>
        <childnode refid="51751" relation="include">
        </childnode>
        <childnode refid="51759" relation="include">
        </childnode>
        <childnode refid="51760" relation="include">
        </childnode>
      </node>
      <node id="51695">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
      <node id="51738">
        <label>mlpack/core/metrics/lmetric.hpp</label>
        <link refid="lmetric_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51739" relation="include">
        </childnode>
      </node>
      <node id="51766">
        <label>binary_space_tree/vantage_point_split.hpp</label>
        <link refid="vantage__point__split_8hpp"/>
        <childnode refid="51679" relation="include">
        </childnode>
        <childnode refid="51762" relation="include">
        </childnode>
        <childnode refid="51741" relation="include">
        </childnode>
        <childnode refid="51767" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1kpca_1_1NystroemKernelRule" prot="public">mlpack::kpca::NystroemKernelRule</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1kpca">mlpack::kpca</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Marcus Edel</para></simplesect>
Use the Nystroem method for approximating a kernel matrix.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_KERNEL_PCA_NYSTROEM_METHOD_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_KERNEL_PCA_NYSTROEM_METHOD_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="kmeans__selection_8hpp" kindref="compound">mlpack/methods/nystroem_method/kmeans_selection.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="nystroem__method_2nystroem__method_8hpp" kindref="compound">mlpack/methods/nystroem_method/nystroem_method.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">kpca<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>KernelType,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PointSelectionPolicy<sp/>=<sp/>kernel::KMeansSelection&lt;&gt;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="27" refid="classmlpack_1_1kpca_1_1NystroemKernelRule" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1kpca_1_1NystroemKernelRule" kindref="compound">NystroemKernelRule</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40" refid="classmlpack_1_1kpca_1_1NystroemKernelRule_1a9043568ae7d441d997df28a9963c2c39" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1kpca_1_1NystroemKernelRule_1a9043568ae7d441d997df28a9963c2c39" kindref="member">ApplyKernelMatrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>transformedData,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>eigval,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>eigvec,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rank,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KernelType<sp/>kernel<sp/>=<sp/>KernelType())</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::mat<sp/>G,<sp/>v;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1kernel_1_1NystroemMethod" kindref="compound">kernel::NystroemMethod&lt;KernelType, PointSelectionPolicy&gt;</ref><sp/>nm(data,<sp/>kernel,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>nm.<ref refid="classmlpack_1_1kernel_1_1NystroemMethod_1a8e61c6b39dcbd91fc23c9e6bce9a65c5" kindref="member">Apply</ref>(G);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>transformedData<sp/>=<sp/>G.t()<sp/>*<sp/>G;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Center<sp/>the<sp/>reconstructed<sp/>approximation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemlpack_1_1math_1af20ca29adeac02601e8f4386bda3588e" kindref="member">math::Center</ref>(transformedData,<sp/>transformedData);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>PCA<sp/>the<sp/>data<sp/>has<sp/>to<sp/>be<sp/>centered,<sp/>even<sp/>if<sp/>the<sp/>data<sp/>is<sp/>centered.<sp/>But</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>not<sp/>guaranteed<sp/>that<sp/>the<sp/>data,<sp/>when<sp/>mapped<sp/>to<sp/>the<sp/>kernel<sp/>space,<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>also<sp/>centered.<sp/>Since<sp/>we<sp/>actually<sp/>never<sp/>work<sp/>in<sp/>the<sp/>feature<sp/>space<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cannot<sp/>center<sp/>the<sp/>data.<sp/>So,<sp/>we<sp/>perform<sp/>a<sp/>&quot;psuedo-centering&quot;<sp/>using<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>kernel<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::colvec<sp/>colMean<sp/>=<sp/>arma::sum(G,<sp/>1)<sp/>/<sp/>G.n_rows;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>G.each_row()<sp/>-=<sp/>arma::sum(G,<sp/>0)<sp/>/<sp/>G.n_rows;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>G.each_col()<sp/>-=<sp/>colMean;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>G<sp/>+=<sp/>arma::sum(colMean)<sp/>/<sp/>G.n_rows;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Eigendecompose<sp/>the<sp/>centered<sp/>kernel<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>transformedData<sp/>=<sp/>arma::symmatu(transformedData);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!arma::eig_sym(eigval,<sp/>eigvec,<sp/>transformedData))</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Log::Fatal<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>construct<sp/>the<sp/>kernel<sp/>matrix.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>the<sp/>eigenvalues<sp/>since<sp/>they<sp/>are<sp/>ordered<sp/>backwards<sp/>(we<sp/>need<sp/>largest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>smallest).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>floor(eigval.n_elem<sp/>/<sp/>2.0);<sp/>++i)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eigval.swap_rows(i,<sp/>(eigval.n_elem<sp/>-<sp/>1)<sp/>-<sp/>i);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flip<sp/>the<sp/>coefficients<sp/>to<sp/>produce<sp/>the<sp/>same<sp/>effect.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>eigvec<sp/>=<sp/>arma::fliplr(eigvec);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>transformedData<sp/>=<sp/>eigvec.t()<sp/>*<sp/>G.t();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal">};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>kpca</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/kernel_pca/kernel_rules/nystroem_method.hpp"/>
  </compounddef>
</doxygen>
