<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pendulum_8hpp" kind="file" language="C++">
    <compoundname>pendulum.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="clamp_8hpp" local="no">mlpack/core/math/clamp.hpp</includes>
    <incdepgraph>
      <node id="57449">
        <label>list</label>
      </node>
      <node id="57446">
        <label>atomic</label>
      </node>
      <node id="57436">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="57412">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="57448">
        <label>iomanip</label>
      </node>
      <node id="57459">
        <label>float.h</label>
      </node>
      <node id="57421">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="57422" relation="include">
        </childnode>
        <childnode refid="57424" relation="include">
        </childnode>
      </node>
      <node id="57404">
        <label>cstdint</label>
      </node>
      <node id="57413">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="57420">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="57457">
        <label>stdlib.h</label>
      </node>
      <node id="57443">
        <label>arma_config.hpp</label>
      </node>
      <node id="57433">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="57400">
        <label>cmath</label>
      </node>
      <node id="57419">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="57408">
        <label>stdexcept</label>
      </node>
      <node id="57428">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="57413" relation="include">
        </childnode>
        <childnode refid="57415" relation="include">
        </childnode>
        <childnode refid="57416" relation="include">
        </childnode>
        <childnode refid="57414" relation="include">
        </childnode>
      </node>
      <node id="57452">
        <label>string</label>
      </node>
      <node id="57440">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="57441" relation="include">
        </childnode>
        <childnode refid="57407" relation="include">
        </childnode>
      </node>
      <node id="57450">
        <label>map</label>
      </node>
      <node id="57402">
        <label>cfloat</label>
      </node>
      <node id="57432">
        <label>boost/variant.hpp</label>
      </node>
      <node id="57454">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="57416">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="57439">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="57440" relation="include">
        </childnode>
        <childnode refid="57416" relation="include">
        </childnode>
        <childnode refid="57423" relation="include">
        </childnode>
        <childnode refid="57441" relation="include">
        </childnode>
      </node>
      <node id="57429">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="57427">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="57413" relation="include">
        </childnode>
        <childnode refid="57415" relation="include">
        </childnode>
        <childnode refid="57416" relation="include">
        </childnode>
        <childnode refid="57414" relation="include">
        </childnode>
      </node>
      <node id="57430">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="57413" relation="include">
        </childnode>
        <childnode refid="57415" relation="include">
        </childnode>
        <childnode refid="57416" relation="include">
        </childnode>
        <childnode refid="57414" relation="include">
        </childnode>
      </node>
      <node id="57418">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="57438">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="57414" relation="include">
        </childnode>
        <childnode refid="57415" relation="include">
        </childnode>
        <childnode refid="57416" relation="include">
        </childnode>
        <childnode refid="57426" relation="include">
        </childnode>
        <childnode refid="57435" relation="include">
        </childnode>
      </node>
      <node id="57442">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="57443" relation="include">
        </childnode>
      </node>
      <node id="57444">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="57399">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="57400" relation="include">
        </childnode>
        <childnode refid="57401" relation="include">
        </childnode>
        <childnode refid="57402" relation="include">
        </childnode>
        <childnode refid="57403" relation="include">
        </childnode>
        <childnode refid="57404" relation="include">
        </childnode>
        <childnode refid="57405" relation="include">
        </childnode>
        <childnode refid="57406" relation="include">
        </childnode>
        <childnode refid="57407" relation="include">
        </childnode>
        <childnode refid="57408" relation="include">
        </childnode>
        <childnode refid="57409" relation="include">
        </childnode>
        <childnode refid="57410" relation="include">
        </childnode>
        <childnode refid="57411" relation="include">
        </childnode>
        <childnode refid="57412" relation="include">
        </childnode>
        <childnode refid="57413" relation="include">
        </childnode>
        <childnode refid="57414" relation="include">
        </childnode>
        <childnode refid="57415" relation="include">
        </childnode>
        <childnode refid="57416" relation="include">
        </childnode>
        <childnode refid="57417" relation="include">
        </childnode>
        <childnode refid="57418" relation="include">
        </childnode>
        <childnode refid="57419" relation="include">
        </childnode>
        <childnode refid="57420" relation="include">
        </childnode>
        <childnode refid="57421" relation="include">
        </childnode>
        <childnode refid="57425" relation="include">
        </childnode>
        <childnode refid="57426" relation="include">
        </childnode>
        <childnode refid="57427" relation="include">
        </childnode>
        <childnode refid="57428" relation="include">
        </childnode>
        <childnode refid="57429" relation="include">
        </childnode>
        <childnode refid="57430" relation="include">
        </childnode>
        <childnode refid="57431" relation="include">
        </childnode>
        <childnode refid="57437" relation="include">
        </childnode>
        <childnode refid="57438" relation="include">
        </childnode>
        <childnode refid="57435" relation="include">
        </childnode>
        <childnode refid="57439" relation="include">
        </childnode>
        <childnode refid="57442" relation="include">
        </childnode>
        <childnode refid="57444" relation="include">
        </childnode>
        <childnode refid="57445" relation="include">
        </childnode>
        <childnode refid="57454" relation="include">
        </childnode>
        <childnode refid="57455" relation="include">
        </childnode>
      </node>
      <node id="57405">
        <label>cstdio</label>
      </node>
      <node id="57409">
        <label>tuple</label>
      </node>
      <node id="57414">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="57431">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="57414" relation="include">
        </childnode>
        <childnode refid="57415" relation="include">
        </childnode>
        <childnode refid="57416" relation="include">
        </childnode>
        <childnode refid="57418" relation="include">
        </childnode>
        <childnode refid="57432" relation="include">
        </childnode>
        <childnode refid="57433" relation="include">
        </childnode>
        <childnode refid="57434" relation="include">
        </childnode>
        <childnode refid="57435" relation="include">
        </childnode>
      </node>
      <node id="57456">
        <label>mlpack/core/math/clamp.hpp</label>
        <link refid="clamp_8hpp"/>
        <childnode refid="57457" relation="include">
        </childnode>
        <childnode refid="57458" relation="include">
        </childnode>
        <childnode refid="57459" relation="include">
        </childnode>
      </node>
      <node id="57410">
        <label>utility</label>
      </node>
      <node id="57434">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="57425">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="57422">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="57423" relation="include">
        </childnode>
      </node>
      <node id="57445">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="57446" relation="include">
        </childnode>
        <childnode refid="57447" relation="include">
        </childnode>
        <childnode refid="57448" relation="include">
        </childnode>
        <childnode refid="57449" relation="include">
        </childnode>
        <childnode refid="57450" relation="include">
        </childnode>
        <childnode refid="57451" relation="include">
        </childnode>
        <childnode refid="57452" relation="include">
        </childnode>
        <childnode refid="57453" relation="include">
        </childnode>
      </node>
      <node id="57423">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="57437">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="57435" relation="include">
        </childnode>
        <childnode refid="57431" relation="include">
        </childnode>
        <childnode refid="57438" relation="include">
        </childnode>
      </node>
      <node id="57458">
        <label>math.h</label>
      </node>
      <node id="57406">
        <label>cstdlib</label>
      </node>
      <node id="57401">
        <label>cctype</label>
      </node>
      <node id="57398">
        <label>/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/environment/pendulum.hpp</label>
        <link refid="pendulum_8hpp"/>
        <childnode refid="57399" relation="include">
        </childnode>
        <childnode refid="57456" relation="include">
        </childnode>
      </node>
      <node id="57424">
        <label>unordered_map</label>
      </node>
      <node id="57403">
        <label>climits</label>
      </node>
      <node id="57451">
        <label>mutex</label>
      </node>
      <node id="57447">
        <label>chrono</label>
      </node>
      <node id="57455">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="57453">
        <label>thread</label>
      </node>
      <node id="57441">
        <label>type_traits</label>
      </node>
      <node id="57417">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="57411">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="57435">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="57413" relation="include">
        </childnode>
        <childnode refid="57414" relation="include">
        </childnode>
        <childnode refid="57415" relation="include">
        </childnode>
        <childnode refid="57416" relation="include">
        </childnode>
        <childnode refid="57436" relation="include">
        </childnode>
      </node>
      <node id="57407">
        <label>cstring</label>
      </node>
      <node id="57426">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="57415">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1rl_1_1Pendulum" prot="public">mlpack::rl::Pendulum</innerclass>
    <innerclass refid="classmlpack_1_1rl_1_1Pendulum_1_1Action" prot="public">mlpack::rl::Pendulum::Action</innerclass>
    <innerclass refid="classmlpack_1_1rl_1_1Pendulum_1_1State" prot="public">mlpack::rl::Pendulum::State</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1rl">mlpack::rl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Shashank Shekhar</para></simplesect>
This file is an implementation of Pendulum task: <ulink url="https://gym.openai.com/envs/Pendulum-v0/">https://gym.openai.com/envs/Pendulum-v0/</ulink></para><para>TODO: provide an option to use dynamics directly from OpenAI gym.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="16"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_RL_ENVIRONMENT_PENDULUM_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_RL_ENVIRONMENT_PENDULUM_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="clamp_8hpp" kindref="compound">mlpack/core/math/clamp.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">rl<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classmlpack_1_1rl_1_1Pendulum" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1rl_1_1Pendulum" kindref="compound">Pendulum</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38" refid="classmlpack_1_1rl_1_1Pendulum_1_1State" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State" kindref="compound">State</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44" refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1a790355057d12e9c1ce7643551c16fecd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1a790355057d12e9c1ce7643551c16fecd" kindref="member">State</ref>()<sp/>:<sp/>theta(0),<sp/>data(<ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1ae813298f34ef9d793885fc04b54dff99" kindref="member">dimension</ref>,<sp/>arma::fill::zeros)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do<sp/>here.<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1a8bc7967f6d91a3c94f9b3f502297a926" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1a8bc7967f6d91a3c94f9b3f502297a926" kindref="member">State</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::colvec&amp;<sp/>data):<sp/>theta(0),<sp/>data(data)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do<sp/>here.<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1ad6a50c7b5fced2e931d9a4b4ff989ed6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::colvec&amp;<sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1ad6a50c7b5fced2e931d9a4b4ff989ed6" kindref="member">Data</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;<sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1a4da9bf93a42d55302ddb96a6a7442f4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1a4da9bf93a42d55302ddb96a6a7442f4c" kindref="member">Theta</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>theta;<sp/>}</highlight></codeline>
<codeline lineno="62" refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1a02f48717eb22c8e32a49ed6e8cc134af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1a02f48717eb22c8e32a49ed6e8cc134af" kindref="member">Theta</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>theta;<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1a7e1965fe334ebc9d5a4f187cc7e4e740" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1a7e1965fe334ebc9d5a4f187cc7e4e740" kindref="member">AngularVelocity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data[2];<sp/>}</highlight></codeline>
<codeline lineno="67" refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1a4f26946cef1f578ff752ef8a0bac643c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1a4f26946cef1f578ff752ef8a0bac643c" kindref="member">AngularVelocity</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data[2];<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1a25cd12b845aeba2a268289c3baaa2a33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::colvec&amp;<sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1a25cd12b845aeba2a268289c3baaa2a33" kindref="member">Encode</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;<sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1ae8a0af10dafb9e237b9137de5404085f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1ae8a0af10dafb9e237b9137de5404085f" kindref="member">SetState</ref>()</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>std::sin(theta);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>std::cos(theta);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1ae813298f34ef9d793885fc04b54dff99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1ae813298f34ef9d793885fc04b54dff99" kindref="member">dimension</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::colvec<sp/>data;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classmlpack_1_1rl_1_1Pendulum_1_1Action" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1rl_1_1Pendulum_1_1Action" kindref="compound">Action</ref></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="101" refid="classmlpack_1_1rl_1_1Pendulum_1_1Action_1a9e72d404d52a0c6d6edefac30f76e02d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1_1Action_1a9e72d404d52a0c6d6edefac30f76e02d" kindref="member">Action</ref>()<sp/>:<sp/>action(1)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do<sp/>here<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="103" refid="classmlpack_1_1rl_1_1Pendulum_1_1Action_1afb5d8e230f784cdcdbd42f358f0a054e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1_1Action_1afb5d8e230f784cdcdbd42f358f0a054e" kindref="member">action</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Storing<sp/>degree<sp/>of<sp/>freedom.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="classmlpack_1_1rl_1_1Pendulum_1_1Action_1a685609860d73ccd0d45ada287ab9ab5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classmlpack_1_1rl_1_1Pendulum_1a5e9ab6406d8643978821196e620e7738" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1a5e9ab6406d8643978821196e620e7738" kindref="member">Pendulum</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxSteps<sp/>=<sp/>200,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxAngularVelocity<sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxTorque<sp/>=<sp/>2.0,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt<sp/>=<sp/>0.05,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>doneReward<sp/>=<sp/>0.0)<sp/>:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maxSteps(maxSteps),</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maxAngularVelocity(maxAngularVelocity),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maxTorque(maxTorque),</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dt(dt),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>doneReward(doneReward),</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stepsPerformed(0)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do<sp/>here<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classmlpack_1_1rl_1_1Pendulum_1a311ac19edc537dee94f37b7cce93d908" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1a311ac19edc537dee94f37b7cce93d908" kindref="member">Sample</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State" kindref="compound">State</ref>&amp;<sp/>state,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1_1Action" kindref="compound">Action</ref>&amp;<sp/>action,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State" kindref="compound">State</ref>&amp;<sp/>nextState)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>number<sp/>of<sp/>steps<sp/>performed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>stepsPerformed++;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>current<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta<sp/>=<sp/>state.<ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1a4da9bf93a42d55302ddb96a6a7442f4c" kindref="member">Theta</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angularVelocity<sp/>=<sp/>state.<ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1a7e1965fe334ebc9d5a4f187cc7e4e740" kindref="member">AngularVelocity</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>constants<sp/>which<sp/>specify<sp/>our<sp/>pendulum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gravity<sp/>=<sp/>10.0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>action<sp/>and<sp/>clip<sp/>the<sp/>values<sp/>between<sp/>max<sp/>and<sp/>min<sp/>limits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>torque<sp/>=<sp/><ref refid="namespacemlpack_1_1math_1a0fa7f378ef122a2fc2b82009b436cdeb" kindref="member">math::ClampRange</ref>(action.<ref refid="classmlpack_1_1rl_1_1Pendulum_1_1Action_1afb5d8e230f784cdcdbd42f358f0a054e" kindref="member">action</ref>[0],<sp/>-maxTorque,<sp/>maxTorque);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>costs<sp/>of<sp/>taking<sp/>this<sp/>action<sp/>in<sp/>the<sp/>current<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>costs<sp/>=<sp/>std::pow(<ref refid="classmlpack_1_1rl_1_1Pendulum_1ac2a3e1383ed5fed53067d76039890fa9" kindref="member">AngleNormalize</ref>(theta),<sp/>2)<sp/>+<sp/>0.1<sp/>*</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pow(angularVelocity,<sp/>2)<sp/>+<sp/>0.001<sp/>*<sp/>std::pow(torque,<sp/>2);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>new<sp/>state<sp/>values<sp/>and<sp/>assign<sp/>to<sp/>the<sp/>next<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newAngularVelocity<sp/>=<sp/>angularVelocity<sp/>+<sp/>(-3.0<sp/>*<sp/>gravity<sp/>/<sp/>(2<sp/>*</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length)<sp/>*<sp/>std::sin(theta<sp/>+<sp/><ref refid="prereqs_8hpp_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>)<sp/>+<sp/>3.0<sp/>/<sp/>(mass<sp/>*<sp/>std::pow(length,<sp/>2))<sp/>*</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>torque)<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>nextState.<ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1a4da9bf93a42d55302ddb96a6a7442f4c" kindref="member">Theta</ref>()<sp/>=<sp/>theta<sp/>+<sp/>newAngularVelocity<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>nextState.<ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1a7e1965fe334ebc9d5a4f187cc7e4e740" kindref="member">AngularVelocity</ref>()<sp/>=<sp/><ref refid="namespacemlpack_1_1math_1a0fa7f378ef122a2fc2b82009b436cdeb" kindref="member">math::ClampRange</ref>(newAngularVelocity,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-maxAngularVelocity,<sp/>maxAngularVelocity);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>nextState.<ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1ae8a0af10dafb9e237b9137de5404085f" kindref="member">SetState</ref>();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>reward<sp/>of<sp/>taking<sp/>the<sp/>action<sp/>in<sp/>current<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>reward<sp/>is<sp/>simply<sp/>the<sp/>negative<sp/>of<sp/>cost<sp/>incurred<sp/>for<sp/>the<sp/>action.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-costs;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="classmlpack_1_1rl_1_1Pendulum_1af2bb860eaefeaa62a40f5cf940793704" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1af2bb860eaefeaa62a40f5cf940793704" kindref="member">Sample</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State" kindref="compound">State</ref>&amp;<sp/>state,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1_1Action" kindref="compound">Action</ref>&amp;<sp/>action)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State" kindref="compound">State</ref><sp/>nextState;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1a311ac19edc537dee94f37b7cce93d908" kindref="member">Sample</ref>(state,<sp/>action,<sp/>nextState);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="classmlpack_1_1rl_1_1Pendulum_1aa9f537249fa0c1e62b38197996ab4c6a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State" kindref="compound">State</ref><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1aa9f537249fa0c1e62b38197996ab4c6a" kindref="member">InitialSample</ref>()</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State" kindref="compound">State</ref><sp/>state;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>state.<ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1a4da9bf93a42d55302ddb96a6a7442f4c" kindref="member">Theta</ref>()<sp/>=<sp/><ref refid="namespacemlpack_1_1math_1a305db122ade561ba1fe874bd51e9797d" kindref="member">math::Random</ref>(-<ref refid="prereqs_8hpp_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>,<sp/><ref refid="prereqs_8hpp_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>state.<ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1a7e1965fe334ebc9d5a4f187cc7e4e740" kindref="member">AngularVelocity</ref>()<sp/>=<sp/><ref refid="namespacemlpack_1_1math_1a305db122ade561ba1fe874bd51e9797d" kindref="member">math::Random</ref>(-1.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>stepsPerformed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>state.<ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State_1ae8a0af10dafb9e237b9137de5404085f" kindref="member">SetState</ref>();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="classmlpack_1_1rl_1_1Pendulum_1ac2a3e1383ed5fed53067d76039890fa9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1ac2a3e1383ed5fed53067d76039890fa9" kindref="member">AngleNormalize</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="213"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scale<sp/>angle<sp/>within<sp/>[-pi,<sp/>pi).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>fmod(theta<sp/>+<sp/><ref refid="prereqs_8hpp_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>,<sp/>2<sp/>*<sp/><ref refid="prereqs_8hpp_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>2<sp/>*<sp/><ref refid="prereqs_8hpp_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>-<sp/><ref refid="prereqs_8hpp_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="classmlpack_1_1rl_1_1Pendulum_1a7061ffc3be37983a46a312973a375c0a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1a7061ffc3be37983a46a312973a375c0a" kindref="member">IsTerminal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1_1State" kindref="compound">State</ref>&amp;<sp/></highlight><highlight class="comment">/*<sp/>state<sp/>*/</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="228"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxSteps<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>stepsPerformed<sp/>&gt;=<sp/>maxSteps)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Log::Info<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Episode<sp/>terminated<sp/>due<sp/>to<sp/>the<sp/>maximum<sp/>number<sp/>of<sp/>steps&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;being<sp/>taken.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="classmlpack_1_1rl_1_1Pendulum_1a5fe06563064ebcee88c593e1673f03d4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1a5fe06563064ebcee88c593e1673f03d4" kindref="member">StepsPerformed</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stepsPerformed;<sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="classmlpack_1_1rl_1_1Pendulum_1ad8fd6d8f7581c82e73556491b79a8907" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1ad8fd6d8f7581c82e73556491b79a8907" kindref="member">MaxSteps</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxSteps;<sp/>}</highlight></codeline>
<codeline lineno="244" refid="classmlpack_1_1rl_1_1Pendulum_1a64c84cebc489c6fdfd7f057e127b0aef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1rl_1_1Pendulum_1a64c84cebc489c6fdfd7f057e127b0aef" kindref="member">MaxSteps</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxSteps;<sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxSteps;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxAngularVelocity;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxTorque;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>doneReward;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stepsPerformed;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">};</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>rl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/reinforcement_learning/environment/pendulum.hpp"/>
  </compounddef>
</doxygen>
