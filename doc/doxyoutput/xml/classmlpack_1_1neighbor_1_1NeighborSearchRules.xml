<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1neighbor_1_1NeighborSearchRules" kind="class" language="C++" prot="public">
    <compoundname>mlpack::neighbor::NeighborSearchRules</compoundname>
    <includes refid="neighbor__search__rules_8hpp" local="no">neighbor_search_rules.hpp</includes>
    <innerclass refid="structmlpack_1_1neighbor_1_1NeighborSearchRules_1_1CandidateCmp" prot="protected">mlpack::neighbor::NeighborSearchRules::CandidateCmp</innerclass>
    <templateparamlist>
      <param>
        <type>typename SortPolicy</type>
      </param>
      <param>
        <type>typename MetricType</type>
      </param>
      <param>
        <type>typename TreeType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1ab5f079db10d0a6813eefeb1115e894cb" prot="public" static="no">
        <type><ref refid="classmlpack_1_1tree_1_1TraversalInfo" kindref="compound">tree::TraversalInfo</ref>&lt; TreeType &gt;</type>
        <definition>typedef tree::TraversalInfo&lt;TreeType&gt; TraversalInfoType</definition>
        <argsstring></argsstring>
        <name>TraversalInfoType</name>
        <briefdescription>
<para>Convenience typedef. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="153" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a25f2752ae2dd3aa1e6b36257252e9c63" prot="protected" static="no">
        <type>std::pair&lt; double, size_t &gt;</type>
        <definition>typedef std::pair&lt;double, size_t&gt; Candidate</definition>
        <argsstring></argsstring>
        <name>Candidate</name>
        <briefdescription>
<para>Candidate represents a possible candidate neighbor (distance, index). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="172" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a971deda91e33f8ac7c017c8caab84593" prot="protected" static="no">
        <type>std::priority_queue&lt; <ref refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a25f2752ae2dd3aa1e6b36257252e9c63" kindref="member">Candidate</ref>, std::vector&lt; <ref refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a25f2752ae2dd3aa1e6b36257252e9c63" kindref="member">Candidate</ref> &gt;, <ref refid="structmlpack_1_1neighbor_1_1NeighborSearchRules_1_1CandidateCmp" kindref="compound">CandidateCmp</ref> &gt;</type>
        <definition>typedef std::priority_queue&lt;Candidate, std::vector&lt;Candidate&gt;, CandidateCmp&gt; CandidateList</definition>
        <argsstring></argsstring>
        <name>CandidateList</name>
        <briefdescription>
<para>Use a priority queue to represent the list of candidate neighbors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="184" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="184" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a06e4c7b3f942c628e2b3584e7ba02cbf" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t baseCases</definition>
        <argsstring></argsstring>
        <name>baseCases</name>
        <briefdescription>
<para>The number of base cases that have been performed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="209" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="209" bodyend="-1"/>
        <referencedby refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a3f4bd5d0aa64ea090796725f7755287d" compoundref="neighbor__search__rules_8hpp" startline="143" endline="143">NeighborSearchRules&lt; SortPolicy, MetricType, TreeType &gt;::BaseCases</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a2fd8d0cb021bd3b0175cff2fd44a4cda" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a971deda91e33f8ac7c017c8caab84593" kindref="member">CandidateList</ref> &gt;</type>
        <definition>std::vector&lt;CandidateList&gt; candidates</definition>
        <argsstring></argsstring>
        <name>candidates</name>
        <briefdescription>
<para>Set of candidate neighbors for each point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="187" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1ac29df3dcbefa1ce189e5990bde994025" prot="protected" static="no" mutable="no">
        <type>const double</type>
        <definition>const double epsilon</definition>
        <argsstring></argsstring>
        <name>epsilon</name>
        <briefdescription>
<para>Relative error to be considered in approximate search. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="199" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1af004d46789d32b9155f2c0eb5b771181" prot="protected" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t k</definition>
        <argsstring></argsstring>
        <name>k</name>
        <briefdescription>
<para>Number of neighbors to search for. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="190" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="190" bodyend="-1"/>
        <referencedby refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a469f61784f9cce8f2574c23823405768" compoundref="neighbor__search__rules_8hpp" startline="162" endline="162">NeighborSearchRules&lt; SortPolicy, MetricType, TreeType &gt;::MinimumBaseCases</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a5210d29f3192b5e01426740502013a0d" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double lastBaseCase</definition>
        <argsstring></argsstring>
        <name>lastBaseCase</name>
        <briefdescription>
<para>The last base case result. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="206" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a89e87b0301224505aa09b8c85738a364" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t lastQueryIndex</definition>
        <argsstring></argsstring>
        <name>lastQueryIndex</name>
        <briefdescription>
<para>The last query point <ref refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1abac50f780bb5e1bc12dd0d16d850cacc" kindref="member">BaseCase()</ref> was called with. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="202" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1ad83397af4d986c7afc78e3d1f31f9276" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t lastReferenceIndex</definition>
        <argsstring></argsstring>
        <name>lastReferenceIndex</name>
        <briefdescription>
<para>The last reference point <ref refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1abac50f780bb5e1bc12dd0d16d850cacc" kindref="member">BaseCase()</ref> was called with. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="204" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1abc0ef94d224e16bddfe3ded53dfb5133" prot="protected" static="no" mutable="no">
        <type>MetricType &amp;</type>
        <definition>MetricType&amp; metric</definition>
        <argsstring></argsstring>
        <name>metric</name>
        <briefdescription>
<para>The instantiated metric. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="193" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a39e4662e24522711a354d019c6d27366" prot="protected" static="no" mutable="no">
        <type>const TreeType::Mat &amp;</type>
        <definition>const TreeType::Mat&amp; querySet</definition>
        <argsstring></argsstring>
        <name>querySet</name>
        <briefdescription>
<para>The query set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="169" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1aebdb2895a33036194826de9631543c7e" prot="protected" static="no" mutable="no">
        <type>const TreeType::Mat &amp;</type>
        <definition>const TreeType::Mat&amp; referenceSet</definition>
        <argsstring></argsstring>
        <name>referenceSet</name>
        <briefdescription>
<para>The reference set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="166" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a500d895c970c9ee5d0c77ff7b8508cfc" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool sameSet</definition>
        <argsstring></argsstring>
        <name>sameSet</name>
        <briefdescription>
<para>Denotes whether or not the reference and query sets are the same. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="196" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1aecc3c9a30f1be1fe8b602374bde73e7b" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t scores</definition>
        <argsstring></argsstring>
        <name>scores</name>
        <briefdescription>
<para>The number of scores that have been performed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="211" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="211" bodyend="-1"/>
        <referencedby refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a4d1e40c0bf406280a237ca1b487e3c62" compoundref="neighbor__search__rules_8hpp" startline="148" endline="148">NeighborSearchRules&lt; SortPolicy, MetricType, TreeType &gt;::Scores</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1aa987143b3965542c77c85c8212abedbe" prot="protected" static="no" mutable="no">
        <type><ref refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1ab5f079db10d0a6813eefeb1115e894cb" kindref="member">TraversalInfoType</ref></type>
        <definition>TraversalInfoType traversalInfo</definition>
        <argsstring></argsstring>
        <name>traversalInfo</name>
        <briefdescription>
<para>Traversal info for the parent combination; this is updated by the traversal before each call to <ref refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a53d373b7aeee359b0e686f823c602b1c" kindref="member">Score()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="215" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="215" bodyend="-1"/>
        <referencedby refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1ab5c6f4ae7c3b71b808403a7b7454f26f" compoundref="neighbor__search__rules_8hpp" startline="156" endline="156">NeighborSearchRules&lt; SortPolicy, MetricType, TreeType &gt;::TraversalInfo</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a7557d10b0de13c95132f2f73697a4e17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeighborSearchRules</definition>
        <argsstring>(const typename TreeType::Mat &amp;referenceSet, const typename TreeType::Mat &amp;querySet, const size_t k, MetricType &amp;metric, const double epsilon=0, const bool sameSet=false)</argsstring>
        <name>NeighborSearchRules</name>
        <param>
          <type>const typename TreeType::Mat &amp;</type>
          <declname>referenceSet</declname>
        </param>
        <param>
          <type>const typename TreeType::Mat &amp;</type>
          <declname>querySet</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>MetricType &amp;</type>
          <declname>metric</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>epsilon</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>sameSet</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Construct the <ref refid="classmlpack_1_1neighbor_1_1NeighborSearchRules" kindref="compound">NeighborSearchRules</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>This is usually done from within the <ref refid="classmlpack_1_1neighbor_1_1NeighborSearch" kindref="compound">NeighborSearch</ref> class at search time.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>referenceSet</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of reference data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>querySet</parametername>
</parameternamelist>
<parameterdescription>
<para>Set of query data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of neighbors to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metric</parametername>
</parameternamelist>
<parameterdescription>
<para>Instantiated metric. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>Relative approximate error. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sameSet</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, the query and reference set are taken to be the same, and a query point will not return itself in the results. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1abac50f780bb5e1bc12dd0d16d850cacc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double BaseCase</definition>
        <argsstring>(const size_t queryIndex, const size_t referenceIndex)</argsstring>
        <name>BaseCase</name>
        <param>
          <type>const size_t</type>
          <declname>queryIndex</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>referenceIndex</declname>
        </param>
        <briefdescription>
<para>Get the distance from the query point to the reference point. </para>        </briefdescription>
        <detaileddescription>
<para>This will update the list of candidates with the new point if appropriate and will track the number of base cases (number of points evaluated).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queryIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of query point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>referenceIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of reference point. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a3f4bd5d0aa64ea090796725f7755287d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t BaseCases</definition>
        <argsstring>() const</argsstring>
        <name>BaseCases</name>
        <briefdescription>
<para>Get the number of base cases that have been performed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="143" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="143" bodyend="143"/>
        <references refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a06e4c7b3f942c628e2b3584e7ba02cbf" compoundref="neighbor__search__rules_8hpp" startline="209">NeighborSearchRules&lt; SortPolicy, MetricType, TreeType &gt;::baseCases</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1ab93e60b3671ebddbe95a890f1e1b2768" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t &amp;</type>
        <definition>size_t&amp; BaseCases</definition>
        <argsstring>()</argsstring>
        <name>BaseCases</name>
        <briefdescription>
<para>Modify the number of base cases that have been performed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="145" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="145" bodyend="145"/>
        <references refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a06e4c7b3f942c628e2b3584e7ba02cbf" compoundref="neighbor__search__rules_8hpp" startline="209">NeighborSearchRules&lt; SortPolicy, MetricType, TreeType &gt;::baseCases</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a2c457831ca0a541db042ec68a235a8d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GetBestChild</definition>
        <argsstring>(const size_t queryIndex, TreeType &amp;referenceNode)</argsstring>
        <name>GetBestChild</name>
        <param>
          <type>const size_t</type>
          <declname>queryIndex</declname>
        </param>
        <param>
          <type>TreeType &amp;</type>
          <declname>referenceNode</declname>
        </param>
        <briefdescription>
<para>Get the child node with the best score. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queryIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of query point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>referenceNode</parametername>
</parameternamelist>
<parameterdescription>
<para>Candidate node to be recursed into. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a9e005f9b8655b905dd040604dd47fac9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GetBestChild</definition>
        <argsstring>(const TreeType &amp;queryNode, TreeType &amp;referenceNode)</argsstring>
        <name>GetBestChild</name>
        <param>
          <type>const TreeType &amp;</type>
          <declname>queryNode</declname>
        </param>
        <param>
          <type>TreeType &amp;</type>
          <declname>referenceNode</declname>
        </param>
        <briefdescription>
<para>Get the child node with the best score. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queryNode</parametername>
</parameternamelist>
<parameterdescription>
<para>Node to be considered. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>referenceNode</parametername>
</parameternamelist>
<parameterdescription>
<para>Candidate node to be recursed into. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1add24e5e55e4b8555dbd941b137a44491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetResults</definition>
        <argsstring>(arma::Mat&lt; size_t &gt; &amp;neighbors, arma::mat &amp;distances)</argsstring>
        <name>GetResults</name>
        <param>
          <type>arma::Mat&lt; size_t &gt; &amp;</type>
          <declname>neighbors</declname>
        </param>
        <param>
          <type>arma::mat &amp;</type>
          <declname>distances</declname>
        </param>
        <briefdescription>
<para>Store the list of candidates for each query point in the given matrices. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>neighbors</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix storing lists of neighbors for each query point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>distances</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix storing distances of neighbors for each query point. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a469f61784f9cce8f2574c23823405768" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t MinimumBaseCases</definition>
        <argsstring>() const</argsstring>
        <name>MinimumBaseCases</name>
        <briefdescription>
<para>Get the minimum number of base cases we need to perform to have acceptable results. </para>        </briefdescription>
        <detaileddescription>
<para>This is only needed in defeatist search mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="162" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="162" bodyend="162"/>
        <references refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1af004d46789d32b9155f2c0eb5b771181" compoundref="neighbor__search__rules_8hpp" startline="190">NeighborSearchRules&lt; SortPolicy, MetricType, TreeType &gt;::k</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1ae0ad46f30e80aadc5bc476d46886540f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Rescore</definition>
        <argsstring>(const size_t queryIndex, TreeType &amp;referenceNode, const double oldScore) const</argsstring>
        <name>Rescore</name>
        <param>
          <type>const size_t</type>
          <declname>queryIndex</declname>
        </param>
        <param>
          <type>TreeType &amp;</type>
          <declname>referenceNode</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>oldScore</declname>
        </param>
        <briefdescription>
<para>Re-evaluate the score for recursion order. </para>        </briefdescription>
        <detaileddescription>
<para>A low score indicates priority for recursion, while DBL_MAX indicates that the node should not be recursed into at all (it should be pruned). This is used when the score has already been calculated, but another recursion may have modified the bounds for pruning. So the old score is checked against the new pruning bound.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queryIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of query point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>referenceNode</parametername>
</parameternamelist>
<parameterdescription>
<para>Candidate node to be recursed into. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldScore</parametername>
</parameternamelist>
<parameterdescription>
<para>Old score produced by <ref refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a53d373b7aeee359b0e686f823c602b1c" kindref="member">Score()</ref> (or <ref refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1ae0ad46f30e80aadc5bc476d46886540f" kindref="member">Rescore()</ref>). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a536e5a7cbce35b9be7443775d32e11f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Rescore</definition>
        <argsstring>(TreeType &amp;queryNode, TreeType &amp;referenceNode, const double oldScore) const</argsstring>
        <name>Rescore</name>
        <param>
          <type>TreeType &amp;</type>
          <declname>queryNode</declname>
        </param>
        <param>
          <type>TreeType &amp;</type>
          <declname>referenceNode</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>oldScore</declname>
        </param>
        <briefdescription>
<para>Re-evaluate the score for recursion order. </para>        </briefdescription>
        <detaileddescription>
<para>A low score indicates priority for recursion, while DBL_MAX indicates that the node should not be recursed into at all (it should be pruned). This is used when the score has already been calculated, but another recursion may have modified the bounds for pruning. So the old score is checked against the new pruning bound.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queryNode</parametername>
</parameternamelist>
<parameterdescription>
<para>Candidate query node to recurse into. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>referenceNode</parametername>
</parameternamelist>
<parameterdescription>
<para>Candidate reference node to recurse into. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldScore</parametername>
</parameternamelist>
<parameterdescription>
<para>Old score produced by Socre() (or <ref refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1ae0ad46f30e80aadc5bc476d46886540f" kindref="member">Rescore()</ref>). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a53d373b7aeee359b0e686f823c602b1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Score</definition>
        <argsstring>(const size_t queryIndex, TreeType &amp;referenceNode)</argsstring>
        <name>Score</name>
        <param>
          <type>const size_t</type>
          <declname>queryIndex</declname>
        </param>
        <param>
          <type>TreeType &amp;</type>
          <declname>referenceNode</declname>
        </param>
        <briefdescription>
<para>Get the score for recursion order. </para>        </briefdescription>
        <detaileddescription>
<para>A low score indicates priority for recursion, while DBL_MAX indicates that the node should not be recursed into at all (it should be pruned).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queryIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of query point. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>referenceNode</parametername>
</parameternamelist>
<parameterdescription>
<para>Candidate node to be recursed into. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a05b142945ef94221b628a75961f48b02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Score</definition>
        <argsstring>(TreeType &amp;queryNode, TreeType &amp;referenceNode)</argsstring>
        <name>Score</name>
        <param>
          <type>TreeType &amp;</type>
          <declname>queryNode</declname>
        </param>
        <param>
          <type>TreeType &amp;</type>
          <declname>referenceNode</declname>
        </param>
        <briefdescription>
<para>Get the score for recursion order. </para>        </briefdescription>
        <detaileddescription>
<para>A low score indicates priority for recursionm while DBL_MAX indicates that the node should not be recursed into at all (it should be pruned).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queryNode</parametername>
</parameternamelist>
<parameterdescription>
<para>Candidate query node to recurse into. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>referenceNode</parametername>
</parameternamelist>
<parameterdescription>
<para>Candidate reference node to recurse into. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a4d1e40c0bf406280a237ca1b487e3c62" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Scores</definition>
        <argsstring>() const</argsstring>
        <name>Scores</name>
        <briefdescription>
<para>Get the number of scores that have been performed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="148" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="148" bodyend="148"/>
        <references refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1aecc3c9a30f1be1fe8b602374bde73e7b" compoundref="neighbor__search__rules_8hpp" startline="211">NeighborSearchRules&lt; SortPolicy, MetricType, TreeType &gt;::scores</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a8c3486626c1d3c0a10cdb27a8faa198f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t &amp;</type>
        <definition>size_t&amp; Scores</definition>
        <argsstring>()</argsstring>
        <name>Scores</name>
        <briefdescription>
<para>Modify the number of scores that have been performed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="150" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="150" bodyend="150"/>
        <references refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1aecc3c9a30f1be1fe8b602374bde73e7b" compoundref="neighbor__search__rules_8hpp" startline="211">NeighborSearchRules&lt; SortPolicy, MetricType, TreeType &gt;::scores</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1ab5c6f4ae7c3b71b808403a7b7454f26f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1ab5f079db10d0a6813eefeb1115e894cb" kindref="member">TraversalInfoType</ref> &amp;</type>
        <definition>const TraversalInfoType&amp; TraversalInfo</definition>
        <argsstring>() const</argsstring>
        <name>TraversalInfo</name>
        <briefdescription>
<para>Get the traversal info. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="156" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="156" bodyend="156"/>
        <references refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1aa987143b3965542c77c85c8212abedbe" compoundref="neighbor__search__rules_8hpp" startline="215">NeighborSearchRules&lt; SortPolicy, MetricType, TreeType &gt;::traversalInfo</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a4027bb90e756a4520d55978459c7f83e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1ab5f079db10d0a6813eefeb1115e894cb" kindref="member">TraversalInfoType</ref> &amp;</type>
        <definition>TraversalInfoType&amp; TraversalInfo</definition>
        <argsstring>()</argsstring>
        <name>TraversalInfo</name>
        <briefdescription>
<para>Modify the traversal info. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="158" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="158" bodyend="158"/>
        <references refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1aa987143b3965542c77c85c8212abedbe" compoundref="neighbor__search__rules_8hpp" startline="215">NeighborSearchRules&lt; SortPolicy, MetricType, TreeType &gt;::traversalInfo</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1aa8ed73a529bc1e6bd8c49c30f7e93462" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double CalculateBound</definition>
        <argsstring>(TreeType &amp;queryNode) const</argsstring>
        <name>CalculateBound</name>
        <param>
          <type>TreeType &amp;</type>
          <declname>queryNode</declname>
        </param>
        <briefdescription>
<para>Recalculate the bound for a given query node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a64b3c9d35e4c5a3932c3b2b390c3ad04" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InsertNeighbor</definition>
        <argsstring>(const size_t queryIndex, const size_t neighbor, const double distance)</argsstring>
        <name>InsertNeighbor</name>
        <param>
          <type>const size_t</type>
          <declname>queryIndex</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>neighbor</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>distance</declname>
        </param>
        <briefdescription>
<para>Helper function to insert a point into the list of candidate points. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queryIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of point whose neighbors we are inserting into. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>neighbor</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of reference point which is being inserted. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>distance</parametername>
</parameternamelist>
<parameterdescription>
<para>Distance from query point to reference point. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="229" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classmlpack_1_1neighbor_1_1NeighborSearchRules" kindref="compound">NeighborSearchRules</ref> class is a template helper class used by <ref refid="classmlpack_1_1neighbor_1_1NeighborSearch" kindref="compound">NeighborSearch</ref> class when performing distance-based neighbor searches. </para>    </briefdescription>
    <detaileddescription>
<para>For each point in the query dataset, it keeps track of the k neighbors in the reference dataset which have the &apos;best&apos; distance according to a given sorting policy.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>SortPolicy</parametername>
</parameternamelist>
<parameterdescription>
<para>The sort policy for distances. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>MetricType</parametername>
</parameternamelist>
<parameterdescription>
<para>The metric to use for computation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TreeType</parametername>
</parameternamelist>
<parameterdescription>
<para>The tree type to use; must adhere to the TreeType API. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" line="36" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search_rules.hpp" bodystart="35" bodyend="232"/>
    <listofallmembers>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1abac50f780bb5e1bc12dd0d16d850cacc" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>BaseCase</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a06e4c7b3f942c628e2b3584e7ba02cbf" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>baseCases</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a3f4bd5d0aa64ea090796725f7755287d" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>BaseCases</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1ab93e60b3671ebddbe95a890f1e1b2768" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>BaseCases</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1aa8ed73a529bc1e6bd8c49c30f7e93462" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>CalculateBound</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a25f2752ae2dd3aa1e6b36257252e9c63" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>Candidate</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a971deda91e33f8ac7c017c8caab84593" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>CandidateList</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a2fd8d0cb021bd3b0175cff2fd44a4cda" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>candidates</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1ac29df3dcbefa1ce189e5990bde994025" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>epsilon</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a2c457831ca0a541db042ec68a235a8d5" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>GetBestChild</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a9e005f9b8655b905dd040604dd47fac9" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>GetBestChild</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1add24e5e55e4b8555dbd941b137a44491" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>GetResults</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a64b3c9d35e4c5a3932c3b2b390c3ad04" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>InsertNeighbor</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1af004d46789d32b9155f2c0eb5b771181" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>k</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a5210d29f3192b5e01426740502013a0d" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>lastBaseCase</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a89e87b0301224505aa09b8c85738a364" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>lastQueryIndex</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1ad83397af4d986c7afc78e3d1f31f9276" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>lastReferenceIndex</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1abc0ef94d224e16bddfe3ded53dfb5133" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>metric</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a469f61784f9cce8f2574c23823405768" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>MinimumBaseCases</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a7557d10b0de13c95132f2f73697a4e17" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>NeighborSearchRules</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a39e4662e24522711a354d019c6d27366" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>querySet</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1aebdb2895a33036194826de9631543c7e" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>referenceSet</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1ae0ad46f30e80aadc5bc476d46886540f" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>Rescore</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a536e5a7cbce35b9be7443775d32e11f5" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>Rescore</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a500d895c970c9ee5d0c77ff7b8508cfc" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>sameSet</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a53d373b7aeee359b0e686f823c602b1c" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>Score</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a05b142945ef94221b628a75961f48b02" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>Score</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1aecc3c9a30f1be1fe8b602374bde73e7b" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>scores</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a4d1e40c0bf406280a237ca1b487e3c62" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>Scores</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a8c3486626c1d3c0a10cdb27a8faa198f" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>Scores</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1ab5c6f4ae7c3b71b808403a7b7454f26f" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>TraversalInfo</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1a4027bb90e756a4520d55978459c7f83e" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>TraversalInfo</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1aa987143b3965542c77c85c8212abedbe" prot="protected" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>traversalInfo</name></member>
      <member refid="classmlpack_1_1neighbor_1_1NeighborSearchRules_1ab5f079db10d0a6813eefeb1115e894cb" prot="public" virt="non-virtual"><scope>mlpack::neighbor::NeighborSearchRules</scope><name>TraversalInfoType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
