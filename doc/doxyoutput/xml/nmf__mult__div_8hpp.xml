<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="nmf__mult__div_8hpp" kind="file" language="C++">
    <compoundname>nmf_mult_div.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <incdepgraph>
      <node id="24242">
        <label>list</label>
      </node>
      <node id="24239">
        <label>atomic</label>
      </node>
      <node id="24229">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="24205">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="24241">
        <label>iomanip</label>
      </node>
      <node id="24214">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="24215" relation="include">
        </childnode>
        <childnode refid="24217" relation="include">
        </childnode>
      </node>
      <node id="24197">
        <label>cstdint</label>
      </node>
      <node id="24206">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="24213">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="24236">
        <label>arma_config.hpp</label>
      </node>
      <node id="24226">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="24193">
        <label>cmath</label>
      </node>
      <node id="24212">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="24201">
        <label>stdexcept</label>
      </node>
      <node id="24221">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="24206" relation="include">
        </childnode>
        <childnode refid="24208" relation="include">
        </childnode>
        <childnode refid="24209" relation="include">
        </childnode>
        <childnode refid="24207" relation="include">
        </childnode>
      </node>
      <node id="24245">
        <label>string</label>
      </node>
      <node id="24191">
        <label>/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/nmf_mult_div.hpp</label>
        <link refid="nmf__mult__div_8hpp"/>
        <childnode refid="24192" relation="include">
        </childnode>
      </node>
      <node id="24233">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="24234" relation="include">
        </childnode>
        <childnode refid="24200" relation="include">
        </childnode>
      </node>
      <node id="24243">
        <label>map</label>
      </node>
      <node id="24195">
        <label>cfloat</label>
      </node>
      <node id="24225">
        <label>boost/variant.hpp</label>
      </node>
      <node id="24247">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="24209">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="24232">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="24233" relation="include">
        </childnode>
        <childnode refid="24209" relation="include">
        </childnode>
        <childnode refid="24216" relation="include">
        </childnode>
        <childnode refid="24234" relation="include">
        </childnode>
      </node>
      <node id="24222">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="24220">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="24206" relation="include">
        </childnode>
        <childnode refid="24208" relation="include">
        </childnode>
        <childnode refid="24209" relation="include">
        </childnode>
        <childnode refid="24207" relation="include">
        </childnode>
      </node>
      <node id="24223">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="24206" relation="include">
        </childnode>
        <childnode refid="24208" relation="include">
        </childnode>
        <childnode refid="24209" relation="include">
        </childnode>
        <childnode refid="24207" relation="include">
        </childnode>
      </node>
      <node id="24211">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="24231">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="24207" relation="include">
        </childnode>
        <childnode refid="24208" relation="include">
        </childnode>
        <childnode refid="24209" relation="include">
        </childnode>
        <childnode refid="24219" relation="include">
        </childnode>
        <childnode refid="24228" relation="include">
        </childnode>
      </node>
      <node id="24235">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="24236" relation="include">
        </childnode>
      </node>
      <node id="24237">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="24192">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="24193" relation="include">
        </childnode>
        <childnode refid="24194" relation="include">
        </childnode>
        <childnode refid="24195" relation="include">
        </childnode>
        <childnode refid="24196" relation="include">
        </childnode>
        <childnode refid="24197" relation="include">
        </childnode>
        <childnode refid="24198" relation="include">
        </childnode>
        <childnode refid="24199" relation="include">
        </childnode>
        <childnode refid="24200" relation="include">
        </childnode>
        <childnode refid="24201" relation="include">
        </childnode>
        <childnode refid="24202" relation="include">
        </childnode>
        <childnode refid="24203" relation="include">
        </childnode>
        <childnode refid="24204" relation="include">
        </childnode>
        <childnode refid="24205" relation="include">
        </childnode>
        <childnode refid="24206" relation="include">
        </childnode>
        <childnode refid="24207" relation="include">
        </childnode>
        <childnode refid="24208" relation="include">
        </childnode>
        <childnode refid="24209" relation="include">
        </childnode>
        <childnode refid="24210" relation="include">
        </childnode>
        <childnode refid="24211" relation="include">
        </childnode>
        <childnode refid="24212" relation="include">
        </childnode>
        <childnode refid="24213" relation="include">
        </childnode>
        <childnode refid="24214" relation="include">
        </childnode>
        <childnode refid="24218" relation="include">
        </childnode>
        <childnode refid="24219" relation="include">
        </childnode>
        <childnode refid="24220" relation="include">
        </childnode>
        <childnode refid="24221" relation="include">
        </childnode>
        <childnode refid="24222" relation="include">
        </childnode>
        <childnode refid="24223" relation="include">
        </childnode>
        <childnode refid="24224" relation="include">
        </childnode>
        <childnode refid="24230" relation="include">
        </childnode>
        <childnode refid="24231" relation="include">
        </childnode>
        <childnode refid="24228" relation="include">
        </childnode>
        <childnode refid="24232" relation="include">
        </childnode>
        <childnode refid="24235" relation="include">
        </childnode>
        <childnode refid="24237" relation="include">
        </childnode>
        <childnode refid="24238" relation="include">
        </childnode>
        <childnode refid="24247" relation="include">
        </childnode>
        <childnode refid="24248" relation="include">
        </childnode>
      </node>
      <node id="24198">
        <label>cstdio</label>
      </node>
      <node id="24202">
        <label>tuple</label>
      </node>
      <node id="24207">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="24224">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="24207" relation="include">
        </childnode>
        <childnode refid="24208" relation="include">
        </childnode>
        <childnode refid="24209" relation="include">
        </childnode>
        <childnode refid="24211" relation="include">
        </childnode>
        <childnode refid="24225" relation="include">
        </childnode>
        <childnode refid="24226" relation="include">
        </childnode>
        <childnode refid="24227" relation="include">
        </childnode>
        <childnode refid="24228" relation="include">
        </childnode>
      </node>
      <node id="24203">
        <label>utility</label>
      </node>
      <node id="24227">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="24218">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="24215">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="24216" relation="include">
        </childnode>
      </node>
      <node id="24238">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="24239" relation="include">
        </childnode>
        <childnode refid="24240" relation="include">
        </childnode>
        <childnode refid="24241" relation="include">
        </childnode>
        <childnode refid="24242" relation="include">
        </childnode>
        <childnode refid="24243" relation="include">
        </childnode>
        <childnode refid="24244" relation="include">
        </childnode>
        <childnode refid="24245" relation="include">
        </childnode>
        <childnode refid="24246" relation="include">
        </childnode>
      </node>
      <node id="24216">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="24230">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="24228" relation="include">
        </childnode>
        <childnode refid="24224" relation="include">
        </childnode>
        <childnode refid="24231" relation="include">
        </childnode>
      </node>
      <node id="24199">
        <label>cstdlib</label>
      </node>
      <node id="24194">
        <label>cctype</label>
      </node>
      <node id="24217">
        <label>unordered_map</label>
      </node>
      <node id="24196">
        <label>climits</label>
      </node>
      <node id="24244">
        <label>mutex</label>
      </node>
      <node id="24240">
        <label>chrono</label>
      </node>
      <node id="24248">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="24246">
        <label>thread</label>
      </node>
      <node id="24234">
        <label>type_traits</label>
      </node>
      <node id="24210">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="24204">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="24228">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="24206" relation="include">
        </childnode>
        <childnode refid="24207" relation="include">
        </childnode>
        <childnode refid="24208" relation="include">
        </childnode>
        <childnode refid="24209" relation="include">
        </childnode>
        <childnode refid="24229" relation="include">
        </childnode>
      </node>
      <node id="24200">
        <label>cstring</label>
      </node>
      <node id="24219">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="24208">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1amf_1_1NMFMultiplicativeDivergenceUpdate" prot="public">mlpack::amf::NMFMultiplicativeDivergenceUpdate</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1amf">mlpack::amf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Mohan Rajendran</para></simplesect>
Update rules for the Non-negative Matrix Factorization.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_LMF_UPDATE_RULES_NMF_MULT_DIV_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_LMF_UPDATE_RULES_NMF_MULT_DIV_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">amf<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classmlpack_1_1amf_1_1NMFMultiplicativeDivergenceUpdate" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1amf_1_1NMFMultiplicativeDivergenceUpdate" kindref="compound">NMFMultiplicativeDivergenceUpdate</ref></highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>constructor<sp/>required<sp/>for<sp/>the<sp/>WUpdateRule<sp/>template.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classmlpack_1_1amf_1_1NMFMultiplicativeDivergenceUpdate_1a18f4f81c6b7c8ab3dba34ec43ba9194e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1amf_1_1NMFMultiplicativeDivergenceUpdate_1a18f4f81c6b7c8ab3dba34ec43ba9194e" kindref="member">NMFMultiplicativeDivergenceUpdate</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="59" refid="classmlpack_1_1amf_1_1NMFMultiplicativeDivergenceUpdate_1aac5af164b10635addd7ff7bb934a4db3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1NMFMultiplicativeDivergenceUpdate_1aac5af164b10635addd7ff7bb934a4db3" kindref="member">Initialize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/></highlight><highlight class="comment">/*<sp/>dataset<sp/>*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>rank<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="80" refid="classmlpack_1_1amf_1_1NMFMultiplicativeDivergenceUpdate_1a79b17bfdd69326a4f9f7d17c698ee6af" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1NMFMultiplicativeDivergenceUpdate_1a79b17bfdd69326a4f9f7d17c698ee6af" kindref="member">WUpdate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>V,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>W,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>H)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>implementation<sp/>left<sp/>in<sp/>the<sp/>header<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::mat<sp/>t1;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::rowvec<sp/>t2;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>W<sp/>*<sp/>H;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>W.n_rows;<sp/>++i)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>W.n_cols;<sp/>++j)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Writing<sp/>this<sp/>as<sp/>a<sp/>single<sp/>expression<sp/>does<sp/>not<sp/>work<sp/>as<sp/>of<sp/>Armadillo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3.920.<sp/><sp/>This<sp/>should<sp/>be<sp/>fixed<sp/>in<sp/>a<sp/>future<sp/>release,<sp/>and<sp/>then<sp/>the<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>below<sp/>can<sp/>be<sp/>fixed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>t2<sp/>=<sp/>H.row(j)<sp/>%<sp/>V.row(i)<sp/>/<sp/>t1.row(i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2.set_size(H.n_cols);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>t2.n_elem;<sp/>++k)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2(k)<sp/>=<sp/>H(j,<sp/>k)<sp/>*<sp/>V(i,<sp/>k)<sp/>/<sp/>t1(i,<sp/>k);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>W(i,<sp/>j)<sp/>=<sp/>W(i,<sp/>j)<sp/>*<sp/>sum(t2)<sp/>/<sp/>sum(H.row(j));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType&gt;</highlight></codeline>
<codeline lineno="124" refid="classmlpack_1_1amf_1_1NMFMultiplicativeDivergenceUpdate_1ad2a433d7e149001f0f44caa8967d20a6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1NMFMultiplicativeDivergenceUpdate_1ad2a433d7e149001f0f44caa8967d20a6" kindref="member">HUpdate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>V,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>W,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>H)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>implementation<sp/>left<sp/>in<sp/>the<sp/>header<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::mat<sp/>t1;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::colvec<sp/>t2;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>W<sp/>*<sp/>H;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>H.n_rows;<sp/>++i)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>H.n_cols;<sp/>++j)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Writing<sp/>this<sp/>as<sp/>a<sp/>single<sp/>expression<sp/>does<sp/>not<sp/>work<sp/>as<sp/>of<sp/>Armadillo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3.920.<sp/><sp/>This<sp/>should<sp/>be<sp/>fixed<sp/>in<sp/>a<sp/>future<sp/>release,<sp/>and<sp/>then<sp/>the<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>below<sp/>can<sp/>be<sp/>fixed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>t2<sp/>=<sp/>W.col(i)<sp/>%<sp/>V.col(j)<sp/>/<sp/>t1.col(j);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2.set_size(W.n_rows);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>t2.n_elem;<sp/>++k)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2(k)<sp/>=<sp/>W(k,<sp/>i)<sp/>*<sp/>V(k,<sp/>j)<sp/>/<sp/>t1(k,<sp/>j);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H(i,<sp/>j)<sp/>=<sp/>H(i,<sp/>j)<sp/>*<sp/>sum(t2)<sp/>/<sp/>sum(W.col(i));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="154" refid="classmlpack_1_1amf_1_1NMFMultiplicativeDivergenceUpdate_1aa2ccb5a0533a6ba0abe6dfc1f98fbafb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1amf_1_1NMFMultiplicativeDivergenceUpdate_1aa2ccb5a0533a6ba0abe6dfc1f98fbafb" kindref="member">serialize</ref>(Archive&amp;<sp/></highlight><highlight class="comment">/*<sp/>ar<sp/>*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/></highlight><highlight class="comment">/*<sp/>version<sp/>*/</highlight><highlight class="normal">)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal">};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>amf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/amf/update_rules/nmf_mult_div.hpp"/>
  </compounddef>
</doxygen>
