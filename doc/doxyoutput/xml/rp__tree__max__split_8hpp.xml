<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="rp__tree__max__split_8hpp" kind="file" language="C++">
    <compoundname>rp_tree_max_split.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="perform__split_8hpp" local="no">mlpack/core/tree/perform_split.hpp</includes>
    <includes local="yes">rp_tree_max_split_impl.hpp</includes>
    <includedby refid="binary__space__tree_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree.hpp</includedby>
    <includedby refid="rp__tree__mean__split_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_mean_split.hpp</includedby>
    <incdepgraph>
      <node id="14763">
        <label>list</label>
      </node>
      <node id="14760">
        <label>atomic</label>
      </node>
      <node id="14750">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="14726">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="14762">
        <label>iomanip</label>
      </node>
      <node id="14735">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="14736" relation="include">
        </childnode>
        <childnode refid="14738" relation="include">
        </childnode>
      </node>
      <node id="14718">
        <label>cstdint</label>
      </node>
      <node id="14727">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="14734">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="14757">
        <label>arma_config.hpp</label>
      </node>
      <node id="14747">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="14714">
        <label>cmath</label>
      </node>
      <node id="14733">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="14722">
        <label>stdexcept</label>
      </node>
      <node id="14742">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="14727" relation="include">
        </childnode>
        <childnode refid="14729" relation="include">
        </childnode>
        <childnode refid="14730" relation="include">
        </childnode>
        <childnode refid="14728" relation="include">
        </childnode>
      </node>
      <node id="14766">
        <label>string</label>
      </node>
      <node id="14712">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_max_split.hpp</label>
        <link refid="rp__tree__max__split_8hpp"/>
        <childnode refid="14713" relation="include">
        </childnode>
        <childnode refid="14770" relation="include">
        </childnode>
        <childnode refid="14771" relation="include">
        </childnode>
      </node>
      <node id="14754">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="14755" relation="include">
        </childnode>
        <childnode refid="14721" relation="include">
        </childnode>
      </node>
      <node id="14764">
        <label>map</label>
      </node>
      <node id="14716">
        <label>cfloat</label>
      </node>
      <node id="14746">
        <label>boost/variant.hpp</label>
      </node>
      <node id="14768">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="14730">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="14753">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="14754" relation="include">
        </childnode>
        <childnode refid="14730" relation="include">
        </childnode>
        <childnode refid="14737" relation="include">
        </childnode>
        <childnode refid="14755" relation="include">
        </childnode>
      </node>
      <node id="14743">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="14741">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="14727" relation="include">
        </childnode>
        <childnode refid="14729" relation="include">
        </childnode>
        <childnode refid="14730" relation="include">
        </childnode>
        <childnode refid="14728" relation="include">
        </childnode>
      </node>
      <node id="14744">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="14727" relation="include">
        </childnode>
        <childnode refid="14729" relation="include">
        </childnode>
        <childnode refid="14730" relation="include">
        </childnode>
        <childnode refid="14728" relation="include">
        </childnode>
      </node>
      <node id="14732">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="14752">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="14728" relation="include">
        </childnode>
        <childnode refid="14729" relation="include">
        </childnode>
        <childnode refid="14730" relation="include">
        </childnode>
        <childnode refid="14740" relation="include">
        </childnode>
        <childnode refid="14749" relation="include">
        </childnode>
      </node>
      <node id="14756">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="14757" relation="include">
        </childnode>
      </node>
      <node id="14758">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="14713">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="14714" relation="include">
        </childnode>
        <childnode refid="14715" relation="include">
        </childnode>
        <childnode refid="14716" relation="include">
        </childnode>
        <childnode refid="14717" relation="include">
        </childnode>
        <childnode refid="14718" relation="include">
        </childnode>
        <childnode refid="14719" relation="include">
        </childnode>
        <childnode refid="14720" relation="include">
        </childnode>
        <childnode refid="14721" relation="include">
        </childnode>
        <childnode refid="14722" relation="include">
        </childnode>
        <childnode refid="14723" relation="include">
        </childnode>
        <childnode refid="14724" relation="include">
        </childnode>
        <childnode refid="14725" relation="include">
        </childnode>
        <childnode refid="14726" relation="include">
        </childnode>
        <childnode refid="14727" relation="include">
        </childnode>
        <childnode refid="14728" relation="include">
        </childnode>
        <childnode refid="14729" relation="include">
        </childnode>
        <childnode refid="14730" relation="include">
        </childnode>
        <childnode refid="14731" relation="include">
        </childnode>
        <childnode refid="14732" relation="include">
        </childnode>
        <childnode refid="14733" relation="include">
        </childnode>
        <childnode refid="14734" relation="include">
        </childnode>
        <childnode refid="14735" relation="include">
        </childnode>
        <childnode refid="14739" relation="include">
        </childnode>
        <childnode refid="14740" relation="include">
        </childnode>
        <childnode refid="14741" relation="include">
        </childnode>
        <childnode refid="14742" relation="include">
        </childnode>
        <childnode refid="14743" relation="include">
        </childnode>
        <childnode refid="14744" relation="include">
        </childnode>
        <childnode refid="14745" relation="include">
        </childnode>
        <childnode refid="14751" relation="include">
        </childnode>
        <childnode refid="14752" relation="include">
        </childnode>
        <childnode refid="14749" relation="include">
        </childnode>
        <childnode refid="14753" relation="include">
        </childnode>
        <childnode refid="14756" relation="include">
        </childnode>
        <childnode refid="14758" relation="include">
        </childnode>
        <childnode refid="14759" relation="include">
        </childnode>
        <childnode refid="14768" relation="include">
        </childnode>
        <childnode refid="14769" relation="include">
        </childnode>
      </node>
      <node id="14719">
        <label>cstdio</label>
      </node>
      <node id="14723">
        <label>tuple</label>
      </node>
      <node id="14728">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="14745">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="14728" relation="include">
        </childnode>
        <childnode refid="14729" relation="include">
        </childnode>
        <childnode refid="14730" relation="include">
        </childnode>
        <childnode refid="14732" relation="include">
        </childnode>
        <childnode refid="14746" relation="include">
        </childnode>
        <childnode refid="14747" relation="include">
        </childnode>
        <childnode refid="14748" relation="include">
        </childnode>
        <childnode refid="14749" relation="include">
        </childnode>
      </node>
      <node id="14724">
        <label>utility</label>
      </node>
      <node id="14748">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="14739">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="14736">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="14737" relation="include">
        </childnode>
      </node>
      <node id="14759">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="14760" relation="include">
        </childnode>
        <childnode refid="14761" relation="include">
        </childnode>
        <childnode refid="14762" relation="include">
        </childnode>
        <childnode refid="14763" relation="include">
        </childnode>
        <childnode refid="14764" relation="include">
        </childnode>
        <childnode refid="14765" relation="include">
        </childnode>
        <childnode refid="14766" relation="include">
        </childnode>
        <childnode refid="14767" relation="include">
        </childnode>
      </node>
      <node id="14737">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="14751">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="14749" relation="include">
        </childnode>
        <childnode refid="14745" relation="include">
        </childnode>
        <childnode refid="14752" relation="include">
        </childnode>
      </node>
      <node id="14720">
        <label>cstdlib</label>
      </node>
      <node id="14715">
        <label>cctype</label>
      </node>
      <node id="14738">
        <label>unordered_map</label>
      </node>
      <node id="14717">
        <label>climits</label>
      </node>
      <node id="14765">
        <label>mutex</label>
      </node>
      <node id="14761">
        <label>chrono</label>
      </node>
      <node id="14769">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="14767">
        <label>thread</label>
      </node>
      <node id="14771">
        <label>rp_tree_max_split_impl.hpp</label>
      </node>
      <node id="14770">
        <label>mlpack/core/tree/perform_split.hpp</label>
        <link refid="perform__split_8hpp"/>
      </node>
      <node id="14755">
        <label>type_traits</label>
      </node>
      <node id="14731">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="14725">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="14749">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="14727" relation="include">
        </childnode>
        <childnode refid="14728" relation="include">
        </childnode>
        <childnode refid="14729" relation="include">
        </childnode>
        <childnode refid="14730" relation="include">
        </childnode>
        <childnode refid="14750" relation="include">
        </childnode>
      </node>
      <node id="14721">
        <label>cstring</label>
      </node>
      <node id="14740">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="14729">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="14775">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/single_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2single__tree__traverser_8hpp"/>
        <childnode refid="14773" relation="include">
        </childnode>
      </node>
      <node id="14808">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/pelleg_moore_kmeans.hpp</label>
        <link refid="pelleg__moore__kmeans_8hpp"/>
      </node>
      <node id="14791">
        <label>/home/aakash/mlpack/src/mlpack/methods/lmnn/lmnn_function.hpp</label>
        <link refid="lmnn__function_8hpp"/>
        <childnode refid="14792" relation="include">
        </childnode>
      </node>
      <node id="14809">
        <label>/home/aakash/mlpack/src/mlpack/methods/range_search/range_search.hpp</label>
        <link refid="range__search_8hpp"/>
        <childnode refid="14810" relation="include">
        </childnode>
        <childnode refid="14811" relation="include">
        </childnode>
      </node>
      <node id="14793">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/typedef.hpp</label>
        <link refid="methods_2neighbor__search_2typedef_8hpp"/>
        <childnode refid="14777" relation="include">
        </childnode>
      </node>
      <node id="14781">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf_model.hpp</label>
        <link refid="cf__model_8hpp"/>
      </node>
      <node id="14783">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/regularized_svd_method.hpp</label>
        <link refid="regularized__svd__method_8hpp"/>
      </node>
      <node id="14776">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/dual_tree_traverser.hpp</label>
        <link refid="binary__space__tree_2dual__tree__traverser_8hpp"/>
        <childnode refid="14773" relation="include">
        </childnode>
      </node>
      <node id="14780">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/bias_svd_method.hpp</label>
        <link refid="bias__svd__method_8hpp"/>
      </node>
      <node id="14772">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_max_split.hpp</label>
        <link refid="rp__tree__max__split_8hpp"/>
        <childnode refid="14773" relation="include">
        </childnode>
        <childnode refid="14817" relation="include">
        </childnode>
      </node>
      <node id="14778">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/cf.hpp</label>
        <link refid="cf_8hpp"/>
        <childnode refid="14779" relation="include">
        </childnode>
        <childnode refid="14781" relation="include">
        </childnode>
        <childnode refid="14782" relation="include">
        </childnode>
        <childnode refid="14784" relation="include">
        </childnode>
      </node>
      <node id="14786">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/cosine_search.hpp</label>
        <link refid="cosine__search_8hpp"/>
      </node>
      <node id="14815">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_typedef.hpp</label>
        <link refid="ra__typedef_8hpp"/>
        <childnode refid="14814" relation="include">
        </childnode>
      </node>
      <node id="14810">
        <label>/home/aakash/mlpack/src/mlpack/methods/dbscan/dbscan.hpp</label>
        <link refid="dbscan_8hpp"/>
      </node>
      <node id="14804">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/gmm.hpp</label>
        <link refid="gmm_8hpp"/>
        <childnode refid="14803" relation="include">
        </childnode>
      </node>
      <node id="14812">
        <label>/home/aakash/mlpack/src/mlpack/tests/main_tests/range_search_utils.hpp</label>
        <link refid="range__search__utils_8hpp"/>
      </node>
      <node id="14789">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/dual_tree_kmeans.hpp</label>
        <link refid="dual__tree__kmeans_8hpp"/>
      </node>
      <node id="14784">
        <label>/home/aakash/mlpack/src/mlpack/methods/svdplusplus/svdplusplus.hpp</label>
        <link refid="svdplusplus_8hpp"/>
        <childnode refid="14785" relation="include">
        </childnode>
      </node>
      <node id="14802">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/diagonal_gmm.hpp</label>
        <link refid="diagonal__gmm_8hpp"/>
        <childnode refid="14803" relation="include">
        </childnode>
      </node>
      <node id="14794">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/ns_model.hpp</label>
        <link refid="ns__model_8hpp"/>
      </node>
      <node id="14814">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_search.hpp</label>
        <link refid="ra__search_8hpp"/>
        <childnode refid="14813" relation="include">
        </childnode>
        <childnode refid="14815" relation="include">
        </childnode>
      </node>
      <node id="14807">
        <label>/home/aakash/mlpack/src/mlpack/methods/nystroem_method/nystroem_method.hpp</label>
        <link refid="nystroem__method_2nystroem__method_8hpp"/>
        <childnode refid="14806" relation="include">
        </childnode>
      </node>
      <node id="14790">
        <label>/home/aakash/mlpack/src/mlpack/methods/lmnn/constraints.hpp</label>
        <link refid="constraints_8hpp"/>
        <childnode refid="14791" relation="include">
        </childnode>
      </node>
      <node id="14787">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/lmetric_search.hpp</label>
        <link refid="lmetric__search_8hpp"/>
        <childnode refid="14778" relation="include">
        </childnode>
      </node>
      <node id="14792">
        <label>/home/aakash/mlpack/src/mlpack/methods/lmnn/lmnn.hpp</label>
        <link refid="lmnn_8hpp"/>
      </node>
      <node id="14779">
        <label>/home/aakash/mlpack/src/mlpack/methods/bias_svd/bias_svd.hpp</label>
        <link refid="bias__svd_8hpp"/>
        <childnode refid="14780" relation="include">
        </childnode>
      </node>
      <node id="14774">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_2binary__space__tree_8hpp"/>
        <childnode refid="14773" relation="include">
        </childnode>
        <childnode refid="14775" relation="include">
        </childnode>
        <childnode refid="14776" relation="include">
        </childnode>
        <childnode refid="14777" relation="include">
        </childnode>
      </node>
      <node id="14813">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_model.hpp</label>
        <link refid="ra__model_8hpp"/>
      </node>
      <node id="14801">
        <label>/home/aakash/mlpack/src/mlpack/methods/gmm/em_fit.hpp</label>
        <link refid="em__fit_8hpp"/>
        <childnode refid="14802" relation="include">
        </childnode>
        <childnode refid="14804" relation="include">
        </childnode>
      </node>
      <node id="14799">
        <label>/home/aakash/mlpack/src/mlpack/methods/kde/kde_model.hpp</label>
        <link refid="kde__model_8hpp"/>
      </node>
      <node id="14773">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree.hpp</label>
        <link refid="binary__space__tree_8hpp"/>
        <childnode refid="14774" relation="include">
        </childnode>
        <childnode refid="14795" relation="include">
        </childnode>
        <childnode refid="14796" relation="include">
        </childnode>
        <childnode refid="14797" relation="include">
        </childnode>
        <childnode refid="14798" relation="include">
        </childnode>
        <childnode refid="14799" relation="include">
        </childnode>
        <childnode refid="14789" relation="include">
        </childnode>
        <childnode refid="14800" relation="include">
        </childnode>
        <childnode refid="14808" relation="include">
        </childnode>
        <childnode refid="14777" relation="include">
        </childnode>
        <childnode refid="14794" relation="include">
        </childnode>
        <childnode refid="14809" relation="include">
        </childnode>
        <childnode refid="14811" relation="include">
        </childnode>
        <childnode refid="14813" relation="include">
        </childnode>
        <childnode refid="14814" relation="include">
        </childnode>
        <childnode refid="14816" relation="include">
        </childnode>
      </node>
      <node id="14785">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/decomposition_policies/svdplusplus_method.hpp</label>
        <link refid="svdplusplus__method_8hpp"/>
      </node>
      <node id="14782">
        <label>/home/aakash/mlpack/src/mlpack/methods/regularized_svd/regularized_svd.hpp</label>
        <link refid="regularized__svd_8hpp"/>
        <childnode refid="14783" relation="include">
        </childnode>
      </node>
      <node id="14816">
        <label>/home/aakash/mlpack/src/mlpack/methods/rann/ra_query_stat.hpp</label>
        <link refid="ra__query__stat_8hpp"/>
        <childnode refid="14814" relation="include">
        </childnode>
      </node>
      <node id="14777">
        <label>/home/aakash/mlpack/src/mlpack/methods/neighbor_search/neighbor_search.hpp</label>
        <link refid="neighbor__search_8hpp"/>
        <childnode refid="14778" relation="include">
        </childnode>
        <childnode refid="14786" relation="include">
        </childnode>
        <childnode refid="14787" relation="include">
        </childnode>
        <childnode refid="14788" relation="include">
        </childnode>
        <childnode refid="14789" relation="include">
        </childnode>
        <childnode refid="14790" relation="include">
        </childnode>
        <childnode refid="14793" relation="include">
        </childnode>
        <childnode refid="14794" relation="include">
        </childnode>
      </node>
      <node id="14811">
        <label>/home/aakash/mlpack/src/mlpack/methods/range_search/rs_model.hpp</label>
        <link refid="rs__model_8hpp"/>
        <childnode refid="14812" relation="include">
        </childnode>
      </node>
      <node id="14798">
        <label>/home/aakash/mlpack/src/mlpack/methods/kde/kde.hpp</label>
        <link refid="kde_8hpp"/>
        <childnode refid="14799" relation="include">
        </childnode>
      </node>
      <node id="14788">
        <label>/home/aakash/mlpack/src/mlpack/methods/cf/neighbor_search_policies/pearson_search.hpp</label>
        <link refid="pearson__search_8hpp"/>
      </node>
      <node id="14800">
        <label>/home/aakash/mlpack/src/mlpack/methods/kmeans/kmeans.hpp</label>
        <link refid="kmeans_8hpp"/>
        <childnode refid="14801" relation="include">
        </childnode>
        <childnode refid="14805" relation="include">
        </childnode>
      </node>
      <node id="14797">
        <label>/home/aakash/mlpack/src/mlpack/methods/emst/dtb.hpp</label>
        <link refid="dtb_8hpp"/>
      </node>
      <node id="14805">
        <label>/home/aakash/mlpack/src/mlpack/methods/nystroem_method/kmeans_selection.hpp</label>
        <link refid="kmeans__selection_8hpp"/>
        <childnode refid="14806" relation="include">
        </childnode>
        <childnode refid="14807" relation="include">
        </childnode>
      </node>
      <node id="14817">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_mean_split.hpp</label>
        <link refid="rp__tree__mean__split_8hpp"/>
        <childnode refid="14773" relation="include">
        </childnode>
      </node>
      <node id="14803">
        <label>/home/aakash/mlpack/src/mlpack/methods/hmm/hmm_model.hpp</label>
        <link refid="hmm__model_8hpp"/>
      </node>
      <node id="14806">
        <label>/home/aakash/mlpack/src/mlpack/methods/kernel_pca/kernel_rules/nystroem_method.hpp</label>
        <link refid="kernel__pca_2kernel__rules_2nystroem__method_8hpp"/>
      </node>
      <node id="14795">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/breadth_first_dual_tree_traverser.hpp</label>
        <link refid="breadth__first__dual__tree__traverser_8hpp"/>
        <childnode refid="14773" relation="include">
        </childnode>
      </node>
      <node id="14796">
        <label>/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/typedef.hpp</label>
        <link refid="core_2tree_2binary__space__tree_2typedef_8hpp"/>
        <childnode refid="14773" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1tree_1_1RPTreeMaxSplit" prot="public">mlpack::tree::RPTreeMaxSplit</innerclass>
    <innerclass refid="structmlpack_1_1tree_1_1RPTreeMaxSplit_1_1SplitInfo" prot="public">mlpack::tree::RPTreeMaxSplit::SplitInfo</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1tree">mlpack::tree</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Mikhail Lozhnikov</para></simplesect>
Definition of class (RPTreeMaxSplit) to split a binary space partition tree.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#ifndef<sp/>MLPACK_CORE_TREE_BINARY_SPACE_TREE_RP_TREE_MAX_SPLIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_CORE_TREE_BINARY_SPACE_TREE_RP_TREE_MAX_SPLIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="perform__split_8hpp" kindref="compound">mlpack/core/tree/perform_split.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tree<sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BoundType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType<sp/>=<sp/>arma::mat&gt;</highlight></codeline>
<codeline lineno="32" refid="classmlpack_1_1tree_1_1RPTreeMaxSplit" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1tree_1_1RPTreeMaxSplit" kindref="compound">RPTreeMaxSplit</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36" refid="classmlpack_1_1tree_1_1RPTreeMaxSplit_1a227d0c7e23e98fcd6c81ecab357a791f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MatType::elem_type<sp/><ref refid="classmlpack_1_1tree_1_1RPTreeMaxSplit_1a227d0c7e23e98fcd6c81ecab357a791f" kindref="member">ElemType</ref>;</highlight></codeline>
<codeline lineno="38" refid="structmlpack_1_1tree_1_1RPTreeMaxSplit_1_1SplitInfo" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmlpack_1_1tree_1_1RPTreeMaxSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="41" refid="structmlpack_1_1tree_1_1RPTreeMaxSplit_1_1SplitInfo_1a620f4f39e225b65a841f34c53b94515f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::Col&lt;ElemType&gt;<sp/><ref refid="structmlpack_1_1tree_1_1RPTreeMaxSplit_1_1SplitInfo_1a620f4f39e225b65a841f34c53b94515f" kindref="member">direction</ref>;</highlight></codeline>
<codeline lineno="43" refid="structmlpack_1_1tree_1_1RPTreeMaxSplit_1_1SplitInfo_1a0940adf91ff7f1747d68384a012683d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ElemType<sp/><ref refid="structmlpack_1_1tree_1_1RPTreeMaxSplit_1_1SplitInfo_1a0940adf91ff7f1747d68384a012683d3" kindref="member">splitVal</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1RPTreeMaxSplit_1a563632ed24c69523f20a12d9a28eaeaa" kindref="member">SplitNode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoundType&amp;<sp/></highlight><highlight class="comment">/*bound*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>begin,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmlpack_1_1tree_1_1RPTreeMaxSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref>&amp;<sp/>splitInfo);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classmlpack_1_1tree_1_1RPTreeMaxSplit_1aace8240352cb3ea61c975987b91a80a6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1RPTreeMaxSplit_1aace8240352cb3ea61c975987b91a80a6" kindref="member">PerformSplit</ref>(MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>begin,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1tree_1_1RPTreeMaxSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref>&amp;<sp/>splitInfo)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>split::PerformSplit&lt;MatType,<sp/>RPTreeMaxSplit&gt;(data,<sp/>begin,<sp/>count,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitInfo);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classmlpack_1_1tree_1_1RPTreeMaxSplit_1af99e13e8418a8bb6b602435fbd7e4e64" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1RPTreeMaxSplit_1af99e13e8418a8bb6b602435fbd7e4e64" kindref="member">PerformSplit</ref>(MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>begin,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1tree_1_1RPTreeMaxSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref>&amp;<sp/>splitInfo,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;size_t&gt;&amp;<sp/>oldFromNew)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>split::PerformSplit&lt;MatType,<sp/>RPTreeMaxSplit&gt;(data,<sp/>begin,<sp/>count,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splitInfo,<sp/>oldFromNew);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType&gt;</highlight></codeline>
<codeline lineno="116" refid="classmlpack_1_1tree_1_1RPTreeMaxSplit_1af0fc61f469596cb8796d1966564ecbcb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1RPTreeMaxSplit_1af0fc61f469596cb8796d1966564ecbcb" kindref="member">AssignToLeftNode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>point,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structmlpack_1_1tree_1_1RPTreeMaxSplit_1_1SplitInfo" kindref="compound">SplitInfo</ref>&amp;<sp/>splitInfo)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(arma::dot(point,<sp/>splitInfo.<ref refid="structmlpack_1_1tree_1_1RPTreeMaxSplit_1_1SplitInfo_1a620f4f39e225b65a841f34c53b94515f" kindref="member">direction</ref>)<sp/>&lt;=<sp/>splitInfo.<ref refid="structmlpack_1_1tree_1_1RPTreeMaxSplit_1_1SplitInfo_1a0940adf91ff7f1747d68384a012683d3" kindref="member">splitVal</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetSplitVal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>begin,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Col&lt;ElemType&gt;&amp;<sp/><ref refid="structmlpack_1_1tree_1_1RPTreeMaxSplit_1_1SplitInfo_1a620f4f39e225b65a841f34c53b94515f" kindref="member">direction</ref>,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ElemType&amp;<sp/><ref refid="structmlpack_1_1tree_1_1RPTreeMaxSplit_1_1SplitInfo_1a0940adf91ff7f1747d68384a012683d3" kindref="member">splitVal</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal">};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;rp_tree_max_split_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>MLPACK_CORE_TREE_BINARY_SPACE_TREE_RP_TREE_MAX_SPLIT_HPP</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/core/tree/binary_space_tree/rp_tree_max_split.hpp"/>
  </compounddef>
</doxygen>
