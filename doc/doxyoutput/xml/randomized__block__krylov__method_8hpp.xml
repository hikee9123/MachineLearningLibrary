<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="randomized__block__krylov__method_8hpp" kind="file" language="C++">
    <compoundname>randomized_block_krylov_method.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes refid="randomized__block__krylov__svd_8hpp" local="no">mlpack/methods/block_krylov_svd/randomized_block_krylov_svd.hpp</includes>
    <incdepgraph>
      <node id="53539">
        <label>list</label>
      </node>
      <node id="53536">
        <label>atomic</label>
      </node>
      <node id="53526">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="53502">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="53538">
        <label>iomanip</label>
      </node>
      <node id="53511">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="53512" relation="include">
        </childnode>
        <childnode refid="53514" relation="include">
        </childnode>
      </node>
      <node id="53494">
        <label>cstdint</label>
      </node>
      <node id="53503">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="53510">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="53546">
        <label>mlpack/methods/block_krylov_svd/randomized_block_krylov_svd.hpp</label>
        <link refid="randomized__block__krylov__svd_8hpp"/>
        <childnode refid="53489" relation="include">
        </childnode>
      </node>
      <node id="53533">
        <label>arma_config.hpp</label>
      </node>
      <node id="53523">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="53490">
        <label>cmath</label>
      </node>
      <node id="53509">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="53498">
        <label>stdexcept</label>
      </node>
      <node id="53518">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="53503" relation="include">
        </childnode>
        <childnode refid="53505" relation="include">
        </childnode>
        <childnode refid="53506" relation="include">
        </childnode>
        <childnode refid="53504" relation="include">
        </childnode>
      </node>
      <node id="53542">
        <label>string</label>
      </node>
      <node id="53530">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="53531" relation="include">
        </childnode>
        <childnode refid="53497" relation="include">
        </childnode>
      </node>
      <node id="53540">
        <label>map</label>
      </node>
      <node id="53488">
        <label>/home/aakash/mlpack/src/mlpack/methods/pca/decomposition_policies/randomized_block_krylov_method.hpp</label>
        <link refid="randomized__block__krylov__method_8hpp"/>
        <childnode refid="53489" relation="include">
        </childnode>
        <childnode refid="53546" relation="include">
        </childnode>
      </node>
      <node id="53492">
        <label>cfloat</label>
      </node>
      <node id="53522">
        <label>boost/variant.hpp</label>
      </node>
      <node id="53544">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="53506">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="53529">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="53530" relation="include">
        </childnode>
        <childnode refid="53506" relation="include">
        </childnode>
        <childnode refid="53513" relation="include">
        </childnode>
        <childnode refid="53531" relation="include">
        </childnode>
      </node>
      <node id="53519">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="53517">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="53503" relation="include">
        </childnode>
        <childnode refid="53505" relation="include">
        </childnode>
        <childnode refid="53506" relation="include">
        </childnode>
        <childnode refid="53504" relation="include">
        </childnode>
      </node>
      <node id="53520">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="53503" relation="include">
        </childnode>
        <childnode refid="53505" relation="include">
        </childnode>
        <childnode refid="53506" relation="include">
        </childnode>
        <childnode refid="53504" relation="include">
        </childnode>
      </node>
      <node id="53508">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="53528">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="53504" relation="include">
        </childnode>
        <childnode refid="53505" relation="include">
        </childnode>
        <childnode refid="53506" relation="include">
        </childnode>
        <childnode refid="53516" relation="include">
        </childnode>
        <childnode refid="53525" relation="include">
        </childnode>
      </node>
      <node id="53532">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="53533" relation="include">
        </childnode>
      </node>
      <node id="53534">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="53489">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="53490" relation="include">
        </childnode>
        <childnode refid="53491" relation="include">
        </childnode>
        <childnode refid="53492" relation="include">
        </childnode>
        <childnode refid="53493" relation="include">
        </childnode>
        <childnode refid="53494" relation="include">
        </childnode>
        <childnode refid="53495" relation="include">
        </childnode>
        <childnode refid="53496" relation="include">
        </childnode>
        <childnode refid="53497" relation="include">
        </childnode>
        <childnode refid="53498" relation="include">
        </childnode>
        <childnode refid="53499" relation="include">
        </childnode>
        <childnode refid="53500" relation="include">
        </childnode>
        <childnode refid="53501" relation="include">
        </childnode>
        <childnode refid="53502" relation="include">
        </childnode>
        <childnode refid="53503" relation="include">
        </childnode>
        <childnode refid="53504" relation="include">
        </childnode>
        <childnode refid="53505" relation="include">
        </childnode>
        <childnode refid="53506" relation="include">
        </childnode>
        <childnode refid="53507" relation="include">
        </childnode>
        <childnode refid="53508" relation="include">
        </childnode>
        <childnode refid="53509" relation="include">
        </childnode>
        <childnode refid="53510" relation="include">
        </childnode>
        <childnode refid="53511" relation="include">
        </childnode>
        <childnode refid="53515" relation="include">
        </childnode>
        <childnode refid="53516" relation="include">
        </childnode>
        <childnode refid="53517" relation="include">
        </childnode>
        <childnode refid="53518" relation="include">
        </childnode>
        <childnode refid="53519" relation="include">
        </childnode>
        <childnode refid="53520" relation="include">
        </childnode>
        <childnode refid="53521" relation="include">
        </childnode>
        <childnode refid="53527" relation="include">
        </childnode>
        <childnode refid="53528" relation="include">
        </childnode>
        <childnode refid="53525" relation="include">
        </childnode>
        <childnode refid="53529" relation="include">
        </childnode>
        <childnode refid="53532" relation="include">
        </childnode>
        <childnode refid="53534" relation="include">
        </childnode>
        <childnode refid="53535" relation="include">
        </childnode>
        <childnode refid="53544" relation="include">
        </childnode>
        <childnode refid="53545" relation="include">
        </childnode>
      </node>
      <node id="53495">
        <label>cstdio</label>
      </node>
      <node id="53499">
        <label>tuple</label>
      </node>
      <node id="53504">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="53521">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="53504" relation="include">
        </childnode>
        <childnode refid="53505" relation="include">
        </childnode>
        <childnode refid="53506" relation="include">
        </childnode>
        <childnode refid="53508" relation="include">
        </childnode>
        <childnode refid="53522" relation="include">
        </childnode>
        <childnode refid="53523" relation="include">
        </childnode>
        <childnode refid="53524" relation="include">
        </childnode>
        <childnode refid="53525" relation="include">
        </childnode>
      </node>
      <node id="53500">
        <label>utility</label>
      </node>
      <node id="53524">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="53515">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="53512">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="53513" relation="include">
        </childnode>
      </node>
      <node id="53535">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="53536" relation="include">
        </childnode>
        <childnode refid="53537" relation="include">
        </childnode>
        <childnode refid="53538" relation="include">
        </childnode>
        <childnode refid="53539" relation="include">
        </childnode>
        <childnode refid="53540" relation="include">
        </childnode>
        <childnode refid="53541" relation="include">
        </childnode>
        <childnode refid="53542" relation="include">
        </childnode>
        <childnode refid="53543" relation="include">
        </childnode>
      </node>
      <node id="53513">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="53527">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="53525" relation="include">
        </childnode>
        <childnode refid="53521" relation="include">
        </childnode>
        <childnode refid="53528" relation="include">
        </childnode>
      </node>
      <node id="53496">
        <label>cstdlib</label>
      </node>
      <node id="53491">
        <label>cctype</label>
      </node>
      <node id="53514">
        <label>unordered_map</label>
      </node>
      <node id="53493">
        <label>climits</label>
      </node>
      <node id="53541">
        <label>mutex</label>
      </node>
      <node id="53537">
        <label>chrono</label>
      </node>
      <node id="53545">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="53543">
        <label>thread</label>
      </node>
      <node id="53531">
        <label>type_traits</label>
      </node>
      <node id="53507">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="53501">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="53525">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="53503" relation="include">
        </childnode>
        <childnode refid="53504" relation="include">
        </childnode>
        <childnode refid="53505" relation="include">
        </childnode>
        <childnode refid="53506" relation="include">
        </childnode>
        <childnode refid="53526" relation="include">
        </childnode>
      </node>
      <node id="53497">
        <label>cstring</label>
      </node>
      <node id="53516">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="53505">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmlpack_1_1pca_1_1RandomizedBlockKrylovSVDPolicy" prot="public">mlpack::pca::RandomizedBlockKrylovSVDPolicy</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1pca">mlpack::pca</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Marcus Edel</para></simplesect>
Implementation of the randomized block krylov SVD method for use in the Principal Components Analysis method.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="14"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_PCA_DECOMPOSITION_POLICIES_RANDOMIZED_BLOCK_KRYLOV_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_PCA_DECOMPOSITION_POLICIES_RANDOMIZED_BLOCK_KRYLOV_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="randomized__block__krylov__svd_8hpp" kindref="compound">mlpack/methods/block_krylov_svd/randomized_block_krylov_svd.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">pca<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classmlpack_1_1pca_1_1RandomizedBlockKrylovSVDPolicy" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1pca_1_1RandomizedBlockKrylovSVDPolicy" kindref="compound">RandomizedBlockKrylovSVDPolicy</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37" refid="classmlpack_1_1pca_1_1RandomizedBlockKrylovSVDPolicy_1ac1342c7d2b3bf1a88bc5e3880966b0d5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classmlpack_1_1pca_1_1RandomizedBlockKrylovSVDPolicy_1ac1342c7d2b3bf1a88bc5e3880966b0d5" kindref="member">RandomizedBlockKrylovSVDPolicy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>blockSize<sp/>=<sp/>0)<sp/>:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maxIterations(maxIterations),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blockSize(blockSize)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Nothing<sp/>to<sp/>do<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classmlpack_1_1pca_1_1RandomizedBlockKrylovSVDPolicy_1a596b042060783f8697e8f5a42b0fa20e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1pca_1_1RandomizedBlockKrylovSVDPolicy_1a596b042060783f8697e8f5a42b0fa20e" kindref="member">Apply</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>data,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::mat&amp;<sp/>centeredData,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>transformedData,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>eigVal,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arma::mat&amp;<sp/>eigvec,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rank)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>matrix<sp/>will<sp/>store<sp/>the<sp/>right<sp/>singular<sp/>values;<sp/>we<sp/>do<sp/>not<sp/>need<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>arma::mat<sp/>v;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>singular<sp/>value<sp/>decomposition<sp/>using<sp/>the<sp/>randomized<sp/>block<sp/>krylov<sp/>SVD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>algorithm.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1svd_1_1RandomizedBlockKrylovSVD" kindref="compound">svd::RandomizedBlockKrylovSVD</ref><sp/>rsvd(maxIterations,<sp/>blockSize);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>rsvd.<ref refid="classmlpack_1_1svd_1_1RandomizedBlockKrylovSVD_1a880f86693b7d486206c2f69ad8d9c59a" kindref="member">Apply</ref>(centeredData,<sp/>eigvec,<sp/>eigVal,<sp/>v,<sp/>rank);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>must<sp/>square<sp/>the<sp/>singular<sp/>values<sp/>to<sp/>get<sp/>the<sp/>eigenvalues.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>addition<sp/>we<sp/>must<sp/>divide<sp/>by<sp/>the<sp/>number<sp/>of<sp/>points,<sp/>because<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>covariance<sp/>matrix<sp/>is<sp/>X<sp/>*<sp/>X&apos;<sp/>/<sp/>(N<sp/>-<sp/>1).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>eigVal<sp/>%=<sp/>eigVal<sp/>/<sp/>(data.n_cols<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Project<sp/>the<sp/>samples<sp/>to<sp/>the<sp/>principals.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>transformedData<sp/>=<sp/>arma::trans(eigvec)<sp/>*<sp/>centeredData;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classmlpack_1_1pca_1_1RandomizedBlockKrylovSVDPolicy_1a420770944a5b0c7a852c4ec372c4a2d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1pca_1_1RandomizedBlockKrylovSVDPolicy_1a420770944a5b0c7a852c4ec372c4a2d1" kindref="member">MaxIterations</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxIterations;<sp/>}</highlight></codeline>
<codeline lineno="83" refid="classmlpack_1_1pca_1_1RandomizedBlockKrylovSVDPolicy_1acda675ab4ab86b95c92bc33bc391a61b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1pca_1_1RandomizedBlockKrylovSVDPolicy_1acda675ab4ab86b95c92bc33bc391a61b" kindref="member">MaxIterations</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxIterations;<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classmlpack_1_1pca_1_1RandomizedBlockKrylovSVDPolicy_1a3abd143be875c389ea92c4d54057c591" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1pca_1_1RandomizedBlockKrylovSVDPolicy_1a3abd143be875c389ea92c4d54057c591" kindref="member">BlockSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blockSize;<sp/>}</highlight></codeline>
<codeline lineno="88" refid="classmlpack_1_1pca_1_1RandomizedBlockKrylovSVDPolicy_1a3380590a2f71ed10c3e81242b7e0faeb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/><ref refid="classmlpack_1_1pca_1_1RandomizedBlockKrylovSVDPolicy_1a3380590a2f71ed10c3e81242b7e0faeb" kindref="member">BlockSize</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blockSize;<sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>maxIterations;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>blockSize;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>pca</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/pca/decomposition_policies/randomized_block_krylov_method.hpp"/>
  </compounddef>
</doxygen>
