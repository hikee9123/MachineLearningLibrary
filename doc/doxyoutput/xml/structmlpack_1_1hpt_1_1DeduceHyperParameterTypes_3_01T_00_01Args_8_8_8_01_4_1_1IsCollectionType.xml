<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType" kind="struct" language="C++" prot="public">
    <compoundname>mlpack::hpt::DeduceHyperParameterTypes&lt; T, Args... &gt;::IsCollectionType</compoundname>
    <includes refid="deduce__hp__types_8hpp" local="no">deduce_hp_types.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Type</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType_1a526523778b562af6e2215b2f374718d6" prot="public" static="no">
        <type>char[2]</type>
        <definition>using No =  char[2]</definition>
        <argsstring></argsstring>
        <name>No</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/hpt/deduce_hp_types.hpp" line="72" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/hpt/deduce_hp_types.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType_1a8a5f86dc364a80cbbe38f807fc8904d2" prot="public" static="no">
        <type>char[1]</type>
        <definition>using Yes =  char[1]</definition>
        <argsstring></argsstring>
        <name>Yes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/hpt/deduce_hp_types.hpp" line="71" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/hpt/deduce_hp_types.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType_1a11ddd051208250c32dc4985abcafa86d" prot="public" static="yes" mutable="no">
        <type>const bool</type>
        <definition>const bool value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <initializer>=
      sizeof(decltype(<ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType_1af91c8c6ede8b8be9271b2d736c40c8d1" kindref="member">Check</ref>&lt;Type&gt;(0))) == sizeof(<ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType_1a8a5f86dc364a80cbbe38f807fc8904d2" kindref="member">Yes</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/hpt/deduce_hp_types.hpp" line="79" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/hpt/deduce_hp_types.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType_1af91c8c6ede8b8be9271b2d736c40c8d1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TypeToCheck</type>
          </param>
        </templateparamlist>
        <type><ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType_1a8a5f86dc364a80cbbe38f807fc8904d2" kindref="member">Yes</ref> &amp;</type>
        <definition>static Yes&amp; Check</definition>
        <argsstring>(typename TypeToCheck::value_type *)</argsstring>
        <name>Check</name>
        <param>
          <type>typename TypeToCheck::value_type *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/hpt/deduce_hp_types.hpp" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType_1a4c3e86faee73634b5d41ed3ca2f9354f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
          </param>
        </templateparamlist>
        <type><ref refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType_1a526523778b562af6e2215b2f374718d6" kindref="member">No</ref> &amp;</type>
        <definition>static No&amp; Check</definition>
        <argsstring>(...)</argsstring>
        <name>Check</name>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/hpt/deduce_hp_types.hpp" line="77" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A type function to check whether Type is a collection type (for that it should define value_type). </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/core/hpt/deduce_hp_types.hpp" line="70" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/hpt/deduce_hp_types.hpp" bodystart="69" bodyend="81"/>
    <listofallmembers>
      <member refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType_1af91c8c6ede8b8be9271b2d736c40c8d1" prot="public" virt="non-virtual"><scope>mlpack::hpt::DeduceHyperParameterTypes&lt; T, Args... &gt;::IsCollectionType</scope><name>Check</name></member>
      <member refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType_1a4c3e86faee73634b5d41ed3ca2f9354f" prot="public" virt="non-virtual"><scope>mlpack::hpt::DeduceHyperParameterTypes&lt; T, Args... &gt;::IsCollectionType</scope><name>Check</name></member>
      <member refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType_1a526523778b562af6e2215b2f374718d6" prot="public" virt="non-virtual"><scope>mlpack::hpt::DeduceHyperParameterTypes&lt; T, Args... &gt;::IsCollectionType</scope><name>No</name></member>
      <member refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType_1a11ddd051208250c32dc4985abcafa86d" prot="public" virt="non-virtual"><scope>mlpack::hpt::DeduceHyperParameterTypes&lt; T, Args... &gt;::IsCollectionType</scope><name>value</name></member>
      <member refid="structmlpack_1_1hpt_1_1DeduceHyperParameterTypes_3_01T_00_01Args_8_8_8_01_4_1_1IsCollectionType_1a8a5f86dc364a80cbbe38f807fc8904d2" prot="public" virt="non-virtual"><scope>mlpack::hpt::DeduceHyperParameterTypes&lt; T, Args... &gt;::IsCollectionType</scope><name>Yes</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
