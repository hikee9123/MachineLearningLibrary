<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1distribution_1_1GammaDistribution" kind="class" language="C++" prot="public">
    <compoundname>mlpack::distribution::GammaDistribution</compoundname>
    <includes refid="gamma__distribution_8hpp" local="no">gamma_distribution.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1distribution_1_1GammaDistribution_1a1907077cdccc19b658408c45eb8925f3" prot="private" static="no" mutable="no">
        <type>arma::vec</type>
        <definition>arma::vec alpha</definition>
        <argsstring></argsstring>
        <name>alpha</name>
        <briefdescription>
<para>Array of fitted alphas. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" line="210" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1distribution_1_1GammaDistribution_1aad702035ee538bcf2ba8c91a26f90ac5" prot="private" static="no" mutable="no">
        <type>arma::vec</type>
        <definition>arma::vec beta</definition>
        <argsstring></argsstring>
        <name>beta</name>
        <briefdescription>
<para>Array of fitted betas. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" line="212" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" bodystart="212" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GammaDistribution_1aad5c9deb1c53fda3075ce214ec9f68c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GammaDistribution</definition>
        <argsstring>(const size_t dimensionality=0)</argsstring>
        <name>GammaDistribution</name>
        <param>
          <type>const size_t</type>
          <declname>dimensionality</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Construct the Gamma distribution with the given number of dimensions (default 0); each parameter will be initialized to 0. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dimensionality</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of dimensions. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GammaDistribution_1ae89433aa9673a783c3da50e1c8370def" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GammaDistribution</definition>
        <argsstring>(const arma::mat &amp;data, const double tol=1e-8)</argsstring>
        <name>GammaDistribution</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>tol</declname>
          <defval>1e-8</defval>
        </param>
        <briefdescription>
<para>Construct the Gamma distribution, training on the given parameters. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to train the distribution on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tol</parametername>
</parameternamelist>
<parameterdescription>
<para>Convergence tolerance. This is <emphasis>not</emphasis> an absolute measure: It will stop the approximation once the <emphasis>change</emphasis> in the value is smaller than tol. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GammaDistribution_1a9267054c34f06ce056eb9e1e76334199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GammaDistribution</definition>
        <argsstring>(const arma::vec &amp;alpha, const arma::vec &amp;beta)</argsstring>
        <name>GammaDistribution</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>beta</declname>
        </param>
        <briefdescription>
<para>Construct the Gamma distribution given two vectors alpha and beta. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector of alphas, one per dimension. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beta</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector of betas, one per dimension. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GammaDistribution_1a3dfc2487502db9fd91b7a16a44f0014e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>~GammaDistribution</definition>
        <argsstring>()</argsstring>
        <name>~GammaDistribution</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" line="83" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" bodystart="83" bodyend="83"/>
        <references refid="classmlpack_1_1distribution_1_1GammaDistribution_1a10aa8675001ec75323be892d23b4a2cb">GammaDistribution::LogProbability</references>
        <references refid="classmlpack_1_1distribution_1_1GammaDistribution_1aea9691b5cbbb57e28db1de846a50b44e">GammaDistribution::Probability</references>
        <references refid="classmlpack_1_1distribution_1_1GammaDistribution_1a2c6f8d5bb4eacf7de767d2172b320756">GammaDistribution::Random</references>
        <references refid="classmlpack_1_1distribution_1_1GammaDistribution_1aa026c530ceb9b6eb76ffe66dcb8d257b">GammaDistribution::Train</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GammaDistribution_1ab0770061da842c3d1ef78b6c13d6b324" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Alpha</definition>
        <argsstring>(const size_t dim) const</argsstring>
        <name>Alpha</name>
        <param>
          <type>const size_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
<para>Get the alpha parameter of the given dimension. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" line="196" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" bodystart="196" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GammaDistribution_1af677766dff71e1394fb7531aa73ec755" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; Alpha</definition>
        <argsstring>(const size_t dim)</argsstring>
        <name>Alpha</name>
        <param>
          <type>const size_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
<para>Modify the alpha parameter of the given dimension. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" line="198" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GammaDistribution_1a4a58618c95fbb488db0201f02d722d17" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Beta</definition>
        <argsstring>(const size_t dim) const</argsstring>
        <name>Beta</name>
        <param>
          <type>const size_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
<para>Get the beta parameter of the given dimension. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" line="201" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" bodystart="201" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GammaDistribution_1aca929e6fd58776c990e0a59545283e4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; Beta</definition>
        <argsstring>(const size_t dim)</argsstring>
        <name>Beta</name>
        <param>
          <type>const size_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
<para>Modify the beta parameter of the given dimension. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" line="203" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" bodystart="203" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GammaDistribution_1a78eda6bfb9e9462afa0fc85e32abe1af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Dimensionality</definition>
        <argsstring>() const</argsstring>
        <name>Dimensionality</name>
        <briefdescription>
<para>Get the dimensionality of the distribution. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" line="206" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" bodystart="206" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GammaDistribution_1a10aa8675001ec75323be892d23b4a2cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LogProbability</definition>
        <argsstring>(const arma::mat &amp;observations, arma::vec &amp;logProbabilities) const</argsstring>
        <name>LogProbability</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>observations</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>logProbabilities</declname>
        </param>
        <briefdescription>
<para>This function returns the logarithm of the probability of a group of observations. </para>        </briefdescription>
        <detaileddescription>
<para>The logarithm of the probability of a value x is</para><para><formula id="32">\[ \log(\frac{x^{(\alpha - 1)}}{\Gamma(\alpha) \beta^\alpha} e^ {-\frac{x}{\beta}}) \]</formula></para><para>for one dimension. This implementation assumes each dimension is independent, so the product rule is used.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observations</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix of observations, one per column. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>logProbabilities</parametername>
</parameternamelist>
<parameterdescription>
<para>Column vector of log probabilities, one per observation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" line="176" column="1"/>
        <referencedby refid="classmlpack_1_1distribution_1_1GammaDistribution_1a3dfc2487502db9fd91b7a16a44f0014e" compoundref="gamma__distribution_8hpp" startline="83" endline="83">GammaDistribution::~GammaDistribution</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GammaDistribution_1a61f67c6ba839aa711f4eb108b31dfc56" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double LogProbability</definition>
        <argsstring>(double x, const size_t dim) const</argsstring>
        <name>LogProbability</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
<para>This function returns the logarithm of the probability of a single observation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The 1-dimensional observation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension for which to calculate the probability. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" line="186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GammaDistribution_1aea9691b5cbbb57e28db1de846a50b44e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Probability</definition>
        <argsstring>(const arma::mat &amp;observations, arma::vec &amp;probabilities) const</argsstring>
        <name>Probability</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>observations</declname>
        </param>
        <param>
          <type>arma::vec &amp;</type>
          <declname>probabilities</declname>
        </param>
        <briefdescription>
<para>This function returns the probability of a group of observations. </para>        </briefdescription>
        <detaileddescription>
<para>The probability of the value x is</para><para><formula id="31">\[ \frac{x^{(\alpha - 1)}}{\Gamma(\alpha) \beta^\alpha} e^{-\frac{x}{\beta}} \]</formula></para><para>for one dimension. This implementation assumes each dimension is independent, so the product rule is used.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observations</parametername>
</parameternamelist>
<parameterdescription>
<para>Matrix of observations, one per column. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>probabilities</parametername>
</parameternamelist>
<parameterdescription>
<para>Column vector of probabilities, one per observation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" line="145" column="1"/>
        <referencedby refid="classmlpack_1_1distribution_1_1GammaDistribution_1a3dfc2487502db9fd91b7a16a44f0014e" compoundref="gamma__distribution_8hpp" startline="83" endline="83">GammaDistribution::~GammaDistribution</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GammaDistribution_1a6f2d582a78ea604f0c682f81932ad539" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Probability</definition>
        <argsstring>(double x, const size_t dim) const</argsstring>
        <name>Probability</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
<para>This is a shortcut to the Probability(arma::mat&amp;, arma::vec&amp;) function for when we want to evaluate only the probability of one dimension of the gamma. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The 1-dimensional observation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>The dimension for which to calculate the probability. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GammaDistribution_1a2c6f8d5bb4eacf7de767d2172b320756" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>arma::vec</type>
        <definition>arma::vec Random</definition>
        <argsstring>() const</argsstring>
        <name>Random</name>
        <briefdescription>
<para>This function returns an observation of this distribution. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" line="191" column="1"/>
        <referencedby refid="classmlpack_1_1distribution_1_1GammaDistribution_1a3dfc2487502db9fd91b7a16a44f0014e" compoundref="gamma__distribution_8hpp" startline="83" endline="83">GammaDistribution::~GammaDistribution</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GammaDistribution_1aa026c530ceb9b6eb76ffe66dcb8d257b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Train</definition>
        <argsstring>(const arma::mat &amp;rdata, const double tol=1e-8)</argsstring>
        <name>Train</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>rdata</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>tol</declname>
          <defval>1e-8</defval>
        </param>
        <briefdescription>
<para>This function trains (fits distribution parameters) to new data or the dataset the object owns. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference data to fit parameters to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tol</parametername>
</parameternamelist>
<parameterdescription>
<para>Convergence tolerance. This is <emphasis>not</emphasis> an absolute measure: It will stop the approximation once the <emphasis>change</emphasis> in the value is smaller than tol. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" line="94" column="1"/>
        <referencedby refid="classmlpack_1_1distribution_1_1GammaDistribution_1a3dfc2487502db9fd91b7a16a44f0014e" compoundref="gamma__distribution_8hpp" startline="83" endline="83">GammaDistribution::~GammaDistribution</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GammaDistribution_1a7585f30a098bb6b0ceac0ede43255eba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Train</definition>
        <argsstring>(const arma::mat &amp;observations, const arma::vec &amp;probabilities, const double tol=1e-8)</argsstring>
        <name>Train</name>
        <param>
          <type>const arma::mat &amp;</type>
          <declname>observations</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>probabilities</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>tol</declname>
          <defval>1e-8</defval>
        </param>
        <briefdescription>
<para>Fits an alpha and beta parameter according to observation probabilities. </para>        </briefdescription>
        <detaileddescription>
<para>This method is not yet implemented.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>observations</parametername>
</parameternamelist>
<parameterdescription>
<para>The reference data, one observation per column. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>probabilities</parametername>
</parameternamelist>
<parameterdescription>
<para>The probability of each observation. One value per column of the observations matrix. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tol</parametername>
</parameternamelist>
<parameterdescription>
<para>Convergence tolerance. This is <emphasis>not</emphasis> an absolute measure: It will stop the approximation once the <emphasis>change</emphasis> in the value is smaller than tol. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GammaDistribution_1a6999bb3e85b101307b6c28d12aae0b4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Train</definition>
        <argsstring>(const arma::vec &amp;logMeanxVec, const arma::vec &amp;meanLogxVec, const arma::vec &amp;meanxVec, const double tol=1e-8)</argsstring>
        <name>Train</name>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>logMeanxVec</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>meanLogxVec</declname>
        </param>
        <param>
          <type>const arma::vec &amp;</type>
          <declname>meanxVec</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>tol</declname>
          <defval>1e-8</defval>
        </param>
        <briefdescription>
<para>This function trains (fits distribution parameters) to a dataset with pre-computed statistics logMeanx, meanLogx, meanx for each dimension. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>logMeanxVec</parametername>
</parameternamelist>
<parameterdescription>
<para>Is each dimension&apos;s logarithm of the mean (log(mean(x))). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>meanLogxVec</parametername>
</parameternamelist>
<parameterdescription>
<para>Is each dimension&apos;s mean of logarithms (mean(log(x))). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>meanxVec</parametername>
</parameternamelist>
<parameterdescription>
<para>Is each dimension&apos;s mean (mean(x)). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tol</parametername>
</parameternamelist>
<parameterdescription>
<para>Convergence tolerance. This is <emphasis>not</emphasis> an absolute measure: It will stop the approximation once the <emphasis>change</emphasis> in the value is smaller than tol. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" line="124" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmlpack_1_1distribution_1_1GammaDistribution_1a636190341e48b08a2414b62d11c136a5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Converged</definition>
        <argsstring>(const double aOld, const double aNew, const double tol)</argsstring>
        <name>Converged</name>
        <param>
          <type>const double</type>
          <declname>aOld</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>aNew</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>tol</declname>
        </param>
        <briefdescription>
<para>This is a small function that returns true if the update of alpha is smaller than the tolerance ratio. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aOld</parametername>
</parameternamelist>
<parameterdescription>
<para>Old value of parameter we want to estimate (alpha in our case). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aNew</parametername>
</parameternamelist>
<parameterdescription>
<para>New value of parameter (the value after 1 iteration from aOld). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tol</parametername>
</parameternamelist>
<parameterdescription>
<para>Convergence tolerance. Relative measure (see documentation of <ref refid="classmlpack_1_1distribution_1_1GammaDistribution_1aa026c530ceb9b6eb76ffe66dcb8d257b" kindref="member">GammaDistribution::Train</ref>). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" line="225" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class represents the Gamma distribution. </para>    </briefdescription>
    <detaileddescription>
<para>It supports training a Gamma distribution on a given dataset and accessing the fitted alpha and beta parameters.</para><para>This class supports multidimensional Gamma distributions; however, it is assumed that each dimension is independent; therefore, a multidimensional Gamma distribution here may be seen as a set of independent single-dimensional Gamma distributions<mdash/>and the parameters are estimated under this assumption.</para><para>The estimation algorithm used can be found in the following paper:</para><para><programlisting><codeline><highlight class="normal">@techreport{minka2002estimating,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>title={Estimating<sp/>a<sp/>{G}amma<sp/>distribution},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>author={Minka,<sp/>Thomas<sp/>P.},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>institution={Microsoft<sp/>Research},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>address={Cambridge,<sp/>U.K.},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>year={2002}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" line="52" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/dists/gamma_distribution.hpp" bodystart="51" bodyend="228"/>
    <listofallmembers>
      <member refid="classmlpack_1_1distribution_1_1GammaDistribution_1a1907077cdccc19b658408c45eb8925f3" prot="private" virt="non-virtual"><scope>mlpack::distribution::GammaDistribution</scope><name>alpha</name></member>
      <member refid="classmlpack_1_1distribution_1_1GammaDistribution_1ab0770061da842c3d1ef78b6c13d6b324" prot="public" virt="non-virtual"><scope>mlpack::distribution::GammaDistribution</scope><name>Alpha</name></member>
      <member refid="classmlpack_1_1distribution_1_1GammaDistribution_1af677766dff71e1394fb7531aa73ec755" prot="public" virt="non-virtual"><scope>mlpack::distribution::GammaDistribution</scope><name>Alpha</name></member>
      <member refid="classmlpack_1_1distribution_1_1GammaDistribution_1aad702035ee538bcf2ba8c91a26f90ac5" prot="private" virt="non-virtual"><scope>mlpack::distribution::GammaDistribution</scope><name>beta</name></member>
      <member refid="classmlpack_1_1distribution_1_1GammaDistribution_1a4a58618c95fbb488db0201f02d722d17" prot="public" virt="non-virtual"><scope>mlpack::distribution::GammaDistribution</scope><name>Beta</name></member>
      <member refid="classmlpack_1_1distribution_1_1GammaDistribution_1aca929e6fd58776c990e0a59545283e4f" prot="public" virt="non-virtual"><scope>mlpack::distribution::GammaDistribution</scope><name>Beta</name></member>
      <member refid="classmlpack_1_1distribution_1_1GammaDistribution_1a636190341e48b08a2414b62d11c136a5" prot="private" virt="non-virtual"><scope>mlpack::distribution::GammaDistribution</scope><name>Converged</name></member>
      <member refid="classmlpack_1_1distribution_1_1GammaDistribution_1a78eda6bfb9e9462afa0fc85e32abe1af" prot="public" virt="non-virtual"><scope>mlpack::distribution::GammaDistribution</scope><name>Dimensionality</name></member>
      <member refid="classmlpack_1_1distribution_1_1GammaDistribution_1aad5c9deb1c53fda3075ce214ec9f68c2" prot="public" virt="non-virtual"><scope>mlpack::distribution::GammaDistribution</scope><name>GammaDistribution</name></member>
      <member refid="classmlpack_1_1distribution_1_1GammaDistribution_1ae89433aa9673a783c3da50e1c8370def" prot="public" virt="non-virtual"><scope>mlpack::distribution::GammaDistribution</scope><name>GammaDistribution</name></member>
      <member refid="classmlpack_1_1distribution_1_1GammaDistribution_1a9267054c34f06ce056eb9e1e76334199" prot="public" virt="non-virtual"><scope>mlpack::distribution::GammaDistribution</scope><name>GammaDistribution</name></member>
      <member refid="classmlpack_1_1distribution_1_1GammaDistribution_1a10aa8675001ec75323be892d23b4a2cb" prot="public" virt="non-virtual"><scope>mlpack::distribution::GammaDistribution</scope><name>LogProbability</name></member>
      <member refid="classmlpack_1_1distribution_1_1GammaDistribution_1a61f67c6ba839aa711f4eb108b31dfc56" prot="public" virt="non-virtual"><scope>mlpack::distribution::GammaDistribution</scope><name>LogProbability</name></member>
      <member refid="classmlpack_1_1distribution_1_1GammaDistribution_1aea9691b5cbbb57e28db1de846a50b44e" prot="public" virt="non-virtual"><scope>mlpack::distribution::GammaDistribution</scope><name>Probability</name></member>
      <member refid="classmlpack_1_1distribution_1_1GammaDistribution_1a6f2d582a78ea604f0c682f81932ad539" prot="public" virt="non-virtual"><scope>mlpack::distribution::GammaDistribution</scope><name>Probability</name></member>
      <member refid="classmlpack_1_1distribution_1_1GammaDistribution_1a2c6f8d5bb4eacf7de767d2172b320756" prot="public" virt="non-virtual"><scope>mlpack::distribution::GammaDistribution</scope><name>Random</name></member>
      <member refid="classmlpack_1_1distribution_1_1GammaDistribution_1aa026c530ceb9b6eb76ffe66dcb8d257b" prot="public" virt="non-virtual"><scope>mlpack::distribution::GammaDistribution</scope><name>Train</name></member>
      <member refid="classmlpack_1_1distribution_1_1GammaDistribution_1a7585f30a098bb6b0ceac0ede43255eba" prot="public" virt="non-virtual"><scope>mlpack::distribution::GammaDistribution</scope><name>Train</name></member>
      <member refid="classmlpack_1_1distribution_1_1GammaDistribution_1a6999bb3e85b101307b6c28d12aae0b4d" prot="public" virt="non-virtual"><scope>mlpack::distribution::GammaDistribution</scope><name>Train</name></member>
      <member refid="classmlpack_1_1distribution_1_1GammaDistribution_1a3dfc2487502db9fd91b7a16a44f0014e" prot="public" virt="non-virtual"><scope>mlpack::distribution::GammaDistribution</scope><name>~GammaDistribution</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
