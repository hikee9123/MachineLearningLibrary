<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1data_1_1PCAWhitening" kind="class" language="C++" prot="public">
    <compoundname>mlpack::data::PCAWhitening</compoundname>
    <includes refid="pca__whitening_8hpp" local="no">pca_whitening.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1data_1_1PCAWhitening_1a93ac6b4f663cda89514d0aa70d9a80ef" prot="private" static="no" mutable="no">
        <type>arma::vec</type>
        <definition>arma::vec eigenValues</definition>
        <argsstring></argsstring>
        <name>eigenValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" line="140" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1data_1_1PCAWhitening_1a31cdef57b1bf356c05550035e615f005" prot="private" static="no" mutable="no">
        <type>arma::mat</type>
        <definition>arma::mat eigenVectors</definition>
        <argsstring></argsstring>
        <name>eigenVectors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" line="136" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1data_1_1PCAWhitening_1a4904cc82627458fdf6672ccc0b2802c7" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double epsilon</definition>
        <argsstring></argsstring>
        <name>epsilon</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" line="138" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1data_1_1PCAWhitening_1a6674e861321b05e270678c6382f11c5a" prot="private" static="no" mutable="no">
        <type>arma::vec</type>
        <definition>arma::vec itemMean</definition>
        <argsstring></argsstring>
        <name>itemMean</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" line="134" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1data_1_1PCAWhitening_1a45ec61849c4ad0dfbc18ff0ebc57d1ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PCAWhitening</definition>
        <argsstring>(double eps=0.00005)</argsstring>
        <name>PCAWhitening</name>
        <param>
          <type>double</type>
          <declname>eps</declname>
          <defval>0.00005</defval>
        </param>
        <briefdescription>
<para>A constructor to set the regularization parameter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eps</parametername>
</parameternamelist>
<parameterdescription>
<para>Regularization parameter. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" line="55" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" bodystart="55" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1data_1_1PCAWhitening_1a5d2e9b59773a10f622f833c406435cf4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::vec &amp;</type>
        <definition>const arma::vec&amp; EigenValues</definition>
        <argsstring>() const</argsstring>
        <name>EigenValues</name>
        <briefdescription>
<para>Get the eigenvalues vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" line="117" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" bodystart="117" bodyend="117"/>
        <referencedby refid="classmlpack_1_1data_1_1ZCAWhitening_1a5d2e9b59773a10f622f833c406435cf4" compoundref="zca__whitening_8hpp" startline="98" endline="98">ZCAWhitening::EigenValues</referencedby>
        <referencedby refid="classmlpack_1_1data_1_1ZCAWhitening_1afb0e67c6fbf5a527f63469bbbf07066c" compoundref="zca__whitening_8hpp" startline="88" endline="93">ZCAWhitening::InverseTransform</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1data_1_1PCAWhitening_1a6a2521e3588c5bb0ff6191c68d97b217" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::mat &amp;</type>
        <definition>const arma::mat&amp; EigenVectors</definition>
        <argsstring>() const</argsstring>
        <name>EigenVectors</name>
        <briefdescription>
<para>Get the eigenvector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" line="119" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" bodystart="119" bodyend="119"/>
        <referencedby refid="classmlpack_1_1data_1_1ZCAWhitening_1a6a2521e3588c5bb0ff6191c68d97b217" compoundref="zca__whitening_8hpp" startline="100" endline="100">ZCAWhitening::EigenVectors</referencedby>
        <referencedby refid="classmlpack_1_1data_1_1ZCAWhitening_1afb0e67c6fbf5a527f63469bbbf07066c" compoundref="zca__whitening_8hpp" startline="88" endline="93">ZCAWhitening::InverseTransform</referencedby>
        <referencedby refid="classmlpack_1_1data_1_1ZCAWhitening_1a7bc470a1e097f5b0aaf2396691432b3f" compoundref="zca__whitening_8hpp" startline="75" endline="79">ZCAWhitening::Transform</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1data_1_1PCAWhitening_1a3ababd597760bb1f9782ad2c17aadb41" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const double &amp;</type>
        <definition>const double&amp; Epsilon</definition>
        <argsstring>() const</argsstring>
        <name>Epsilon</name>
        <briefdescription>
<para>Get the regularization parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" line="121" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" bodystart="121" bodyend="121"/>
        <referencedby refid="classmlpack_1_1data_1_1ZCAWhitening_1af6d960193bb5db37e51416e12bf720de" compoundref="zca__whitening_8hpp" startline="102" endline="102">ZCAWhitening::Epsilon</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1data_1_1PCAWhitening_1a0b68c1a39a21e56e10f5b9250b056244" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MatType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Fit</definition>
        <argsstring>(const MatType &amp;input)</argsstring>
        <name>Fit</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Function to fit features, to find out the min max and scale. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>Dataset to fit. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" line="71" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" bodystart="71" bodyend="78"/>
        <references refid="namespacemlpack_1_1math_1a5b2ddc31187ec7a449b6ebcd71b2e52b">mlpack::math::ColumnCovariance</references>
        <referencedby refid="classmlpack_1_1data_1_1ZCAWhitening_1a0b68c1a39a21e56e10f5b9250b056244" compoundref="zca__whitening_8hpp" startline="63" endline="66">ZCAWhitening::Fit</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1data_1_1PCAWhitening_1afb0e67c6fbf5a527f63469bbbf07066c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MatType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void InverseTransform</definition>
        <argsstring>(const MatType &amp;input, MatType &amp;output)</argsstring>
        <name>InverseTransform</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>MatType &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Function to retrieve original dataset. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>Scaled dataset. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Output matrix with original Dataset. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" line="107" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" bodystart="107" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1data_1_1PCAWhitening_1a95996a797e721bc9acc0c9a5d697fdcf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const arma::vec &amp;</type>
        <definition>const arma::vec&amp; ItemMean</definition>
        <argsstring>() const</argsstring>
        <name>ItemMean</name>
        <briefdescription>
<para>Get the mean row vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" line="115" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" bodystart="115" bodyend="115"/>
        <referencedby refid="classmlpack_1_1data_1_1ZCAWhitening_1afb0e67c6fbf5a527f63469bbbf07066c" compoundref="zca__whitening_8hpp" startline="88" endline="93">ZCAWhitening::InverseTransform</referencedby>
        <referencedby refid="classmlpack_1_1data_1_1ZCAWhitening_1a95996a797e721bc9acc0c9a5d697fdcf" compoundref="zca__whitening_8hpp" startline="96" endline="96">ZCAWhitening::ItemMean</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1data_1_1PCAWhitening_1a65cba07328997659bec80b9879b15a51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;ar, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" line="124" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" bodystart="124" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1data_1_1PCAWhitening_1a7bc470a1e097f5b0aaf2396691432b3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MatType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Transform</definition>
        <argsstring>(const MatType &amp;input, MatType &amp;output)</argsstring>
        <name>Transform</name>
        <param>
          <type>const MatType &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>MatType &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Function for PCA whitening. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>Dataset to scale features. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Output matrix with whitened features. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" line="87" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" bodystart="87" bodyend="98"/>
        <referencedby refid="classmlpack_1_1data_1_1ZCAWhitening_1a7bc470a1e097f5b0aaf2396691432b3f" compoundref="zca__whitening_8hpp" startline="75" endline="79">ZCAWhitening::Transform</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A simple <ref refid="classmlpack_1_1data_1_1PCAWhitening" kindref="compound">PCAWhitening</ref> class. </para>    </briefdescription>
    <detaileddescription>
<para>Whitens a matrix using the eigendecomposition of the covariance matrix. Whitening means the covariance matrix of the result is the identity matrix.</para><para>For whitening related formula and more info, check the link below. <ulink url="http://ufldl.stanford.edu/tutorial/unsupervised/PCAWhitening/">http://ufldl.stanford.edu/tutorial/unsupervised/PCAWhitening/</ulink></para><para><programlisting><codeline><highlight class="normal">arma::mat<sp/>input;</highlight></codeline>
<codeline><highlight class="normal">Load(&quot;train.csv&quot;,<sp/>input);</highlight></codeline>
<codeline><highlight class="normal">arma::mat<sp/>output;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Fit<sp/>the<sp/>features.</highlight></codeline>
<codeline><highlight class="normal">PCAWhitening<sp/>scale;</highlight></codeline>
<codeline><highlight class="normal">scale.Fit(input)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Scale<sp/>the<sp/>features.</highlight></codeline>
<codeline><highlight class="normal">scale.Transform(input,<sp/>output);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Retransform<sp/>the<sp/>input.</highlight></codeline>
<codeline><highlight class="normal">scale.InverseTransform(output,<sp/>input);</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" line="48" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/core/data/scaler_methods/pca_whitening.hpp" bodystart="47" bodyend="141"/>
    <listofallmembers>
      <member refid="classmlpack_1_1data_1_1PCAWhitening_1a93ac6b4f663cda89514d0aa70d9a80ef" prot="private" virt="non-virtual"><scope>mlpack::data::PCAWhitening</scope><name>eigenValues</name></member>
      <member refid="classmlpack_1_1data_1_1PCAWhitening_1a5d2e9b59773a10f622f833c406435cf4" prot="public" virt="non-virtual"><scope>mlpack::data::PCAWhitening</scope><name>EigenValues</name></member>
      <member refid="classmlpack_1_1data_1_1PCAWhitening_1a31cdef57b1bf356c05550035e615f005" prot="private" virt="non-virtual"><scope>mlpack::data::PCAWhitening</scope><name>eigenVectors</name></member>
      <member refid="classmlpack_1_1data_1_1PCAWhitening_1a6a2521e3588c5bb0ff6191c68d97b217" prot="public" virt="non-virtual"><scope>mlpack::data::PCAWhitening</scope><name>EigenVectors</name></member>
      <member refid="classmlpack_1_1data_1_1PCAWhitening_1a4904cc82627458fdf6672ccc0b2802c7" prot="private" virt="non-virtual"><scope>mlpack::data::PCAWhitening</scope><name>epsilon</name></member>
      <member refid="classmlpack_1_1data_1_1PCAWhitening_1a3ababd597760bb1f9782ad2c17aadb41" prot="public" virt="non-virtual"><scope>mlpack::data::PCAWhitening</scope><name>Epsilon</name></member>
      <member refid="classmlpack_1_1data_1_1PCAWhitening_1a0b68c1a39a21e56e10f5b9250b056244" prot="public" virt="non-virtual"><scope>mlpack::data::PCAWhitening</scope><name>Fit</name></member>
      <member refid="classmlpack_1_1data_1_1PCAWhitening_1afb0e67c6fbf5a527f63469bbbf07066c" prot="public" virt="non-virtual"><scope>mlpack::data::PCAWhitening</scope><name>InverseTransform</name></member>
      <member refid="classmlpack_1_1data_1_1PCAWhitening_1a6674e861321b05e270678c6382f11c5a" prot="private" virt="non-virtual"><scope>mlpack::data::PCAWhitening</scope><name>itemMean</name></member>
      <member refid="classmlpack_1_1data_1_1PCAWhitening_1a95996a797e721bc9acc0c9a5d697fdcf" prot="public" virt="non-virtual"><scope>mlpack::data::PCAWhitening</scope><name>ItemMean</name></member>
      <member refid="classmlpack_1_1data_1_1PCAWhitening_1a45ec61849c4ad0dfbc18ff0ebc57d1ee" prot="public" virt="non-virtual"><scope>mlpack::data::PCAWhitening</scope><name>PCAWhitening</name></member>
      <member refid="classmlpack_1_1data_1_1PCAWhitening_1a65cba07328997659bec80b9879b15a51" prot="public" virt="non-virtual"><scope>mlpack::data::PCAWhitening</scope><name>serialize</name></member>
      <member refid="classmlpack_1_1data_1_1PCAWhitening_1a7bc470a1e097f5b0aaf2396691432b3f" prot="public" virt="non-virtual"><scope>mlpack::data::PCAWhitening</scope><name>Transform</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
