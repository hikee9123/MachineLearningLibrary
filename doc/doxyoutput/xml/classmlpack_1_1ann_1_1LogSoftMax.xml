<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classmlpack_1_1ann_1_1LogSoftMax" kind="class" language="C++" prot="public">
    <compoundname>mlpack::ann::LogSoftMax</compoundname>
    <includes refid="log__softmax_8hpp" local="no">log_softmax.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename InputDataType</type>
        <defval>arma::mat</defval>
      </param>
      <param>
        <type>typename OutputDataType</type>
        <defval>arma::mat</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1LogSoftMax_1a94a1c23fb1e8ea69218123e216f406a8" prot="private" static="no" mutable="no">
        <type>OutputDataType</type>
        <definition>OutputDataType delta</definition>
        <argsstring></argsstring>
        <name>delta</name>
        <briefdescription>
<para>Locally-stored delta object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/log_softmax.hpp" line="86" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/layer/log_softmax.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmlpack_1_1ann_1_1LogSoftMax_1a77fc4c7d9e92ac78bf2c4239477f54bc" prot="private" static="no" mutable="no">
        <type>OutputDataType</type>
        <definition>OutputDataType outputParameter</definition>
        <argsstring></argsstring>
        <name>outputParameter</name>
        <briefdescription>
<para>Locally-stored output parameter object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/log_softmax.hpp" line="89" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/layer/log_softmax.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmlpack_1_1ann_1_1LogSoftMax_1a1298935d4b0e2a0751dc55081c9515bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LogSoftMax</definition>
        <argsstring>()</argsstring>
        <name>LogSoftMax</name>
        <briefdescription>
<para>Create the LogSoftmax object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/log_softmax.hpp" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1LogSoftMax_1a78dbad83871f43db1975e45a9a69c376" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename eT</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Backward</definition>
        <argsstring>(const arma::Mat&lt; eT &gt; &amp;input, const arma::Mat&lt; eT &gt; &amp;gy, arma::Mat&lt; eT &gt; &amp;g)</argsstring>
        <name>Backward</name>
        <param>
          <type>const arma::Mat&lt; eT &gt; &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const arma::Mat&lt; eT &gt; &amp;</type>
          <declname>gy</declname>
        </param>
        <param>
          <type>arma::Mat&lt; eT &gt; &amp;</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>Ordinary feed backward pass of a neural network, calculating the function f(x) by propagating x backwards trough f. </para>        </briefdescription>
        <detaileddescription>
<para>Using the results from the feed forward pass.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The propagated input activation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gy</parametername>
</parameternamelist>
<parameterdescription>
<para>The backpropagated error. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>The calculated gradient. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/log_softmax.hpp" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1LogSoftMax_1aa02f12f0f3e5fea14c9fecf889b3103a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>InputDataType &amp;</type>
        <definition>InputDataType&amp; Delta</definition>
        <argsstring>() const</argsstring>
        <name>Delta</name>
        <briefdescription>
<para>Get the delta. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/log_softmax.hpp" line="74" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/layer/log_softmax.hpp" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1LogSoftMax_1a6201406598916738050e1b6caedea03b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>InputDataType &amp;</type>
        <definition>InputDataType&amp; Delta</definition>
        <argsstring>()</argsstring>
        <name>Delta</name>
        <briefdescription>
<para>Modify the delta. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/log_softmax.hpp" line="76" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/layer/log_softmax.hpp" bodystart="76" bodyend="76"/>
        <references refid="classmlpack_1_1ann_1_1LogSoftMax_1aa2ccb5a0533a6ba0abe6dfc1f98fbafb">LogSoftMax&lt; InputDataType, OutputDataType &gt;::serialize</references>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1LogSoftMax_1a09440df0a90bdcc766e56e097d91205b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputType</type>
          </param>
          <param>
            <type>typename OutputType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Forward</definition>
        <argsstring>(const InputType &amp;input, OutputType &amp;output)</argsstring>
        <name>Forward</name>
        <param>
          <type>const InputType &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>OutputType &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Ordinary feed forward pass of a neural network, evaluating the function f(x) by propagating the activity forward through f. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>Input data used for evaluating the specified function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>Resulting output activation. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/log_softmax.hpp" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1LogSoftMax_1a8bae962cc603d1cab8d80ec78f8d505d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>OutputDataType &amp;</type>
        <definition>OutputDataType&amp; OutputParameter</definition>
        <argsstring>() const</argsstring>
        <name>OutputParameter</name>
        <briefdescription>
<para>Get the output parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/log_softmax.hpp" line="69" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/layer/log_softmax.hpp" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1LogSoftMax_1a21d5f745f02c709625a4ee0907f004a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>OutputDataType &amp;</type>
        <definition>OutputDataType&amp; OutputParameter</definition>
        <argsstring>()</argsstring>
        <name>OutputParameter</name>
        <briefdescription>
<para>Modify the output parameter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/log_softmax.hpp" line="71" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/layer/log_softmax.hpp" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classmlpack_1_1ann_1_1LogSoftMax_1aa2ccb5a0533a6ba0abe6dfc1f98fbafb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void serialize</definition>
        <argsstring>(Archive &amp;, const uint32_t)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
        </param>
        <param>
          <type>const uint32_t</type>
        </param>
        <briefdescription>
<para>Serialize the layer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/log_softmax.hpp" line="82" column="1"/>
        <referencedby refid="classmlpack_1_1ann_1_1LogSoftMax_1a6201406598916738050e1b6caedea03b" compoundref="log__softmax_8hpp" startline="76" endline="76">LogSoftMax&lt; InputDataType, OutputDataType &gt;::Delta</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implementation of the log softmax layer. </para>    </briefdescription>
    <detaileddescription>
<para>The log softmax loss layer computes the multinomial logistic loss of the softmax of its inputs. This layer is meant to be used in combination with the negative log likelihood layer (NegativeLogLikelihoodLayer), which expects that the input contains log-probabilities for each class.</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>InputDataType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the input data (arma::colvec, arma::mat, arma::sp_mat or arma::cube). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>OutputDataType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the output data (arma::colvec, arma::mat, arma::sp_mat or arma::cube). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/aakash/mlpack/src/mlpack/methods/ann/layer/log_softmax.hpp" line="37" column="1" bodyfile="/home/aakash/mlpack/src/mlpack/methods/ann/layer/log_softmax.hpp" bodystart="36" bodyend="90"/>
    <listofallmembers>
      <member refid="classmlpack_1_1ann_1_1LogSoftMax_1a78dbad83871f43db1975e45a9a69c376" prot="public" virt="non-virtual"><scope>mlpack::ann::LogSoftMax</scope><name>Backward</name></member>
      <member refid="classmlpack_1_1ann_1_1LogSoftMax_1a94a1c23fb1e8ea69218123e216f406a8" prot="private" virt="non-virtual"><scope>mlpack::ann::LogSoftMax</scope><name>delta</name></member>
      <member refid="classmlpack_1_1ann_1_1LogSoftMax_1aa02f12f0f3e5fea14c9fecf889b3103a" prot="public" virt="non-virtual"><scope>mlpack::ann::LogSoftMax</scope><name>Delta</name></member>
      <member refid="classmlpack_1_1ann_1_1LogSoftMax_1a6201406598916738050e1b6caedea03b" prot="public" virt="non-virtual"><scope>mlpack::ann::LogSoftMax</scope><name>Delta</name></member>
      <member refid="classmlpack_1_1ann_1_1LogSoftMax_1a09440df0a90bdcc766e56e097d91205b" prot="public" virt="non-virtual"><scope>mlpack::ann::LogSoftMax</scope><name>Forward</name></member>
      <member refid="classmlpack_1_1ann_1_1LogSoftMax_1a1298935d4b0e2a0751dc55081c9515bf" prot="public" virt="non-virtual"><scope>mlpack::ann::LogSoftMax</scope><name>LogSoftMax</name></member>
      <member refid="classmlpack_1_1ann_1_1LogSoftMax_1a77fc4c7d9e92ac78bf2c4239477f54bc" prot="private" virt="non-virtual"><scope>mlpack::ann::LogSoftMax</scope><name>outputParameter</name></member>
      <member refid="classmlpack_1_1ann_1_1LogSoftMax_1a8bae962cc603d1cab8d80ec78f8d505d" prot="public" virt="non-virtual"><scope>mlpack::ann::LogSoftMax</scope><name>OutputParameter</name></member>
      <member refid="classmlpack_1_1ann_1_1LogSoftMax_1a21d5f745f02c709625a4ee0907f004a5" prot="public" virt="non-virtual"><scope>mlpack::ann::LogSoftMax</scope><name>OutputParameter</name></member>
      <member refid="classmlpack_1_1ann_1_1LogSoftMax_1aa2ccb5a0533a6ba0abe6dfc1f98fbafb" prot="public" virt="non-virtual"><scope>mlpack::ann::LogSoftMax</scope><name>serialize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
