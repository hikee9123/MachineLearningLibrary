<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="random__binary__numeric__split_8hpp" kind="file" language="C++">
    <compoundname>random_binary_numeric_split.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="yes">random_binary_numeric_split_impl.hpp</includes>
    <includedby refid="decision__tree_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/decision_tree/decision_tree.hpp</includedby>
    <includedby refid="decision__tree__regressor_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/decision_tree/decision_tree_regressor.hpp</includedby>
    <incdepgraph>
      <node id="48841">
        <label>list</label>
      </node>
      <node id="48838">
        <label>atomic</label>
      </node>
      <node id="48828">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="48804">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="48840">
        <label>iomanip</label>
      </node>
      <node id="48813">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="48814" relation="include">
        </childnode>
        <childnode refid="48816" relation="include">
        </childnode>
      </node>
      <node id="48796">
        <label>cstdint</label>
      </node>
      <node id="48805">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="48812">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="48835">
        <label>arma_config.hpp</label>
      </node>
      <node id="48825">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="48792">
        <label>cmath</label>
      </node>
      <node id="48811">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="48800">
        <label>stdexcept</label>
      </node>
      <node id="48820">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="48805" relation="include">
        </childnode>
        <childnode refid="48807" relation="include">
        </childnode>
        <childnode refid="48808" relation="include">
        </childnode>
        <childnode refid="48806" relation="include">
        </childnode>
      </node>
      <node id="48844">
        <label>string</label>
      </node>
      <node id="48832">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="48833" relation="include">
        </childnode>
        <childnode refid="48799" relation="include">
        </childnode>
      </node>
      <node id="48842">
        <label>map</label>
      </node>
      <node id="48794">
        <label>cfloat</label>
      </node>
      <node id="48824">
        <label>boost/variant.hpp</label>
      </node>
      <node id="48846">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="48808">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="48831">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="48832" relation="include">
        </childnode>
        <childnode refid="48808" relation="include">
        </childnode>
        <childnode refid="48815" relation="include">
        </childnode>
        <childnode refid="48833" relation="include">
        </childnode>
      </node>
      <node id="48821">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="48819">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="48805" relation="include">
        </childnode>
        <childnode refid="48807" relation="include">
        </childnode>
        <childnode refid="48808" relation="include">
        </childnode>
        <childnode refid="48806" relation="include">
        </childnode>
      </node>
      <node id="48822">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="48805" relation="include">
        </childnode>
        <childnode refid="48807" relation="include">
        </childnode>
        <childnode refid="48808" relation="include">
        </childnode>
        <childnode refid="48806" relation="include">
        </childnode>
      </node>
      <node id="48810">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="48830">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="48806" relation="include">
        </childnode>
        <childnode refid="48807" relation="include">
        </childnode>
        <childnode refid="48808" relation="include">
        </childnode>
        <childnode refid="48818" relation="include">
        </childnode>
        <childnode refid="48827" relation="include">
        </childnode>
      </node>
      <node id="48834">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="48835" relation="include">
        </childnode>
      </node>
      <node id="48836">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="48791">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="48792" relation="include">
        </childnode>
        <childnode refid="48793" relation="include">
        </childnode>
        <childnode refid="48794" relation="include">
        </childnode>
        <childnode refid="48795" relation="include">
        </childnode>
        <childnode refid="48796" relation="include">
        </childnode>
        <childnode refid="48797" relation="include">
        </childnode>
        <childnode refid="48798" relation="include">
        </childnode>
        <childnode refid="48799" relation="include">
        </childnode>
        <childnode refid="48800" relation="include">
        </childnode>
        <childnode refid="48801" relation="include">
        </childnode>
        <childnode refid="48802" relation="include">
        </childnode>
        <childnode refid="48803" relation="include">
        </childnode>
        <childnode refid="48804" relation="include">
        </childnode>
        <childnode refid="48805" relation="include">
        </childnode>
        <childnode refid="48806" relation="include">
        </childnode>
        <childnode refid="48807" relation="include">
        </childnode>
        <childnode refid="48808" relation="include">
        </childnode>
        <childnode refid="48809" relation="include">
        </childnode>
        <childnode refid="48810" relation="include">
        </childnode>
        <childnode refid="48811" relation="include">
        </childnode>
        <childnode refid="48812" relation="include">
        </childnode>
        <childnode refid="48813" relation="include">
        </childnode>
        <childnode refid="48817" relation="include">
        </childnode>
        <childnode refid="48818" relation="include">
        </childnode>
        <childnode refid="48819" relation="include">
        </childnode>
        <childnode refid="48820" relation="include">
        </childnode>
        <childnode refid="48821" relation="include">
        </childnode>
        <childnode refid="48822" relation="include">
        </childnode>
        <childnode refid="48823" relation="include">
        </childnode>
        <childnode refid="48829" relation="include">
        </childnode>
        <childnode refid="48830" relation="include">
        </childnode>
        <childnode refid="48827" relation="include">
        </childnode>
        <childnode refid="48831" relation="include">
        </childnode>
        <childnode refid="48834" relation="include">
        </childnode>
        <childnode refid="48836" relation="include">
        </childnode>
        <childnode refid="48837" relation="include">
        </childnode>
        <childnode refid="48846" relation="include">
        </childnode>
        <childnode refid="48847" relation="include">
        </childnode>
      </node>
      <node id="48797">
        <label>cstdio</label>
      </node>
      <node id="48801">
        <label>tuple</label>
      </node>
      <node id="48806">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="48823">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="48806" relation="include">
        </childnode>
        <childnode refid="48807" relation="include">
        </childnode>
        <childnode refid="48808" relation="include">
        </childnode>
        <childnode refid="48810" relation="include">
        </childnode>
        <childnode refid="48824" relation="include">
        </childnode>
        <childnode refid="48825" relation="include">
        </childnode>
        <childnode refid="48826" relation="include">
        </childnode>
        <childnode refid="48827" relation="include">
        </childnode>
      </node>
      <node id="48790">
        <label>/home/aakash/mlpack/src/mlpack/methods/decision_tree/random_binary_numeric_split.hpp</label>
        <link refid="random__binary__numeric__split_8hpp"/>
        <childnode refid="48791" relation="include">
        </childnode>
        <childnode refid="48848" relation="include">
        </childnode>
      </node>
      <node id="48802">
        <label>utility</label>
      </node>
      <node id="48826">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="48817">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="48814">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="48815" relation="include">
        </childnode>
      </node>
      <node id="48837">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="48838" relation="include">
        </childnode>
        <childnode refid="48839" relation="include">
        </childnode>
        <childnode refid="48840" relation="include">
        </childnode>
        <childnode refid="48841" relation="include">
        </childnode>
        <childnode refid="48842" relation="include">
        </childnode>
        <childnode refid="48843" relation="include">
        </childnode>
        <childnode refid="48844" relation="include">
        </childnode>
        <childnode refid="48845" relation="include">
        </childnode>
      </node>
      <node id="48815">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="48829">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="48827" relation="include">
        </childnode>
        <childnode refid="48823" relation="include">
        </childnode>
        <childnode refid="48830" relation="include">
        </childnode>
      </node>
      <node id="48798">
        <label>cstdlib</label>
      </node>
      <node id="48848">
        <label>random_binary_numeric_split_impl.hpp</label>
      </node>
      <node id="48793">
        <label>cctype</label>
      </node>
      <node id="48816">
        <label>unordered_map</label>
      </node>
      <node id="48795">
        <label>climits</label>
      </node>
      <node id="48843">
        <label>mutex</label>
      </node>
      <node id="48839">
        <label>chrono</label>
      </node>
      <node id="48847">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="48845">
        <label>thread</label>
      </node>
      <node id="48833">
        <label>type_traits</label>
      </node>
      <node id="48809">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="48803">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="48827">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="48805" relation="include">
        </childnode>
        <childnode refid="48806" relation="include">
        </childnode>
        <childnode refid="48807" relation="include">
        </childnode>
        <childnode refid="48808" relation="include">
        </childnode>
        <childnode refid="48828" relation="include">
        </childnode>
      </node>
      <node id="48799">
        <label>cstring</label>
      </node>
      <node id="48818">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="48807">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="48850">
        <label>/home/aakash/mlpack/src/mlpack/methods/decision_tree/decision_tree.hpp</label>
        <link refid="decision__tree_8hpp"/>
        <childnode refid="48851" relation="include">
        </childnode>
        <childnode refid="48852" relation="include">
        </childnode>
      </node>
      <node id="48851">
        <label>/home/aakash/mlpack/src/mlpack/methods/adaboost/adaboost.hpp</label>
        <link refid="adaboost_8hpp"/>
      </node>
      <node id="48852">
        <label>/home/aakash/mlpack/src/mlpack/methods/random_forest/random_forest.hpp</label>
        <link refid="random__forest_8hpp"/>
      </node>
      <node id="48849">
        <label>/home/aakash/mlpack/src/mlpack/methods/decision_tree/random_binary_numeric_split.hpp</label>
        <link refid="random__binary__numeric__split_8hpp"/>
        <childnode refid="48850" relation="include">
        </childnode>
        <childnode refid="48853" relation="include">
        </childnode>
      </node>
      <node id="48853">
        <label>/home/aakash/mlpack/src/mlpack/methods/decision_tree/decision_tree_regressor.hpp</label>
        <link refid="decision__tree__regressor_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit" prot="public">mlpack::tree::RandomBinaryNumericSplit</innerclass>
    <innerclass refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit_1_1AuxiliarySplitInfo" prot="public">mlpack::tree::RandomBinaryNumericSplit::AuxiliarySplitInfo</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1tree">mlpack::tree</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Rishabh Garg</para></simplesect>
A tree splitter that finds a random binary numeric split.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_DECISION_TREE_RANDOM_BINARY_NUMERIC_SPLIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_DECISION_TREE_RANDOM_BINARY_NUMERIC_SPLIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tree<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FitnessFunction&gt;</highlight></codeline>
<codeline lineno="28" refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit" kindref="compound">RandomBinaryNumericSplit</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>extra<sp/>info<sp/>needed<sp/>for<sp/>split.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit_1_1AuxiliarySplitInfo" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit_1_1AuxiliarySplitInfo" kindref="compound">AuxiliarySplitInfo</ref><sp/>{<sp/>};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UseWeights,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WeightVecType&gt;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit_1a7d8b5143608f1c91e5cbde886ce164dd" kindref="member">SplitIfBetter</ref>(</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bestGain,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Row&lt;size_t&gt;&amp;<sp/>labels,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numClasses,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>WeightVecType&amp;<sp/>weights,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>minimumLeafSize,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minimumGainSplit,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>splitInfo,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit_1_1AuxiliarySplitInfo" kindref="compound">AuxiliarySplitInfo</ref>&amp;<sp/>aux,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>splitIfBetterGain<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UseWeights,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WeightVecType&gt;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit_1a7d8b5143608f1c91e5cbde886ce164dd" kindref="member">SplitIfBetter</ref>(</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bestGain,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::rowvec&amp;<sp/>responses,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>WeightVecType&amp;<sp/>weights,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>minimumLeafSize,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minimumGainSplit,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>splitInfo,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit_1_1AuxiliarySplitInfo" kindref="compound">AuxiliarySplitInfo</ref>&amp;<sp/>aux,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FitnessFunction&amp;<sp/>fitnessFunction,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>splitIfBetterGain<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit_1a822dda54d3f80cda15f57c1bcdc45cbc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit_1a822dda54d3f80cda15f57c1bcdc45cbc" kindref="member">NumChildren</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="comment">/*<sp/>splitInfo<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit_1_1AuxiliarySplitInfo" kindref="compound">AuxiliarySplitInfo</ref>&amp;<sp/></highlight><highlight class="comment">/*<sp/>aux<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ElemType&gt;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit_1ac9d96402128b43c686e4160a55debf09" kindref="member">CalculateDirection</ref>(</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ElemType&amp;<sp/>point,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>splitInfo,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit_1_1AuxiliarySplitInfo" kindref="compound">AuxiliarySplitInfo</ref>&amp;<sp/></highlight><highlight class="comment">/*<sp/>aux<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal">};</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;random_binary_numeric_split_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/decision_tree/random_binary_numeric_split.hpp"/>
  </compounddef>
</doxygen>
