<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="random__binary__numeric__split_8hpp" kind="file" language="C++">
    <compoundname>random_binary_numeric_split.hpp</compoundname>
    <includes refid="prereqs_8hpp" local="no">mlpack/prereqs.hpp</includes>
    <includes local="yes">random_binary_numeric_split_impl.hpp</includes>
    <includedby refid="decision__tree_8hpp" local="yes">/home/aakash/mlpack/src/mlpack/methods/decision_tree/decision_tree.hpp</includedby>
    <incdepgraph>
      <node id="47374">
        <label>list</label>
      </node>
      <node id="47371">
        <label>atomic</label>
      </node>
      <node id="47361">
        <label>cereal/types/memory.hpp</label>
      </node>
      <node id="47337">
        <label>mlpack/core/util/arma_traits.hpp</label>
        <link refid="arma__traits_8hpp"/>
      </node>
      <node id="47373">
        <label>iomanip</label>
      </node>
      <node id="47346">
        <label>mlpack/core/cereal/unordered_map.hpp</label>
        <link refid="unordered__map_8hpp"/>
        <childnode refid="47347" relation="include">
        </childnode>
        <childnode refid="47349" relation="include">
        </childnode>
      </node>
      <node id="47329">
        <label>cstdint</label>
      </node>
      <node id="47338">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="47345">
        <label>cereal/types/tuple.hpp</label>
      </node>
      <node id="47368">
        <label>arma_config.hpp</label>
      </node>
      <node id="47358">
        <label>boost/variant/variant_fwd.hpp</label>
      </node>
      <node id="47325">
        <label>cmath</label>
      </node>
      <node id="47344">
        <label>cereal/types/string.hpp</label>
      </node>
      <node id="47333">
        <label>stdexcept</label>
      </node>
      <node id="47353">
        <label>mlpack/core/cereal/is_saving.hpp</label>
        <link refid="is__saving_8hpp"/>
        <childnode refid="47338" relation="include">
        </childnode>
        <childnode refid="47340" relation="include">
        </childnode>
        <childnode refid="47341" relation="include">
        </childnode>
        <childnode refid="47339" relation="include">
        </childnode>
      </node>
      <node id="47377">
        <label>string</label>
      </node>
      <node id="47365">
        <label>mlpack/core/util/sfinae_utility.hpp</label>
        <link refid="sfinae__utility_8hpp"/>
        <childnode refid="47366" relation="include">
        </childnode>
        <childnode refid="47332" relation="include">
        </childnode>
      </node>
      <node id="47375">
        <label>map</label>
      </node>
      <node id="47327">
        <label>cfloat</label>
      </node>
      <node id="47357">
        <label>boost/variant.hpp</label>
      </node>
      <node id="47379">
        <label>mlpack/core/util/deprecated.hpp</label>
        <link refid="deprecated_8hpp"/>
      </node>
      <node id="47341">
        <label>cereal/archives/xml.hpp</label>
      </node>
      <node id="47364">
        <label>mlpack/core/data/has_serialize.hpp</label>
        <link refid="has__serialize_8hpp"/>
        <childnode refid="47365" relation="include">
        </childnode>
        <childnode refid="47341" relation="include">
        </childnode>
        <childnode refid="47348" relation="include">
        </childnode>
        <childnode refid="47366" relation="include">
        </childnode>
      </node>
      <node id="47354">
        <label>mlpack/core/arma_extend/serialize_armadillo.hpp</label>
      </node>
      <node id="47352">
        <label>mlpack/core/cereal/is_loading.hpp</label>
        <link refid="is__loading_8hpp"/>
        <childnode refid="47338" relation="include">
        </childnode>
        <childnode refid="47340" relation="include">
        </childnode>
        <childnode refid="47341" relation="include">
        </childnode>
        <childnode refid="47339" relation="include">
        </childnode>
      </node>
      <node id="47355">
        <label>mlpack/core/cereal/array_wrapper.hpp</label>
        <link refid="array__wrapper_8hpp"/>
        <childnode refid="47338" relation="include">
        </childnode>
        <childnode refid="47340" relation="include">
        </childnode>
        <childnode refid="47341" relation="include">
        </childnode>
        <childnode refid="47339" relation="include">
        </childnode>
      </node>
      <node id="47343">
        <label>cereal/types/boost_variant.hpp</label>
      </node>
      <node id="47363">
        <label>pointer_vector_wrapper.hpp</label>
        <link refid="pointer__vector__wrapper_8hpp"/>
        <childnode refid="47339" relation="include">
        </childnode>
        <childnode refid="47340" relation="include">
        </childnode>
        <childnode refid="47341" relation="include">
        </childnode>
        <childnode refid="47351" relation="include">
        </childnode>
        <childnode refid="47360" relation="include">
        </childnode>
      </node>
      <node id="47367">
        <label>mlpack/core/util/arma_config_check.hpp</label>
        <link refid="arma__config__check_8hpp"/>
        <childnode refid="47368" relation="include">
        </childnode>
      </node>
      <node id="47369">
        <label>mlpack/core/util/log.hpp</label>
      </node>
      <node id="47324">
        <label>mlpack/prereqs.hpp</label>
        <link refid="prereqs_8hpp"/>
        <childnode refid="47325" relation="include">
        </childnode>
        <childnode refid="47326" relation="include">
        </childnode>
        <childnode refid="47327" relation="include">
        </childnode>
        <childnode refid="47328" relation="include">
        </childnode>
        <childnode refid="47329" relation="include">
        </childnode>
        <childnode refid="47330" relation="include">
        </childnode>
        <childnode refid="47331" relation="include">
        </childnode>
        <childnode refid="47332" relation="include">
        </childnode>
        <childnode refid="47333" relation="include">
        </childnode>
        <childnode refid="47334" relation="include">
        </childnode>
        <childnode refid="47335" relation="include">
        </childnode>
        <childnode refid="47336" relation="include">
        </childnode>
        <childnode refid="47337" relation="include">
        </childnode>
        <childnode refid="47338" relation="include">
        </childnode>
        <childnode refid="47339" relation="include">
        </childnode>
        <childnode refid="47340" relation="include">
        </childnode>
        <childnode refid="47341" relation="include">
        </childnode>
        <childnode refid="47342" relation="include">
        </childnode>
        <childnode refid="47343" relation="include">
        </childnode>
        <childnode refid="47344" relation="include">
        </childnode>
        <childnode refid="47345" relation="include">
        </childnode>
        <childnode refid="47346" relation="include">
        </childnode>
        <childnode refid="47350" relation="include">
        </childnode>
        <childnode refid="47351" relation="include">
        </childnode>
        <childnode refid="47352" relation="include">
        </childnode>
        <childnode refid="47353" relation="include">
        </childnode>
        <childnode refid="47354" relation="include">
        </childnode>
        <childnode refid="47355" relation="include">
        </childnode>
        <childnode refid="47356" relation="include">
        </childnode>
        <childnode refid="47362" relation="include">
        </childnode>
        <childnode refid="47363" relation="include">
        </childnode>
        <childnode refid="47360" relation="include">
        </childnode>
        <childnode refid="47364" relation="include">
        </childnode>
        <childnode refid="47367" relation="include">
        </childnode>
        <childnode refid="47369" relation="include">
        </childnode>
        <childnode refid="47370" relation="include">
        </childnode>
        <childnode refid="47379" relation="include">
        </childnode>
        <childnode refid="47380" relation="include">
        </childnode>
      </node>
      <node id="47330">
        <label>cstdio</label>
      </node>
      <node id="47334">
        <label>tuple</label>
      </node>
      <node id="47339">
        <label>cereal/archives/json.hpp</label>
      </node>
      <node id="47356">
        <label>mlpack/core/cereal/pointer_variant_wrapper.hpp</label>
        <link refid="pointer__variant__wrapper_8hpp"/>
        <childnode refid="47339" relation="include">
        </childnode>
        <childnode refid="47340" relation="include">
        </childnode>
        <childnode refid="47341" relation="include">
        </childnode>
        <childnode refid="47343" relation="include">
        </childnode>
        <childnode refid="47357" relation="include">
        </childnode>
        <childnode refid="47358" relation="include">
        </childnode>
        <childnode refid="47359" relation="include">
        </childnode>
        <childnode refid="47360" relation="include">
        </childnode>
      </node>
      <node id="47323">
        <label>/home/aakash/mlpack/src/mlpack/methods/decision_tree/random_binary_numeric_split.hpp</label>
        <link refid="random__binary__numeric__split_8hpp"/>
        <childnode refid="47324" relation="include">
        </childnode>
        <childnode refid="47381" relation="include">
        </childnode>
      </node>
      <node id="47335">
        <label>utility</label>
      </node>
      <node id="47359">
        <label>boost/variant/static_visitor.hpp</label>
      </node>
      <node id="47350">
        <label>cereal/types/utility.hpp</label>
      </node>
      <node id="47347">
        <label>pair_associative_container.hpp</label>
        <link refid="pair__associative__container_8hpp"/>
        <childnode refid="47348" relation="include">
        </childnode>
      </node>
      <node id="47370">
        <label>mlpack/core/util/timers.hpp</label>
        <link refid="timers_8hpp"/>
        <childnode refid="47371" relation="include">
        </childnode>
        <childnode refid="47372" relation="include">
        </childnode>
        <childnode refid="47373" relation="include">
        </childnode>
        <childnode refid="47374" relation="include">
        </childnode>
        <childnode refid="47375" relation="include">
        </childnode>
        <childnode refid="47376" relation="include">
        </childnode>
        <childnode refid="47377" relation="include">
        </childnode>
        <childnode refid="47378" relation="include">
        </childnode>
      </node>
      <node id="47348">
        <label>cereal/cereal.hpp</label>
      </node>
      <node id="47362">
        <label>mlpack/core/cereal/pointer_vector_variant_wrapper.hpp</label>
        <link refid="pointer__vector__variant__wrapper_8hpp"/>
        <childnode refid="47360" relation="include">
        </childnode>
        <childnode refid="47356" relation="include">
        </childnode>
        <childnode refid="47363" relation="include">
        </childnode>
      </node>
      <node id="47331">
        <label>cstdlib</label>
      </node>
      <node id="47381">
        <label>random_binary_numeric_split_impl.hpp</label>
      </node>
      <node id="47326">
        <label>cctype</label>
      </node>
      <node id="47349">
        <label>unordered_map</label>
      </node>
      <node id="47328">
        <label>climits</label>
      </node>
      <node id="47376">
        <label>mutex</label>
      </node>
      <node id="47372">
        <label>chrono</label>
      </node>
      <node id="47380">
        <label>mlpack/core/util/size_checks.hpp</label>
        <link refid="size__checks_8hpp"/>
      </node>
      <node id="47378">
        <label>thread</label>
      </node>
      <node id="47366">
        <label>type_traits</label>
      </node>
      <node id="47342">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="47336">
        <label>mlpack/core/arma_extend/arma_extend.hpp</label>
      </node>
      <node id="47360">
        <label>pointer_wrapper.hpp</label>
        <link refid="pointer__wrapper_8hpp"/>
        <childnode refid="47338" relation="include">
        </childnode>
        <childnode refid="47339" relation="include">
        </childnode>
        <childnode refid="47340" relation="include">
        </childnode>
        <childnode refid="47341" relation="include">
        </childnode>
        <childnode refid="47361" relation="include">
        </childnode>
      </node>
      <node id="47332">
        <label>cstring</label>
      </node>
      <node id="47351">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="47340">
        <label>cereal/archives/portable_binary.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="47383">
        <label>/home/aakash/mlpack/src/mlpack/methods/decision_tree/decision_tree.hpp</label>
        <link refid="decision__tree_8hpp"/>
        <childnode refid="47384" relation="include">
        </childnode>
        <childnode refid="47385" relation="include">
        </childnode>
      </node>
      <node id="47384">
        <label>/home/aakash/mlpack/src/mlpack/methods/adaboost/adaboost.hpp</label>
        <link refid="adaboost_8hpp"/>
      </node>
      <node id="47385">
        <label>/home/aakash/mlpack/src/mlpack/methods/random_forest/random_forest.hpp</label>
        <link refid="random__forest_8hpp"/>
      </node>
      <node id="47382">
        <label>/home/aakash/mlpack/src/mlpack/methods/decision_tree/random_binary_numeric_split.hpp</label>
        <link refid="random__binary__numeric__split_8hpp"/>
        <childnode refid="47383" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit" prot="public">mlpack::tree::RandomBinaryNumericSplit</innerclass>
    <innerclass refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit_1_1AuxiliarySplitInfo" prot="public">mlpack::tree::RandomBinaryNumericSplit::AuxiliarySplitInfo</innerclass>
    <innernamespace refid="namespacemlpack">mlpack</innernamespace>
    <innernamespace refid="namespacemlpack_1_1tree">mlpack::tree</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Rishabh Garg</para></simplesect>
A tree splitter that finds a random binary numeric split.</para><para>mlpack is free software; you may redistribute it and/or modify it under the terms of the 3-clause BSD license. You should have received a copy of the 3-clause BSD license along with mlpack. If not, see <ulink url="http://www.opensource.org/licenses/BSD-3-Clause">http://www.opensource.org/licenses/BSD-3-Clause</ulink> for more information. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>MLPACK_METHODS_DECISION_TREE_RANDOM_BINARY_NUMERIC_SPLIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MLPACK_METHODS_DECISION_TREE_RANDOM_BINARY_NUMERIC_SPLIT_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="prereqs_8hpp" kindref="compound">mlpack/prereqs.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemlpack" kindref="compound">mlpack</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tree<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FitnessFunction&gt;</highlight></codeline>
<codeline lineno="28" refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit" kindref="compound">RandomBinaryNumericSplit</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>extra<sp/>info<sp/>needed<sp/>for<sp/>split.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit_1_1AuxiliarySplitInfo" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit_1_1AuxiliarySplitInfo" kindref="compound">AuxiliarySplitInfo</ref><sp/>{<sp/>};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UseWeights,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VecType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>WeightVecType&gt;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit_1a63046e033bd4b8da5aa301c62209f9e4" kindref="member">SplitIfBetter</ref>(</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bestGain,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VecType&amp;<sp/>data,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::Row&lt;size_t&gt;&amp;<sp/>labels,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numClasses,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>WeightVecType&amp;<sp/>weights,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>minimumLeafSize,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minimumGainSplit,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>arma::vec&amp;<sp/>classProbabilities,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit_1_1AuxiliarySplitInfo" kindref="compound">AuxiliarySplitInfo</ref>&amp;<sp/>aux,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>splitIfBetterGain<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit_1a8fde744efa29599636ccab609fc9b4f3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit_1a8fde744efa29599636ccab609fc9b4f3" kindref="member">NumChildren</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/></highlight><highlight class="comment">/*<sp/>classProbabilities<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit_1_1AuxiliarySplitInfo" kindref="compound">AuxiliarySplitInfo</ref>&amp;<sp/></highlight><highlight class="comment">/*<sp/>aux<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ElemType&gt;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit_1a8cb83c22dcb77a93d1b617305db0adca" kindref="member">CalculateDirection</ref>(</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ElemType&amp;<sp/>point,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>arma::vec&amp;<sp/>classProbabilities,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmlpack_1_1tree_1_1RandomBinaryNumericSplit_1_1AuxiliarySplitInfo" kindref="compound">AuxiliarySplitInfo</ref>&amp;<sp/></highlight><highlight class="comment">/*<sp/>aux<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mlpack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;random_binary_numeric_split_impl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/aakash/mlpack/src/mlpack/methods/decision_tree/random_binary_numeric_split.hpp"/>
  </compounddef>
</doxygen>
