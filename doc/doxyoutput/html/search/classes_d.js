var searchData=
[
  ['naivebayesclassifier',['NaiveBayesClassifier',['../classmlpack_1_1naive__bayes_1_1NaiveBayesClassifier.html',1,'mlpack::naive_bayes']]],
  ['naiveconvolution',['NaiveConvolution',['../classmlpack_1_1ann_1_1NaiveConvolution.html',1,'mlpack::ann']]],
  ['naivekernelrule',['NaiveKernelRule',['../classmlpack_1_1kpca_1_1NaiveKernelRule.html',1,'mlpack::kpca']]],
  ['naivekmeans',['NaiveKMeans',['../classmlpack_1_1kmeans_1_1NaiveKMeans.html',1,'mlpack::kmeans']]],
  ['nca',['NCA',['../classmlpack_1_1nca_1_1NCA.html',1,'mlpack::nca']]],
  ['nearestns',['NearestNS',['../classmlpack_1_1neighbor_1_1NearestNS.html',1,'mlpack::neighbor']]],
  ['negativeloglikelihood',['NegativeLogLikelihood',['../classmlpack_1_1ann_1_1NegativeLogLikelihood.html',1,'mlpack::ann']]],
  ['neighborsearch',['NeighborSearch',['../classmlpack_1_1neighbor_1_1NeighborSearch.html',1,'mlpack::neighbor']]],
  ['neighborsearch_3c_20neighbor_3a_3anearestneighborsort_2c_20metric_3a_3almetric_3c_20tpower_2c_20true_20_3e_20_3e',['NeighborSearch&lt; neighbor::NearestNeighborSort, metric::LMetric&lt; TPower, true &gt; &gt;',['../classmlpack_1_1neighbor_1_1NeighborSearch.html',1,'mlpack::neighbor']]],
  ['neighborsearch_3c_20sortpolicy_2c_20metric_3a_3aeuclideandistance_2c_20arma_3a_3amat_2c_20tree_3a_3asptree_2c_20tree_3a_3asptree_3c_20metric_3a_3aeuclideandistance_2c_20neighborsearchstat_3c_20sortpolicy_20_3e_2c_20arma_3a_3amat_20_3e_3a_3atemplate_20defeatistdualtreetraverser_2c_20tree_3a_3asptree_3c_20metric_3a_3aeuclideandistance_2c_20neighborsearchstat_3c_20sortpolicy_20_3e_2c_20arma_3a_3amat_20_3e_3a_3atemplate_20defeatistsingletreetraverser_20_3e',['NeighborSearch&lt; SortPolicy, metric::EuclideanDistance, arma::mat, tree::SPTree, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistDualTreeTraverser, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistSingleTreeTraverser &gt;',['../classmlpack_1_1neighbor_1_1NeighborSearch.html',1,'mlpack::neighbor']]],
  ['neighborsearch_3c_20sortpolicy_2c_20metric_3a_3aeuclideandistance_2c_20arma_3a_3amat_2c_20treetype_2c_20dualtreetraversaltype_2c_20singletreetraversaltype_20_3e',['NeighborSearch&lt; SortPolicy, metric::EuclideanDistance, arma::mat, TreeType, DualTreeTraversalType, SingleTreeTraversalType &gt;',['../classmlpack_1_1neighbor_1_1NeighborSearch.html',1,'mlpack::neighbor']]],
  ['neighborsearchrules',['NeighborSearchRules',['../classmlpack_1_1neighbor_1_1NeighborSearchRules.html',1,'mlpack::neighbor']]],
  ['neighborsearchstat',['NeighborSearchStat',['../classmlpack_1_1neighbor_1_1NeighborSearchStat.html',1,'mlpack::neighbor']]],
  ['neighborsearchstat_3c_20neighbor_3a_3anearestneighborsort_20_3e',['NeighborSearchStat&lt; neighbor::NearestNeighborSort &gt;',['../classmlpack_1_1neighbor_1_1NeighborSearchStat.html',1,'mlpack::neighbor']]],
  ['networkinitialization',['NetworkInitialization',['../classmlpack_1_1ann_1_1NetworkInitialization.html',1,'mlpack::ann']]],
  ['nguyenwidrowinitialization',['NguyenWidrowInitialization',['../classmlpack_1_1ann_1_1NguyenWidrowInitialization.html',1,'mlpack::ann']]],
  ['nmfalsupdate',['NMFALSUpdate',['../classmlpack_1_1amf_1_1NMFALSUpdate.html',1,'mlpack::amf']]],
  ['nmfmultiplicativedistanceupdate',['NMFMultiplicativeDistanceUpdate',['../classmlpack_1_1amf_1_1NMFMultiplicativeDistanceUpdate.html',1,'mlpack::amf']]],
  ['nmfmultiplicativedivergenceupdate',['NMFMultiplicativeDivergenceUpdate',['../classmlpack_1_1amf_1_1NMFMultiplicativeDivergenceUpdate.html',1,'mlpack::amf']]],
  ['nmfpolicy',['NMFPolicy',['../classmlpack_1_1cf_1_1NMFPolicy.html',1,'mlpack::cf']]],
  ['nms',['NMS',['../classmlpack_1_1metric_1_1NMS.html',1,'mlpack::metric']]],
  ['noauxiliaryinformation',['NoAuxiliaryInformation',['../classmlpack_1_1tree_1_1NoAuxiliaryInformation.html',1,'mlpack::tree']]],
  ['noconstraint',['NoConstraint',['../classmlpack_1_1gmm_1_1NoConstraint.html',1,'mlpack::gmm']]],
  ['noisylinear',['NoisyLinear',['../classmlpack_1_1ann_1_1NoisyLinear.html',1,'mlpack::ann']]],
  ['nonormalization',['NoNormalization',['../classmlpack_1_1cf_1_1NoNormalization.html',1,'mlpack::cf']]],
  ['noregularizer',['NoRegularizer',['../classmlpack_1_1ann_1_1NoRegularizer.html',1,'mlpack::ann']]],
  ['normaldistribution',['NormalDistribution',['../classmlpack_1_1ann_1_1NormalDistribution.html',1,'mlpack::ann']]],
  ['notfoundmethodform',['NotFoundMethodForm',['../structmlpack_1_1cv_1_1NotFoundMethodForm.html',1,'mlpack::cv']]],
  ['nothinginitializer',['NothingInitializer',['../classmlpack_1_1sparse__coding_1_1NothingInitializer.html',1,'mlpack::sparse_coding']]],
  ['nsmodel',['NSModel',['../classmlpack_1_1neighbor_1_1NSModel.html',1,'mlpack::neighbor']]],
  ['nstepqlearningworker',['NStepQLearningWorker',['../classmlpack_1_1rl_1_1NStepQLearningWorker.html',1,'mlpack::rl']]],
  ['nswrapper',['NSWrapper',['../classmlpack_1_1neighbor_1_1NSWrapper.html',1,'mlpack::neighbor']]],
  ['nswrapper_3c_20sortpolicy_2c_20tree_3a_3asptree_2c_20tree_3a_3asptree_3c_20metric_3a_3aeuclideandistance_2c_20neighborsearchstat_3c_20sortpolicy_20_3e_2c_20arma_3a_3amat_20_3e_3a_3atemplate_20defeatistdualtreetraverser_2c_20tree_3a_3asptree_3c_20metric_3a_3aeuclideandistance_2c_20neighborsearchstat_3c_20sortpolicy_20_3e_2c_20arma_3a_3amat_20_3e_3a_3atemplate_20defeatistsingletreetraverser_20_3e',['NSWrapper&lt; SortPolicy, tree::SPTree, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistDualTreeTraverser, tree::SPTree&lt; metric::EuclideanDistance, NeighborSearchStat&lt; SortPolicy &gt;, arma::mat &gt;::template DefeatistSingleTreeTraverser &gt;',['../classmlpack_1_1neighbor_1_1NSWrapper.html',1,'mlpack::neighbor']]],
  ['nswrapperbase',['NSWrapperBase',['../classmlpack_1_1neighbor_1_1NSWrapperBase.html',1,'mlpack::neighbor']]],
  ['nulloutstream',['NullOutStream',['../classmlpack_1_1util_1_1NullOutStream.html',1,'mlpack::util']]],
  ['numericsplitinfo',['NumericSplitInfo',['../classmlpack_1_1tree_1_1NumericSplitInfo.html',1,'mlpack::tree']]],
  ['nystroemkernelrule',['NystroemKernelRule',['../classmlpack_1_1kpca_1_1NystroemKernelRule.html',1,'mlpack::kpca']]],
  ['nystroemmethod',['NystroemMethod',['../classmlpack_1_1kernel_1_1NystroemMethod.html',1,'mlpack::kernel']]]
];
