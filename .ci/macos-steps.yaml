steps:
# Checkout repository
- checkout: self
  clean: true
  fetchDepth: 1

# Set python version.
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'

# Install Build Dependencies
- script: |
    set -e
    sudo xcode-select --switch /Applications/Xcode_11.3.app/Contents/Developer
    unset BOOST_ROOT
    pip install cython numpy pandas zipp
    brew update
    brew install openblas armadillo boost
    brew unlink armadillo
    brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/9620946e004a29744f9c5e4a27800cba6d6d6b9b/Formula/armadillo.rb
    brew unlink hdf5
    brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/7342a4cadf5191d8ae4e83a83e4fbbc3e96d434e/Formula/hdf5.rb

    if [ "a$(julia.version)" != "a" ]; then
      brew cask install julia
    fi

    git clone --depth 1 https://github.com/mlpack/jenkins-conf.git conf
  displayName: 'Install Build Dependencies'

# Configure mlpack (CMake)
- script: |
    unset BOOST_ROOT
    mkdir build && cd build
    export PYPATH=$(which python)
    cmake $(CMakeArgs) -DPYTHON_EXECUTABLE=$PYPATH ..
  displayName: 'CMake'

# Build mlpack
- script: cd build && make -j2
  displayName: 'Build'

# Run tests via ctest.
- script: cd build && CTEST_OUTPUT_ON_FAILURE=1 ctest -T Test .
  displayName: 'Run tests via ctest'

# Publish test results to Azure Pipelines
- task: PublishTestResults@2
  inputs:
    testResultsFormat: cTest
    testResultsFiles: build/Testing/*/Test.xml
    failTaskOnFailedTests: true
  displayName: 'Publish tests'

# Publish build artifacts to Azure Pipelines
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: 'build/Testing/'
    artifactName: 'Tests'
  displayName: 'Publish artifacts test results'
